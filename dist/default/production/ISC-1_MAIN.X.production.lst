

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Oct 16 10:51:52 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,inline
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107  0000                     
   108                           ; Version 1.42
   109                           ; Generated 13/04/2017 GMT
   110                           ; 
   111                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18F46J13 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     _PPSCONbits	set	3775
   143  0000                     _RPOR21	set	3797
   144  0000                     _RPINR22	set	3837
   145  0000                     _RPINR21	set	3836
   146  0000                     _ANCON0bits	set	3912
   147  0000                     _ANCON1bits	set	3913
   148  0000                     _ADRES	set	4035
   149  0000                     _EECON1bits	set	4006
   150  0000                     _TABLAT	set	4085
   151  0000                     _TBLPTRL	set	4086
   152  0000                     _TBLPTRH	set	4087
   153  0000                     _TBLPTRU	set	4088
   154  0000                     _EECON2	set	4007
   155  0000                     _LATEbits	set	3981
   156  0000                     _TRISEbits	set	3990
   157  0000                     _TRISAbits	set	3986
   158  0000                     _ADCON0bits	set	4034
   159  0000                     _ADCON1bits	set	4033
   160  0000                     _PIE1bits	set	3997
   161  0000                     _T2CONbits	set	4042
   162  0000                     _PR2	set	4043
   163  0000                     _OSCCONbits	set	4051
   164  0000                     _OSCTUNEbits	set	3995
   165  0000                     _PIR1bits	set	3998
   166  0000                     _LATBbits	set	3978
   167  0000                     _LATAbits	set	3977
   168  0000                     _TRISCbits	set	3988
   169  0000                     _TRISBbits	set	3987
   170  0000                     _TRISDbits	set	3989
   171  0000                     _PORTCbits	set	3970
   172  0000                     _PORTBbits	set	3969
   173  0000                     _SSP2BUF	set	3957
   174  0000                     _PORTDbits	set	3971
   175  0000                     _LATCbits	set	3979
   176  0000                     _LATDbits	set	3980
   177  0000                     _INTCONbits	set	4082
   178  0000                     _PIE3bits	set	4003
   179  0000                     _PIR3bits	set	4004
   180  0000                     _SSP2CON1bits	set	3954
   181  0000                     _SSP2STATbits	set	3955
   182                           
   183                           ; #config settings
   184  0000                     
   185                           	psect	cinit
   186  00AF1A                     __pcinit:
   187                           	opt stack 0
   188  00AF1A                     start_initialization:
   189                           	opt stack 0
   190  00AF1A                     __initialization:
   191                           	opt stack 0
   192                           
   193                           ; Clear objects allocated to BANK6 (248 bytes)
   194  00AF1A  EE06  F000         	lfsr	0,__pbssBANK6
   195  00AF1E  0EF8               	movlw	248
   196  00AF20                     clear_0:
   197  00AF20  6AEE               	clrf	postinc0,c
   198  00AF22  06E8               	decf	wreg,f,c
   199  00AF24  E1FD               	bnz	clear_0
   200                           
   201                           ; Clear objects allocated to BANK5 (124 bytes)
   202  00AF26  EE05  F084         	lfsr	0,__pbssBANK5
   203  00AF2A  0E7C               	movlw	124
   204  00AF2C                     clear_1:
   205  00AF2C  6AEE               	clrf	postinc0,c
   206  00AF2E  06E8               	decf	wreg,f,c
   207  00AF30  E1FD               	bnz	clear_1
   208                           
   209                           ; Clear objects allocated to BANK4 (240 bytes)
   210  00AF32  EE04  F000         	lfsr	0,__pbssBANK4
   211  00AF36  0EF0               	movlw	240
   212  00AF38                     clear_2:
   213  00AF38  6AEE               	clrf	postinc0,c
   214  00AF3A  06E8               	decf	wreg,f,c
   215  00AF3C  E1FD               	bnz	clear_2
   216                           
   217                           ; Clear objects allocated to BANK3 (232 bytes)
   218  00AF3E  EE03  F000         	lfsr	0,__pbssBANK3
   219  00AF42  0EE8               	movlw	232
   220  00AF44                     clear_3:
   221  00AF44  6AEE               	clrf	postinc0,c
   222  00AF46  06E8               	decf	wreg,f,c
   223  00AF48  E1FD               	bnz	clear_3
   224                           
   225                           ; Clear objects allocated to BANK2 (37 bytes)
   226  00AF4A  EE02  F08A         	lfsr	0,__pbssBANK2
   227  00AF4E  0E25               	movlw	37
   228  00AF50                     clear_4:
   229  00AF50  6AEE               	clrf	postinc0,c
   230  00AF52  06E8               	decf	wreg,f,c
   231  00AF54  E1FD               	bnz	clear_4
   232  00AF56                     end_of_initialization:
   233                           	opt stack 0
   234  00AF56                     __end_of__initialization:
   235                           	opt stack 0
   236  00AF56  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   237  00AF58  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   238  00AF5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239  00AF5C  6EF8               	movwf	tblptru,c
   240  00AF5E  0100               	movlb	0
   241  00AF60  EF9C  F05A         	goto	_main	;jump to C main() function
   242                           tblptru	equ	0xFF8
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           
   246                           	psect	bssBANK2
   247  00028A                     __pbssBANK2:
   248                           	opt stack 0
   249  00028A                     _statusFlagsUSLG:
   250                           	opt stack 0
   251  00028A                     	ds	3
   252  00028D                     BoosterDataCommandComms@counterCommsStatusUSS:
   253                           	opt stack 0
   254  00028D                     	ds	2
   255  00028F                     _commsOffsetADCValueUS:
   256                           	opt stack 0
   257  00028F                     	ds	2
   258  000291                     _nextSerialUSG:
   259                           	opt stack 0
   260  000291                     	ds	2
   261  000293                     _masterFlagsUCG:
   262                           	opt stack 0
   263  000293                     	ds	1
   264  000294                     BoosterDataCommandComms@cableTestUCS:
   265                           	opt stack 0
   266  000294                     	ds	1
   267  000295                     BoosterDataCommandComms@cableFaultModeUCS:
   268                           	opt stack 0
   269  000295                     	ds	1
   270  000296                     BoosterDataCommandComms@lvlCountUCS:
   271                           	opt stack 0
   272  000296                     	ds	1
   273  000297                     BoosterDataCommandComms@bitsReadUCS:
   274                           	opt stack 0
   275  000297                     	ds	1
   276  000298                     BoosterDataCommandComms@syncModeUCS:
   277                           	opt stack 0
   278  000298                     	ds	1
   279  000299                     BoosterDataCommandComms@framesReceivedPhaseUCS:
   280                           	opt stack 0
   281  000299                     	ds	1
   282  00029A                     BoosterDataCommandComms@commsBitsSentUCS:
   283                           	opt stack 0
   284  00029A                     	ds	1
   285  00029B                     _boosterCountUC:
   286                           	opt stack 0
   287  00029B                     	ds	1
   288  00029C                     _dispStatusUCS:
   289                           	opt stack 0
   290  00029C                     	ds	1
   291  00029D                     _statusGetSerialUCS:
   292                           	opt stack 0
   293  00029D                     	ds	1
   294  00029E                     _missingSerialWinUCS:
   295                           	opt stack 0
   296  00029E                     	ds	1
   297  00029F                     _QueryFailureCounter:
   298                           	opt stack 0
   299  00029F                     	ds	1
   300  0002A0                     _cableFaultCounter:
   301                           	opt stack 0
   302  0002A0                     	ds	1
   303  0002A1                     _ISO_COUNTER:
   304                           	opt stack 0
   305  0002A1                     	ds	1
   306  0002A2                     _commsDataModeUCG:
   307                           	opt stack 0
   308  0002A2                     	ds	1
   309  0002A3                     _commsStatusUCG:
   310                           	opt stack 0
   311  0002A3                     	ds	1
   312  0002A4                     _packetNumberUCG:
   313                           	opt stack 0
   314  0002A4                     	ds	1
   315  0002A5                     _bufferRXNextUCG:
   316                           	opt stack 0
   317  0002A5                     	ds	1
   318  0002A6                     _bufferTXNextUCG:
   319                           	opt stack 0
   320  0002A6                     	ds	1
   321  0002A7                     _bufferTXLenUCG:
   322                           	opt stack 0
   323  0002A7                     	ds	1
   324  0002A8                     _flagST7540UCG:
   325                           	opt stack 0
   326  0002A8                     	ds	1
   327  0002A9                     _iscSerialUSG:
   328                           	opt stack 0
   329  0002A9                     	ds	2
   330  0002AB                     SetWindowID@currentSerialUSS:
   331                           	opt stack 0
   332  0002AB                     	ds	2
   333  0002AD                     SetWindowID@currentBitUCS:
   334                           	opt stack 0
   335  0002AD                     	ds	1
   336  0002AE                     SetWindowID@statusSetIDUCS:
   337                           	opt stack 0
   338  0002AE                     	ds	1
   339                           tblptru	equ	0xFF8
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           
   343                           	psect	bssBANK3
   344  000300                     __pbssBANK3:
   345                           	opt stack 0
   346  000300                     _boosterCommsDataSerial:
   347                           	opt stack 0
   348  000300                     	ds	60
   349  00033C                     _commsTXBitsUSLG:
   350                           	opt stack 0
   351  00033C                     	ds	3
   352  00033F                     _masterCommsTimeoutUSG:
   353                           	opt stack 0
   354  00033F                     	ds	2
   355  000341                     BoosterDataCommandComms@recvFrameUSS:
   356                           	opt stack 0
   357  000341                     	ds	2
   358  000343                     BoosterDataCommandComms@counterSyncStatusUSS:
   359                           	opt stack 0
   360  000343                     	ds	2
   361  000345                     _counterELTFailures:
   362                           	opt stack 0
   363  000345                     	ds	2
   364  000347                     _counterELTTests:
   365                           	opt stack 0
   366  000347                     	ds	2
   367  000349                     _commandBLCalibFlag:
   368                           	opt stack 0
   369  000349                     	ds	2
   370  00034B                     _bufferRXLenUCG:
   371                           	opt stack 0
   372  00034B                     	ds	1
   373  00034C                     _bufferTXST7540UCAG:
   374                           	opt stack 0
   375  00034C                     	ds	79
   376  00039B                     _bufferRXST7540UCAG:
   377                           	opt stack 0
   378  00039B                     	ds	75
   379  0003E6                     _commandResponseUS:
   380                           	opt stack 0
   381  0003E6                     	ds	2
   382                           tblptru	equ	0xFF8
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           
   386                           	psect	bssBANK4
   387  000400                     __pbssBANK4:
   388                           	opt stack 0
   389  000400                     _boosterCommsData:
   390                           	opt stack 0
   391  000400                     	ds	240
   392                           tblptru	equ	0xFF8
   393                           postinc0	equ	0xFEE
   394                           wreg	equ	0xFE8
   395                           
   396                           	psect	bssBANK5
   397  000584                     __pbssBANK5:
   398                           	opt stack 0
   399  000584                     _packetNumbersUSAG:
   400                           	opt stack 0
   401  000584                     	ds	124
   402                           tblptru	equ	0xFF8
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           
   406                           	psect	bssBANK6
   407  000600                     __pbssBANK6:
   408                           	opt stack 0
   409  000600                     _pastBoosterValuesUSAG:
   410                           	opt stack 0
   411  000600                     	ds	248
   412                           tblptru	equ	0xFF8
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           
   416                           	psect	cstackBANK5
   417  000500                     __pcstackBANK5:
   418                           	opt stack 0
   419  000500                     ReturnBoosterData@partRespUSA:
   420                           	opt stack 0
   421                           
   422                           ; 62 bytes @ 0x0
   423  000500                     	ds	62
   424  00053E                     ReturnBoosterData@allRespUSA:
   425                           	opt stack 0
   426                           
   427                           ; 62 bytes @ 0x3E
   428  00053E                     	ds	62
   429  00057C                     ReturnBoosterData@windowCompareUS:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x7C
   433  00057C                     	ds	2
   434  00057E                     ReturnBoosterData@iscStatusUC:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x7E
   438  00057E                     	ds	1
   439  00057F                     ReturnBoosterData@respCountUC:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x7F
   443  00057F                     	ds	1
   444  000580                     ReturnBoosterData@commandValUC:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x80
   448  000580                     	ds	1
   449  000581                     ReturnBoosterData@wordCountUC:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x81
   453  000581                     	ds	1
   454  000582                     ReturnBoosterData@dataValUC:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x82
   458  000582                     	ds	1
   459  000583                     ReturnBoosterData@boosterCountUC:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x83
   463  000583                     	ds	1
   464                           tblptru	equ	0xFF8
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           
   468                           	psect	cstackBANK2
   469  000201                     __pcstackBANK2:
   470                           	opt stack 0
   471  000201                     ??_WindowIDBacktrack:
   472                           
   473                           ; 1 bytes @ 0x0
   474  000201                     	ds	7
   475  000208                     ??_SetWindowID:
   476                           
   477                           ; 1 bytes @ 0x7
   478  000208                     	ds	3
   479  00020B                     ??_BoosterCommsDispatcher:
   480                           
   481                           ; 1 bytes @ 0xA
   482  00020B                     	ds	1
   483  00020C                     ??_isr:
   484                           
   485                           ; 1 bytes @ 0xB
   486  00020C                     	ds	14
   487  00021A                     isr@discardUC:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x19
   491  00021A                     	ds	1
   492  00021B                     ?_PacketDataST7540:
   493                           	opt stack 0
   494  00021B                     ?_CRC16:
   495                           	opt stack 0
   496  00021B                     ?_GetLastPacketNumber:
   497                           	opt stack 0
   498  00021B                     ?_MangleSerial:
   499                           	opt stack 0
   500  00021B                     StartTransmitST7540@discardUC:
   501                           	opt stack 0
   502  00021B                     ReceiveNewDataST7540@discardUC:
   503                           	opt stack 0
   504  00021B                     ResetSingleBoosterState@boosterNumberUC:
   505                           	opt stack 0
   506  00021B                     ClearPacketNumbers@iscCountUC:
   507                           	opt stack 0
   508  00021B                     ClearPastValue@valuePosUC:
   509                           	opt stack 0
   510  00021B                     SetIsolationRelay@relayStateUC:
   511                           	opt stack 0
   512  00021B                     ReadConfigST7540@frameDataUS:
   513                           	opt stack 0
   514  00021B                     CRC16@data_p:
   515                           	opt stack 0
   516  00021B                     MangleSerial@mangleValueUS:
   517                           	opt stack 0
   518  00021B                     GetPacketSlot@srcSerialUS:
   519                           	opt stack 0
   520  00021B                     GetLastPacketNumber@srcSerialUS:
   521                           	opt stack 0
   522  00021B                     WaitTickCount@tickCountUS:
   523                           	opt stack 0
   524  00021B                     writeRegisterToProgram@address:
   525                           	opt stack 0
   526  00021B                     FlashReadAddress@flashAddressUS:
   527                           	opt stack 0
   528  00021B                     FlashEraseBlock@flashAddressUS:
   529                           	opt stack 0
   530  00021B                     FlashWriteWord@flashAddressUS:
   531                           	opt stack 0
   532  00021B                     readRegisterFromProgram@address:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x1A
   536  00021B                     	ds	1
   537  00021C                     ResetBoosterStates@boosterCountUC:
   538                           	opt stack 0
   539  00021C                     ClearPastValues@boosterCountUC:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x1B
   543  00021C                     	ds	1
   544  00021D                     ??_MangleSerial:
   545  00021D                     ForceFiringMode@forceModeUC:
   546                           	opt stack 0
   547  00021D                     IdlePacketSlot@iscCountC:
   548                           	opt stack 0
   549  00021D                     FlashEraseBlock@intStatusUC:
   550                           	opt stack 0
   551  00021D                     FlashWriteWord@lsbUC:
   552                           	opt stack 0
   553  00021D                     ReadConfigST7540@configDataUS:
   554                           	opt stack 0
   555  00021D                     CRC16@length:
   556                           	opt stack 0
   557  00021D                     writeRegisterToProgram@buffer:
   558                           	opt stack 0
   559  00021D                     readRegisterFromProgram@buffer:
   560                           	opt stack 0
   561  00021D                     WriteConfigST7540@frameDataUS:
   562                           	opt stack 0
   563                           
   564                           ; 3 bytes @ 0x1C
   565  00021D                     	ds	1
   566  00021E                     FlashWriteWord@msbUC:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x1D
   570  00021E                     	ds	1
   571  00021F                     ??_ReadConfigST7540:
   572  00021F                     ??_CRC16:
   573  00021F                     MangleSerial@xorOutputUC:
   574                           	opt stack 0
   575  00021F                     GetPacketSlot@saveSlotC:
   576                           	opt stack 0
   577  00021F                     GetLastPacketNumber@iscCountUC:
   578                           	opt stack 0
   579  00021F                     FlashWriteWord@intStatusUC:
   580                           	opt stack 0
   581  00021F                     writeRegisterToProgram@i:
   582                           	opt stack 0
   583  00021F                     readRegisterFromProgram@i:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x1E
   587  00021F                     	ds	1
   588  000220                     MangleSerial@b0UC:
   589                           	opt stack 0
   590  000220                     SavePacketNumber@srcSerialUS:
   591                           	opt stack 0
   592  000220                     WriteConfigST7540@configDataUS:
   593                           	opt stack 0
   594                           
   595                           ; 3 bytes @ 0x1F
   596  000220                     	ds	1
   597  000221                     MangleSerial@b1UC:
   598                           	opt stack 0
   599  000221                     writeBootloaderState@buffer:
   600                           	opt stack 0
   601  000221                     getSerialFromMemory@state:
   602                           	opt stack 0
   603                           
   604                           ; 64 bytes @ 0x20
   605  000221                     	ds	1
   606  000222                     ReadConfigST7540@discardUC:
   607                           	opt stack 0
   608  000222                     MangleSerial@b2UC:
   609                           	opt stack 0
   610  000222                     SavePacketNumber@packetNumberUC:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x21
   614  000222                     	ds	1
   615  000223                     ??_WriteConfigST7540:
   616  000223                     ??_SavePacketNumber:
   617  000223                     ReadConfigST7540@bitsReceivedUC:
   618                           	opt stack 0
   619  000223                     CRC16@i:
   620                           	opt stack 0
   621  000223                     MangleSerial@b4UC:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0x22
   625  000223                     	ds	1
   626  000224                     MangleSerial@b6UC:
   627                           	opt stack 0
   628  000224                     CRC16@data:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x23
   632  000224                     	ds	1
   633  000225                     MangleSerial@b10UC:
   634                           	opt stack 0
   635  000225                     SavePacketNumber@saveSlotC:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x24
   639  000225                     	ds	1
   640  000226                     WriteConfigST7540@discardUC:
   641                           	opt stack 0
   642  000226                     MangleSerial@b12UC:
   643                           	opt stack 0
   644  000226                     CRC16@crc:
   645                           	opt stack 0
   646  000226                     UpdatePacketNumber@serialNumberUS:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x25
   650  000226                     	ds	1
   651  000227                     WriteConfigST7540@bitsSentUC:
   652                           	opt stack 0
   653  000227                     _MangleSerial$2317:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x26
   657  000227                     	ds	1
   658  000228                     ??_CheckCRCST7540:
   659  000228                     CreateMessageST7540@packetSourceUS:
   660                           	opt stack 0
   661  000228                     UpdatePacketNumber@packetNumberS:
   662                           	opt stack 0
   663  000228                     InitST7540@frameDataTXUS:
   664                           	opt stack 0
   665                           
   666                           ; 3 bytes @ 0x27
   667  000228                     	ds	1
   668  000229                     MangleSerial@cycleCountUC:
   669                           	opt stack 0
   670                           
   671                           ; 1 bytes @ 0x28
   672  000229                     	ds	1
   673  00022A                     ??_UpdatePacketNumber:
   674  00022A                     CreateMessageST7540@packetDestUS:
   675                           	opt stack 0
   676  00022A                     CollisionCheck@delayValueUS:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x29
   680  00022A                     	ds	1
   681  00022B                     CheckCRCST7540@expectedCRCUS:
   682                           	opt stack 0
   683  00022B                     InitST7540@configDataTXUS:
   684                           	opt stack 0
   685                           
   686                           ; 3 bytes @ 0x2A
   687  00022B                     	ds	1
   688  00022C                     CreateMessageST7540@commandUC:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x2B
   692  00022C                     	ds	1
   693  00022D                     CreateMessageST7540@dataLenUC:
   694                           	opt stack 0
   695  00022D                     CheckCRCST7540@receivedCRCUS:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x2C
   699  00022D                     	ds	1
   700  00022E                     CreateMessageST7540@dataBuf:
   701                           	opt stack 0
   702  00022E                     InitST7540@frameDataRXUS:
   703                           	opt stack 0
   704                           
   705                           ; 3 bytes @ 0x2D
   706  00022E                     	ds	1
   707  00022F                     CheckCRCST7540@packetLenUC:
   708                           	opt stack 0
   709  00022F                     UpdatePacketNumber@pastPacketNumberS:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x2E
   713  00022F                     	ds	1
   714  000230                     ??_CreateMessageST7540:
   715  000230                     ?_PacketReadParamST7540:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x2F
   719  000230                     	ds	1
   720  000231                     InitST7540@configDataRXUS:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x30
   724  000231                     	ds	1
   725  000232                     ??_PacketReadParamST7540:
   726  000232                     CreateMessageST7540@packetCRCUS:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x31
   730  000232                     	ds	2
   731  000234                     CreateMessageST7540@dataBufLocUC:
   732                           	opt stack 0
   733  000234                     PacketReadParamST7540@paramName:
   734                           	opt stack 0
   735  000234                     InitST7540Wrapper@initCountUC:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x33
   739  000234                     	ds	1
   740  000235                     PacketReadParamST7540@retValueUS:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0x34
   744  000235                     	ds	2
   745  000237                     RetransmitMessageSt7540@packetSourceUS:
   746                           	opt stack 0
   747  000237                     CreateAndSend@packetSourceUS:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x36
   751  000237                     	ds	2
   752  000239                     RetransmitMessageSt7540@packetDestUS:
   753                           	opt stack 0
   754  000239                     CreateAndSend@packetDestUS:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x38
   758  000239                     	ds	2
   759  00023B                     CreateAndSend@commandUC:
   760                           	opt stack 0
   761  00023B                     RetransmitMessageSt7540@dataBuf:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x3A
   765  00023B                     	ds	1
   766  00023C                     CreateAndSend@dataLenUC:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x3B
   770  00023C                     	ds	1
   771  00023D                     RetransmitMessageSt7540@commandUC:
   772                           	opt stack 0
   773  00023D                     CreateAndSend@dataBuf:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x3C
   777  00023D                     	ds	1
   778  00023E                     RetransmitMessageSt7540@oldPacketNumberUC:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x3D
   782  00023E                     	ds	1
   783  00023F                     RetransmitMessageSt7540@packetDataLenUC:
   784                           	opt stack 0
   785  00023F                     CreateAndSend@nextPacketNumberUS:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x3E
   789  00023F                     	ds	2
   790  000241                     SetSerialNumber@respSerialUS:
   791                           	opt stack 0
   792  000241                     ReturnBoosterData@respSerialUS:
   793                           	opt stack 0
   794  000241                     ProcessSerialCMD@respSerialUS:
   795                           	opt stack 0
   796  000241                     ProcessPingCMD@respSerialUS:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x40
   800  000241                     	ds	2
   801  000243                     ??_ReturnBoosterData:
   802  000243                     ??_SetSerialNumber:
   803  000243                     
   804                           ; 1 bytes @ 0x42
   805  000243                     	ds	2
   806  000245                     ProcessSerialCMD@serialListUSA:
   807                           	opt stack 0
   808                           
   809                           ; 60 bytes @ 0x44
   810  000245                     	ds	2
   811  000247                     SetSerialNumber@dataBufUSP:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x46
   815  000247                     	ds	26
   816  000261                     ??_ReadFlashValues:
   817  000261                     writeBootloaderState@i:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x60
   821  000261                     	ds	3
   822  000264                     
   823                           ; 1 bytes @ 0x63
   824  000264                     	ds	29
   825  000281                     ProcessSerialCMD@boosterIndexUC:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x80
   829  000281                     	ds	1
   830  000282                     ProcessSerialCMD@boosterCountUC:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x81
   834  000282                     	ds	1
   835  000283                     ProcessMasterComms@currentPacketNumberUS:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x82
   839  000283                     	ds	2
   840  000285                     ProcessMasterComms@destSerialUS:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x84
   844  000285                     	ds	2
   845  000287                     ProcessMasterComms@respSerialUS:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x86
   849  000287                     	ds	2
   850  000289                     ProcessMasterComms@recvCmdUC:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x88
   854  000289                     	ds	1
   855  00028A                     tblptru	equ	0xFF8
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           
   859                           ; 1 bytes @ 0x89
   860                           
   861                           	psect	cstackCOMRAM
   862  000001                     __pcstackCOMRAM:
   863                           	opt stack 0
   864  000001                     ?_ReadAnalogVoltage:
   865                           	opt stack 0
   866  000001                     ?___wmul:
   867                           	opt stack 0
   868  000001                     SPIISRHandlerST7540@dataReadUC:
   869                           	opt stack 0
   870  000001                     BoosterQueryStart@queryValUC:
   871                           	opt stack 0
   872  000001                     CheckDataCollision@boosterCountUC:
   873                           	opt stack 0
   874  000001                     i2ResetSingleBoosterState@boosterNumberUC:
   875                           	opt stack 0
   876  000001                     i2ClearPastValue@valuePosUC:
   877                           	opt stack 0
   878  000001                     CheckBoosterRXParity@recvFrameUS:
   879                           	opt stack 0
   880  000001                     ___wmul@multiplier:
   881                           	opt stack 0
   882  000001                     i2FlashEraseBlock@flashAddressUS:
   883                           	opt stack 0
   884  000001                     i2FlashWriteWord@flashAddressUS:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x0
   888  000001                     	ds	1
   889  000002                     i2ResetBoosterStates@boosterCountUC:
   890                           	opt stack 0
   891  000002                     i2ClearPastValues@boosterCountUC:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0x1
   895  000002                     	ds	1
   896  000003                     LowestIdleWindow@boosterCountUC:
   897                           	opt stack 0
   898  000003                     ReadAnalogVoltage@channelC:
   899                           	opt stack 0
   900  000003                     i2ForceFiringMode@forceModeUC:
   901                           	opt stack 0
   902  000003                     i2FlashEraseBlock@intStatusUC:
   903                           	opt stack 0
   904  000003                     i2FlashWriteWord@lsbUC:
   905                           	opt stack 0
   906  000003                     CheckBoosterRXParity@tmpRecvFrameUS:
   907                           	opt stack 0
   908  000003                     ___wmul@multiplicand:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x2
   912  000003                     	ds	1
   913  000004                     ??_NewBoosterAdded:
   914  000004                     i2FlashWriteWord@msbUC:
   915                           	opt stack 0
   916  000004                     ReadEarthLeakage@earthLeakageValueUS:
   917                           	opt stack 0
   918  000004                     ReadKeySwitch@keySwitchValueUS:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x3
   922  000004                     	ds	1
   923  000005                     CheckBoosterRXParity@bitParityUC:
   924                           	opt stack 0
   925  000005                     i2FlashWriteWord@intStatusUC:
   926                           	opt stack 0
   927  000005                     ___wmul@product:
   928                           	opt stack 0
   929                           
   930                           ; 2 bytes @ 0x4
   931  000005                     	ds	1
   932  000006                     CheckBoosterRXParity@bitCountUC:
   933                           	opt stack 0
   934                           
   935                           ; 1 bytes @ 0x5
   936  000006                     	ds	1
   937  000007                     ??_CheckLineFault:
   938  000007                     BoosterCommandStart@destSerialUS:
   939                           	opt stack 0
   940  000007                     ProcessRXFrame@recvFrameUS:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x6
   944  000007                     	ds	2
   945  000009                     BoosterCommandStart@destCommandUC:
   946                           	opt stack 0
   947  000009                     ProcessRXFrame@frameNumUC:
   948                           	opt stack 0
   949  000009                     CheckLineFault@activeWindowCounter:
   950                           	opt stack 0
   951                           
   952                           ; 2 bytes @ 0x8
   953  000009                     	ds	1
   954  00000A                     ??_ProcessRXFrame:
   955  00000A                     BoosterCommandStart@destPayloadUC:
   956                           	opt stack 0
   957                           
   958                           ; 1 bytes @ 0x9
   959  00000A                     	ds	1
   960  00000B                     ??_BoosterCommandStart:
   961  00000B                     CheckLineFault@lineVoltUS:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0xA
   965  00000B                     	ds	2
   966  00000D                     CheckLineFault@i_1334:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0xC
   970  00000D                     	ds	2
   971  00000F                     CheckLineFault@i:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0xE
   975  00000F                     	ds	2
   976  000011                     ProcessRXFrame@parityCheckUC:
   977                           	opt stack 0
   978                           
   979                           ; 1 bytes @ 0x10
   980  000011                     	ds	1
   981  000012                     ??_BoosterDataCommandComms:
   982                           
   983                           ; 1 bytes @ 0x11
   984  000012                     	ds	2
   985  000014                     BoosterDataCommandComms@commsADCValueUS:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x13
   989  000014                     	ds	2
   990  000016                     WindowIDBacktrack@currentBitUC:
   991                           	opt stack 0
   992  000016                     AssignWindowID@serialNumberUS:
   993                           	opt stack 0
   994                           
   995                           ; 2 bytes @ 0x15
   996  000016                     	ds	2
   997  000018                     AssignWindowID@newWindowUC:
   998                           	opt stack 0
   999  000018                     WindowIDBacktrack@currentSerialUS:
  1000                           	opt stack 0
  1001                           
  1002                           ; 2 bytes @ 0x17
  1003  000018                     	ds	2
  1004  00001A                     WindowIDBacktrack@statusSetIDUC:
  1005                           	opt stack 0
  1006  00001A                     QueryWinSerial@serialNumberUS:
  1007                           	opt stack 0
  1008                           
  1009                           ; 2 bytes @ 0x19
  1010  00001A                     	ds	2
  1011  00001C                     QueryWinSerial@j:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x1B
  1015  00001C                     	ds	1
  1016  00001D                     QueryWinSerial@i:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0x1C
  1020  00001D                     	ds	1
  1021                           tblptru	equ	0xFF8
  1022                           postinc0	equ	0xFEE
  1023                           wreg	equ	0xFE8
  1024                           
  1025 ;;
  1026 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1027 ;;
  1028 ;; *************** function _main *****************
  1029 ;; Defined at:
  1030 ;;		line 68 in file "main.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1048 ;;Total ram usage:        0 bytes
  1049 ;; Hardware stack levels required when called:   13
  1050 ;; This function calls:
  1051 ;;		_InitST7540Wrapper
  1052 ;;		_InitStates
  1053 ;;		_InitSystem
  1054 ;;		_ProcessMasterComms
  1055 ;;		_SetCommsHigh
  1056 ;; This function is called by:
  1057 ;;		Startup code after reset
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text0
  1062  00B538                     __ptext0:
  1063                           	opt stack 0
  1064  00B538                     _main:
  1065                           	opt stack 18
  1066                           
  1067                           ;main.c: 69: InitStates();
  1068                           
  1069                           ; BSR set to: 2
  1070                           ;incstack = 0
  1071  00B538  EC03  F05B         	call	_InitStates	;wreg free
  1072                           
  1073                           ;main.c: 70: InitSystem();
  1074  00B53C  EC66  F055         	call	_InitSystem	;wreg free
  1075                           
  1076                           ;main.c: 72: InitST7540Wrapper();
  1077  00B540  EC09  F05A         	call	_InitST7540Wrapper	;wreg free
  1078                           
  1079                           ;main.c: 74: SetCommsHigh();
  1080  00B544  EC31  F05B         	call	_SetCommsHigh	;wreg free
  1081                           
  1082                           ;main.c: 76: statusFlagsUSLG |= 0b000000001000000000000000;
  1083  00B548  0102               	movlb	2	; () banked
  1084  00B54A  8F8B               	bsf	(_statusFlagsUSLG+1)& (0+255),7,b	;volatile
  1085  00B54C                     l6881:
  1086                           
  1087                           ;main.c: 79: ProcessMasterComms();
  1088  00B54C  EC23  F04A         	call	_ProcessMasterComms	;wreg free
  1089  00B550  D7FD               	goto	l6881
  1090  00B552                     __end_of_main:
  1091                           	opt stack 0
  1092                           tblptru	equ	0xFF8
  1093                           postinc0	equ	0xFEE
  1094                           wreg	equ	0xFE8
  1095                           
  1096 ;; *************** function _SetCommsHigh *****************
  1097 ;; Defined at:
  1098 ;;		line 488 in file "boostercomms.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		None
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    7
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text1
  1127  00B662                     __ptext1:
  1128                           	opt stack 0
  1129  00B662                     _SetCommsHigh:
  1130                           	opt stack 23
  1131                           
  1132                           ;boostercomms.c: 489: LATBbits.LATB2 = 0;
  1133                           
  1134                           ;incstack = 0
  1135  00B662  948A               	bcf	3978,2,c	;volatile
  1136                           
  1137                           ;boostercomms.c: 490: LATAbits.LATA2 = 1;
  1138  00B664  8489               	bsf	3977,2,c	;volatile
  1139  00B666  0012               	return		;funcret
  1140  00B668                     __end_of_SetCommsHigh:
  1141                           	opt stack 0
  1142                           tblptru	equ	0xFF8
  1143                           postinc0	equ	0xFEE
  1144                           wreg	equ	0xFE8
  1145                           
  1146 ;; *************** function _ProcessMasterComms *****************
  1147 ;; Defined at:
  1148 ;;		line 39 in file "mastercomms.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  respSerialUS    2  134[BANK2 ] unsigned short 
  1153 ;;  destSerialUS    2  132[BANK2 ] unsigned short 
  1154 ;;  currentPacke    2  130[BANK2 ] unsigned short 
  1155 ;;  pastPacketNu    2    0        unsigned short 
  1156 ;;  recvCmdUC       1  136[BANK2 ] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1167 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1169 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1170 ;;Total ram usage:        7 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:   12
  1173 ;; This function calls:
  1174 ;;		_CollisionCheck
  1175 ;;		_CreateAndSend
  1176 ;;		_DataReadyST7540
  1177 ;;		_ForceFiringMode
  1178 ;;		_PacketReadParamST7540
  1179 ;;		_ProcessPingCMD
  1180 ;;		_ProcessSerialCMD
  1181 ;;		_ReceiveNewDataST7540
  1182 ;;		_RetransmitMessageSt7540
  1183 ;;		_ReturnBoosterData
  1184 ;;		_SetIsolationRelay
  1185 ;;		_SetSerialNumber
  1186 ;;		_UpdatePacketNumber
  1187 ;;		_writeBootloaderState
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text2
  1194  009446                     __ptext2:
  1195                           	opt stack 0
  1196  009446                     _ProcessMasterComms:
  1197                           	opt stack 18
  1198                           
  1199                           ;mastercomms.c: 40: unsigned char recvCmdUC;
  1200                           ;mastercomms.c: 41: unsigned short destSerialUS;
  1201                           ;mastercomms.c: 42: unsigned short respSerialUS;
  1202                           ;mastercomms.c: 43: unsigned short currentPacketNumberUS;
  1203                           ;mastercomms.c: 44: unsigned short pastPacketNumberUS;
  1204                           ;mastercomms.c: 46: masterFlagsUCG = 0;
  1205                           
  1206                           ;incstack = 0
  1207  009446  0E00               	movlw	0
  1208  009448  0102               	movlb	2	; () banked
  1209  00944A  6F93               	movwf	_masterFlagsUCG& (0+255),b
  1210                           
  1211                           ; BSR set to: 2
  1212                           ;mastercomms.c: 47: ReceiveNewDataST7540();
  1213  00944C  ECB6  F05A         	call	_ReceiveNewDataST7540	;wreg free
  1214  009450                     l6795:
  1215  009450  EC2D  F05B         	call	_DataReadyST7540	;wreg free
  1216  009454  0900               	iorlw	0
  1217  009456  B4D8               	btfsc	status,2,c
  1218  009458  D7FB               	goto	l6795
  1219                           
  1220                           ;mastercomms.c: 50: if(!PacketReadParamST7540(5))
  1221  00945A  0E05               	movlw	5
  1222  00945C  ECC9  F050         	call	_PacketReadParamST7540
  1223  009460  0102               	movlb	2	; () banked
  1224  009462  5130               	movf	?_PacketReadParamST7540& (0+255),w,b
  1225  009464  0102               	movlb	2	; () banked
  1226  009466  1131               	iorwf	(?_PacketReadParamST7540+1)& (0+255),w,b
  1227  009468  B4D8               	btfsc	status,2,c
  1228  00946A  0012               	return	
  1229                           
  1230                           ; BSR set to: 2
  1231                           ;mastercomms.c: 53: ForceFiringMode(1);
  1232                           
  1233                           ; BSR set to: 2
  1234                           
  1235                           ; BSR set to: 2
  1236                           ;mastercomms.c: 51: return;
  1237  00946C  0E01               	movlw	1
  1238  00946E  ECFA  F057         	call	_ForceFiringMode
  1239                           
  1240                           ;mastercomms.c: 54: statusFlagsUSLG |= 0b000000000000000000000010;
  1241  009472  0102               	movlb	2	; () banked
  1242  009474  838A               	bsf	_statusFlagsUSLG& (0+255),1,b	;volatile
  1243                           
  1244                           ; BSR set to: 2
  1245                           ;mastercomms.c: 55: masterCommsTimeoutUSG = 0;
  1246  009476  0E00               	movlw	0
  1247  009478  0103               	movlb	3	; () banked
  1248  00947A  6F40               	movwf	(_masterCommsTimeoutUSG+1)& (0+255),b
  1249  00947C  0E00               	movlw	0
  1250  00947E  6F3F               	movwf	_masterCommsTimeoutUSG& (0+255),b
  1251                           
  1252                           ; BSR set to: 3
  1253                           ;mastercomms.c: 59: recvCmdUC = PacketReadParamST7540(4);
  1254  009480  0E04               	movlw	4
  1255  009482  ECC9  F050         	call	_PacketReadParamST7540
  1256  009486  0102               	movlb	2	; () banked
  1257  009488  5130               	movf	?_PacketReadParamST7540& (0+255),w,b
  1258  00948A  0102               	movlb	2	; () banked
  1259  00948C  6F89               	movwf	ProcessMasterComms@recvCmdUC& (0+255),b
  1260                           
  1261                           ; BSR set to: 2
  1262                           ;mastercomms.c: 60: destSerialUS = PacketReadParamST7540(2);
  1263  00948E  0E02               	movlw	2
  1264  009490  ECC9  F050         	call	_PacketReadParamST7540
  1265  009494  C230  F285         	movff	?_PacketReadParamST7540,ProcessMasterComms@destSerialUS
  1266  009498  C231  F286         	movff	?_PacketReadParamST7540+1,ProcessMasterComms@destSerialUS+1
  1267                           
  1268                           ;mastercomms.c: 61: respSerialUS = PacketReadParamST7540(1);
  1269  00949C  0E01               	movlw	1
  1270  00949E  ECC9  F050         	call	_PacketReadParamST7540
  1271  0094A2  C230  F287         	movff	?_PacketReadParamST7540,ProcessMasterComms@respSerialUS
  1272  0094A6  C231  F288         	movff	?_PacketReadParamST7540+1,ProcessMasterComms@respSerialUS+1
  1273                           
  1274                           ;mastercomms.c: 63: __nop();
  1275  0094AA  F000               	nop	
  1276                           
  1277                           ;mastercomms.c: 65: if(recvCmdUC & 0b10000000){
  1278  0094AC  0102               	movlb	2	; () banked
  1279  0094AE  AF89               	btfss	ProcessMasterComms@recvCmdUC& (0+255),7,b
  1280  0094B0  D004               	goto	l6819
  1281                           
  1282                           ; BSR set to: 2
  1283                           ;mastercomms.c: 66: masterFlagsUCG |= 0b00000001;
  1284  0094B2  0102               	movlb	2	; () banked
  1285  0094B4  8193               	bsf	_masterFlagsUCG& (0+255),0,b
  1286                           
  1287                           ;mastercomms.c: 67: recvCmdUC &= ~0b10000000;
  1288  0094B6  0102               	movlb	2	; () banked
  1289  0094B8  9F89               	bcf	ProcessMasterComms@recvCmdUC& (0+255),7,b
  1290  0094BA                     l6819:
  1291                           
  1292                           ; BSR set to: 2
  1293                           ;mastercomms.c: 68: }
  1294                           ;mastercomms.c: 70: if(recvCmdUC & 0b01000000){
  1295  0094BA  0102               	movlb	2	; () banked
  1296  0094BC  AD89               	btfss	ProcessMasterComms@recvCmdUC& (0+255),6,b
  1297  0094BE  D004               	goto	l6823
  1298                           
  1299                           ; BSR set to: 2
  1300                           ;mastercomms.c: 71: masterFlagsUCG |= 0b00000100;
  1301  0094C0  0102               	movlb	2	; () banked
  1302  0094C2  8593               	bsf	_masterFlagsUCG& (0+255),2,b
  1303                           
  1304                           ;mastercomms.c: 72: recvCmdUC &= ~0b01000000;
  1305  0094C4  0102               	movlb	2	; () banked
  1306  0094C6  9D89               	bcf	ProcessMasterComms@recvCmdUC& (0+255),6,b
  1307  0094C8                     l6823:
  1308                           
  1309                           ; BSR set to: 2
  1310                           ;mastercomms.c: 73: }
  1311                           ;mastercomms.c: 75: if(destSerialUS)
  1312  0094C8  0102               	movlb	2	; () banked
  1313  0094CA  5185               	movf	ProcessMasterComms@destSerialUS& (0+255),w,b
  1314  0094CC  0102               	movlb	2	; () banked
  1315  0094CE  1186               	iorwf	(ProcessMasterComms@destSerialUS+1)& (0+255),w,b
  1316  0094D0  B4D8               	btfsc	status,2,c
  1317  0094D2  D002               	goto	l6827
  1318                           
  1319                           ; BSR set to: 2
  1320                           ;mastercomms.c: 76: masterFlagsUCG |= 0b00000010;
  1321  0094D4  0102               	movlb	2	; () banked
  1322  0094D6  8393               	bsf	_masterFlagsUCG& (0+255),1,b
  1323  0094D8                     l6827:
  1324                           
  1325                           ; BSR set to: 2
  1326                           ;mastercomms.c: 78: if(!destSerialUS || (destSerialUS == iscSerialUSG)){
  1327  0094D8  0102               	movlb	2	; () banked
  1328  0094DA  5185               	movf	ProcessMasterComms@destSerialUS& (0+255),w,b
  1329  0094DC  0102               	movlb	2	; () banked
  1330  0094DE  1186               	iorwf	(ProcessMasterComms@destSerialUS+1)& (0+255),w,b
  1331  0094E0  B4D8               	btfsc	status,2,c
  1332  0094E2  D00B               	goto	l6831
  1333                           
  1334                           ; BSR set to: 2
  1335  0094E4  0102               	movlb	2	; () banked
  1336  0094E6  51A9               	movf	_iscSerialUSG& (0+255),w,b
  1337  0094E8  0102               	movlb	2	; () banked
  1338  0094EA  1985               	xorwf	ProcessMasterComms@destSerialUS& (0+255),w,b
  1339  0094EC  E105               	bnz	u7601
  1340  0094EE  0102               	movlb	2	; () banked
  1341  0094F0  51AA               	movf	(_iscSerialUSG+1)& (0+255),w,b
  1342  0094F2  0102               	movlb	2	; () banked
  1343  0094F4  1986               	xorwf	(ProcessMasterComms@destSerialUS+1)& (0+255),w,b
  1344  0094F6  A4D8               	btfss	status,2,c
  1345  0094F8                     u7601:
  1346  0094F8  D098               	goto	l6863
  1347  0094FA                     l6831:
  1348                           
  1349                           ; BSR set to: 2
  1350                           ;mastercomms.c: 79: currentPacketNumberUS = PacketReadParamST7540(3);
  1351  0094FA  0E03               	movlw	3
  1352  0094FC  ECC9  F050         	call	_PacketReadParamST7540
  1353  009500  C230  F283         	movff	?_PacketReadParamST7540,ProcessMasterComms@currentPacketNumberUS
  1354  009504  C231  F284         	movff	?_PacketReadParamST7540+1,ProcessMasterComms@currentPacketNumberUS+1
  1355                           
  1356                           ;mastercomms.c: 80: if(!UpdatePacketNumber(respSerialUS, currentPacketNumberUS))
  1357  009508  C287  F226         	movff	ProcessMasterComms@respSerialUS,UpdatePacketNumber@serialNumberUS
  1358  00950C  C288  F227         	movff	ProcessMasterComms@respSerialUS+1,UpdatePacketNumber@serialNumberUS+1
  1359  009510  C283  F228         	movff	ProcessMasterComms@currentPacketNumberUS,UpdatePacketNumber@packetNumberS
  1360  009514  C284  F229         	movff	ProcessMasterComms@currentPacketNumberUS+1,UpdatePacketNumber@packetNumberS+1
  1361  009518  EC36  F054         	call	_UpdatePacketNumber	;wreg free
  1362  00951C  0900               	iorlw	0
  1363  00951E  B4D8               	btfsc	status,2,c
  1364  009520  0012               	return	
  1365  009522  D05F               	goto	l6861
  1366  009524                     l6835:
  1367                           
  1368                           ;mastercomms.c: 84: case(0b00000001):
  1369                           ;mastercomms.c: 85: case(0b00000010):
  1370                           ;mastercomms.c: 86: case(0b00000011):
  1371                           ;mastercomms.c: 88: ReturnBoosterData(recvCmdUC, respSerialUS);
  1372  009524  C287  F241         	movff	ProcessMasterComms@respSerialUS,ReturnBoosterData@respSerialUS
  1373  009528  C288  F242         	movff	ProcessMasterComms@respSerialUS+1,ReturnBoosterData@respSerialUS+1
  1374  00952C  0102               	movlb	2	; () banked
  1375  00952E  5189               	movf	ProcessMasterComms@recvCmdUC& (0+255),w,b
  1376  009530  ECFE  F044         	call	_ReturnBoosterData
  1377                           
  1378                           ;mastercomms.c: 89: break;
  1379  009534  0012               	return	
  1380  009536                     l6837:
  1381                           
  1382                           ;mastercomms.c: 91: SetIsolationRelay(recvCmdUC);
  1383  009536  0102               	movlb	2	; () banked
  1384  009538  5189               	movf	ProcessMasterComms@recvCmdUC& (0+255),w,b
  1385  00953A  EC4B  F059         	call	_SetIsolationRelay
  1386                           
  1387                           ;mastercomms.c: 92: CreateAndSend(iscSerialUSG, respSerialUS, recvCmdUC, 0, 0);
  1388  00953E  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  1389  009542  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  1390  009546  C287  F239         	movff	ProcessMasterComms@respSerialUS,CreateAndSend@packetDestUS
  1391  00954A  C288  F23A         	movff	ProcessMasterComms@respSerialUS+1,CreateAndSend@packetDestUS+1
  1392  00954E  C289  F23B         	movff	ProcessMasterComms@recvCmdUC,CreateAndSend@commandUC
  1393  009552  0E00               	movlw	0
  1394  009554  0102               	movlb	2	; () banked
  1395  009556  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  1396  009558  0E00               	movlw	0
  1397  00955A  0102               	movlb	2	; () banked
  1398  00955C  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  1399  00955E  0E00               	movlw	0
  1400  009560  0102               	movlb	2	; () banked
  1401  009562  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  1402  009564  ECA6  F055         	call	_CreateAndSend	;wreg free
  1403  009568                     l6841:
  1404                           
  1405                           ;mastercomms.c: 94: SetIsolationRelay(recvCmdUC);
  1406  009568  0102               	movlb	2	; () banked
  1407  00956A  5189               	movf	ProcessMasterComms@recvCmdUC& (0+255),w,b
  1408  00956C  EC4B  F059         	call	_SetIsolationRelay
  1409                           
  1410                           ;mastercomms.c: 95: CreateAndSend(iscSerialUSG, respSerialUS, recvCmdUC, 0, 0);
  1411  009570  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  1412  009574  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  1413  009578  C287  F239         	movff	ProcessMasterComms@respSerialUS,CreateAndSend@packetDestUS
  1414  00957C  C288  F23A         	movff	ProcessMasterComms@respSerialUS+1,CreateAndSend@packetDestUS+1
  1415  009580  C289  F23B         	movff	ProcessMasterComms@recvCmdUC,CreateAndSend@commandUC
  1416  009584  0E00               	movlw	0
  1417  009586  0102               	movlb	2	; () banked
  1418  009588  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  1419  00958A  0E00               	movlw	0
  1420  00958C  0102               	movlb	2	; () banked
  1421  00958E  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  1422  009590  0E00               	movlw	0
  1423  009592  0102               	movlb	2	; () banked
  1424  009594  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  1425  009596  ECA6  F055         	call	_CreateAndSend	;wreg free
  1426                           
  1427                           ;mastercomms.c: 96: break;
  1428  00959A  0012               	return	
  1429  00959C                     l6843:
  1430                           
  1431                           ;mastercomms.c: 98: ProcessSerialCMD(respSerialUS);
  1432  00959C  C287  F241         	movff	ProcessMasterComms@respSerialUS,ProcessSerialCMD@respSerialUS
  1433  0095A0  C288  F242         	movff	ProcessMasterComms@respSerialUS+1,ProcessSerialCMD@respSerialUS+1
  1434  0095A4  EC19  F052         	call	_ProcessSerialCMD	;wreg free
  1435                           
  1436                           ;mastercomms.c: 99: break;
  1437  0095A8  0012               	return	
  1438  0095AA                     l6845:
  1439                           
  1440                           ;mastercomms.c: 101: SetSerialNumber(respSerialUS);
  1441  0095AA  C287  F241         	movff	ProcessMasterComms@respSerialUS,SetSerialNumber@respSerialUS
  1442  0095AE  C288  F242         	movff	ProcessMasterComms@respSerialUS+1,SetSerialNumber@respSerialUS+1
  1443  0095B2  EC44  F04F         	call	_SetSerialNumber	;wreg free
  1444                           
  1445                           ;mastercomms.c: 102: break;
  1446  0095B6  0012               	return	
  1447  0095B8                     l6847:
  1448                           
  1449                           ;mastercomms.c: 104: ForceFiringMode(0);
  1450  0095B8  0E00               	movlw	0
  1451  0095BA  ECFA  F057         	call	_ForceFiringMode
  1452                           
  1453                           ;mastercomms.c: 106: statusFlagsUSLG |= 0b001000000000000000000000;
  1454  0095BE  0102               	movlb	2	; () banked
  1455  0095C0  8B8C               	bsf	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
  1456                           
  1457                           ; BSR set to: 2
  1458                           ;mastercomms.c: 108: statusFlagsUSLG &= ~((unsigned short long) 0b0000000010000000000000
      +                          00);
  1459  0095C2  0102               	movlb	2	; () banked
  1460  0095C4  9F8B               	bcf	(_statusFlagsUSLG+1)& (0+255),7,b	;volatile
  1461                           
  1462                           ; BSR set to: 2
  1463                           ;mastercomms.c: 109: LATBbits.LATB3 = 1;
  1464  0095C6  868A               	bsf	3978,3,c	;volatile
  1465                           
  1466                           ;mastercomms.c: 111: break;
  1467  0095C8  0012               	return	
  1468  0095CA                     l821:
  1469                           
  1470                           ; BSR set to: 2
  1471                           ;mastercomms.c: 113: __nop();
  1472  0095CA  F000               	nop	
  1473                           
  1474                           ;mastercomms.c: 114: ProcessPingCMD(respSerialUS);
  1475  0095CC  C287  F241         	movff	ProcessMasterComms@respSerialUS,ProcessPingCMD@respSerialUS
  1476  0095D0  C288  F242         	movff	ProcessMasterComms@respSerialUS+1,ProcessPingCMD@respSerialUS+1
  1477  0095D4  ECAE  F059         	call	_ProcessPingCMD	;wreg free
  1478                           
  1479                           ;mastercomms.c: 115: break;
  1480  0095D8  0012               	return	
  1481  0095DA                     l6857:
  1482                           
  1483                           ;mastercomms.c: 117: writeBootloaderState();
  1484  0095DA  ECE1  F056         	call	_writeBootloaderState	;wreg free
  1485  0095DE  00FF               	reset		;# 
  1486                           
  1487                           ;mastercomms.c: 123: }
  1488                           
  1489                           ;mastercomms.c: 119: break;
  1490  0095E0  0012               	return	
  1491  0095E2                     l6861:
  1492  0095E2  0102               	movlb	2	; () banked
  1493  0095E4  5189               	movf	ProcessMasterComms@recvCmdUC& (0+255),w,b
  1494                           
  1495                           ; Switch size 1, requested type "space"
  1496                           ; Number of cases is 11, Range of values is 0 to 49
  1497                           ; switch strategies available:
  1498                           ; Name         Instructions Cycles
  1499                           ; simple_byte           34    18 (average)
  1500                           ;	Chosen strategy is simple_byte
  1501  0095E6  0A00               	xorlw	0	; case 0
  1502  0095E8  B4D8               	btfsc	status,2,c
  1503  0095EA  D79C               	goto	l6835
  1504  0095EC  0A01               	xorlw	1	; case 1
  1505  0095EE  B4D8               	btfsc	status,2,c
  1506  0095F0  D799               	goto	l6835
  1507  0095F2  0A03               	xorlw	3	; case 2
  1508  0095F4  B4D8               	btfsc	status,2,c
  1509  0095F6  D796               	goto	l6835
  1510  0095F8  0A01               	xorlw	1	; case 3
  1511  0095FA  B4D8               	btfsc	status,2,c
  1512  0095FC  D793               	goto	l6835
  1513  0095FE  0A06               	xorlw	6	; case 5
  1514  009600  B4D8               	btfsc	status,2,c
  1515  009602  D799               	goto	l6837
  1516  009604  0A03               	xorlw	3	; case 6
  1517  009606  B4D8               	btfsc	status,2,c
  1518  009608  D7AF               	goto	l6841
  1519  00960A  0A01               	xorlw	1	; case 7
  1520  00960C  B4D8               	btfsc	status,2,c
  1521  00960E  D7C6               	goto	l6843
  1522  009610  0A0E               	xorlw	14	; case 9
  1523  009612  B4D8               	btfsc	status,2,c
  1524  009614  D7CA               	goto	l6845
  1525  009616  0A2C               	xorlw	44	; case 37
  1526  009618  B4D8               	btfsc	status,2,c
  1527  00961A  D7CE               	goto	l6847
  1528  00961C  0A0C               	xorlw	12	; case 41
  1529  00961E  B4D8               	btfsc	status,2,c
  1530  009620  D7D4               	goto	l821
  1531  009622  0A18               	xorlw	24	; case 49
  1532  009624  A4D8               	btfss	status,2,c
  1533                           
  1534                           ; BSR set to: 2
  1535                           ;mastercomms.c: 124: }else{
  1536  009626  0012               	return	
  1537  009628  D7D8               	goto	l6857
  1538  00962A                     l6863:
  1539                           
  1540                           ; BSR set to: 2
  1541                           ;mastercomms.c: 125: currentPacketNumberUS = PacketReadParamST7540(3);
  1542  00962A  0E03               	movlw	3
  1543  00962C  ECC9  F050         	call	_PacketReadParamST7540
  1544  009630  C230  F283         	movff	?_PacketReadParamST7540,ProcessMasterComms@currentPacketNumberUS
  1545  009634  C231  F284         	movff	?_PacketReadParamST7540+1,ProcessMasterComms@currentPacketNumberUS+1
  1546                           
  1547                           ;mastercomms.c: 126: if(UpdatePacketNumber(respSerialUS, currentPacketNumberUS) &&
  1548                           ;mastercomms.c: 127: (masterFlagsUCG & 0b00000001)){
  1549  009638  C287  F226         	movff	ProcessMasterComms@respSerialUS,UpdatePacketNumber@serialNumberUS
  1550  00963C  C288  F227         	movff	ProcessMasterComms@respSerialUS+1,UpdatePacketNumber@serialNumberUS+1
  1551  009640  C283  F228         	movff	ProcessMasterComms@currentPacketNumberUS,UpdatePacketNumber@packetNumberS
  1552  009644  C284  F229         	movff	ProcessMasterComms@currentPacketNumberUS+1,UpdatePacketNumber@packetNumberS+1
  1553  009648  EC36  F054         	call	_UpdatePacketNumber	;wreg free
  1554  00964C  0900               	iorlw	0
  1555  00964E  B4D8               	btfsc	status,2,c
  1556  009650  0012               	return	
  1557  009652  0102               	movlb	2	; () banked
  1558  009654  A193               	btfss	_masterFlagsUCG& (0+255),0,b
  1559  009656  0012               	return	
  1560                           
  1561                           ; BSR set to: 2
  1562                           ;mastercomms.c: 128: CollisionCheck();
  1563  009658  ECF9  F058         	call	_CollisionCheck	;wreg free
  1564                           
  1565                           ;mastercomms.c: 129: RetransmitMessageSt7540();
  1566  00965C  EC86  F054         	call	_RetransmitMessageSt7540	;wreg free
  1567  009660  0012               	return	
  1568  009662                     __end_of_ProcessMasterComms:
  1569                           	opt stack 0
  1570                           tblptru	equ	0xFF8
  1571                           postinc0	equ	0xFEE
  1572                           wreg	equ	0xFE8
  1573                           status	equ	0xFD8
  1574                           
  1575 ;; *************** function _writeBootloaderState *****************
  1576 ;; Defined at:
  1577 ;;		line 112 in file "peripherals.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  i               2   96[BANK2 ] int 
  1582 ;;  buffer         64   32[BANK2 ] unsigned char [64]
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1593 ;;      Locals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1595 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;Total ram usage:       66 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    8
  1599 ;; This function calls:
  1600 ;;		_writeRegisterToProgram
  1601 ;; This function is called by:
  1602 ;;		_ProcessMasterComms
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text3
  1607  00ADC2                     __ptext3:
  1608                           	opt stack 0
  1609  00ADC2                     _writeBootloaderState:
  1610                           	opt stack 21
  1611                           
  1612                           ;peripherals.c: 113: unsigned char buffer[64];
  1613                           ;peripherals.c: 114: for(int i = 0; i < 64; i ++){
  1614                           
  1615                           ;incstack = 0
  1616  00ADC2  0E00               	movlw	0
  1617  00ADC4  0102               	movlb	2	; () banked
  1618  00ADC6  6F62               	movwf	(writeBootloaderState@i+1)& (0+255),b
  1619  00ADC8  0E00               	movlw	0
  1620  00ADCA  6F61               	movwf	writeBootloaderState@i& (0+255),b
  1621  00ADCC                     l5465:
  1622                           
  1623                           ; BSR set to: 2
  1624  00ADCC  0102               	movlb	2	; () banked
  1625  00ADCE  BF62               	btfsc	(writeBootloaderState@i+1)& (0+255),7,b
  1626  00ADD0  D008               	goto	l5469
  1627  00ADD2  0102               	movlb	2	; () banked
  1628  00ADD4  5162               	movf	(writeBootloaderState@i+1)& (0+255),w,b
  1629  00ADD6  E113               	bnz	l5475
  1630  00ADD8  0E40               	movlw	64
  1631  00ADDA  0102               	movlb	2	; () banked
  1632  00ADDC  5D61               	subwf	writeBootloaderState@i& (0+255),w,b
  1633  00ADDE  B0D8               	btfsc	status,0,c
  1634  00ADE0  D00E               	goto	l5475
  1635  00ADE2                     l5469:
  1636                           
  1637                           ; BSR set to: 2
  1638                           ;peripherals.c: 115: buffer[i] = 1;
  1639  00ADE2  0E21               	movlw	low writeBootloaderState@buffer
  1640  00ADE4  0102               	movlb	2	; () banked
  1641  00ADE6  2561               	addwf	writeBootloaderState@i& (0+255),w,b
  1642  00ADE8  6ED9               	movwf	fsr2l,c
  1643  00ADEA  0E02               	movlw	high writeBootloaderState@buffer
  1644  00ADEC  0102               	movlb	2	; () banked
  1645  00ADEE  2162               	addwfc	(writeBootloaderState@i+1)& (0+255),w,b
  1646  00ADF0  6EDA               	movwf	fsr2h,c
  1647  00ADF2  0E01               	movlw	1
  1648  00ADF4  6EDF               	movwf	indf2,c
  1649                           
  1650                           ; BSR set to: 2
  1651  00ADF6  0102               	movlb	2	; () banked
  1652  00ADF8  4B61               	infsnz	writeBootloaderState@i& (0+255),f,b
  1653  00ADFA  2B62               	incf	(writeBootloaderState@i+1)& (0+255),f,b
  1654  00ADFC  D7E7               	goto	l5465
  1655  00ADFE                     l5475:
  1656                           
  1657                           ; BSR set to: 2
  1658                           ;peripherals.c: 116: }
  1659                           ;peripherals.c: 117: writeRegisterToProgram(0x3C00, buffer);
  1660  00ADFE  0E3C               	movlw	60
  1661  00AE00  0102               	movlb	2	; () banked
  1662  00AE02  6F1C               	movwf	(writeRegisterToProgram@address+1)& (0+255),b
  1663  00AE04  0E00               	movlw	0
  1664  00AE06  6F1B               	movwf	writeRegisterToProgram@address& (0+255),b
  1665  00AE08  0E21               	movlw	low writeBootloaderState@buffer
  1666  00AE0A  0102               	movlb	2	; () banked
  1667  00AE0C  6F1D               	movwf	writeRegisterToProgram@buffer& (0+255),b
  1668  00AE0E  0E02               	movlw	high writeBootloaderState@buffer
  1669  00AE10  0102               	movlb	2	; () banked
  1670  00AE12  6F1E               	movwf	(writeRegisterToProgram@buffer+1)& (0+255),b
  1671  00AE14  EC1E  F055         	call	_writeRegisterToProgram	;wreg free
  1672  00AE18  0012               	return		;funcret
  1673  00AE1A                     __end_of_writeBootloaderState:
  1674                           	opt stack 0
  1675                           tblptru	equ	0xFF8
  1676                           postinc0	equ	0xFEE
  1677                           wreg	equ	0xFE8
  1678                           indf2	equ	0xFDF
  1679                           fsr2h	equ	0xFDA
  1680                           fsr2l	equ	0xFD9
  1681                           status	equ	0xFD8
  1682                           
  1683 ;; *************** function _writeRegisterToProgram *****************
  1684 ;; Defined at:
  1685 ;;		line 125 in file "peripherals.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  address         2   26[BANK2 ] unsigned short 
  1688 ;;  buffer          2   28[BANK2 ] PTR unsigned char 
  1689 ;;		 -> writeBootloaderState@buffer(64), 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  i               2   30[BANK2 ] int 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1701 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1702 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1704 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1705 ;;Total ram usage:        6 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    7
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_writeBootloaderState
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text4
  1716  00AA3C                     __ptext4:
  1717                           	opt stack 0
  1718  00AA3C                     _writeRegisterToProgram:
  1719                           	opt stack 21
  1720                           
  1721                           ;peripherals.c: 126: address --;
  1722                           
  1723                           ;incstack = 0
  1724  00AA3C  0102               	movlb	2	; () banked
  1725  00AA3E  071B               	decf	writeRegisterToProgram@address& (0+255),f,b
  1726  00AA40  A0D8               	btfss	status,0,c
  1727  00AA42  071C               	decf	(writeRegisterToProgram@address+1)& (0+255),f,b
  1728                           
  1729                           ; BSR set to: 2
  1730                           ;peripherals.c: 127: TBLPTRU = 0x00;
  1731  00AA44  0E00               	movlw	0
  1732  00AA46  6EF8               	movwf	tblptru,c	;volatile
  1733                           
  1734                           ; BSR set to: 2
  1735                           ;peripherals.c: 128: TBLPTRH = (unsigned char)(address >> 8);
  1736  00AA48  0102               	movlb	2	; () banked
  1737  00AA4A  511C               	movf	(writeRegisterToProgram@address+1)& (0+255),w,b
  1738  00AA4C  6EF7               	movwf	tblptrh,c	;volatile
  1739                           
  1740                           ; BSR set to: 2
  1741                           ;peripherals.c: 129: TBLPTRL = (unsigned char)(address & 0xFF);
  1742  00AA4E  C21B  FFF6         	movff	writeRegisterToProgram@address,tblptrl	;volatile
  1743                           
  1744                           ; BSR set to: 2
  1745                           ;peripherals.c: 131: TABLAT = buffer[63];
  1746  00AA52  0102               	movlb	2	; () banked
  1747  00AA54  EE20 F03F          	lfsr	2,63
  1748  00AA58  511D               	movf	writeRegisterToProgram@buffer& (0+255),w,b
  1749  00AA5A  26D9               	addwf	fsr2l,f,c
  1750  00AA5C  511E               	movf	(writeRegisterToProgram@buffer+1)& (0+255),w,b
  1751  00AA5E  22DA               	addwfc	fsr2h,f,c
  1752  00AA60  50DF               	movf	indf2,w,c
  1753  00AA62  6EF5               	movwf	tablat,c	;volatile
  1754  00AA64  000D               	tblwt		*+	;# 
  1755                           
  1756                           ;peripherals.c: 133: for(int i = 0; i < 63; i++){
  1757  00AA66  0E00               	movlw	0
  1758  00AA68  0102               	movlb	2	; () banked
  1759  00AA6A  6F20               	movwf	(writeRegisterToProgram@i+1)& (0+255),b
  1760  00AA6C  0E00               	movlw	0
  1761  00AA6E  6F1F               	movwf	writeRegisterToProgram@i& (0+255),b
  1762                           
  1763                           ; BSR set to: 2
  1764  00AA70  0102               	movlb	2	; () banked
  1765  00AA72  BF20               	btfsc	(writeRegisterToProgram@i+1)& (0+255),7,b
  1766  00AA74  D008               	goto	l4721
  1767  00AA76  0102               	movlb	2	; () banked
  1768  00AA78  5120               	movf	(writeRegisterToProgram@i+1)& (0+255),w,b
  1769  00AA7A  E11C               	bnz	l1060
  1770  00AA7C  0E3F               	movlw	63
  1771  00AA7E  0102               	movlb	2	; () banked
  1772  00AA80  5D1F               	subwf	writeRegisterToProgram@i& (0+255),w,b
  1773  00AA82  B0D8               	btfsc	status,0,c
  1774  00AA84  D017               	goto	l1060
  1775  00AA86                     l4721:
  1776                           
  1777                           ; BSR set to: 2
  1778                           ;peripherals.c: 134: TABLAT = buffer[i];
  1779  00AA86  0102               	movlb	2	; () banked
  1780  00AA88  511F               	movf	writeRegisterToProgram@i& (0+255),w,b
  1781  00AA8A  0102               	movlb	2	; () banked
  1782  00AA8C  251D               	addwf	writeRegisterToProgram@buffer& (0+255),w,b
  1783  00AA8E  6ED9               	movwf	fsr2l,c
  1784  00AA90  0102               	movlb	2	; () banked
  1785  00AA92  5120               	movf	(writeRegisterToProgram@i+1)& (0+255),w,b
  1786  00AA94  0102               	movlb	2	; () banked
  1787  00AA96  211E               	addwfc	(writeRegisterToProgram@buffer+1)& (0+255),w,b
  1788  00AA98  6EDA               	movwf	fsr2h,c
  1789  00AA9A  50DF               	movf	indf2,w,c
  1790  00AA9C  6EF5               	movwf	tablat,c	;volatile
  1791  00AA9E  000D               	tblwt		*+	;# 
  1792  00AAA0  0102               	movlb	2	; () banked
  1793  00AAA2  4B1F               	infsnz	writeRegisterToProgram@i& (0+255),f,b
  1794  00AAA4  2B20               	incf	(writeRegisterToProgram@i+1)& (0+255),f,b
  1795                           
  1796                           ; BSR set to: 2
  1797  00AAA6  0102               	movlb	2	; () banked
  1798  00AAA8  BF20               	btfsc	(writeRegisterToProgram@i+1)& (0+255),7,b
  1799  00AAAA  D7ED               	goto	l4721
  1800  00AAAC  0102               	movlb	2	; () banked
  1801  00AAAE  5120               	movf	(writeRegisterToProgram@i+1)& (0+255),w,b
  1802  00AAB0  E101               	bnz	u4280
  1803  00AAB2  D7E4               	goto	L1
  1804  00AAB4                     u4280:
  1805  00AAB4                     l1060:
  1806                           
  1807                           ; BSR set to: 2
  1808                           ;peripherals.c: 136: }
  1809                           ;peripherals.c: 139: EECON1bits.WREN = 1;
  1810  00AAB4  84A6               	bsf	4006,2,c	;volatile
  1811                           
  1812                           ;peripherals.c: 140: INTCONbits.GIE = 0;
  1813  00AAB6  9EF2               	bcf	intcon,7,c	;volatile
  1814                           
  1815                           ; BSR set to: 2
  1816                           ;peripherals.c: 142: EECON2 = 0x55;
  1817  00AAB8  0E55               	movlw	85
  1818  00AABA  6EA7               	movwf	4007,c	;volatile
  1819                           
  1820                           ;peripherals.c: 143: EECON2 = 0xAA;
  1821  00AABC  0EAA               	movlw	170
  1822  00AABE  6EA7               	movwf	4007,c	;volatile
  1823                           
  1824                           ; BSR set to: 2
  1825                           ;peripherals.c: 145: EECON1bits.WR = 1;
  1826  00AAC0  82A6               	bsf	4006,1,c	;volatile
  1827  00AAC2                     l1061:
  1828  00AAC2  B2A6               	btfsc	4006,1,c	;volatile
  1829  00AAC4  D7FE               	goto	l1061
  1830                           
  1831                           ;peripherals.c: 147: INTCONbits.GIE = 1;
  1832  00AAC6  8EF2               	bsf	intcon,7,c	;volatile
  1833                           
  1834                           ;peripherals.c: 148: EECON1bits.WREN = 0;
  1835  00AAC8  94A6               	bcf	4006,2,c	;volatile
  1836  00AACA  0012               	return		;funcret
  1837  00AACC                     __end_of_writeRegisterToProgram:
  1838                           	opt stack 0
  1839                           tblptru	equ	0xFF8
  1840                           tblptrh	equ	0xFF7
  1841                           tblptrl	equ	0xFF6
  1842                           tablat	equ	0xFF5
  1843                           intcon	equ	0xFF2
  1844                           postinc0	equ	0xFEE
  1845                           wreg	equ	0xFE8
  1846                           indf2	equ	0xFDF
  1847                           fsr2h	equ	0xFDA
  1848                           fsr2l	equ	0xFD9
  1849                           status	equ	0xFD8
  1850                           
  1851 ;; *************** function _UpdatePacketNumber *****************
  1852 ;; Defined at:
  1853 ;;		line 134 in file "mastercomms.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  serialNumber    2   37[BANK2 ] unsigned short 
  1856 ;;  packetNumber    2   39[BANK2 ] short 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  pastPacketNu    2   46[BANK2 ] short 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      unsigned char 
  1861 ;; Registers used:
  1862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1868 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1869 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1870 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1871 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1872 ;;Total ram usage:       11 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    9
  1875 ;; This function calls:
  1876 ;;		_GetLastPacketNumber
  1877 ;;		_SavePacketNumber
  1878 ;; This function is called by:
  1879 ;;		_ProcessMasterComms
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text5
  1884  00A86C                     __ptext5:
  1885                           	opt stack 0
  1886  00A86C                     _UpdatePacketNumber:
  1887                           	opt stack 20
  1888                           
  1889                           ;mastercomms.c: 135: signed short pastPacketNumberS;
  1890                           ;mastercomms.c: 137: pastPacketNumberS = GetLastPacketNumber(serialNumberUS);
  1891                           
  1892                           ;incstack = 0
  1893  00A86C  C226  F21B         	movff	UpdatePacketNumber@serialNumberUS,GetLastPacketNumber@srcSerialUS
  1894  00A870  C227  F21C         	movff	UpdatePacketNumber@serialNumberUS+1,GetLastPacketNumber@srcSerialUS+1
  1895  00A874  EC83  F056         	call	_GetLastPacketNumber	;wreg free
  1896  00A878  C21B  F22F         	movff	?_GetLastPacketNumber,UpdatePacketNumber@pastPacketNumberS
  1897  00A87C  C21C  F230         	movff	?_GetLastPacketNumber+1,UpdatePacketNumber@pastPacketNumberS+1
  1898                           
  1899                           ;mastercomms.c: 138: if((packetNumberS > pastPacketNumberS) ||
  1900                           ;mastercomms.c: 139: (packetNumberS < (pastPacketNumberS - 10)) ||
  1901                           ;mastercomms.c: 140: (pastPacketNumberS == (-10-1))){
  1902  00A880  0102               	movlb	2	; () banked
  1903  00A882  5128               	movf	UpdatePacketNumber@packetNumberS& (0+255),w,b
  1904  00A884  0102               	movlb	2	; () banked
  1905  00A886  5D2F               	subwf	UpdatePacketNumber@pastPacketNumberS& (0+255),w,b
  1906  00A888  0102               	movlb	2	; () banked
  1907  00A88A  5130               	movf	(UpdatePacketNumber@pastPacketNumberS+1)& (0+255),w,b
  1908  00A88C  0A80               	xorlw	128
  1909  00A88E  0102               	movlb	2	; () banked
  1910  00A890  6F2A               	movwf	??_UpdatePacketNumber& (0+255),b
  1911  00A892  0102               	movlb	2	; () banked
  1912  00A894  5129               	movf	(UpdatePacketNumber@packetNumberS+1)& (0+255),w,b
  1913  00A896  0A80               	xorlw	128
  1914  00A898  0102               	movlb	2	; () banked
  1915  00A89A  592A               	subwfb	??_UpdatePacketNumber& (0+255),w,b
  1916  00A89C  A0D8               	btfss	status,0,c
  1917  00A89E  D02A               	goto	l6611
  1918                           
  1919                           ; BSR set to: 2
  1920  00A8A0  0EF6               	movlw	246
  1921  00A8A2  0102               	movlb	2	; () banked
  1922  00A8A4  6F2A               	movwf	??_UpdatePacketNumber& (0+255),b
  1923  00A8A6  0EFF               	movlw	255
  1924  00A8A8  0102               	movlb	2	; () banked
  1925  00A8AA  6F2B               	movwf	(??_UpdatePacketNumber+1)& (0+255),b
  1926  00A8AC  C22F  F22C         	movff	UpdatePacketNumber@pastPacketNumberS,??_UpdatePacketNumber+2
  1927  00A8B0  C230  F22D         	movff	UpdatePacketNumber@pastPacketNumberS+1,??_UpdatePacketNumber+3
  1928  00A8B4  0102               	movlb	2	; () banked
  1929  00A8B6  512A               	movf	??_UpdatePacketNumber& (0+255),w,b
  1930  00A8B8  0102               	movlb	2	; () banked
  1931  00A8BA  272C               	addwf	(??_UpdatePacketNumber+2)& (0+255),f,b
  1932  00A8BC  0102               	movlb	2	; () banked
  1933  00A8BE  512B               	movf	(??_UpdatePacketNumber+1)& (0+255),w,b
  1934  00A8C0  0102               	movlb	2	; () banked
  1935  00A8C2  232D               	addwfc	(??_UpdatePacketNumber+3)& (0+255),f,b
  1936  00A8C4  0102               	movlb	2	; () banked
  1937  00A8C6  512C               	movf	(??_UpdatePacketNumber+2)& (0+255),w,b
  1938  00A8C8  0102               	movlb	2	; () banked
  1939  00A8CA  5D28               	subwf	UpdatePacketNumber@packetNumberS& (0+255),w,b
  1940  00A8CC  0102               	movlb	2	; () banked
  1941  00A8CE  5129               	movf	(UpdatePacketNumber@packetNumberS+1)& (0+255),w,b
  1942  00A8D0  0A80               	xorlw	128
  1943  00A8D2  0102               	movlb	2	; () banked
  1944  00A8D4  6F2E               	movwf	(??_UpdatePacketNumber+4)& (0+255),b
  1945  00A8D6  0102               	movlb	2	; () banked
  1946  00A8D8  512D               	movf	(??_UpdatePacketNumber+3)& (0+255),w,b
  1947  00A8DA  0A80               	xorlw	128
  1948  00A8DC  0102               	movlb	2	; () banked
  1949  00A8DE  592E               	subwfb	(??_UpdatePacketNumber+4)& (0+255),w,b
  1950  00A8E0  A0D8               	btfss	status,0,c
  1951  00A8E2  D008               	goto	l6611
  1952                           
  1953                           ; BSR set to: 2
  1954  00A8E4  0EF5               	movlw	245
  1955  00A8E6  0102               	movlb	2	; () banked
  1956  00A8E8  192F               	xorwf	UpdatePacketNumber@pastPacketNumberS& (0+255),w,b
  1957  00A8EA  E10E               	bnz	l6617
  1958  00A8EC  0102               	movlb	2	; () banked
  1959  00A8EE  2930               	incf	(UpdatePacketNumber@pastPacketNumberS+1)& (0+255),w,b
  1960  00A8F0  A4D8               	btfss	status,2,c
  1961  00A8F2  D00A               	goto	l6617
  1962  00A8F4                     l6611:
  1963                           
  1964                           ; BSR set to: 2
  1965                           ;mastercomms.c: 141: SavePacketNumber(serialNumberUS, packetNumberS);
  1966  00A8F4  C226  F220         	movff	UpdatePacketNumber@serialNumberUS,SavePacketNumber@srcSerialUS
  1967  00A8F8  C227  F221         	movff	UpdatePacketNumber@serialNumberUS+1,SavePacketNumber@srcSerialUS+1
  1968  00A8FC  C228  F222         	movff	UpdatePacketNumber@packetNumberS,SavePacketNumber@packetNumberUC
  1969  00A900  ECE0  F055         	call	_SavePacketNumber	;wreg free
  1970                           
  1971                           ;mastercomms.c: 142: return 1;
  1972  00A904  0E01               	movlw	1
  1973  00A906  0012               	return	
  1974  00A908                     l6617:
  1975                           
  1976                           ;mastercomms.c: 143: }
  1977                           ;mastercomms.c: 144: return 0;
  1978  00A908  0E00               	movlw	0
  1979  00A90A  0012               	return	
  1980  00A90C                     __end_of_UpdatePacketNumber:
  1981                           	opt stack 0
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           intcon	equ	0xFF2
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           indf2	equ	0xFDF
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _GetLastPacketNumber *****************
  1995 ;; Defined at:
  1996 ;;		line 262 in file "mastercomms.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  srcSerialUS     2   26[BANK2 ] unsigned short 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  iscCountUC      1   30[BANK2 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  2   26[BANK2 ] short 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  2010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2013 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2014 ;;Total ram usage:        5 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    7
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_UpdatePacketNumber
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text6
  2025  00AD06                     __ptext6:
  2026                           	opt stack 0
  2027  00AD06                     _GetLastPacketNumber:
  2028                           	opt stack 21
  2029                           
  2030                           ;mastercomms.c: 263: unsigned char iscCountUC;
  2031                           ;mastercomms.c: 265: for(iscCountUC = 0; iscCountUC < 31; iscCountUC++){
  2032                           
  2033                           ;incstack = 0
  2034  00AD06  0E00               	movlw	0
  2035  00AD08  0102               	movlb	2	; () banked
  2036  00AD0A  6F1F               	movwf	GetLastPacketNumber@iscCountUC& (0+255),b
  2037  00AD0C                     l4687:
  2038                           
  2039                           ; BSR set to: 2
  2040  00AD0C  0E1E               	movlw	30
  2041  00AD0E  0102               	movlb	2	; () banked
  2042  00AD10  651F               	cpfsgt	GetLastPacketNumber@iscCountUC& (0+255),b
  2043  00AD12  D001               	goto	l4691
  2044  00AD14  D023               	goto	l4701
  2045  00AD16                     l4691:
  2046                           
  2047                           ; BSR set to: 2
  2048                           ;mastercomms.c: 266: if(packetNumbersUSAG[1][iscCountUC] == srcSerialUS)
  2049  00AD16  0102               	movlb	2	; () banked
  2050  00AD18  511F               	movf	GetLastPacketNumber@iscCountUC& (0+255),w,b
  2051  00AD1A  0D02               	mullw	2
  2052  00AD1C  0EC2               	movlw	low (_packetNumbersUSAG+62)
  2053  00AD1E  24F3               	addwf	prodl,w,c
  2054  00AD20  6ED9               	movwf	fsr2l,c
  2055  00AD22  0E05               	movlw	high (_packetNumbersUSAG+62)
  2056  00AD24  20F4               	addwfc	prodh,w,c
  2057  00AD26  6EDA               	movwf	fsr2h,c
  2058  00AD28  0102               	movlb	2	; () banked
  2059  00AD2A  511B               	movf	GetLastPacketNumber@srcSerialUS& (0+255),w,b
  2060  00AD2C  18DE               	xorwf	postinc2,w,c
  2061  00AD2E  E113               	bnz	l4697
  2062  00AD30  0102               	movlb	2	; () banked
  2063  00AD32  511C               	movf	(GetLastPacketNumber@srcSerialUS+1)& (0+255),w,b
  2064  00AD34  18DE               	xorwf	postinc2,w,c
  2065  00AD36  A4D8               	btfss	status,2,c
  2066  00AD38  D00E               	goto	l4697
  2067                           
  2068                           ; BSR set to: 2
  2069                           ;mastercomms.c: 267: return packetNumbersUSAG[0][iscCountUC];
  2070  00AD3A  0102               	movlb	2	; () banked
  2071  00AD3C  511F               	movf	GetLastPacketNumber@iscCountUC& (0+255),w,b
  2072  00AD3E  0D02               	mullw	2
  2073  00AD40  0E84               	movlw	low _packetNumbersUSAG
  2074  00AD42  24F3               	addwf	prodl,w,c
  2075  00AD44  6ED9               	movwf	fsr2l,c
  2076  00AD46  0E05               	movlw	high _packetNumbersUSAG
  2077  00AD48  20F4               	addwfc	prodh,w,c
  2078  00AD4A  6EDA               	movwf	fsr2h,c
  2079  00AD4C  CFDE F21B          	movff	postinc2,?_GetLastPacketNumber
  2080  00AD50  CFDD F21C          	movff	postdec2,?_GetLastPacketNumber+1
  2081                           
  2082                           ; BSR set to: 2
  2083  00AD54  0012               	return	
  2084  00AD56                     l4697:
  2085                           
  2086                           ; BSR set to: 2
  2087  00AD56  0102               	movlb	2	; () banked
  2088  00AD58  2B1F               	incf	GetLastPacketNumber@iscCountUC& (0+255),f,b
  2089  00AD5A  D7D8               	goto	l4687
  2090  00AD5C                     l4701:
  2091                           
  2092                           ; BSR set to: 2
  2093                           ;mastercomms.c: 268: }
  2094                           ;mastercomms.c: 269: return (-10-1);
  2095  00AD5C  0EFF               	movlw	255
  2096  00AD5E  0102               	movlb	2	; () banked
  2097  00AD60  6F1C               	movwf	(?_GetLastPacketNumber+1)& (0+255),b
  2098  00AD62  0EF5               	movlw	245
  2099  00AD64  6F1B               	movwf	?_GetLastPacketNumber& (0+255),b
  2100  00AD66  0012               	return	
  2101  00AD68                     __end_of_GetLastPacketNumber:
  2102                           	opt stack 0
  2103                           tblptru	equ	0xFF8
  2104                           tblptrh	equ	0xFF7
  2105                           tblptrl	equ	0xFF6
  2106                           tablat	equ	0xFF5
  2107                           prodh	equ	0xFF4
  2108                           prodl	equ	0xFF3
  2109                           intcon	equ	0xFF2
  2110                           postinc0	equ	0xFEE
  2111                           wreg	equ	0xFE8
  2112                           indf2	equ	0xFDF
  2113                           postinc2	equ	0xFDE
  2114                           postdec2	equ	0xFDD
  2115                           fsr2h	equ	0xFDA
  2116                           fsr2l	equ	0xFD9
  2117                           status	equ	0xFD8
  2118                           
  2119 ;; *************** function _SetSerialNumber *****************
  2120 ;; Defined at:
  2121 ;;		line 163 in file "mastercomms.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  respSerialUS    2   64[BANK2 ] unsigned short 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  dataBufUSP      2   70[BANK2 ] PTR unsigned short 
  2126 ;;		 -> bufferRXST7540UCAG(75), 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  2136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;Total ram usage:        8 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:   11
  2143 ;; This function calls:
  2144 ;;		_CreateAndSend
  2145 ;;		_PacketDataST7540
  2146 ;;		_WriteFlashValues
  2147 ;; This function is called by:
  2148 ;;		_ProcessMasterComms
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text7
  2153  009E88                     __ptext7:
  2154                           	opt stack 0
  2155  009E88                     _SetSerialNumber:
  2156                           	opt stack 18
  2157                           
  2158                           ;mastercomms.c: 164: unsigned short *dataBufUSP;
  2159                           ;mastercomms.c: 166: if(iscSerialUSG == 0x3FFE){
  2160                           
  2161                           ; BSR set to: 2
  2162                           ;incstack = 0
  2163  009E88  0EFE               	movlw	254
  2164  009E8A  0102               	movlb	2	; () banked
  2165  009E8C  19A9               	xorwf	_iscSerialUSG& (0+255),w,b
  2166  009E8E  E16A               	bnz	l6767
  2167  009E90  0E3F               	movlw	63
  2168  009E92  0102               	movlb	2	; () banked
  2169  009E94  19AA               	xorwf	(_iscSerialUSG+1)& (0+255),w,b
  2170  009E96  A4D8               	btfss	status,2,c
  2171  009E98  D065               	goto	l6767
  2172                           
  2173                           ; BSR set to: 2
  2174                           ;mastercomms.c: 167: dataBufUSP = (unsigned short *) PacketDataST7540();
  2175  009E9A  ECFC  F05A         	call	_PacketDataST7540	;wreg free
  2176  009E9E  C21B  F247         	movff	?_PacketDataST7540,SetSerialNumber@dataBufUSP
  2177  009EA2  C21C  F248         	movff	?_PacketDataST7540+1,SetSerialNumber@dataBufUSP+1
  2178                           
  2179                           ;mastercomms.c: 168: iscSerialUSG = (dataBufUSP[0] << 8) | (dataBufUSP[0] >> 8);
  2180  009EA6  C247  FFD9         	movff	SetSerialNumber@dataBufUSP,fsr2l
  2181  009EAA  C248  FFDA         	movff	SetSerialNumber@dataBufUSP+1,fsr2h
  2182  009EAE  CFDE F243          	movff	postinc2,??_SetSerialNumber
  2183  009EB2  CFDD F244          	movff	postdec2,??_SetSerialNumber+1
  2184  009EB6  C244  F243         	movff	??_SetSerialNumber+1,??_SetSerialNumber
  2185  009EBA  0102               	movlb	2	; () banked
  2186  009EBC  6B44               	clrf	(??_SetSerialNumber+1)& (0+255),b
  2187  009EBE  C247  FFD9         	movff	SetSerialNumber@dataBufUSP,fsr2l
  2188  009EC2  C248  FFDA         	movff	SetSerialNumber@dataBufUSP+1,fsr2h
  2189  009EC6  CFDE F245          	movff	postinc2,??_SetSerialNumber+2
  2190  009ECA  CFDD F246          	movff	postdec2,??_SetSerialNumber+3
  2191  009ECE  C245  F246         	movff	??_SetSerialNumber+2,??_SetSerialNumber+3
  2192  009ED2  0102               	movlb	2	; () banked
  2193  009ED4  6B45               	clrf	(??_SetSerialNumber+2)& (0+255),b
  2194  009ED6  0102               	movlb	2	; () banked
  2195  009ED8  5143               	movf	??_SetSerialNumber& (0+255),w,b
  2196  009EDA  0102               	movlb	2	; () banked
  2197  009EDC  1145               	iorwf	(??_SetSerialNumber+2)& (0+255),w,b
  2198  009EDE  0102               	movlb	2	; () banked
  2199  009EE0  6FA9               	movwf	_iscSerialUSG& (0+255),b
  2200  009EE2  0102               	movlb	2	; () banked
  2201  009EE4  5144               	movf	(??_SetSerialNumber+1)& (0+255),w,b
  2202  009EE6  0102               	movlb	2	; () banked
  2203  009EE8  1146               	iorwf	(??_SetSerialNumber+3)& (0+255),w,b
  2204  009EEA  0102               	movlb	2	; () banked
  2205  009EEC  6FAA               	movwf	(_iscSerialUSG+1)& (0+255),b
  2206                           
  2207                           ; BSR set to: 2
  2208                           ;mastercomms.c: 169: if(!iscSerialUSG){
  2209  009EEE  0102               	movlb	2	; () banked
  2210  009EF0  51A9               	movf	_iscSerialUSG& (0+255),w,b
  2211  009EF2  0102               	movlb	2	; () banked
  2212  009EF4  11AA               	iorwf	(_iscSerialUSG+1)& (0+255),w,b
  2213  009EF6  A4D8               	btfss	status,2,c
  2214  009EF8  D01C               	goto	l6763
  2215                           
  2216                           ; BSR set to: 2
  2217                           ;mastercomms.c: 170: iscSerialUSG = 0x3FFE;
  2218  009EFA  0E3F               	movlw	63
  2219  009EFC  0102               	movlb	2	; () banked
  2220  009EFE  6FAA               	movwf	(_iscSerialUSG+1)& (0+255),b
  2221  009F00  0EFE               	movlw	254
  2222  009F02  6FA9               	movwf	_iscSerialUSG& (0+255),b
  2223                           
  2224                           ; BSR set to: 2
  2225                           ;mastercomms.c: 171: CreateAndSend(iscSerialUSG, respSerialUS, 0b00001001, 0, 0);
  2226  009F04  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  2227  009F08  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  2228  009F0C  C241  F239         	movff	SetSerialNumber@respSerialUS,CreateAndSend@packetDestUS
  2229  009F10  C242  F23A         	movff	SetSerialNumber@respSerialUS+1,CreateAndSend@packetDestUS+1
  2230  009F14  0E09               	movlw	9
  2231  009F16  0102               	movlb	2	; () banked
  2232  009F18  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  2233  009F1A  0E00               	movlw	0
  2234  009F1C  0102               	movlb	2	; () banked
  2235  009F1E  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  2236  009F20  0E00               	movlw	0
  2237  009F22  0102               	movlb	2	; () banked
  2238  009F24  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  2239  009F26  0E00               	movlw	0
  2240  009F28  0102               	movlb	2	; () banked
  2241  009F2A  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  2242  009F2C  ECA6  F055         	call	_CreateAndSend	;wreg free
  2243                           
  2244                           ;mastercomms.c: 172: return;
  2245  009F30  0012               	return	
  2246  009F32                     l6763:
  2247                           
  2248                           ;mastercomms.c: 173: }
  2249                           ;mastercomms.c: 174: WriteFlashValues();
  2250  009F32  EC1D  F058         	call	_WriteFlashValues	;wreg free
  2251                           
  2252                           ;mastercomms.c: 175: CreateAndSend(iscSerialUSG, respSerialUS, 0b00001001, 2, (char *) &
      +                          iscSerialUSG);
  2253  009F36  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  2254  009F3A  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  2255  009F3E  C241  F239         	movff	SetSerialNumber@respSerialUS,CreateAndSend@packetDestUS
  2256  009F42  C242  F23A         	movff	SetSerialNumber@respSerialUS+1,CreateAndSend@packetDestUS+1
  2257  009F46  0E09               	movlw	9
  2258  009F48  0102               	movlb	2	; () banked
  2259  009F4A  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  2260  009F4C  0E02               	movlw	2
  2261  009F4E  0102               	movlb	2	; () banked
  2262  009F50  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  2263  009F52  0EA9               	movlw	low _iscSerialUSG
  2264  009F54  0102               	movlb	2	; () banked
  2265  009F56  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  2266  009F58  0E02               	movlw	high _iscSerialUSG
  2267  009F5A  0102               	movlb	2	; () banked
  2268  009F5C  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  2269  009F5E  ECA6  F055         	call	_CreateAndSend	;wreg free
  2270                           
  2271                           ;mastercomms.c: 176: }else
  2272  009F62  0012               	return	
  2273  009F64                     l6767:
  2274                           
  2275                           ;mastercomms.c: 177: CreateAndSend(iscSerialUSG, respSerialUS, 0b00001001, 0, 0);
  2276  009F64  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  2277  009F68  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  2278  009F6C  C241  F239         	movff	SetSerialNumber@respSerialUS,CreateAndSend@packetDestUS
  2279  009F70  C242  F23A         	movff	SetSerialNumber@respSerialUS+1,CreateAndSend@packetDestUS+1
  2280  009F74  0E09               	movlw	9
  2281  009F76  0102               	movlb	2	; () banked
  2282  009F78  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  2283  009F7A  0E00               	movlw	0
  2284  009F7C  0102               	movlb	2	; () banked
  2285  009F7E  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  2286  009F80  0E00               	movlw	0
  2287  009F82  0102               	movlb	2	; () banked
  2288  009F84  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  2289  009F86  0E00               	movlw	0
  2290  009F88  0102               	movlb	2	; () banked
  2291  009F8A  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  2292  009F8C  ECA6  F055         	call	_CreateAndSend	;wreg free
  2293  009F90  0012               	return	
  2294  009F92                     __end_of_SetSerialNumber:
  2295                           	opt stack 0
  2296                           tblptru	equ	0xFF8
  2297                           tblptrh	equ	0xFF7
  2298                           tblptrl	equ	0xFF6
  2299                           tablat	equ	0xFF5
  2300                           prodh	equ	0xFF4
  2301                           prodl	equ	0xFF3
  2302                           intcon	equ	0xFF2
  2303                           postinc0	equ	0xFEE
  2304                           wreg	equ	0xFE8
  2305                           indf2	equ	0xFDF
  2306                           postinc2	equ	0xFDE
  2307                           postdec2	equ	0xFDD
  2308                           fsr2h	equ	0xFDA
  2309                           fsr2l	equ	0xFD9
  2310                           status	equ	0xFD8
  2311                           
  2312 ;; *************** function _SetIsolationRelay *****************
  2313 ;; Defined at:
  2314 ;;		line 286 in file "mastercomms.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  relayStateUC    1    wreg     unsigned char 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  relayStateUC    1   26[BANK2 ] unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  2328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2329 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2331 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2332 ;;Total ram usage:        1 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    7
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_ProcessMasterComms
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text8
  2343  00B296                     __ptext8:
  2344                           	opt stack 0
  2345  00B296                     _SetIsolationRelay:
  2346                           	opt stack 22
  2347                           
  2348                           ;incstack = 0
  2349                           ;SetIsolationRelay@relayStateUC stored from wreg
  2350  00B296  0102               	movlb	2	; () banked
  2351  00B298  6F1B               	movwf	SetIsolationRelay@relayStateUC& (0+255),b
  2352                           
  2353                           ;mastercomms.c: 287: __nop();
  2354  00B29A  F000               	nop	
  2355                           
  2356                           ;mastercomms.c: 288: if(relayStateUC == 0b00000110){
  2357  00B29C  0E06               	movlw	6
  2358  00B29E  0102               	movlb	2	; () banked
  2359  00B2A0  191B               	xorwf	SetIsolationRelay@relayStateUC& (0+255),w,b
  2360  00B2A2  A4D8               	btfss	status,2,c
  2361  00B2A4  D006               	goto	l5409
  2362                           
  2363                           ; BSR set to: 2
  2364                           ;mastercomms.c: 289: statusFlagsUSLG &= ~0b000000010000000000000000;
  2365  00B2A6  0102               	movlb	2	; () banked
  2366  00B2A8  918C               	bcf	(_statusFlagsUSLG+2)& (0+255),0,b	;volatile
  2367                           
  2368                           ;mastercomms.c: 290: statusFlagsUSLG &= ~0b000100000000000000000000;
  2369  00B2AA  0102               	movlb	2	; () banked
  2370  00B2AC  998C               	bcf	(_statusFlagsUSLG+2)& (0+255),4,b	;volatile
  2371                           
  2372                           ; BSR set to: 2
  2373                           ;mastercomms.c: 291: LATAbits.LATA5 = 1;
  2374  00B2AE  8A89               	bsf	3977,5,c	;volatile
  2375                           
  2376                           ;mastercomms.c: 292: }else if(relayStateUC == 0b00000101){
  2377  00B2B0  0012               	return	
  2378  00B2B2                     l5409:
  2379                           
  2380                           ; BSR set to: 2
  2381  00B2B2  0E05               	movlw	5
  2382  00B2B4  0102               	movlb	2	; () banked
  2383  00B2B6  191B               	xorwf	SetIsolationRelay@relayStateUC& (0+255),w,b
  2384  00B2B8  A4D8               	btfss	status,2,c
  2385  00B2BA  0012               	return	
  2386                           
  2387                           ; BSR set to: 2
  2388                           ;mastercomms.c: 293: statusFlagsUSLG |= 0b000000010000000000000000;
  2389  00B2BC  0102               	movlb	2	; () banked
  2390  00B2BE  818C               	bsf	(_statusFlagsUSLG+2)& (0+255),0,b	;volatile
  2391                           
  2392                           ;mastercomms.c: 294: statusFlagsUSLG |= 0b000100000000000000000000;
  2393  00B2C0  0102               	movlb	2	; () banked
  2394  00B2C2  898C               	bsf	(_statusFlagsUSLG+2)& (0+255),4,b	;volatile
  2395                           
  2396                           ; BSR set to: 2
  2397                           ;mastercomms.c: 295: LATAbits.LATA5 = 0;
  2398  00B2C4  9A89               	bcf	3977,5,c	;volatile
  2399                           
  2400                           ; BSR set to: 2
  2401  00B2C6  0012               	return	
  2402  00B2C8                     __end_of_SetIsolationRelay:
  2403                           	opt stack 0
  2404                           tblptru	equ	0xFF8
  2405                           tblptrh	equ	0xFF7
  2406                           tblptrl	equ	0xFF6
  2407                           tablat	equ	0xFF5
  2408                           prodh	equ	0xFF4
  2409                           prodl	equ	0xFF3
  2410                           intcon	equ	0xFF2
  2411                           postinc0	equ	0xFEE
  2412                           wreg	equ	0xFE8
  2413                           indf2	equ	0xFDF
  2414                           postinc2	equ	0xFDE
  2415                           postdec2	equ	0xFDD
  2416                           fsr2h	equ	0xFDA
  2417                           fsr2l	equ	0xFD9
  2418                           status	equ	0xFD8
  2419                           
  2420 ;; *************** function _ReturnBoosterData *****************
  2421 ;; Defined at:
  2422 ;;		line 299 in file "mastercomms.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  commandValUC    1    wreg     unsigned char 
  2425 ;;  respSerialUS    2   64[BANK2 ] unsigned short 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  commandValUC    1  128[BANK5 ] unsigned char 
  2428 ;;  allRespUSA     62   62[BANK5 ] unsigned short [31]
  2429 ;;  partRespUSA    62    0[BANK5 ] unsigned short [31]
  2430 ;;  windowCompar    2  124[BANK5 ] unsigned short 
  2431 ;;  boosterCount    1  131[BANK5 ] unsigned char 
  2432 ;;  dataValUC       1  130[BANK5 ] unsigned char 
  2433 ;;  wordCountUC     1  129[BANK5 ] unsigned char 
  2434 ;;  respCountUC     1  127[BANK5 ] unsigned char 
  2435 ;;  iscStatusUC     1  126[BANK5 ] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  2445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2446 ;;      Locals:         0       0       0       0     132       0       0       0       0       0       0       0       
      +0       0
  2447 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2448 ;;      Totals:         0      11       0       0     132       0       0       0       0       0       0       0       
      +0       0
  2449 ;;Total ram usage:      143 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:   11
  2452 ;; This function calls:
  2453 ;;		_CreateAndSend
  2454 ;; This function is called by:
  2455 ;;		_ProcessMasterComms
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text9
  2460  0089FC                     __ptext9:
  2461                           	opt stack 0
  2462  0089FC                     _ReturnBoosterData:
  2463                           	opt stack 18
  2464                           
  2465                           ; BSR set to: 2
  2466                           ;incstack = 0
  2467                           ;ReturnBoosterData@commandValUC stored from wreg
  2468  0089FC  0105               	movlb	5	; () banked
  2469  0089FE  6F80               	movwf	ReturnBoosterData@commandValUC& (0+255),b
  2470                           
  2471                           ;mastercomms.c: 300: unsigned char boosterCountUC;
  2472                           ;mastercomms.c: 301: unsigned short allRespUSA[31];
  2473                           ;mastercomms.c: 302: unsigned short partRespUSA[31];
  2474                           ;mastercomms.c: 303: unsigned char iscStatusUC = 0;
  2475  008A00  0E00               	movlw	0
  2476  008A02  0105               	movlb	5	; () banked
  2477  008A04  6F7E               	movwf	ReturnBoosterData@iscStatusUC& (0+255),b
  2478                           
  2479                           ;mastercomms.c: 304: unsigned char wordCountUC;
  2480                           ;mastercomms.c: 305: unsigned char respCountUC;
  2481                           ;mastercomms.c: 306: unsigned char dataValUC;
  2482                           ;mastercomms.c: 307: unsigned short windowCompareUS = 0;
  2483  008A06  0E00               	movlw	0
  2484  008A08  0105               	movlb	5	; () banked
  2485  008A0A  6F7D               	movwf	(ReturnBoosterData@windowCompareUS+1)& (0+255),b
  2486  008A0C  0E00               	movlw	0
  2487  008A0E  6F7C               	movwf	ReturnBoosterData@windowCompareUS& (0+255),b
  2488                           
  2489                           ; BSR set to: 5
  2490                           ;mastercomms.c: 309: __nop();
  2491  008A10  F000               	nop	
  2492                           
  2493                           ;mastercomms.c: 311: if(statusFlagsUSLG & 0b000001000000000000000000){
  2494  008A12  0102               	movlb	2	; () banked
  2495  008A14  A58C               	btfss	(_statusFlagsUSLG+2)& (0+255),2,b	;volatile
  2496  008A16  D021               	goto	l6641
  2497                           
  2498                           ; BSR set to: 2
  2499                           ;mastercomms.c: 312: CreateAndSend(iscSerialUSG, respSerialUS, 0b00001000, 0, 0);
  2500  008A18  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  2501  008A1C  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  2502  008A20  C241  F239         	movff	ReturnBoosterData@respSerialUS,CreateAndSend@packetDestUS
  2503  008A24  C242  F23A         	movff	ReturnBoosterData@respSerialUS+1,CreateAndSend@packetDestUS+1
  2504  008A28  0E08               	movlw	8
  2505  008A2A  0102               	movlb	2	; () banked
  2506  008A2C  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  2507  008A2E  0E00               	movlw	0
  2508  008A30  0102               	movlb	2	; () banked
  2509  008A32  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  2510  008A34  0E00               	movlw	0
  2511  008A36  0102               	movlb	2	; () banked
  2512  008A38  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  2513  008A3A  0E00               	movlw	0
  2514  008A3C  0102               	movlb	2	; () banked
  2515  008A3E  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  2516  008A40  ECA6  F055         	call	_CreateAndSend	;wreg free
  2517                           
  2518                           ;mastercomms.c: 313: return;
  2519  008A44  0012               	return	
  2520  008A46                     l6631:
  2521                           
  2522                           ;mastercomms.c: 318: dataValUC = 0;
  2523  008A46  0E00               	movlw	0
  2524  008A48  D005               	goto	L4
  2525  008A4A                     l6633:
  2526                           
  2527                           ; BSR set to: 5
  2528                           ;mastercomms.c: 321: dataValUC = 1;
  2529  008A4A  0E01               	movlw	1
  2530  008A4C  D003               	goto	L4
  2531  008A4E                     l6635:
  2532                           
  2533                           ; BSR set to: 5
  2534                           ;mastercomms.c: 324: dataValUC = 2;
  2535  008A4E  0E02               	movlw	2
  2536  008A50  D001               	goto	L4
  2537  008A52                     l6637:
  2538                           
  2539                           ; BSR set to: 5
  2540                           ;mastercomms.c: 327: dataValUC = 3;
  2541  008A52  0E03               	movlw	3
  2542  008A54                     L4:
  2543  008A54  0105               	movlb	5	; () banked
  2544  008A56  6F82               	movwf	ReturnBoosterData@dataValUC& (0+255),b
  2545                           
  2546                           ; BSR set to: 5
  2547                           ;mastercomms.c: 329: }
  2548                           
  2549                           ;mastercomms.c: 328: break;
  2550  008A58  D00E               	goto	l6643
  2551  008A5A                     l6641:
  2552  008A5A  0105               	movlb	5	; () banked
  2553  008A5C  5180               	movf	ReturnBoosterData@commandValUC& (0+255),w,b
  2554                           
  2555                           ; Switch size 1, requested type "space"
  2556                           ; Number of cases is 4, Range of values is 0 to 3
  2557                           ; switch strategies available:
  2558                           ; Name         Instructions Cycles
  2559                           ; simple_byte           13     7 (average)
  2560                           ;	Chosen strategy is simple_byte
  2561  008A5E  0A00               	xorlw	0	; case 0
  2562  008A60  B4D8               	btfsc	status,2,c
  2563  008A62  D7F1               	goto	l6631
  2564  008A64  0A01               	xorlw	1	; case 1
  2565  008A66  B4D8               	btfsc	status,2,c
  2566  008A68  D7F0               	goto	l6633
  2567  008A6A  0A03               	xorlw	3	; case 2
  2568  008A6C  B4D8               	btfsc	status,2,c
  2569  008A6E  D7EF               	goto	l6635
  2570  008A70  0A01               	xorlw	1	; case 3
  2571  008A72  B4D8               	btfsc	status,2,c
  2572  008A74  D7EE               	goto	l6637
  2573  008A76                     l6643:
  2574                           
  2575                           ; BSR set to: 5
  2576                           ;mastercomms.c: 331: for(boosterCountUC = 0; boosterCountUC < 31; boosterCountUC++){
  2577  008A76  0E00               	movlw	0
  2578  008A78  0105               	movlb	5	; () banked
  2579  008A7A  6F83               	movwf	ReturnBoosterData@boosterCountUC& (0+255),b
  2580  008A7C                     l6645:
  2581                           
  2582                           ; BSR set to: 5
  2583  008A7C  0E1E               	movlw	30
  2584  008A7E  0105               	movlb	5	; () banked
  2585  008A80  6583               	cpfsgt	ReturnBoosterData@boosterCountUC& (0+255),b
  2586  008A82  D001               	goto	l6649
  2587  008A84  D01D               	goto	l6655
  2588  008A86                     l6649:
  2589                           
  2590                           ; BSR set to: 5
  2591                           ;mastercomms.c: 332: allRespUSA[boosterCountUC] = 0;
  2592  008A86  0105               	movlb	5	; () banked
  2593  008A88  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2594  008A8A  0D02               	mullw	2
  2595  008A8C  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  2596  008A8E  24F3               	addwf	prodl,w,c
  2597  008A90  6ED9               	movwf	fsr2l,c
  2598  008A92  0E05               	movlw	high ReturnBoosterData@allRespUSA
  2599  008A94  20F4               	addwfc	prodh,w,c
  2600  008A96  6EDA               	movwf	fsr2h,c
  2601  008A98  0E00               	movlw	0
  2602  008A9A  6EDE               	movwf	postinc2,c
  2603  008A9C  0E00               	movlw	0
  2604  008A9E  6EDD               	movwf	postdec2,c
  2605                           
  2606                           ;mastercomms.c: 333: partRespUSA[boosterCountUC] = 0;
  2607  008AA0  0105               	movlb	5	; () banked
  2608  008AA2  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2609  008AA4  0D02               	mullw	2
  2610  008AA6  0E00               	movlw	low ReturnBoosterData@partRespUSA
  2611  008AA8  24F3               	addwf	prodl,w,c
  2612  008AAA  6ED9               	movwf	fsr2l,c
  2613  008AAC  0E05               	movlw	high ReturnBoosterData@partRespUSA
  2614  008AAE  20F4               	addwfc	prodh,w,c
  2615  008AB0  6EDA               	movwf	fsr2h,c
  2616  008AB2  0E00               	movlw	0
  2617  008AB4  6EDE               	movwf	postinc2,c
  2618  008AB6  0E00               	movlw	0
  2619  008AB8  6EDD               	movwf	postdec2,c
  2620                           
  2621                           ; BSR set to: 5
  2622  008ABA  0105               	movlb	5	; () banked
  2623  008ABC  2B83               	incf	ReturnBoosterData@boosterCountUC& (0+255),f,b
  2624  008ABE  D7DE               	goto	l6645
  2625  008AC0                     l6655:
  2626                           
  2627                           ; BSR set to: 5
  2628                           ;mastercomms.c: 334: }
  2629                           ;mastercomms.c: 336: allRespUSA[0] = 0b0100000000000000;
  2630  008AC0  0E40               	movlw	64
  2631  008AC2  0105               	movlb	5	; () banked
  2632  008AC4  6F3F               	movwf	(ReturnBoosterData@allRespUSA+1)& (0+255),b
  2633  008AC6  0E00               	movlw	0
  2634  008AC8  6F3E               	movwf	ReturnBoosterData@allRespUSA& (0+255),b
  2635                           
  2636                           ;mastercomms.c: 337: if(dataValUC == 0){
  2637  008ACA  0105               	movlb	5	; () banked
  2638  008ACC  5182               	movf	ReturnBoosterData@dataValUC& (0+255),w,b
  2639  008ACE  0105               	movlb	5	; () banked
  2640  008AD0  A4D8               	btfss	status,2,c
  2641  008AD2  D018               	goto	l6675
  2642                           
  2643                           ; BSR set to: 5
  2644                           ;mastercomms.c: 338: if(statusFlagsUSLG & 0b000000000000000000100000)
  2645  008AD4  0102               	movlb	2	; () banked
  2646  008AD6  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
  2647  008AD8  D002               	goto	l6661
  2648                           
  2649                           ; BSR set to: 2
  2650                           ;mastercomms.c: 339: iscStatusUC |= 0b10000000;
  2651  008ADA  0105               	movlb	5	; () banked
  2652  008ADC  8F7E               	bsf	ReturnBoosterData@iscStatusUC& (0+255),7,b
  2653  008ADE                     l6661:
  2654                           
  2655                           ;mastercomms.c: 340: if(statusFlagsUSLG & 0b000000010000000000000000)
  2656  008ADE  0102               	movlb	2	; () banked
  2657  008AE0  A18C               	btfss	(_statusFlagsUSLG+2)& (0+255),0,b	;volatile
  2658  008AE2  D002               	goto	l6665
  2659                           
  2660                           ; BSR set to: 2
  2661                           ;mastercomms.c: 341: iscStatusUC |= 0b01000000;
  2662  008AE4  0105               	movlb	5	; () banked
  2663  008AE6  8D7E               	bsf	ReturnBoosterData@iscStatusUC& (0+255),6,b
  2664  008AE8                     l6665:
  2665                           
  2666                           ;mastercomms.c: 344: if(statusFlagsUSLG & 0b000000000000000001000000)
  2667  008AE8  0102               	movlb	2	; () banked
  2668  008AEA  AD8A               	btfss	_statusFlagsUSLG& (0+255),6,b	;volatile
  2669  008AEC  D002               	goto	l6669
  2670                           
  2671                           ; BSR set to: 2
  2672                           ;mastercomms.c: 345: iscStatusUC |= 0b00010000;
  2673  008AEE  0105               	movlb	5	; () banked
  2674  008AF0  897E               	bsf	ReturnBoosterData@iscStatusUC& (0+255),4,b
  2675  008AF2                     l6669:
  2676                           
  2677                           ;mastercomms.c: 346: if(statusFlagsUSLG & 0b000000000000000000010000)
  2678  008AF2  0102               	movlb	2	; () banked
  2679  008AF4  A98A               	btfss	_statusFlagsUSLG& (0+255),4,b	;volatile
  2680  008AF6  D002               	goto	l6673
  2681                           
  2682                           ; BSR set to: 2
  2683                           ;mastercomms.c: 347: iscStatusUC |= 0b00001000;
  2684  008AF8  0105               	movlb	5	; () banked
  2685  008AFA  877E               	bsf	ReturnBoosterData@iscStatusUC& (0+255),3,b
  2686  008AFC                     l6673:
  2687                           
  2688                           ;mastercomms.c: 348: allRespUSA[0] |= iscStatusUC;
  2689  008AFC  0105               	movlb	5	; () banked
  2690  008AFE  517E               	movf	ReturnBoosterData@iscStatusUC& (0+255),w,b
  2691  008B00  0105               	movlb	5	; () banked
  2692  008B02  133E               	iorwf	ReturnBoosterData@allRespUSA& (0+255),f,b
  2693  008B04                     l6675:
  2694                           
  2695                           ; BSR set to: 5
  2696                           ;mastercomms.c: 349: }
  2697                           ;mastercomms.c: 351: for(boosterCountUC = 0, wordCountUC = 1; boosterCountUC < 30; boost
      +                          erCountUC++){
  2698  008B04  0E00               	movlw	0
  2699  008B06  0105               	movlb	5	; () banked
  2700  008B08  6F83               	movwf	ReturnBoosterData@boosterCountUC& (0+255),b
  2701                           
  2702                           ; BSR set to: 5
  2703  008B0A  0E01               	movlw	1
  2704  008B0C  0105               	movlb	5	; () banked
  2705  008B0E  6F81               	movwf	ReturnBoosterData@wordCountUC& (0+255),b
  2706  008B10                     l6679:
  2707                           
  2708                           ; BSR set to: 5
  2709  008B10  0E1D               	movlw	29
  2710  008B12  0105               	movlb	5	; () banked
  2711  008B14  6583               	cpfsgt	ReturnBoosterData@boosterCountUC& (0+255),b
  2712  008B16  D001               	goto	l6683
  2713  008B18  D063               	goto	l920
  2714  008B1A                     l6683:
  2715                           
  2716                           ; BSR set to: 5
  2717                           ;mastercomms.c: 352: if(boosterCommsDataSerial[boosterCountUC]){
  2718  008B1A  0105               	movlb	5	; () banked
  2719  008B1C  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2720  008B1E  0D02               	mullw	2
  2721  008B20  0E00               	movlw	low _boosterCommsDataSerial
  2722  008B22  24F3               	addwf	prodl,w,c
  2723  008B24  6ED9               	movwf	fsr2l,c
  2724  008B26  0E03               	movlw	high _boosterCommsDataSerial
  2725  008B28  20F4               	addwfc	prodh,w,c
  2726  008B2A  6EDA               	movwf	fsr2h,c
  2727  008B2C  50DE               	movf	postinc2,w,c
  2728  008B2E  10DE               	iorwf	postinc2,w,c
  2729  008B30  B4D8               	btfsc	status,2,c
  2730  008B32  D053               	goto	l6689
  2731                           
  2732                           ; BSR set to: 5
  2733                           ;mastercomms.c: 353: allRespUSA[wordCountUC++] = 0b0010000000000000 |
  2734                           ;mastercomms.c: 354: ((unsigned short) (boosterCountUC+1) << 8) |
  2735                           ;mastercomms.c: 355: boosterCommsData[dataValUC][boosterCountUC];
  2736  008B34  0E00               	movlw	0
  2737  008B36  0102               	movlb	2	; () banked
  2738  008B38  6F43               	movwf	??_ReturnBoosterData& (0+255),b
  2739  008B3A  0E20               	movlw	32
  2740  008B3C  0102               	movlb	2	; () banked
  2741  008B3E  6F44               	movwf	(??_ReturnBoosterData+1)& (0+255),b
  2742  008B40  0E00               	movlw	0
  2743  008B42  0102               	movlb	2	; () banked
  2744  008B44  6F45               	movwf	(??_ReturnBoosterData+2)& (0+255),b
  2745  008B46  0E01               	movlw	1
  2746  008B48  0102               	movlb	2	; () banked
  2747  008B4A  6F46               	movwf	(??_ReturnBoosterData+3)& (0+255),b
  2748  008B4C  0105               	movlb	5	; () banked
  2749  008B4E  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2750  008B50  0102               	movlb	2	; () banked
  2751  008B52  6F48               	movwf	(??_ReturnBoosterData+5)& (0+255),b
  2752  008B54  6B47               	clrf	(??_ReturnBoosterData+4)& (0+255),b
  2753  008B56  0102               	movlb	2	; () banked
  2754  008B58  5145               	movf	(??_ReturnBoosterData+2)& (0+255),w,b
  2755  008B5A  0102               	movlb	2	; () banked
  2756  008B5C  2747               	addwf	(??_ReturnBoosterData+4)& (0+255),f,b
  2757  008B5E  0102               	movlb	2	; () banked
  2758  008B60  5146               	movf	(??_ReturnBoosterData+3)& (0+255),w,b
  2759  008B62  0102               	movlb	2	; () banked
  2760  008B64  2348               	addwfc	(??_ReturnBoosterData+5)& (0+255),f,b
  2761  008B66  0105               	movlb	5	; () banked
  2762  008B68  5182               	movf	ReturnBoosterData@dataValUC& (0+255),w,b
  2763  008B6A  0D1E               	mullw	30
  2764  008B6C  0E00               	movlw	low _boosterCommsData
  2765  008B6E  0102               	movlb	2	; () banked
  2766  008B70  6F49               	movwf	(??_ReturnBoosterData+6)& (0+255),b
  2767  008B72  0E04               	movlw	high _boosterCommsData
  2768  008B74  0102               	movlb	2	; () banked
  2769  008B76  6F4A               	movwf	(??_ReturnBoosterData+7)& (0+255),b
  2770  008B78  50F3               	movf	prodl,w,c
  2771  008B7A  0102               	movlb	2	; () banked
  2772  008B7C  2749               	addwf	(??_ReturnBoosterData+6)& (0+255),f,b
  2773  008B7E  50F4               	movf	prodh,w,c
  2774  008B80  0102               	movlb	2	; () banked
  2775  008B82  234A               	addwfc	(??_ReturnBoosterData+7)& (0+255),f,b
  2776  008B84  0105               	movlb	5	; () banked
  2777  008B86  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2778  008B88  0D01               	mullw	1
  2779  008B8A  50F3               	movf	prodl,w,c
  2780  008B8C  0102               	movlb	2	; () banked
  2781  008B8E  2549               	addwf	(??_ReturnBoosterData+6)& (0+255),w,b
  2782  008B90  6ED9               	movwf	fsr2l,c
  2783  008B92  50F4               	movf	prodh,w,c
  2784  008B94  0102               	movlb	2	; () banked
  2785  008B96  214A               	addwfc	(??_ReturnBoosterData+7)& (0+255),w,b
  2786  008B98  6EDA               	movwf	fsr2h,c
  2787  008B9A  50DF               	movf	indf2,w,c
  2788  008B9C  0102               	movlb	2	; () banked
  2789  008B9E  6F4B               	movwf	(??_ReturnBoosterData+8)& (0+255),b
  2790  008BA0  0102               	movlb	2	; () banked
  2791  008BA2  514B               	movf	(??_ReturnBoosterData+8)& (0+255),w,b
  2792  008BA4  0102               	movlb	2	; () banked
  2793  008BA6  1347               	iorwf	(??_ReturnBoosterData+4)& (0+255),f,b
  2794  008BA8  0E00               	movlw	0
  2795  008BAA  1348               	iorwf	(??_ReturnBoosterData+5)& (0+255),f,b
  2796  008BAC  0102               	movlb	2	; () banked
  2797  008BAE  5143               	movf	??_ReturnBoosterData& (0+255),w,b
  2798  008BB0  0102               	movlb	2	; () banked
  2799  008BB2  1347               	iorwf	(??_ReturnBoosterData+4)& (0+255),f,b
  2800  008BB4  0102               	movlb	2	; () banked
  2801  008BB6  5144               	movf	(??_ReturnBoosterData+1)& (0+255),w,b
  2802  008BB8  0102               	movlb	2	; () banked
  2803  008BBA  1348               	iorwf	(??_ReturnBoosterData+5)& (0+255),f,b
  2804  008BBC  0105               	movlb	5	; () banked
  2805  008BBE  5181               	movf	ReturnBoosterData@wordCountUC& (0+255),w,b
  2806  008BC0  0D02               	mullw	2
  2807  008BC2  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  2808  008BC4  24F3               	addwf	prodl,w,c
  2809  008BC6  6ED9               	movwf	fsr2l,c
  2810  008BC8  0E05               	movlw	high ReturnBoosterData@allRespUSA
  2811  008BCA  20F4               	addwfc	prodh,w,c
  2812  008BCC  6EDA               	movwf	fsr2h,c
  2813  008BCE  C247  FFDE         	movff	??_ReturnBoosterData+4,postinc2
  2814  008BD2  C248  FFDD         	movff	??_ReturnBoosterData+5,postdec2
  2815                           
  2816                           ; BSR set to: 5
  2817  008BD6  0105               	movlb	5	; () banked
  2818  008BD8  2B81               	incf	ReturnBoosterData@wordCountUC& (0+255),f,b
  2819  008BDA                     l6689:
  2820                           
  2821                           ; BSR set to: 5
  2822  008BDA  0105               	movlb	5	; () banked
  2823  008BDC  2B83               	incf	ReturnBoosterData@boosterCountUC& (0+255),f,b
  2824  008BDE  D798               	goto	l6679
  2825  008BE0                     l920:
  2826                           
  2827                           ; BSR set to: 5
  2828                           ;mastercomms.c: 356: }
  2829                           ;mastercomms.c: 357: }
  2830                           ;mastercomms.c: 359: __nop();
  2831  008BE0  F000               	nop	
  2832                           
  2833                           ;mastercomms.c: 361: if(masterFlagsUCG & 0b00000100){
  2834  008BE2  0102               	movlb	2	; () banked
  2835  008BE4  A593               	btfss	_masterFlagsUCG& (0+255),2,b
  2836  008BE6  D01A               	goto	l6697
  2837                           
  2838                           ; BSR set to: 2
  2839                           ;mastercomms.c: 362: commandValUC |= 0b01000000;
  2840  008BE8  0105               	movlb	5	; () banked
  2841  008BEA  8D80               	bsf	ReturnBoosterData@commandValUC& (0+255),6,b
  2842                           
  2843                           ; BSR set to: 5
  2844                           ;mastercomms.c: 363: CreateAndSend(iscSerialUSG, respSerialUS, commandValUC, wordCountUC
      +                           * 2, (char *) allRespUSA);
  2845  008BEC  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  2846  008BF0  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  2847  008BF4  C241  F239         	movff	ReturnBoosterData@respSerialUS,CreateAndSend@packetDestUS
  2848  008BF8  C242  F23A         	movff	ReturnBoosterData@respSerialUS+1,CreateAndSend@packetDestUS+1
  2849  008BFC  C580  F23B         	movff	ReturnBoosterData@commandValUC,CreateAndSend@commandUC
  2850  008C00  0105               	movlb	5	; () banked
  2851  008C02  5181               	movf	ReturnBoosterData@wordCountUC& (0+255),w,b
  2852  008C04  0D02               	mullw	2
  2853  008C06  CFF3 F23C          	movff	prodl,CreateAndSend@dataLenUC
  2854  008C0A  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  2855  008C0C  0102               	movlb	2	; () banked
  2856  008C0E  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  2857  008C10  0E05               	movlw	high ReturnBoosterData@allRespUSA
  2858  008C12  0102               	movlb	2	; () banked
  2859  008C14  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  2860  008C16  ECA6  F055         	call	_CreateAndSend	;wreg free
  2861                           
  2862                           ;mastercomms.c: 364: }else{
  2863  008C1A  D0BF               	goto	l6715
  2864  008C1C                     l6697:
  2865                           
  2866                           ;mastercomms.c: 365: if(commandValUC != 0b00000000)
  2867  008C1C  0105               	movlb	5	; () banked
  2868  008C1E  5180               	movf	ReturnBoosterData@commandValUC& (0+255),w,b
  2869  008C20  0105               	movlb	5	; () banked
  2870  008C22  B4D8               	btfsc	status,2,c
  2871  008C24  D005               	goto	l924
  2872                           
  2873                           ; BSR set to: 5
  2874                           ;mastercomms.c: 366: windowCompareUS = 10;
  2875  008C26  0E00               	movlw	0
  2876  008C28  0105               	movlb	5	; () banked
  2877  008C2A  6F7D               	movwf	(ReturnBoosterData@windowCompareUS+1)& (0+255),b
  2878  008C2C  0E0A               	movlw	10
  2879  008C2E  6F7C               	movwf	ReturnBoosterData@windowCompareUS& (0+255),b
  2880  008C30                     l924:
  2881                           
  2882                           ; BSR set to: 5
  2883                           ;mastercomms.c: 367: for(boosterCountUC = 0, respCountUC = 0; boosterCountUC < wordCount
      +                          UC; boosterCountUC++){
  2884  008C30  0E00               	movlw	0
  2885  008C32  0105               	movlb	5	; () banked
  2886  008C34  6F83               	movwf	ReturnBoosterData@boosterCountUC& (0+255),b
  2887  008C36  0E00               	movlw	0
  2888  008C38  0105               	movlb	5	; () banked
  2889  008C3A  6F7F               	movwf	ReturnBoosterData@respCountUC& (0+255),b
  2890  008C3C  D091               	goto	l6711
  2891  008C3E                     l6701:
  2892                           
  2893                           ; BSR set to: 5
  2894                           ;mastercomms.c: 368: if((pastBoosterValuesUSAG[dataValUC][boosterCountUC] < (allRespUSA[
      +                          boosterCountUC] - windowCompareUS)) ||
  2895                           ;mastercomms.c: 369: (pastBoosterValuesUSAG[dataValUC][boosterCountUC] > (allRespUSA[boo
      +                          sterCountUC] + windowCompareUS))){
  2896  008C3E  0105               	movlb	5	; () banked
  2897  008C40  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2898  008C42  0D02               	mullw	2
  2899  008C44  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  2900  008C46  24F3               	addwf	prodl,w,c
  2901  008C48  6ED9               	movwf	fsr2l,c
  2902  008C4A  0E05               	movlw	high ReturnBoosterData@allRespUSA
  2903  008C4C  20F4               	addwfc	prodh,w,c
  2904  008C4E  6EDA               	movwf	fsr2h,c
  2905  008C50  CFDE F243          	movff	postinc2,??_ReturnBoosterData
  2906  008C54  CFDD F244          	movff	postdec2,??_ReturnBoosterData+1
  2907  008C58  C57C  F245         	movff	ReturnBoosterData@windowCompareUS,??_ReturnBoosterData+2
  2908  008C5C  C57D  F246         	movff	ReturnBoosterData@windowCompareUS+1,??_ReturnBoosterData+3
  2909  008C60  0102               	movlb	2	; () banked
  2910  008C62  1F45               	comf	(??_ReturnBoosterData+2)& (0+255),f,b
  2911  008C64  1F46               	comf	(??_ReturnBoosterData+3)& (0+255),f,b
  2912  008C66  4B45               	infsnz	(??_ReturnBoosterData+2)& (0+255),f,b
  2913  008C68  2B46               	incf	(??_ReturnBoosterData+3)& (0+255),f,b
  2914  008C6A  0102               	movlb	2	; () banked
  2915  008C6C  5143               	movf	??_ReturnBoosterData& (0+255),w,b
  2916  008C6E  0102               	movlb	2	; () banked
  2917  008C70  2745               	addwf	(??_ReturnBoosterData+2)& (0+255),f,b
  2918  008C72  0102               	movlb	2	; () banked
  2919  008C74  5144               	movf	(??_ReturnBoosterData+1)& (0+255),w,b
  2920  008C76  0102               	movlb	2	; () banked
  2921  008C78  2346               	addwfc	(??_ReturnBoosterData+3)& (0+255),f,b
  2922  008C7A  0105               	movlb	5	; () banked
  2923  008C7C  5182               	movf	ReturnBoosterData@dataValUC& (0+255),w,b
  2924  008C7E  0D3E               	mullw	62
  2925  008C80  0E00               	movlw	low _pastBoosterValuesUSAG
  2926  008C82  0102               	movlb	2	; () banked
  2927  008C84  6F47               	movwf	(??_ReturnBoosterData+4)& (0+255),b
  2928  008C86  0E06               	movlw	high _pastBoosterValuesUSAG
  2929  008C88  0102               	movlb	2	; () banked
  2930  008C8A  6F48               	movwf	(??_ReturnBoosterData+5)& (0+255),b
  2931  008C8C  50F3               	movf	prodl,w,c
  2932  008C8E  0102               	movlb	2	; () banked
  2933  008C90  2747               	addwf	(??_ReturnBoosterData+4)& (0+255),f,b
  2934  008C92  50F4               	movf	prodh,w,c
  2935  008C94  0102               	movlb	2	; () banked
  2936  008C96  2348               	addwfc	(??_ReturnBoosterData+5)& (0+255),f,b
  2937  008C98  0105               	movlb	5	; () banked
  2938  008C9A  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2939  008C9C  0D02               	mullw	2
  2940  008C9E  50F3               	movf	prodl,w,c
  2941  008CA0  0102               	movlb	2	; () banked
  2942  008CA2  2547               	addwf	(??_ReturnBoosterData+4)& (0+255),w,b
  2943  008CA4  6ED9               	movwf	fsr2l,c
  2944  008CA6  50F4               	movf	prodh,w,c
  2945  008CA8  0102               	movlb	2	; () banked
  2946  008CAA  2148               	addwfc	(??_ReturnBoosterData+5)& (0+255),w,b
  2947  008CAC  6EDA               	movwf	fsr2h,c
  2948  008CAE  0102               	movlb	2	; () banked
  2949  008CB0  5145               	movf	(??_ReturnBoosterData+2)& (0+255),w,b
  2950  008CB2  5CDE               	subwf	postinc2,w,c
  2951  008CB4  0102               	movlb	2	; () banked
  2952  008CB6  5146               	movf	(??_ReturnBoosterData+3)& (0+255),w,b
  2953  008CB8  58DE               	subwfb	postinc2,w,c
  2954  008CBA  A0D8               	btfss	status,0,c
  2955  008CBC  D037               	goto	l6705
  2956                           
  2957                           ; BSR set to: 2
  2958  008CBE  0105               	movlb	5	; () banked
  2959  008CC0  5182               	movf	ReturnBoosterData@dataValUC& (0+255),w,b
  2960  008CC2  0D3E               	mullw	62
  2961  008CC4  0E00               	movlw	low _pastBoosterValuesUSAG
  2962  008CC6  0102               	movlb	2	; () banked
  2963  008CC8  6F43               	movwf	??_ReturnBoosterData& (0+255),b
  2964  008CCA  0E06               	movlw	high _pastBoosterValuesUSAG
  2965  008CCC  0102               	movlb	2	; () banked
  2966  008CCE  6F44               	movwf	(??_ReturnBoosterData+1)& (0+255),b
  2967  008CD0  50F3               	movf	prodl,w,c
  2968  008CD2  0102               	movlb	2	; () banked
  2969  008CD4  2743               	addwf	??_ReturnBoosterData& (0+255),f,b
  2970  008CD6  50F4               	movf	prodh,w,c
  2971  008CD8  0102               	movlb	2	; () banked
  2972  008CDA  2344               	addwfc	(??_ReturnBoosterData+1)& (0+255),f,b
  2973  008CDC  0105               	movlb	5	; () banked
  2974  008CDE  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2975  008CE0  0D02               	mullw	2
  2976  008CE2  50F3               	movf	prodl,w,c
  2977  008CE4  0102               	movlb	2	; () banked
  2978  008CE6  2543               	addwf	??_ReturnBoosterData& (0+255),w,b
  2979  008CE8  6ED9               	movwf	fsr2l,c
  2980  008CEA  50F4               	movf	prodh,w,c
  2981  008CEC  0102               	movlb	2	; () banked
  2982  008CEE  2144               	addwfc	(??_ReturnBoosterData+1)& (0+255),w,b
  2983  008CF0  6EDA               	movwf	fsr2h,c
  2984  008CF2  0105               	movlb	5	; () banked
  2985  008CF4  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2986  008CF6  0D02               	mullw	2
  2987  008CF8  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  2988  008CFA  24F3               	addwf	prodl,w,c
  2989  008CFC  6EE1               	movwf	fsr1l,c
  2990  008CFE  0E05               	movlw	high ReturnBoosterData@allRespUSA
  2991  008D00  20F4               	addwfc	prodh,w,c
  2992  008D02  6EE2               	movwf	fsr1h,c
  2993  008D04  CFE6 F247          	movff	postinc1,??_ReturnBoosterData+4
  2994  008D08  CFE5 F248          	movff	postdec1,??_ReturnBoosterData+5
  2995  008D0C  0105               	movlb	5	; () banked
  2996  008D0E  517C               	movf	ReturnBoosterData@windowCompareUS& (0+255),w,b
  2997  008D10  0102               	movlb	2	; () banked
  2998  008D12  2747               	addwf	(??_ReturnBoosterData+4)& (0+255),f,b
  2999  008D14  0105               	movlb	5	; () banked
  3000  008D16  517D               	movf	(ReturnBoosterData@windowCompareUS+1)& (0+255),w,b
  3001  008D18  0102               	movlb	2	; () banked
  3002  008D1A  2348               	addwfc	(??_ReturnBoosterData+5)& (0+255),f,b
  3003  008D1C  50DE               	movf	postinc2,w,c
  3004  008D1E  0102               	movlb	2	; () banked
  3005  008D20  5D47               	subwf	(??_ReturnBoosterData+4)& (0+255),w,b
  3006  008D22  50DE               	movf	postinc2,w,c
  3007  008D24  0102               	movlb	2	; () banked
  3008  008D26  5948               	subwfb	(??_ReturnBoosterData+5)& (0+255),w,b
  3009  008D28  B0D8               	btfsc	status,0,c
  3010  008D2A  D018               	goto	l6709
  3011  008D2C                     l6705:
  3012                           
  3013                           ; BSR set to: 2
  3014                           ;mastercomms.c: 370: partRespUSA[respCountUC++] = allRespUSA[boosterCountUC];
  3015  008D2C  0105               	movlb	5	; () banked
  3016  008D2E  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3017  008D30  0D02               	mullw	2
  3018  008D32  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  3019  008D34  24F3               	addwf	prodl,w,c
  3020  008D36  6ED9               	movwf	fsr2l,c
  3021  008D38  0E05               	movlw	high ReturnBoosterData@allRespUSA
  3022  008D3A  20F4               	addwfc	prodh,w,c
  3023  008D3C  6EDA               	movwf	fsr2h,c
  3024  008D3E  0105               	movlb	5	; () banked
  3025  008D40  517F               	movf	ReturnBoosterData@respCountUC& (0+255),w,b
  3026  008D42  0D02               	mullw	2
  3027  008D44  0E00               	movlw	low ReturnBoosterData@partRespUSA
  3028  008D46  24F3               	addwf	prodl,w,c
  3029  008D48  6EE1               	movwf	fsr1l,c
  3030  008D4A  0E05               	movlw	high ReturnBoosterData@partRespUSA
  3031  008D4C  20F4               	addwfc	prodh,w,c
  3032  008D4E  6EE2               	movwf	fsr1h,c
  3033  008D50  CFDE FFE6          	movff	postinc2,postinc1
  3034  008D54  CFDD FFE5          	movff	postdec2,postdec1
  3035                           
  3036                           ; BSR set to: 5
  3037  008D58  0105               	movlb	5	; () banked
  3038  008D5A  2B7F               	incf	ReturnBoosterData@respCountUC& (0+255),f,b
  3039  008D5C                     l6709:
  3040  008D5C  0105               	movlb	5	; () banked
  3041  008D5E  2B83               	incf	ReturnBoosterData@boosterCountUC& (0+255),f,b
  3042  008D60                     l6711:
  3043                           
  3044                           ; BSR set to: 5
  3045  008D60  0105               	movlb	5	; () banked
  3046  008D62  5181               	movf	ReturnBoosterData@wordCountUC& (0+255),w,b
  3047  008D64  0105               	movlb	5	; () banked
  3048  008D66  5D83               	subwf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3049  008D68  A0D8               	btfss	status,0,c
  3050  008D6A  D769               	goto	l6701
  3051                           
  3052                           ; BSR set to: 5
  3053                           ;mastercomms.c: 371: }
  3054                           ;mastercomms.c: 372: }
  3055                           ;mastercomms.c: 373: CreateAndSend(iscSerialUSG, respSerialUS, commandValUC, respCountUC
      +                           * 2, (char *) partRespUSA);
  3056                           
  3057                           ; BSR set to: 5
  3058  008D6C  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  3059  008D70  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  3060  008D74  C241  F239         	movff	ReturnBoosterData@respSerialUS,CreateAndSend@packetDestUS
  3061  008D78  C242  F23A         	movff	ReturnBoosterData@respSerialUS+1,CreateAndSend@packetDestUS+1
  3062  008D7C  C580  F23B         	movff	ReturnBoosterData@commandValUC,CreateAndSend@commandUC
  3063  008D80  0105               	movlb	5	; () banked
  3064  008D82  517F               	movf	ReturnBoosterData@respCountUC& (0+255),w,b
  3065  008D84  0D02               	mullw	2
  3066  008D86  CFF3 F23C          	movff	prodl,CreateAndSend@dataLenUC
  3067  008D8A  0E00               	movlw	low ReturnBoosterData@partRespUSA
  3068  008D8C  0102               	movlb	2	; () banked
  3069  008D8E  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  3070  008D90  0E05               	movlw	high ReturnBoosterData@partRespUSA
  3071  008D92  0102               	movlb	2	; () banked
  3072  008D94  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  3073  008D96  ECA6  F055         	call	_CreateAndSend	;wreg free
  3074  008D9A                     l6715:
  3075                           
  3076                           ;mastercomms.c: 374: }
  3077                           ;mastercomms.c: 376: for(boosterCountUC = 0; boosterCountUC < wordCountUC; boosterCountU
      +                          C++)
  3078  008D9A  0E00               	movlw	0
  3079  008D9C  0105               	movlb	5	; () banked
  3080  008D9E  6F83               	movwf	ReturnBoosterData@boosterCountUC& (0+255),b
  3081  008DA0  D029               	goto	l6721
  3082  008DA2                     l6717:
  3083                           
  3084                           ; BSR set to: 5
  3085                           ;mastercomms.c: 377: pastBoosterValuesUSAG[dataValUC][boosterCountUC] = allRespUSA[boost
      +                          erCountUC];
  3086  008DA2  0105               	movlb	5	; () banked
  3087  008DA4  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3088  008DA6  0D02               	mullw	2
  3089  008DA8  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  3090  008DAA  24F3               	addwf	prodl,w,c
  3091  008DAC  6ED9               	movwf	fsr2l,c
  3092  008DAE  0E05               	movlw	high ReturnBoosterData@allRespUSA
  3093  008DB0  20F4               	addwfc	prodh,w,c
  3094  008DB2  6EDA               	movwf	fsr2h,c
  3095  008DB4  0105               	movlb	5	; () banked
  3096  008DB6  5182               	movf	ReturnBoosterData@dataValUC& (0+255),w,b
  3097  008DB8  0D3E               	mullw	62
  3098  008DBA  0E00               	movlw	low _pastBoosterValuesUSAG
  3099  008DBC  0102               	movlb	2	; () banked
  3100  008DBE  6F43               	movwf	??_ReturnBoosterData& (0+255),b
  3101  008DC0  0E06               	movlw	high _pastBoosterValuesUSAG
  3102  008DC2  0102               	movlb	2	; () banked
  3103  008DC4  6F44               	movwf	(??_ReturnBoosterData+1)& (0+255),b
  3104  008DC6  50F3               	movf	prodl,w,c
  3105  008DC8  0102               	movlb	2	; () banked
  3106  008DCA  2743               	addwf	??_ReturnBoosterData& (0+255),f,b
  3107  008DCC  50F4               	movf	prodh,w,c
  3108  008DCE  0102               	movlb	2	; () banked
  3109  008DD0  2344               	addwfc	(??_ReturnBoosterData+1)& (0+255),f,b
  3110  008DD2  0105               	movlb	5	; () banked
  3111  008DD4  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3112  008DD6  0D02               	mullw	2
  3113  008DD8  50F3               	movf	prodl,w,c
  3114  008DDA  0102               	movlb	2	; () banked
  3115  008DDC  2543               	addwf	??_ReturnBoosterData& (0+255),w,b
  3116  008DDE  6EE1               	movwf	fsr1l,c
  3117  008DE0  50F4               	movf	prodh,w,c
  3118  008DE2  0102               	movlb	2	; () banked
  3119  008DE4  2144               	addwfc	(??_ReturnBoosterData+1)& (0+255),w,b
  3120  008DE6  6EE2               	movwf	fsr1h,c
  3121  008DE8  CFDE FFE6          	movff	postinc2,postinc1
  3122  008DEC  CFDD FFE5          	movff	postdec2,postdec1
  3123                           
  3124                           ; BSR set to: 2
  3125  008DF0  0105               	movlb	5	; () banked
  3126  008DF2  2B83               	incf	ReturnBoosterData@boosterCountUC& (0+255),f,b
  3127  008DF4                     l6721:
  3128                           
  3129                           ; BSR set to: 5
  3130  008DF4  0105               	movlb	5	; () banked
  3131  008DF6  5181               	movf	ReturnBoosterData@wordCountUC& (0+255),w,b
  3132  008DF8  0105               	movlb	5	; () banked
  3133  008DFA  5D83               	subwf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3134  008DFC  B0D8               	btfsc	status,0,c
  3135  008DFE  0012               	return	
  3136  008E00  D7D0               	goto	l6717
  3137  008E02                     __end_of_ReturnBoosterData:
  3138                           	opt stack 0
  3139                           tblptru	equ	0xFF8
  3140                           tblptrh	equ	0xFF7
  3141                           tblptrl	equ	0xFF6
  3142                           tablat	equ	0xFF5
  3143                           prodh	equ	0xFF4
  3144                           prodl	equ	0xFF3
  3145                           intcon	equ	0xFF2
  3146                           postinc0	equ	0xFEE
  3147                           wreg	equ	0xFE8
  3148                           postinc1	equ	0xFE6
  3149                           postdec1	equ	0xFE5
  3150                           fsr1h	equ	0xFE2
  3151                           fsr1l	equ	0xFE1
  3152                           indf2	equ	0xFDF
  3153                           postinc2	equ	0xFDE
  3154                           postdec2	equ	0xFDD
  3155                           fsr2h	equ	0xFDA
  3156                           fsr2l	equ	0xFD9
  3157                           status	equ	0xFD8
  3158                           
  3159 ;; *************** function _RetransmitMessageSt7540 *****************
  3160 ;; Defined at:
  3161 ;;		line 248 in file "ST7540.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  dataBuf         2   58[BANK2 ] PTR unsigned char 
  3166 ;;		 -> bufferRXST7540UCAG(75), 
  3167 ;;  packetDestUS    2   56[BANK2 ] unsigned short 
  3168 ;;  packetSource    2   54[BANK2 ] unsigned short 
  3169 ;;  packetDataLe    1   62[BANK2 ] unsigned char 
  3170 ;;  oldPacketNum    1   61[BANK2 ] unsigned char 
  3171 ;;  commandUC       1   60[BANK2 ] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3182 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;Total ram usage:        9 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:   10
  3188 ;; This function calls:
  3189 ;;		_CreateMessageST7540
  3190 ;;		_LineIdleST7540
  3191 ;;		_PacketDataST7540
  3192 ;;		_PacketReadParamST7540
  3193 ;;		_StartTransmitST7540
  3194 ;;		_TransmitBusyST7540
  3195 ;; This function is called by:
  3196 ;;		_ProcessMasterComms
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text10
  3201  00A90C                     __ptext10:
  3202                           	opt stack 0
  3203  00A90C                     _RetransmitMessageSt7540:
  3204                           	opt stack 19
  3205                           
  3206                           ;ST7540.c: 249: unsigned short packetSourceUS;
  3207                           ;ST7540.c: 250: unsigned short packetDestUS;
  3208                           ;ST7540.c: 251: unsigned char commandUC;
  3209                           ;ST7540.c: 252: unsigned char oldPacketNumberUC;
  3210                           ;ST7540.c: 254: unsigned char packetDataLenUC;
  3211                           ;ST7540.c: 255: char *dataBuf;
  3212                           ;ST7540.c: 257: oldPacketNumberUC = packetNumberUCG;
  3213                           
  3214                           ;incstack = 0
  3215  00A90C  C2A4  F23E         	movff	_packetNumberUCG,RetransmitMessageSt7540@oldPacketNumberUC
  3216                           
  3217                           ;ST7540.c: 259: packetSourceUS = PacketReadParamST7540(1);
  3218  00A910  0E01               	movlw	1
  3219  00A912  ECC9  F050         	call	_PacketReadParamST7540
  3220  00A916  C230  F237         	movff	?_PacketReadParamST7540,RetransmitMessageSt7540@packetSourceUS
  3221  00A91A  C231  F238         	movff	?_PacketReadParamST7540+1,RetransmitMessageSt7540@packetSourceUS+1
  3222                           
  3223                           ;ST7540.c: 260: packetDestUS = PacketReadParamST7540(2);
  3224  00A91E  0E02               	movlw	2
  3225  00A920  ECC9  F050         	call	_PacketReadParamST7540
  3226  00A924  C230  F239         	movff	?_PacketReadParamST7540,RetransmitMessageSt7540@packetDestUS
  3227  00A928  C231  F23A         	movff	?_PacketReadParamST7540+1,RetransmitMessageSt7540@packetDestUS+1
  3228                           
  3229                           ;ST7540.c: 261: packetNumberUCG = PacketReadParamST7540(3);
  3230  00A92C  0E03               	movlw	3
  3231  00A92E  ECC9  F050         	call	_PacketReadParamST7540
  3232  00A932  0102               	movlb	2	; () banked
  3233  00A934  5130               	movf	?_PacketReadParamST7540& (0+255),w,b
  3234  00A936  0102               	movlb	2	; () banked
  3235  00A938  6FA4               	movwf	_packetNumberUCG& (0+255),b
  3236                           
  3237                           ;ST7540.c: 262: commandUC = PacketReadParamST7540(4);
  3238  00A93A  0E04               	movlw	4
  3239  00A93C  ECC9  F050         	call	_PacketReadParamST7540
  3240  00A940  0102               	movlb	2	; () banked
  3241  00A942  5130               	movf	?_PacketReadParamST7540& (0+255),w,b
  3242  00A944  0102               	movlb	2	; () banked
  3243  00A946  6F3D               	movwf	RetransmitMessageSt7540@commandUC& (0+255),b
  3244                           
  3245                           ;ST7540.c: 263: packetDataLenUC = PacketReadParamST7540(0);
  3246  00A948  0E00               	movlw	0
  3247  00A94A  ECC9  F050         	call	_PacketReadParamST7540
  3248  00A94E  0102               	movlb	2	; () banked
  3249  00A950  5130               	movf	?_PacketReadParamST7540& (0+255),w,b
  3250  00A952  0102               	movlb	2	; () banked
  3251  00A954  6F3F               	movwf	RetransmitMessageSt7540@packetDataLenUC& (0+255),b
  3252                           
  3253                           ; BSR set to: 2
  3254                           ;ST7540.c: 264: dataBuf = PacketDataST7540();
  3255  00A956  ECFC  F05A         	call	_PacketDataST7540	;wreg free
  3256  00A95A  C21B  F23B         	movff	?_PacketDataST7540,RetransmitMessageSt7540@dataBuf
  3257  00A95E  C21C  F23C         	movff	?_PacketDataST7540+1,RetransmitMessageSt7540@dataBuf+1
  3258                           
  3259                           ;ST7540.c: 266: CreateMessageST7540(packetSourceUS, packetDestUS, commandUC, packetDataL
      +                          enUC, dataBuf);
  3260  00A962  C237  F228         	movff	RetransmitMessageSt7540@packetSourceUS,CreateMessageST7540@packetSourceUS
  3261  00A966  C238  F229         	movff	RetransmitMessageSt7540@packetSourceUS+1,CreateMessageST7540@packetSourceUS+1
  3262  00A96A  C239  F22A         	movff	RetransmitMessageSt7540@packetDestUS,CreateMessageST7540@packetDestUS
  3263  00A96E  C23A  F22B         	movff	RetransmitMessageSt7540@packetDestUS+1,CreateMessageST7540@packetDestUS+1
  3264  00A972  C23D  F22C         	movff	RetransmitMessageSt7540@commandUC,CreateMessageST7540@commandUC
  3265  00A976  C23F  F22D         	movff	RetransmitMessageSt7540@packetDataLenUC,CreateMessageST7540@dataLenUC
  3266  00A97A  C23B  F22E         	movff	RetransmitMessageSt7540@dataBuf,CreateMessageST7540@dataBuf
  3267  00A97E  C23C  F22F         	movff	RetransmitMessageSt7540@dataBuf+1,CreateMessageST7540@dataBuf+1
  3268  00A982  ECC9  F04F         	call	_CreateMessageST7540	;wreg free
  3269  00A986                     l6595:
  3270  00A986  EC11  F05B         	call	_LineIdleST7540	;wreg free
  3271  00A98A  0900               	iorlw	0
  3272  00A98C  B4D8               	btfsc	status,2,c
  3273  00A98E  D7FB               	goto	l6595
  3274  00A990  EC29  F05B         	call	_TransmitBusyST7540	;wreg free
  3275  00A994  0900               	iorlw	0
  3276  00A996  A4D8               	btfss	status,2,c
  3277  00A998  D7F6               	goto	l6595
  3278                           
  3279                           ;ST7540.c: 268: StartTransmitST7540();
  3280  00A99A  EC8E  F05A         	call	_StartTransmitST7540	;wreg free
  3281                           
  3282                           ;ST7540.c: 270: packetNumberUCG = oldPacketNumberUC;
  3283  00A99E  C23E  F2A4         	movff	RetransmitMessageSt7540@oldPacketNumberUC,_packetNumberUCG
  3284  00A9A2  0012               	return		;funcret
  3285  00A9A4                     __end_of_RetransmitMessageSt7540:
  3286                           	opt stack 0
  3287                           tblptru	equ	0xFF8
  3288                           tblptrh	equ	0xFF7
  3289                           tblptrl	equ	0xFF6
  3290                           tablat	equ	0xFF5
  3291                           prodh	equ	0xFF4
  3292                           prodl	equ	0xFF3
  3293                           intcon	equ	0xFF2
  3294                           postinc0	equ	0xFEE
  3295                           wreg	equ	0xFE8
  3296                           postinc1	equ	0xFE6
  3297                           postdec1	equ	0xFE5
  3298                           fsr1h	equ	0xFE2
  3299                           fsr1l	equ	0xFE1
  3300                           indf2	equ	0xFDF
  3301                           postinc2	equ	0xFDE
  3302                           postdec2	equ	0xFDD
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           
  3307 ;; *************** function _PacketDataST7540 *****************
  3308 ;; Defined at:
  3309 ;;		line 352 in file "ST7540.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  2   26[BANK2 ] PTR unsigned char 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3323 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;Total ram usage:        2 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    7
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_RetransmitMessageSt7540
  3334 ;;		_SetSerialNumber
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text11
  3339  00B5F8                     __ptext11:
  3340                           	opt stack 0
  3341  00B5F8                     _PacketDataST7540:
  3342                           	opt stack 21
  3343                           
  3344                           ;ST7540.c: 353: return (bufferRXST7540UCAG + 7);
  3345                           
  3346                           ;incstack = 0
  3347  00B5F8  0EA2               	movlw	low (_bufferRXST7540UCAG+7)
  3348  00B5FA  0102               	movlb	2	; () banked
  3349  00B5FC  6F1B               	movwf	?_PacketDataST7540& (0+255),b
  3350  00B5FE  0E03               	movlw	high (_bufferRXST7540UCAG+7)
  3351  00B600  0102               	movlb	2	; () banked
  3352  00B602  6F1C               	movwf	(?_PacketDataST7540+1)& (0+255),b
  3353  00B604  0012               	return	
  3354  00B606                     __end_of_PacketDataST7540:
  3355                           	opt stack 0
  3356                           tblptru	equ	0xFF8
  3357                           tblptrh	equ	0xFF7
  3358                           tblptrl	equ	0xFF6
  3359                           tablat	equ	0xFF5
  3360                           prodh	equ	0xFF4
  3361                           prodl	equ	0xFF3
  3362                           intcon	equ	0xFF2
  3363                           postinc0	equ	0xFEE
  3364                           wreg	equ	0xFE8
  3365                           postinc1	equ	0xFE6
  3366                           postdec1	equ	0xFE5
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           indf2	equ	0xFDF
  3370                           postinc2	equ	0xFDE
  3371                           postdec2	equ	0xFDD
  3372                           fsr2h	equ	0xFDA
  3373                           fsr2l	equ	0xFD9
  3374                           status	equ	0xFD8
  3375                           
  3376 ;; *************** function _ReceiveNewDataST7540 *****************
  3377 ;; Defined at:
  3378 ;;		line 315 in file "ST7540.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  discardUC       1   26[BANK2 ] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3393 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3395 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3396 ;;Total ram usage:        1 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    7
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_ProcessMasterComms
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text12
  3407  00B56C                     __ptext12:
  3408                           	opt stack 0
  3409  00B56C                     _ReceiveNewDataST7540:
  3410                           	opt stack 22
  3411                           
  3412                           ;ST7540.c: 316: unsigned char discardUC;
  3413                           ;ST7540.c: 318: flagST7540UCG |= 2;
  3414                           
  3415                           ; BSR set to: 2
  3416                           ;incstack = 0
  3417  00B56C  0102               	movlb	2	; () banked
  3418  00B56E  83A8               	bsf	_flagST7540UCG& (0+255),1,b
  3419                           
  3420                           ;ST7540.c: 319: flagST7540UCG &= ~4;
  3421  00B570  0102               	movlb	2	; () banked
  3422  00B572  95A8               	bcf	_flagST7540UCG& (0+255),2,b
  3423                           
  3424                           ; BSR set to: 2
  3425                           ;ST7540.c: 320: discardUC = SSP2BUF;
  3426  00B574  CF75 F21B          	movff	3957,ReceiveNewDataST7540@discardUC	;volatile
  3427                           
  3428                           ; BSR set to: 2
  3429                           ;ST7540.c: 321: SSP2BUF = 0;
  3430  00B578  0E00               	movlw	0
  3431  00B57A  6E75               	movwf	3957,c	;volatile
  3432                           
  3433                           ; BSR set to: 2
  3434                           ;ST7540.c: 322: bufferRXNextUCG = 0;
  3435  00B57C  0E00               	movlw	0
  3436  00B57E  0102               	movlb	2	; () banked
  3437  00B580  6FA5               	movwf	_bufferRXNextUCG& (0+255),b
  3438                           
  3439                           ; BSR set to: 2
  3440  00B582  0012               	return		;funcret
  3441  00B584                     __end_of_ReceiveNewDataST7540:
  3442                           	opt stack 0
  3443                           tblptru	equ	0xFF8
  3444                           tblptrh	equ	0xFF7
  3445                           tblptrl	equ	0xFF6
  3446                           tablat	equ	0xFF5
  3447                           prodh	equ	0xFF4
  3448                           prodl	equ	0xFF3
  3449                           intcon	equ	0xFF2
  3450                           postinc0	equ	0xFEE
  3451                           wreg	equ	0xFE8
  3452                           postinc1	equ	0xFE6
  3453                           postdec1	equ	0xFE5
  3454                           fsr1h	equ	0xFE2
  3455                           fsr1l	equ	0xFE1
  3456                           indf2	equ	0xFDF
  3457                           postinc2	equ	0xFDE
  3458                           postdec2	equ	0xFDD
  3459                           fsr2h	equ	0xFDA
  3460                           fsr2l	equ	0xFD9
  3461                           status	equ	0xFD8
  3462                           
  3463 ;; *************** function _ProcessSerialCMD *****************
  3464 ;; Defined at:
  3465 ;;		line 395 in file "mastercomms.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  respSerialUS    2   64[BANK2 ] unsigned short 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  serialListUS   60   68[BANK2 ] unsigned short [30]
  3470 ;;  boosterCount    1  129[BANK2 ] unsigned char 
  3471 ;;  boosterIndex    1  128[BANK2 ] unsigned char 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3481 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;      Locals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3483 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3484 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3485 ;;Total ram usage:       66 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:   11
  3488 ;; This function calls:
  3489 ;;		_CreateAndSend
  3490 ;; This function is called by:
  3491 ;;		_ProcessMasterComms
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text13
  3496  00A432                     __ptext13:
  3497                           	opt stack 0
  3498  00A432                     _ProcessSerialCMD:
  3499                           	opt stack 18
  3500                           
  3501                           ;mastercomms.c: 396: unsigned short serialListUSA[30];
  3502                           ;mastercomms.c: 397: unsigned char boosterCountUC;
  3503                           ;mastercomms.c: 398: unsigned char boosterIndexUC;
  3504                           ;mastercomms.c: 400: if(statusFlagsUSLG & 0b000000100000000000000000)
  3505                           
  3506                           ; BSR set to: 2
  3507                           ;incstack = 0
  3508  00A432  0102               	movlb	2	; () banked
  3509  00A434  A38C               	btfss	(_statusFlagsUSLG+2)& (0+255),1,b	;volatile
  3510  00A436  D016               	goto	l6727
  3511                           
  3512                           ; BSR set to: 2
  3513                           ;mastercomms.c: 401: CreateAndSend(iscSerialUSG, respSerialUS, 0b00001111, 0, 0);
  3514  00A438  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  3515  00A43C  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  3516  00A440  C241  F239         	movff	ProcessSerialCMD@respSerialUS,CreateAndSend@packetDestUS
  3517  00A444  C242  F23A         	movff	ProcessSerialCMD@respSerialUS+1,CreateAndSend@packetDestUS+1
  3518  00A448  0E0F               	movlw	15
  3519  00A44A  0102               	movlb	2	; () banked
  3520  00A44C  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  3521  00A44E  0E00               	movlw	0
  3522  00A450  0102               	movlb	2	; () banked
  3523  00A452  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  3524  00A454  0E00               	movlw	0
  3525  00A456  0102               	movlb	2	; () banked
  3526  00A458  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  3527  00A45A  0E00               	movlw	0
  3528  00A45C  0102               	movlb	2	; () banked
  3529  00A45E  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  3530  00A460  ECA6  F055         	call	_CreateAndSend	;wreg free
  3531  00A464                     l6727:
  3532                           
  3533                           ;mastercomms.c: 403: for(boosterCountUC = 0, boosterIndexUC = 0; boosterCountUC < 30; bo
      +                          osterCountUC++){
  3534  00A464  0E00               	movlw	0
  3535  00A466  0102               	movlb	2	; () banked
  3536  00A468  6F82               	movwf	ProcessSerialCMD@boosterCountUC& (0+255),b
  3537                           
  3538                           ; BSR set to: 2
  3539  00A46A  0E00               	movlw	0
  3540  00A46C  0102               	movlb	2	; () banked
  3541  00A46E  6F81               	movwf	ProcessSerialCMD@boosterIndexUC& (0+255),b
  3542  00A470                     l6731:
  3543                           
  3544                           ; BSR set to: 2
  3545  00A470  0E1D               	movlw	29
  3546  00A472  0102               	movlb	2	; () banked
  3547  00A474  6582               	cpfsgt	ProcessSerialCMD@boosterCountUC& (0+255),b
  3548  00A476  D001               	goto	l6735
  3549  00A478  D028               	goto	l6745
  3550  00A47A                     l6735:
  3551                           
  3552                           ; BSR set to: 2
  3553                           ;mastercomms.c: 404: if(boosterCommsDataSerial[boosterCountUC])
  3554  00A47A  0102               	movlb	2	; () banked
  3555  00A47C  5182               	movf	ProcessSerialCMD@boosterCountUC& (0+255),w,b
  3556  00A47E  0D02               	mullw	2
  3557  00A480  0E00               	movlw	low _boosterCommsDataSerial
  3558  00A482  24F3               	addwf	prodl,w,c
  3559  00A484  6ED9               	movwf	fsr2l,c
  3560  00A486  0E03               	movlw	high _boosterCommsDataSerial
  3561  00A488  20F4               	addwfc	prodh,w,c
  3562  00A48A  6EDA               	movwf	fsr2h,c
  3563  00A48C  50DE               	movf	postinc2,w,c
  3564  00A48E  10DE               	iorwf	postinc2,w,c
  3565  00A490  B4D8               	btfsc	status,2,c
  3566  00A492  D018               	goto	l6741
  3567                           
  3568                           ; BSR set to: 2
  3569                           ;mastercomms.c: 405: serialListUSA[boosterIndexUC++] = boosterCommsDataSerial[boosterCou
      +                          ntUC];
  3570  00A494  0102               	movlb	2	; () banked
  3571  00A496  5182               	movf	ProcessSerialCMD@boosterCountUC& (0+255),w,b
  3572  00A498  0D02               	mullw	2
  3573  00A49A  0E00               	movlw	low _boosterCommsDataSerial
  3574  00A49C  24F3               	addwf	prodl,w,c
  3575  00A49E  6ED9               	movwf	fsr2l,c
  3576  00A4A0  0E03               	movlw	high _boosterCommsDataSerial
  3577  00A4A2  20F4               	addwfc	prodh,w,c
  3578  00A4A4  6EDA               	movwf	fsr2h,c
  3579  00A4A6  0102               	movlb	2	; () banked
  3580  00A4A8  5181               	movf	ProcessSerialCMD@boosterIndexUC& (0+255),w,b
  3581  00A4AA  0D02               	mullw	2
  3582  00A4AC  0E45               	movlw	low ProcessSerialCMD@serialListUSA
  3583  00A4AE  24F3               	addwf	prodl,w,c
  3584  00A4B0  6EE1               	movwf	fsr1l,c
  3585  00A4B2  0E02               	movlw	high ProcessSerialCMD@serialListUSA
  3586  00A4B4  20F4               	addwfc	prodh,w,c
  3587  00A4B6  6EE2               	movwf	fsr1h,c
  3588  00A4B8  CFDE FFE6          	movff	postinc2,postinc1
  3589  00A4BC  CFDD FFE5          	movff	postdec2,postdec1
  3590                           
  3591                           ; BSR set to: 2
  3592  00A4C0  0102               	movlb	2	; () banked
  3593  00A4C2  2B81               	incf	ProcessSerialCMD@boosterIndexUC& (0+255),f,b
  3594  00A4C4                     l6741:
  3595                           
  3596                           ; BSR set to: 2
  3597  00A4C4  0102               	movlb	2	; () banked
  3598  00A4C6  2B82               	incf	ProcessSerialCMD@boosterCountUC& (0+255),f,b
  3599  00A4C8  D7D3               	goto	l6731
  3600  00A4CA                     l6745:
  3601                           
  3602                           ; BSR set to: 2
  3603                           ;mastercomms.c: 406: }
  3604                           ;mastercomms.c: 407: statusFlagsUSLG &= ~0b000001000000000000000000;
  3605  00A4CA  0102               	movlb	2	; () banked
  3606  00A4CC  958C               	bcf	(_statusFlagsUSLG+2)& (0+255),2,b	;volatile
  3607                           
  3608                           ; BSR set to: 2
  3609                           ;mastercomms.c: 408: CreateAndSend(iscSerialUSG, respSerialUS, 0b00000111, boosterIndexU
      +                          C * 2, (char *) serialListUSA);
  3610  00A4CE  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  3611  00A4D2  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  3612  00A4D6  C241  F239         	movff	ProcessSerialCMD@respSerialUS,CreateAndSend@packetDestUS
  3613  00A4DA  C242  F23A         	movff	ProcessSerialCMD@respSerialUS+1,CreateAndSend@packetDestUS+1
  3614  00A4DE  0E07               	movlw	7
  3615  00A4E0  0102               	movlb	2	; () banked
  3616  00A4E2  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  3617  00A4E4  0102               	movlb	2	; () banked
  3618  00A4E6  5181               	movf	ProcessSerialCMD@boosterIndexUC& (0+255),w,b
  3619  00A4E8  0D02               	mullw	2
  3620  00A4EA  CFF3 F23C          	movff	prodl,CreateAndSend@dataLenUC
  3621  00A4EE  0E45               	movlw	low ProcessSerialCMD@serialListUSA
  3622  00A4F0  0102               	movlb	2	; () banked
  3623  00A4F2  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  3624  00A4F4  0E02               	movlw	high ProcessSerialCMD@serialListUSA
  3625  00A4F6  0102               	movlb	2	; () banked
  3626  00A4F8  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  3627  00A4FA  ECA6  F055         	call	_CreateAndSend	;wreg free
  3628  00A4FE  0012               	return		;funcret
  3629  00A500                     __end_of_ProcessSerialCMD:
  3630                           	opt stack 0
  3631                           tblptru	equ	0xFF8
  3632                           tblptrh	equ	0xFF7
  3633                           tblptrl	equ	0xFF6
  3634                           tablat	equ	0xFF5
  3635                           prodh	equ	0xFF4
  3636                           prodl	equ	0xFF3
  3637                           intcon	equ	0xFF2
  3638                           postinc0	equ	0xFEE
  3639                           wreg	equ	0xFE8
  3640                           postinc1	equ	0xFE6
  3641                           postdec1	equ	0xFE5
  3642                           fsr1h	equ	0xFE2
  3643                           fsr1l	equ	0xFE1
  3644                           indf2	equ	0xFDF
  3645                           postinc2	equ	0xFDE
  3646                           postdec2	equ	0xFDD
  3647                           fsr2h	equ	0xFDA
  3648                           fsr2l	equ	0xFD9
  3649                           status	equ	0xFD8
  3650                           
  3651 ;; *************** function _ProcessPingCMD *****************
  3652 ;; Defined at:
  3653 ;;		line 411 in file "mastercomms.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  respSerialUS    2   64[BANK2 ] unsigned short 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3667 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3670 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3671 ;;Total ram usage:        2 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:   11
  3674 ;; This function calls:
  3675 ;;		_CreateAndSend
  3676 ;; This function is called by:
  3677 ;;		_ProcessMasterComms
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text14
  3682  00B35C                     __ptext14:
  3683                           	opt stack 0
  3684  00B35C                     _ProcessPingCMD:
  3685                           	opt stack 18
  3686                           
  3687                           ;mastercomms.c: 412: CreateAndSend(iscSerialUSG, respSerialUS, 0b00101001, 0, 0);
  3688                           
  3689                           ;incstack = 0
  3690  00B35C  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  3691  00B360  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  3692  00B364  C241  F239         	movff	ProcessPingCMD@respSerialUS,CreateAndSend@packetDestUS
  3693  00B368  C242  F23A         	movff	ProcessPingCMD@respSerialUS+1,CreateAndSend@packetDestUS+1
  3694  00B36C  0E29               	movlw	41
  3695  00B36E  0102               	movlb	2	; () banked
  3696  00B370  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  3697  00B372  0E00               	movlw	0
  3698  00B374  0102               	movlb	2	; () banked
  3699  00B376  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  3700  00B378  0E00               	movlw	0
  3701  00B37A  0102               	movlb	2	; () banked
  3702  00B37C  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  3703  00B37E  0E00               	movlw	0
  3704  00B380  0102               	movlb	2	; () banked
  3705  00B382  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  3706  00B384  ECA6  F055         	call	_CreateAndSend	;wreg free
  3707  00B388  0012               	return		;funcret
  3708  00B38A                     __end_of_ProcessPingCMD:
  3709                           	opt stack 0
  3710                           tblptru	equ	0xFF8
  3711                           tblptrh	equ	0xFF7
  3712                           tblptrl	equ	0xFF6
  3713                           tablat	equ	0xFF5
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           intcon	equ	0xFF2
  3717                           postinc0	equ	0xFEE
  3718                           wreg	equ	0xFE8
  3719                           postinc1	equ	0xFE6
  3720                           postdec1	equ	0xFE5
  3721                           fsr1h	equ	0xFE2
  3722                           fsr1l	equ	0xFE1
  3723                           indf2	equ	0xFDF
  3724                           postinc2	equ	0xFDE
  3725                           postdec2	equ	0xFDD
  3726                           fsr2h	equ	0xFDA
  3727                           fsr2l	equ	0xFD9
  3728                           status	equ	0xFD8
  3729                           
  3730 ;; *************** function _CreateAndSend *****************
  3731 ;; Defined at:
  3732 ;;		line 380 in file "mastercomms.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  packetSource    2   54[BANK2 ] unsigned short 
  3735 ;;  packetDestUS    2   56[BANK2 ] unsigned short 
  3736 ;;  commandUC       1   58[BANK2 ] unsigned char 
  3737 ;;  dataLenUC       1   59[BANK2 ] unsigned char 
  3738 ;;  dataBuf         2   60[BANK2 ] PTR unsigned char 
  3739 ;;		 -> ProcessSerialCMD@serialListUSA(60), ReturnBoosterData@partRespUSA(62), ReturnBoosterData@allRespUSA(62), NULL(0)
      +, 
  3740 ;;		 -> iscSerialUSG(2), 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  nextPacketNu    2   62[BANK2 ] unsigned short 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3752 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3753 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3755 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3756 ;;Total ram usage:       10 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:   10
  3759 ;; This function calls:
  3760 ;;		_CollisionCheck
  3761 ;;		_CreateMessageST7540
  3762 ;;		_LineIdleST7540
  3763 ;;		_PacketReadParamST7540
  3764 ;;		_SavePacketNumber
  3765 ;;		_StartTransmitST7540
  3766 ;;		_TransmitBusyST7540
  3767 ;; This function is called by:
  3768 ;;		_ProcessMasterComms
  3769 ;;		_SetSerialNumber
  3770 ;;		_ReturnBoosterData
  3771 ;;		_ProcessSerialCMD
  3772 ;;		_ProcessPingCMD
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text15
  3777  00AB4C                     __ptext15:
  3778                           	opt stack 0
  3779  00AB4C                     _CreateAndSend:
  3780                           	opt stack 18
  3781                           
  3782                           ;mastercomms.c: 381: unsigned short nextPacketNumberUS;
  3783                           ;mastercomms.c: 383: if(masterFlagsUCG & 0b00000001)
  3784                           
  3785                           ;incstack = 0
  3786  00AB4C  0102               	movlb	2	; () banked
  3787  00AB4E  A193               	btfss	_masterFlagsUCG& (0+255),0,b
  3788  00AB50  D002               	goto	l6535
  3789                           
  3790                           ; BSR set to: 2
  3791                           ;mastercomms.c: 384: commandUC |= 0b10000000;
  3792  00AB52  0102               	movlb	2	; () banked
  3793  00AB54  8F3B               	bsf	CreateAndSend@commandUC& (0+255),7,b
  3794  00AB56                     l6535:
  3795                           
  3796                           ; BSR set to: 2
  3797                           ;mastercomms.c: 385: CreateMessageST7540(packetSourceUS, packetDestUS, commandUC, dataLe
      +                          nUC, dataBuf);
  3798  00AB56  C237  F228         	movff	CreateAndSend@packetSourceUS,CreateMessageST7540@packetSourceUS
  3799  00AB5A  C238  F229         	movff	CreateAndSend@packetSourceUS+1,CreateMessageST7540@packetSourceUS+1
  3800  00AB5E  C239  F22A         	movff	CreateAndSend@packetDestUS,CreateMessageST7540@packetDestUS
  3801  00AB62  C23A  F22B         	movff	CreateAndSend@packetDestUS+1,CreateMessageST7540@packetDestUS+1
  3802  00AB66  C23B  F22C         	movff	CreateAndSend@commandUC,CreateMessageST7540@commandUC
  3803  00AB6A  C23C  F22D         	movff	CreateAndSend@dataLenUC,CreateMessageST7540@dataLenUC
  3804  00AB6E  C23D  F22E         	movff	CreateAndSend@dataBuf,CreateMessageST7540@dataBuf
  3805  00AB72  C23E  F22F         	movff	CreateAndSend@dataBuf+1,CreateMessageST7540@dataBuf+1
  3806  00AB76  ECC9  F04F         	call	_CreateMessageST7540	;wreg free
  3807                           
  3808                           ;mastercomms.c: 386: nextPacketNumberUS = PacketReadParamST7540(6);
  3809  00AB7A  0E06               	movlw	6
  3810  00AB7C  ECC9  F050         	call	_PacketReadParamST7540
  3811  00AB80  C230  F23F         	movff	?_PacketReadParamST7540,CreateAndSend@nextPacketNumberUS
  3812  00AB84  C231  F240         	movff	?_PacketReadParamST7540+1,CreateAndSend@nextPacketNumberUS+1
  3813                           
  3814                           ;mastercomms.c: 387: SavePacketNumber(packetSourceUS, nextPacketNumberUS);
  3815  00AB88  C237  F220         	movff	CreateAndSend@packetSourceUS,SavePacketNumber@srcSerialUS
  3816  00AB8C  C238  F221         	movff	CreateAndSend@packetSourceUS+1,SavePacketNumber@srcSerialUS+1
  3817  00AB90  C23F  F222         	movff	CreateAndSend@nextPacketNumberUS,SavePacketNumber@packetNumberUC
  3818  00AB94  ECE0  F055         	call	_SavePacketNumber	;wreg free
  3819                           
  3820                           ;mastercomms.c: 388: if(!(masterFlagsUCG & 0b00000010) ||
  3821                           ;mastercomms.c: 389: (masterFlagsUCG & 0b00000001))
  3822  00AB98  0102               	movlb	2	; () banked
  3823  00AB9A  A393               	btfss	_masterFlagsUCG& (0+255),1,b
  3824  00AB9C  D002               	goto	l6545
  3825                           
  3826                           ; BSR set to: 2
  3827  00AB9E  0102               	movlb	2	; () banked
  3828  00ABA0  B193               	btfsc	_masterFlagsUCG& (0+255),0,b
  3829  00ABA2                     l6545:
  3830                           
  3831                           ; BSR set to: 2
  3832                           ;mastercomms.c: 390: CollisionCheck();
  3833  00ABA2  ECF9  F058         	call	_CollisionCheck	;wreg free
  3834  00ABA6                     l6547:
  3835  00ABA6  EC11  F05B         	call	_LineIdleST7540	;wreg free
  3836  00ABAA  0900               	iorlw	0
  3837  00ABAC  B4D8               	btfsc	status,2,c
  3838  00ABAE  D7FB               	goto	l6547
  3839  00ABB0  EC29  F05B         	call	_TransmitBusyST7540	;wreg free
  3840  00ABB4  0900               	iorlw	0
  3841  00ABB6  A4D8               	btfss	status,2,c
  3842  00ABB8  D7F6               	goto	l6547
  3843                           
  3844                           ;mastercomms.c: 392: StartTransmitST7540();
  3845  00ABBA  EC8E  F05A         	call	_StartTransmitST7540	;wreg free
  3846  00ABBE  0012               	return		;funcret
  3847  00ABC0                     __end_of_CreateAndSend:
  3848                           	opt stack 0
  3849                           tblptru	equ	0xFF8
  3850                           tblptrh	equ	0xFF7
  3851                           tblptrl	equ	0xFF6
  3852                           tablat	equ	0xFF5
  3853                           prodh	equ	0xFF4
  3854                           prodl	equ	0xFF3
  3855                           intcon	equ	0xFF2
  3856                           postinc0	equ	0xFEE
  3857                           wreg	equ	0xFE8
  3858                           postinc1	equ	0xFE6
  3859                           postdec1	equ	0xFE5
  3860                           fsr1h	equ	0xFE2
  3861                           fsr1l	equ	0xFE1
  3862                           indf2	equ	0xFDF
  3863                           postinc2	equ	0xFDE
  3864                           postdec2	equ	0xFDD
  3865                           fsr2h	equ	0xFDA
  3866                           fsr2l	equ	0xFD9
  3867                           status	equ	0xFD8
  3868                           
  3869 ;; *************** function _TransmitBusyST7540 *****************
  3870 ;; Defined at:
  3871 ;;		line 311 in file "ST7540.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      unsigned char 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3889 ;;Total ram usage:        0 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    7
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_RetransmitMessageSt7540
  3896 ;;		_CreateAndSend
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text16
  3901  00B652                     __ptext16:
  3902                           	opt stack 0
  3903  00B652                     _TransmitBusyST7540:
  3904                           	opt stack 20
  3905                           
  3906                           ;ST7540.c: 312: return (flagST7540UCG & 1);
  3907                           
  3908                           ;incstack = 0
  3909  00B652  0102               	movlb	2	; () banked
  3910  00B654  51A8               	movf	_flagST7540UCG& (0+255),w,b
  3911  00B656  0B01               	andlw	1
  3912  00B658  0012               	return	
  3913  00B65A                     __end_of_TransmitBusyST7540:
  3914                           	opt stack 0
  3915                           tblptru	equ	0xFF8
  3916                           tblptrh	equ	0xFF7
  3917                           tblptrl	equ	0xFF6
  3918                           tablat	equ	0xFF5
  3919                           prodh	equ	0xFF4
  3920                           prodl	equ	0xFF3
  3921                           intcon	equ	0xFF2
  3922                           postinc0	equ	0xFEE
  3923                           wreg	equ	0xFE8
  3924                           postinc1	equ	0xFE6
  3925                           postdec1	equ	0xFE5
  3926                           fsr1h	equ	0xFE2
  3927                           fsr1l	equ	0xFE1
  3928                           indf2	equ	0xFDF
  3929                           postinc2	equ	0xFDE
  3930                           postdec2	equ	0xFDD
  3931                           fsr2h	equ	0xFDA
  3932                           fsr2l	equ	0xFD9
  3933                           status	equ	0xFD8
  3934                           
  3935 ;; *************** function _StartTransmitST7540 *****************
  3936 ;; Defined at:
  3937 ;;		line 299 in file "ST7540.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  discardUC       1   26[BANK2 ] unsigned char 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3954 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3955 ;;Total ram usage:        1 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; Hardware stack levels required when called:    7
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_RetransmitMessageSt7540
  3962 ;;		_CreateAndSend
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text17
  3967  00B51C                     __ptext17:
  3968                           	opt stack 0
  3969  00B51C                     _StartTransmitST7540:
  3970                           	opt stack 20
  3971                           
  3972                           ;ST7540.c: 300: unsigned char discardUC;
  3973                           ;ST7540.c: 302: flagST7540UCG |= 1;
  3974                           
  3975                           ; BSR set to: 2
  3976                           ;incstack = 0
  3977  00B51C  0102               	movlb	2	; () banked
  3978  00B51E  81A8               	bsf	_flagST7540UCG& (0+255),0,b
  3979                           
  3980                           ; BSR set to: 2
  3981                           ;ST7540.c: 303: LATCbits.LATC3 = 0;
  3982  00B520  968B               	bcf	3979,3,c	;volatile
  3983  00B522                     l137:
  3984  00B522  BA83               	btfsc	3971,5,c	;volatile
  3985  00B524  D7FE               	goto	l137
  3986                           
  3987                           ;ST7540.c: 305: SSP2CON1bits.SSPEN = 1;
  3988  00B526  8A72               	bsf	3954,5,c	;volatile
  3989                           
  3990                           ;ST7540.c: 306: discardUC = SSP2BUF;
  3991  00B528  CF75 F21B          	movff	3957,StartTransmitST7540@discardUC	;volatile
  3992                           
  3993                           ;ST7540.c: 307: SSP2BUF = bufferTXST7540UCAG[0];
  3994  00B52C  C34C  FF75         	movff	_bufferTXST7540UCAG,3957	;volatile
  3995                           
  3996                           ;ST7540.c: 308: bufferTXNextUCG = 1;
  3997  00B530  0E01               	movlw	1
  3998  00B532  0102               	movlb	2	; () banked
  3999  00B534  6FA6               	movwf	_bufferTXNextUCG& (0+255),b
  4000                           
  4001                           ; BSR set to: 2
  4002  00B536  0012               	return		;funcret
  4003  00B538                     __end_of_StartTransmitST7540:
  4004                           	opt stack 0
  4005                           tblptru	equ	0xFF8
  4006                           tblptrh	equ	0xFF7
  4007                           tblptrl	equ	0xFF6
  4008                           tablat	equ	0xFF5
  4009                           prodh	equ	0xFF4
  4010                           prodl	equ	0xFF3
  4011                           intcon	equ	0xFF2
  4012                           postinc0	equ	0xFEE
  4013                           wreg	equ	0xFE8
  4014                           postinc1	equ	0xFE6
  4015                           postdec1	equ	0xFE5
  4016                           fsr1h	equ	0xFE2
  4017                           fsr1l	equ	0xFE1
  4018                           indf2	equ	0xFDF
  4019                           postinc2	equ	0xFDE
  4020                           postdec2	equ	0xFDD
  4021                           fsr2h	equ	0xFDA
  4022                           fsr2l	equ	0xFD9
  4023                           status	equ	0xFD8
  4024                           
  4025 ;; *************** function _SavePacketNumber *****************
  4026 ;; Defined at:
  4027 ;;		line 246 in file "mastercomms.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  srcSerialUS     2   31[BANK2 ] unsigned short 
  4030 ;;  packetNumber    1   33[BANK2 ] unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  saveSlotC       1   36[BANK2 ] char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4042 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4044 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4045 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;Total ram usage:        6 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    8
  4049 ;; This function calls:
  4050 ;;		_ClearPacketNumbers
  4051 ;;		_GetPacketSlot
  4052 ;;		_IdlePacketSlot
  4053 ;; This function is called by:
  4054 ;;		_UpdatePacketNumber
  4055 ;;		_CreateAndSend
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text18
  4060  00ABC0                     __ptext18:
  4061                           	opt stack 0
  4062  00ABC0                     _SavePacketNumber:
  4063                           	opt stack 20
  4064                           
  4065                           ;mastercomms.c: 247: signed char saveSlotC;
  4066                           ;mastercomms.c: 249: saveSlotC = GetPacketSlot(srcSerialUS);
  4067                           
  4068                           ; BSR set to: 2
  4069                           ;incstack = 0
  4070  00ABC0  C220  F21B         	movff	SavePacketNumber@srcSerialUS,GetPacketSlot@srcSerialUS
  4071  00ABC4  C221  F21C         	movff	SavePacketNumber@srcSerialUS+1,GetPacketSlot@srcSerialUS+1
  4072  00ABC8  ECD7  F057         	call	_GetPacketSlot	;wreg free
  4073  00ABCC  0102               	movlb	2	; () banked
  4074  00ABCE  6F25               	movwf	SavePacketNumber@saveSlotC& (0+255),b
  4075                           
  4076                           ; BSR set to: 2
  4077                           ;mastercomms.c: 250: if(saveSlotC == -1){
  4078  00ABD0  0102               	movlb	2	; () banked
  4079  00ABD2  2925               	incf	SavePacketNumber@saveSlotC& (0+255),w,b
  4080  00ABD4  A4D8               	btfss	status,2,c
  4081  00ABD6  D00E               	goto	l6499
  4082                           
  4083                           ; BSR set to: 2
  4084                           ;mastercomms.c: 251: saveSlotC = IdlePacketSlot();
  4085  00ABD8  ECA0  F058         	call	_IdlePacketSlot	;wreg free
  4086  00ABDC  0102               	movlb	2	; () banked
  4087  00ABDE  6F25               	movwf	SavePacketNumber@saveSlotC& (0+255),b
  4088                           
  4089                           ; BSR set to: 2
  4090                           ;mastercomms.c: 252: if(saveSlotC == -1){
  4091  00ABE0  0102               	movlb	2	; () banked
  4092  00ABE2  2925               	incf	SavePacketNumber@saveSlotC& (0+255),w,b
  4093  00ABE4  A4D8               	btfss	status,2,c
  4094  00ABE6  D006               	goto	l6499
  4095                           
  4096                           ; BSR set to: 2
  4097                           ;mastercomms.c: 253: ClearPacketNumbers();
  4098  00ABE8  ECB2  F057         	call	_ClearPacketNumbers	;wreg free
  4099                           
  4100                           ;mastercomms.c: 254: saveSlotC = IdlePacketSlot();
  4101  00ABEC  ECA0  F058         	call	_IdlePacketSlot	;wreg free
  4102  00ABF0  0102               	movlb	2	; () banked
  4103  00ABF2  6F25               	movwf	SavePacketNumber@saveSlotC& (0+255),b
  4104  00ABF4                     l6499:
  4105                           
  4106                           ; BSR set to: 2
  4107                           ;mastercomms.c: 255: }
  4108                           ;mastercomms.c: 256: }
  4109                           ;mastercomms.c: 258: packetNumbersUSAG[1][saveSlotC] = srcSerialUS;
  4110  00ABF4  0102               	movlb	2	; () banked
  4111  00ABF6  5125               	movf	SavePacketNumber@saveSlotC& (0+255),w,b
  4112  00ABF8  0D02               	mullw	2
  4113  00ABFA  0EC2               	movlw	low (_packetNumbersUSAG+62)
  4114  00ABFC  24F3               	addwf	prodl,w,c
  4115  00ABFE  6ED9               	movwf	fsr2l,c
  4116  00AC00  0E05               	movlw	high (_packetNumbersUSAG+62)
  4117  00AC02  20F4               	addwfc	prodh,w,c
  4118  00AC04  6EDA               	movwf	fsr2h,c
  4119  00AC06  C220  FFDE         	movff	SavePacketNumber@srcSerialUS,postinc2
  4120  00AC0A  C221  FFDD         	movff	SavePacketNumber@srcSerialUS+1,postdec2
  4121                           
  4122                           ; BSR set to: 2
  4123                           ;mastercomms.c: 259: packetNumbersUSAG[0][saveSlotC] = packetNumberUC;
  4124  00AC0E  0102               	movlb	2	; () banked
  4125  00AC10  5122               	movf	SavePacketNumber@packetNumberUC& (0+255),w,b
  4126  00AC12  0102               	movlb	2	; () banked
  4127  00AC14  6F23               	movwf	??_SavePacketNumber& (0+255),b
  4128  00AC16  6B24               	clrf	(??_SavePacketNumber+1)& (0+255),b
  4129  00AC18  0102               	movlb	2	; () banked
  4130  00AC1A  5125               	movf	SavePacketNumber@saveSlotC& (0+255),w,b
  4131  00AC1C  0D02               	mullw	2
  4132  00AC1E  0E84               	movlw	low _packetNumbersUSAG
  4133  00AC20  24F3               	addwf	prodl,w,c
  4134  00AC22  6ED9               	movwf	fsr2l,c
  4135  00AC24  0E05               	movlw	high _packetNumbersUSAG
  4136  00AC26  20F4               	addwfc	prodh,w,c
  4137  00AC28  6EDA               	movwf	fsr2h,c
  4138  00AC2A  C223  FFDE         	movff	??_SavePacketNumber,postinc2
  4139  00AC2E  C224  FFDD         	movff	??_SavePacketNumber+1,postdec2
  4140                           
  4141                           ; BSR set to: 2
  4142  00AC32  0012               	return		;funcret
  4143  00AC34                     __end_of_SavePacketNumber:
  4144                           	opt stack 0
  4145                           tblptru	equ	0xFF8
  4146                           tblptrh	equ	0xFF7
  4147                           tblptrl	equ	0xFF6
  4148                           tablat	equ	0xFF5
  4149                           prodh	equ	0xFF4
  4150                           prodl	equ	0xFF3
  4151                           intcon	equ	0xFF2
  4152                           postinc0	equ	0xFEE
  4153                           wreg	equ	0xFE8
  4154                           postinc1	equ	0xFE6
  4155                           postdec1	equ	0xFE5
  4156                           fsr1h	equ	0xFE2
  4157                           fsr1l	equ	0xFE1
  4158                           indf2	equ	0xFDF
  4159                           postinc2	equ	0xFDE
  4160                           postdec2	equ	0xFDD
  4161                           fsr2h	equ	0xFDA
  4162                           fsr2l	equ	0xFD9
  4163                           status	equ	0xFD8
  4164                           
  4165 ;; *************** function _IdlePacketSlot *****************
  4166 ;; Defined at:
  4167 ;;		line 224 in file "mastercomms.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;		None
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  iscCountC       1   28[BANK2 ] char 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      char 
  4174 ;; Registers used:
  4175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4183 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;Total ram usage:        3 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    7
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_SavePacketNumber
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text19
  4196  00B140                     __ptext19:
  4197                           	opt stack 0
  4198  00B140                     _IdlePacketSlot:
  4199                           	opt stack 20
  4200                           
  4201                           ;mastercomms.c: 225: signed char iscCountC;
  4202                           ;mastercomms.c: 227: for(iscCountC = 0; iscCountC < 31; iscCountC++){
  4203                           
  4204                           ; BSR set to: 2
  4205                           ;incstack = 0
  4206  00B140  0E00               	movlw	0
  4207  00B142  0102               	movlb	2	; () banked
  4208  00B144  6F1D               	movwf	IdlePacketSlot@iscCountC& (0+255),b
  4209  00B146                     l6369:
  4210                           
  4211                           ; BSR set to: 2
  4212  00B146  0102               	movlb	2	; () banked
  4213  00B148  511D               	movf	IdlePacketSlot@iscCountC& (0+255),w,b
  4214  00B14A  0A80               	xorlw	128
  4215  00B14C  0F61               	addlw	-159
  4216  00B14E  B0D8               	btfsc	status,0,c
  4217  00B150  D013               	goto	l6383
  4218                           
  4219                           ; BSR set to: 2
  4220                           ;mastercomms.c: 228: if(!packetNumbersUSAG[1][iscCountC])
  4221                           
  4222                           ; BSR set to: 2
  4223                           
  4224                           ; BSR set to: 2
  4225  00B152  0102               	movlb	2	; () banked
  4226  00B154  511D               	movf	IdlePacketSlot@iscCountC& (0+255),w,b
  4227  00B156  0D02               	mullw	2
  4228  00B158  0EC2               	movlw	low (_packetNumbersUSAG+62)
  4229  00B15A  24F3               	addwf	prodl,w,c
  4230  00B15C  6ED9               	movwf	fsr2l,c
  4231  00B15E  0E05               	movlw	high (_packetNumbersUSAG+62)
  4232  00B160  20F4               	addwfc	prodh,w,c
  4233  00B162  6EDA               	movwf	fsr2h,c
  4234  00B164  50DE               	movf	postinc2,w,c
  4235  00B166  10DE               	iorwf	postinc2,w,c
  4236  00B168  A4D8               	btfss	status,2,c
  4237  00B16A  D003               	goto	l6379
  4238                           
  4239                           ; BSR set to: 2
  4240                           ;mastercomms.c: 229: return iscCountC;
  4241  00B16C  0102               	movlb	2	; () banked
  4242  00B16E  511D               	movf	IdlePacketSlot@iscCountC& (0+255),w,b
  4243                           
  4244                           ; BSR set to: 2
  4245  00B170  0012               	return	
  4246  00B172                     l6379:
  4247                           
  4248                           ; BSR set to: 2
  4249  00B172  0102               	movlb	2	; () banked
  4250  00B174  2B1D               	incf	IdlePacketSlot@iscCountC& (0+255),f,b
  4251  00B176  D7E7               	goto	l6369
  4252  00B178                     l6383:
  4253                           
  4254                           ; BSR set to: 2
  4255                           ;mastercomms.c: 230: }
  4256                           ;mastercomms.c: 232: return -1;
  4257  00B178  0EFF               	movlw	255
  4258  00B17A  0012               	return	
  4259  00B17C                     __end_of_IdlePacketSlot:
  4260                           	opt stack 0
  4261                           tblptru	equ	0xFF8
  4262                           tblptrh	equ	0xFF7
  4263                           tblptrl	equ	0xFF6
  4264                           tablat	equ	0xFF5
  4265                           prodh	equ	0xFF4
  4266                           prodl	equ	0xFF3
  4267                           intcon	equ	0xFF2
  4268                           postinc0	equ	0xFEE
  4269                           wreg	equ	0xFE8
  4270                           postinc1	equ	0xFE6
  4271                           postdec1	equ	0xFE5
  4272                           fsr1h	equ	0xFE2
  4273                           fsr1l	equ	0xFE1
  4274                           indf2	equ	0xFDF
  4275                           postinc2	equ	0xFDE
  4276                           postdec2	equ	0xFDD
  4277                           fsr2h	equ	0xFDA
  4278                           fsr2l	equ	0xFD9
  4279                           status	equ	0xFD8
  4280                           
  4281 ;; *************** function _GetPacketSlot *****************
  4282 ;; Defined at:
  4283 ;;		line 235 in file "mastercomms.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  srcSerialUS     2   26[BANK2 ] unsigned short 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  saveSlotC       1   30[BANK2 ] char 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      char 
  4290 ;; Registers used:
  4291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4297 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;Total ram usage:        5 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    7
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_SavePacketNumber
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text20
  4312  00AFAE                     __ptext20:
  4313                           	opt stack 0
  4314  00AFAE                     _GetPacketSlot:
  4315                           	opt stack 20
  4316                           
  4317                           ;mastercomms.c: 236: signed char saveSlotC;
  4318                           ;mastercomms.c: 238: for(saveSlotC = 0; saveSlotC < 31; saveSlotC++){
  4319                           
  4320                           ; BSR set to: 2
  4321                           ;incstack = 0
  4322  00AFAE  0E00               	movlw	0
  4323  00AFB0  0102               	movlb	2	; () banked
  4324  00AFB2  6F1F               	movwf	GetPacketSlot@saveSlotC& (0+255),b
  4325  00AFB4                     l6389:
  4326                           
  4327                           ; BSR set to: 2
  4328  00AFB4  0102               	movlb	2	; () banked
  4329  00AFB6  511F               	movf	GetPacketSlot@saveSlotC& (0+255),w,b
  4330  00AFB8  0A80               	xorlw	128
  4331  00AFBA  0F61               	addlw	-159
  4332  00AFBC  B0D8               	btfsc	status,0,c
  4333  00AFBE  D018               	goto	l6403
  4334                           
  4335                           ; BSR set to: 2
  4336                           ;mastercomms.c: 239: if(packetNumbersUSAG[1][saveSlotC] == srcSerialUS)
  4337                           
  4338                           ; BSR set to: 2
  4339                           
  4340                           ; BSR set to: 2
  4341  00AFC0  0102               	movlb	2	; () banked
  4342  00AFC2  511F               	movf	GetPacketSlot@saveSlotC& (0+255),w,b
  4343  00AFC4  0D02               	mullw	2
  4344  00AFC6  0EC2               	movlw	low (_packetNumbersUSAG+62)
  4345  00AFC8  24F3               	addwf	prodl,w,c
  4346  00AFCA  6ED9               	movwf	fsr2l,c
  4347  00AFCC  0E05               	movlw	high (_packetNumbersUSAG+62)
  4348  00AFCE  20F4               	addwfc	prodh,w,c
  4349  00AFD0  6EDA               	movwf	fsr2h,c
  4350  00AFD2  0102               	movlb	2	; () banked
  4351  00AFD4  511B               	movf	GetPacketSlot@srcSerialUS& (0+255),w,b
  4352  00AFD6  18DE               	xorwf	postinc2,w,c
  4353  00AFD8  E108               	bnz	l6399
  4354  00AFDA  0102               	movlb	2	; () banked
  4355  00AFDC  511C               	movf	(GetPacketSlot@srcSerialUS+1)& (0+255),w,b
  4356  00AFDE  18DE               	xorwf	postinc2,w,c
  4357  00AFE0  A4D8               	btfss	status,2,c
  4358  00AFE2  D003               	goto	l6399
  4359                           
  4360                           ; BSR set to: 2
  4361                           ;mastercomms.c: 240: return saveSlotC;
  4362  00AFE4  0102               	movlb	2	; () banked
  4363  00AFE6  511F               	movf	GetPacketSlot@saveSlotC& (0+255),w,b
  4364                           
  4365                           ; BSR set to: 2
  4366  00AFE8  0012               	return	
  4367  00AFEA                     l6399:
  4368                           
  4369                           ; BSR set to: 2
  4370  00AFEA  0102               	movlb	2	; () banked
  4371  00AFEC  2B1F               	incf	GetPacketSlot@saveSlotC& (0+255),f,b
  4372  00AFEE  D7E2               	goto	l6389
  4373  00AFF0                     l6403:
  4374                           
  4375                           ; BSR set to: 2
  4376                           ;mastercomms.c: 241: }
  4377                           ;mastercomms.c: 243: return -1;
  4378  00AFF0  0EFF               	movlw	255
  4379  00AFF2  0012               	return	
  4380  00AFF4                     __end_of_GetPacketSlot:
  4381                           	opt stack 0
  4382                           tblptru	equ	0xFF8
  4383                           tblptrh	equ	0xFF7
  4384                           tblptrl	equ	0xFF6
  4385                           tablat	equ	0xFF5
  4386                           prodh	equ	0xFF4
  4387                           prodl	equ	0xFF3
  4388                           intcon	equ	0xFF2
  4389                           postinc0	equ	0xFEE
  4390                           wreg	equ	0xFE8
  4391                           postinc1	equ	0xFE6
  4392                           postdec1	equ	0xFE5
  4393                           fsr1h	equ	0xFE2
  4394                           fsr1l	equ	0xFE1
  4395                           indf2	equ	0xFDF
  4396                           postinc2	equ	0xFDE
  4397                           postdec2	equ	0xFDD
  4398                           fsr2h	equ	0xFDA
  4399                           fsr2l	equ	0xFD9
  4400                           status	equ	0xFD8
  4401                           
  4402 ;; *************** function _PacketReadParamST7540 *****************
  4403 ;; Defined at:
  4404 ;;		line 325 in file "ST7540.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  paramName       1    wreg     unsigned char 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  paramName       1   51[BANK2 ] unsigned char 
  4409 ;;  retValueUS      2   52[BANK2 ] unsigned short 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  2   47[BANK2 ] unsigned short 
  4412 ;; Registers used:
  4413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4422 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;Total ram usage:        7 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    9
  4426 ;; This function calls:
  4427 ;;		_CheckCRCST7540
  4428 ;; This function is called by:
  4429 ;;		_RetransmitMessageSt7540
  4430 ;;		_ProcessMasterComms
  4431 ;;		_CreateAndSend
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text21
  4436  00A192                     __ptext21:
  4437                           	opt stack 0
  4438  00A192                     _PacketReadParamST7540:
  4439                           	opt stack 18
  4440                           
  4441                           ; BSR set to: 2
  4442                           ;incstack = 0
  4443                           ;PacketReadParamST7540@paramName stored from wreg
  4444  00A192  0102               	movlb	2	; () banked
  4445  00A194  6F34               	movwf	PacketReadParamST7540@paramName& (0+255),b
  4446                           
  4447                           ;ST7540.c: 326: unsigned short retValueUS = 0;
  4448  00A196  0E00               	movlw	0
  4449  00A198  0102               	movlb	2	; () banked
  4450  00A19A  6F36               	movwf	(PacketReadParamST7540@retValueUS+1)& (0+255),b
  4451  00A19C  0E00               	movlw	0
  4452  00A19E  6F35               	movwf	PacketReadParamST7540@retValueUS& (0+255),b
  4453                           
  4454                           ;ST7540.c: 328: switch(paramName){
  4455  00A1A0  D04F               	goto	l6431
  4456  00A1A2                     l6409:
  4457                           
  4458                           ; BSR set to: 2
  4459                           ;ST7540.c: 330: return bufferRXST7540UCAG[0] - 9;
  4460  00A1A2  0EF7               	movlw	247
  4461  00A1A4  0103               	movlb	3	; () banked
  4462  00A1A6  259B               	addwf	_bufferRXST7540UCAG& (0+255),w,b
  4463  00A1A8  0102               	movlb	2	; () banked
  4464  00A1AA  6F30               	movwf	?_PacketReadParamST7540& (0+255),b
  4465  00A1AC  0102               	movlb	2	; () banked
  4466  00A1AE  6B31               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
  4467  00A1B0  0EFF               	movlw	255
  4468  00A1B2  2331               	addwfc	(?_PacketReadParamST7540+1)& (0+255),f,b
  4469                           
  4470                           ; BSR set to: 2
  4471  00A1B4  0012               	return	
  4472  00A1B6                     l6413:
  4473                           
  4474                           ; BSR set to: 2
  4475                           ;ST7540.c: 332: retValueUS |= ((unsigned short) bufferRXST7540UCAG[1] << 8);
  4476  00A1B6  0103               	movlb	3	; () banked
  4477  00A1B8  519C               	movf	(_bufferRXST7540UCAG+1)& (0+255),w,b
  4478  00A1BA  0102               	movlb	2	; () banked
  4479  00A1BC  6F33               	movwf	(??_PacketReadParamST7540+1)& (0+255),b
  4480  00A1BE  6B32               	clrf	??_PacketReadParamST7540& (0+255),b
  4481  00A1C0  0102               	movlb	2	; () banked
  4482  00A1C2  5132               	movf	??_PacketReadParamST7540& (0+255),w,b
  4483  00A1C4  0102               	movlb	2	; () banked
  4484  00A1C6  1335               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
  4485  00A1C8  0102               	movlb	2	; () banked
  4486  00A1CA  5133               	movf	(??_PacketReadParamST7540+1)& (0+255),w,b
  4487  00A1CC  0102               	movlb	2	; () banked
  4488  00A1CE  1336               	iorwf	(PacketReadParamST7540@retValueUS+1)& (0+255),f,b
  4489                           
  4490                           ;ST7540.c: 333: retValueUS |= bufferRXST7540UCAG[2];
  4491  00A1D0  0103               	movlb	3	; () banked
  4492  00A1D2  519D               	movf	(_bufferRXST7540UCAG+2)& (0+255),w,b
  4493  00A1D4  0102               	movlb	2	; () banked
  4494  00A1D6  1335               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
  4495                           
  4496                           ; BSR set to: 2
  4497                           ;ST7540.c: 334: return retValueUS;
  4498  00A1D8  C235  F230         	movff	PacketReadParamST7540@retValueUS,?_PacketReadParamST7540
  4499  00A1DC  C236  F231         	movff	PacketReadParamST7540@retValueUS+1,?_PacketReadParamST7540+1
  4500                           
  4501                           ; BSR set to: 2
  4502  00A1E0  0012               	return	
  4503  00A1E2                     l6419:
  4504                           
  4505                           ; BSR set to: 2
  4506                           ;ST7540.c: 336: retValueUS |= ((unsigned short) bufferRXST7540UCAG[3] << 8);
  4507  00A1E2  0103               	movlb	3	; () banked
  4508  00A1E4  519E               	movf	(_bufferRXST7540UCAG+3)& (0+255),w,b
  4509  00A1E6  0102               	movlb	2	; () banked
  4510  00A1E8  6F33               	movwf	(??_PacketReadParamST7540+1)& (0+255),b
  4511  00A1EA  6B32               	clrf	??_PacketReadParamST7540& (0+255),b
  4512  00A1EC  0102               	movlb	2	; () banked
  4513  00A1EE  5132               	movf	??_PacketReadParamST7540& (0+255),w,b
  4514  00A1F0  0102               	movlb	2	; () banked
  4515  00A1F2  1335               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
  4516  00A1F4  0102               	movlb	2	; () banked
  4517  00A1F6  5133               	movf	(??_PacketReadParamST7540+1)& (0+255),w,b
  4518  00A1F8  0102               	movlb	2	; () banked
  4519  00A1FA  1336               	iorwf	(PacketReadParamST7540@retValueUS+1)& (0+255),f,b
  4520                           
  4521                           ;ST7540.c: 337: retValueUS |= bufferRXST7540UCAG[4];
  4522  00A1FC  0103               	movlb	3	; () banked
  4523  00A1FE  519F               	movf	(_bufferRXST7540UCAG+4)& (0+255),w,b
  4524  00A200  0102               	movlb	2	; () banked
  4525  00A202  1335               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
  4526                           
  4527                           ; BSR set to: 2
  4528                           ;ST7540.c: 338: return retValueUS;
  4529  00A204  C235  F230         	movff	PacketReadParamST7540@retValueUS,?_PacketReadParamST7540
  4530  00A208  C236  F231         	movff	PacketReadParamST7540@retValueUS+1,?_PacketReadParamST7540+1
  4531                           
  4532                           ; BSR set to: 2
  4533  00A20C  0012               	return	
  4534  00A20E                     l154:
  4535                           
  4536                           ; BSR set to: 2
  4537                           ;ST7540.c: 340: return bufferRXST7540UCAG[5];
  4538  00A20E  C3A0  F230         	movff	_bufferRXST7540UCAG+5,?_PacketReadParamST7540
  4539  00A212  0102               	movlb	2	; () banked
  4540  00A214  6B31               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
  4541  00A216  0012               	return	
  4542  00A218                     l155:
  4543                           
  4544                           ; BSR set to: 2
  4545                           ;ST7540.c: 342: return bufferRXST7540UCAG[6];
  4546  00A218  C3A1  F230         	movff	_bufferRXST7540UCAG+6,?_PacketReadParamST7540
  4547  00A21C  0102               	movlb	2	; () banked
  4548  00A21E  6B31               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
  4549  00A220  0012               	return	
  4550  00A222                     l6425:
  4551                           
  4552                           ; BSR set to: 2
  4553                           ;ST7540.c: 344: return CheckCRCST7540();
  4554  00A222  ECDE  F052         	call	_CheckCRCST7540	;wreg free
  4555  00A226  0102               	movlb	2	; () banked
  4556  00A228  6F32               	movwf	??_PacketReadParamST7540& (0+255),b
  4557  00A22A  0102               	movlb	2	; () banked
  4558  00A22C  5132               	movf	??_PacketReadParamST7540& (0+255),w,b
  4559  00A22E  0102               	movlb	2	; () banked
  4560  00A230  6F30               	movwf	?_PacketReadParamST7540& (0+255),b
  4561  00A232  6B31               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
  4562                           
  4563                           ; BSR set to: 2
  4564  00A234  0012               	return	
  4565  00A236                     l157:
  4566                           
  4567                           ; BSR set to: 2
  4568                           ;ST7540.c: 346: return bufferTXST7540UCAG[9];
  4569  00A236  C355  F230         	movff	_bufferTXST7540UCAG+9,?_PacketReadParamST7540
  4570  00A23A  0102               	movlb	2	; () banked
  4571  00A23C  6B31               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
  4572  00A23E  0012               	return	
  4573  00A240                     l6431:
  4574                           
  4575                           ; BSR set to: 2
  4576  00A240  0102               	movlb	2	; () banked
  4577  00A242  5134               	movf	PacketReadParamST7540@paramName& (0+255),w,b
  4578                           
  4579                           ; Switch size 1, requested type "space"
  4580                           ; Number of cases is 7, Range of values is 0 to 6
  4581                           ; switch strategies available:
  4582                           ; Name         Instructions Cycles
  4583                           ; simple_byte           22    12 (average)
  4584                           ;	Chosen strategy is simple_byte
  4585  00A244  0A00               	xorlw	0	; case 0
  4586  00A246  B4D8               	btfsc	status,2,c
  4587  00A248  D7AC               	goto	l6409
  4588  00A24A  0A01               	xorlw	1	; case 1
  4589  00A24C  B4D8               	btfsc	status,2,c
  4590  00A24E  D7B3               	goto	l6413
  4591  00A250  0A03               	xorlw	3	; case 2
  4592  00A252  B4D8               	btfsc	status,2,c
  4593  00A254  D7C6               	goto	l6419
  4594  00A256  0A01               	xorlw	1	; case 3
  4595  00A258  B4D8               	btfsc	status,2,c
  4596  00A25A  D7D9               	goto	l154
  4597  00A25C  0A07               	xorlw	7	; case 4
  4598  00A25E  B4D8               	btfsc	status,2,c
  4599  00A260  D7DB               	goto	l155
  4600  00A262  0A01               	xorlw	1	; case 5
  4601  00A264  B4D8               	btfsc	status,2,c
  4602  00A266  D7DD               	goto	l6425
  4603  00A268  0A03               	xorlw	3	; case 6
  4604  00A26A  B4D8               	btfsc	status,2,c
  4605  00A26C  D7E4               	goto	l157
  4606                           
  4607                           ; BSR set to: 2
  4608                           ;ST7540.c: 349: return 0;
  4609                           
  4610                           ; BSR set to: 2
  4611  00A26E  0E00               	movlw	0
  4612  00A270  0102               	movlb	2	; () banked
  4613  00A272  6F31               	movwf	(?_PacketReadParamST7540+1)& (0+255),b
  4614  00A274  0E00               	movlw	0
  4615  00A276  6F30               	movwf	?_PacketReadParamST7540& (0+255),b
  4616  00A278  0012               	return	
  4617  00A27A                     __end_of_PacketReadParamST7540:
  4618                           	opt stack 0
  4619                           tblptru	equ	0xFF8
  4620                           tblptrh	equ	0xFF7
  4621                           tblptrl	equ	0xFF6
  4622                           tablat	equ	0xFF5
  4623                           prodh	equ	0xFF4
  4624                           prodl	equ	0xFF3
  4625                           intcon	equ	0xFF2
  4626                           postinc0	equ	0xFEE
  4627                           wreg	equ	0xFE8
  4628                           postinc1	equ	0xFE6
  4629                           postdec1	equ	0xFE5
  4630                           fsr1h	equ	0xFE2
  4631                           fsr1l	equ	0xFE1
  4632                           indf2	equ	0xFDF
  4633                           postinc2	equ	0xFDE
  4634                           postdec2	equ	0xFDD
  4635                           fsr2h	equ	0xFDA
  4636                           fsr2l	equ	0xFD9
  4637                           status	equ	0xFD8
  4638                           
  4639 ;; *************** function _CheckCRCST7540 *****************
  4640 ;; Defined at:
  4641 ;;		line 360 in file "ST7540.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  receivedCRCU    2   44[BANK2 ] unsigned short 
  4646 ;;  expectedCRCU    2   42[BANK2 ] unsigned short 
  4647 ;;  packetLenUC     1   46[BANK2 ] unsigned char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      unsigned char 
  4650 ;; Registers used:
  4651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;Total ram usage:        8 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    8
  4664 ;; This function calls:
  4665 ;;		_CRC16
  4666 ;; This function is called by:
  4667 ;;		_PacketReadParamST7540
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text22
  4672  00A5BC                     __ptext22:
  4673                           	opt stack 0
  4674  00A5BC                     _CheckCRCST7540:
  4675                           	opt stack 18
  4676                           
  4677                           ;ST7540.c: 361: unsigned short expectedCRCUS;
  4678                           ;ST7540.c: 362: unsigned short receivedCRCUS = 0;
  4679                           
  4680                           ; BSR set to: 2
  4681                           ;incstack = 0
  4682  00A5BC  0E00               	movlw	0
  4683  00A5BE  0102               	movlb	2	; () banked
  4684  00A5C0  6F2E               	movwf	(CheckCRCST7540@receivedCRCUS+1)& (0+255),b
  4685  00A5C2  0E00               	movlw	0
  4686  00A5C4  6F2D               	movwf	CheckCRCST7540@receivedCRCUS& (0+255),b
  4687                           
  4688                           ; BSR set to: 2
  4689                           ;ST7540.c: 363: unsigned char packetLenUC;
  4690                           ;ST7540.c: 365: packetLenUC = bufferRXST7540UCAG[0]-2;
  4691  00A5C6  0103               	movlb	3	; () banked
  4692  00A5C8  519B               	movf	_bufferRXST7540UCAG& (0+255),w,b
  4693  00A5CA  0FFE               	addlw	254
  4694  00A5CC  0102               	movlb	2	; () banked
  4695  00A5CE  6F2F               	movwf	CheckCRCST7540@packetLenUC& (0+255),b
  4696                           
  4697                           ; BSR set to: 2
  4698                           ;ST7540.c: 366: expectedCRCUS = CRC16(bufferRXST7540UCAG, packetLenUC);
  4699  00A5D0  0E9B               	movlw	low _bufferRXST7540UCAG
  4700  00A5D2  0102               	movlb	2	; () banked
  4701  00A5D4  6F1B               	movwf	CRC16@data_p& (0+255),b
  4702  00A5D6  0E03               	movlw	high _bufferRXST7540UCAG
  4703  00A5D8  0102               	movlb	2	; () banked
  4704  00A5DA  6F1C               	movwf	(CRC16@data_p+1)& (0+255),b
  4705  00A5DC  C22F  F21D         	movff	CheckCRCST7540@packetLenUC,CRC16@length
  4706  00A5E0  0102               	movlb	2	; () banked
  4707  00A5E2  6B1E               	clrf	(CRC16@length+1)& (0+255),b
  4708  00A5E4  EC8A  F04D         	call	_CRC16	;wreg free
  4709  00A5E8  C21B  F22B         	movff	?_CRC16,CheckCRCST7540@expectedCRCUS
  4710  00A5EC  C21C  F22C         	movff	?_CRC16+1,CheckCRCST7540@expectedCRCUS+1
  4711                           
  4712                           ;ST7540.c: 367: receivedCRCUS |= ((unsigned short) bufferRXST7540UCAG[packetLenUC] << 8)
      +                          ;
  4713  00A5F0  0102               	movlb	2	; () banked
  4714  00A5F2  512F               	movf	CheckCRCST7540@packetLenUC& (0+255),w,b
  4715  00A5F4  0D01               	mullw	1
  4716  00A5F6  0E9B               	movlw	low _bufferRXST7540UCAG
  4717  00A5F8  24F3               	addwf	prodl,w,c
  4718  00A5FA  6ED9               	movwf	fsr2l,c
  4719  00A5FC  0E03               	movlw	high _bufferRXST7540UCAG
  4720  00A5FE  20F4               	addwfc	prodh,w,c
  4721  00A600  6EDA               	movwf	fsr2h,c
  4722  00A602  50DF               	movf	indf2,w,c
  4723  00A604  0102               	movlb	2	; () banked
  4724  00A606  6F28               	movwf	??_CheckCRCST7540& (0+255),b
  4725  00A608  0102               	movlb	2	; () banked
  4726  00A60A  5128               	movf	??_CheckCRCST7540& (0+255),w,b
  4727  00A60C  0102               	movlb	2	; () banked
  4728  00A60E  6F2A               	movwf	(??_CheckCRCST7540+2)& (0+255),b
  4729  00A610  6B29               	clrf	(??_CheckCRCST7540+1)& (0+255),b
  4730  00A612  0102               	movlb	2	; () banked
  4731  00A614  5129               	movf	(??_CheckCRCST7540+1)& (0+255),w,b
  4732  00A616  0102               	movlb	2	; () banked
  4733  00A618  132D               	iorwf	CheckCRCST7540@receivedCRCUS& (0+255),f,b
  4734  00A61A  0102               	movlb	2	; () banked
  4735  00A61C  512A               	movf	(??_CheckCRCST7540+2)& (0+255),w,b
  4736  00A61E  0102               	movlb	2	; () banked
  4737  00A620  132E               	iorwf	(CheckCRCST7540@receivedCRCUS+1)& (0+255),f,b
  4738                           
  4739                           ; BSR set to: 2
  4740                           ;ST7540.c: 368: receivedCRCUS |= bufferRXST7540UCAG[packetLenUC+1];
  4741  00A622  0102               	movlb	2	; () banked
  4742  00A624  512F               	movf	CheckCRCST7540@packetLenUC& (0+255),w,b
  4743  00A626  0102               	movlb	2	; () banked
  4744  00A628  6F28               	movwf	??_CheckCRCST7540& (0+255),b
  4745  00A62A  6B29               	clrf	(??_CheckCRCST7540+1)& (0+255),b
  4746  00A62C  0E01               	movlw	1
  4747  00A62E  0102               	movlb	2	; () banked
  4748  00A630  2728               	addwf	??_CheckCRCST7540& (0+255),f,b
  4749  00A632  0E00               	movlw	0
  4750  00A634  2329               	addwfc	(??_CheckCRCST7540+1)& (0+255),f,b
  4751  00A636  0E9B               	movlw	low _bufferRXST7540UCAG
  4752  00A638  0102               	movlb	2	; () banked
  4753  00A63A  2528               	addwf	??_CheckCRCST7540& (0+255),w,b
  4754  00A63C  6ED9               	movwf	fsr2l,c
  4755  00A63E  0E03               	movlw	high _bufferRXST7540UCAG
  4756  00A640  0102               	movlb	2	; () banked
  4757  00A642  2129               	addwfc	(??_CheckCRCST7540+1)& (0+255),w,b
  4758  00A644  6EDA               	movwf	fsr2h,c
  4759  00A646  50DF               	movf	indf2,w,c
  4760  00A648  0102               	movlb	2	; () banked
  4761  00A64A  6F2A               	movwf	(??_CheckCRCST7540+2)& (0+255),b
  4762  00A64C  0102               	movlb	2	; () banked
  4763  00A64E  512A               	movf	(??_CheckCRCST7540+2)& (0+255),w,b
  4764  00A650  0102               	movlb	2	; () banked
  4765  00A652  132D               	iorwf	CheckCRCST7540@receivedCRCUS& (0+255),f,b
  4766                           
  4767                           ; BSR set to: 2
  4768                           ;ST7540.c: 370: return (expectedCRCUS == receivedCRCUS);
  4769  00A654  0102               	movlb	2	; () banked
  4770  00A656  512D               	movf	CheckCRCST7540@receivedCRCUS& (0+255),w,b
  4771  00A658  0102               	movlb	2	; () banked
  4772  00A65A  192B               	xorwf	CheckCRCST7540@expectedCRCUS& (0+255),w,b
  4773  00A65C  E108               	bnz	u6790
  4774  00A65E  0102               	movlb	2	; () banked
  4775  00A660  512E               	movf	(CheckCRCST7540@receivedCRCUS+1)& (0+255),w,b
  4776  00A662  0102               	movlb	2	; () banked
  4777  00A664  192C               	xorwf	(CheckCRCST7540@expectedCRCUS+1)& (0+255),w,b
  4778  00A666  A4D8               	btfss	status,2,c
  4779  00A668  D002               	goto	u6790
  4780  00A66A  0E01               	movlw	1
  4781  00A66C  0012               	return	
  4782  00A66E                     u6790:
  4783  00A66E  0E00               	movlw	0
  4784  00A670  0012               	return	
  4785  00A672                     __end_of_CheckCRCST7540:
  4786                           	opt stack 0
  4787                           tblptru	equ	0xFF8
  4788                           tblptrh	equ	0xFF7
  4789                           tblptrl	equ	0xFF6
  4790                           tablat	equ	0xFF5
  4791                           prodh	equ	0xFF4
  4792                           prodl	equ	0xFF3
  4793                           intcon	equ	0xFF2
  4794                           postinc0	equ	0xFEE
  4795                           wreg	equ	0xFE8
  4796                           postinc1	equ	0xFE6
  4797                           postdec1	equ	0xFE5
  4798                           fsr1h	equ	0xFE2
  4799                           fsr1l	equ	0xFE1
  4800                           indf2	equ	0xFDF
  4801                           postinc2	equ	0xFDE
  4802                           postdec2	equ	0xFDD
  4803                           fsr2h	equ	0xFDA
  4804                           fsr2l	equ	0xFD9
  4805                           status	equ	0xFD8
  4806                           
  4807 ;; *************** function _CreateMessageST7540 *****************
  4808 ;; Defined at:
  4809 ;;		line 273 in file "ST7540.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  packetSource    2   39[BANK2 ] unsigned short 
  4812 ;;  packetDestUS    2   41[BANK2 ] unsigned short 
  4813 ;;  commandUC       1   43[BANK2 ] unsigned char 
  4814 ;;  dataLenUC       1   44[BANK2 ] unsigned char 
  4815 ;;  dataBuf         2   45[BANK2 ] PTR unsigned char 
  4816 ;;		 -> ProcessSerialCMD@serialListUSA(60), ReturnBoosterData@partRespUSA(62), ReturnBoosterData@allRespUSA(62), NULL(0)
      +, 
  4817 ;;		 -> iscSerialUSG(2), bufferRXST7540UCAG(75), 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  packetCRCUS     2   49[BANK2 ] unsigned short 
  4820 ;;  dataBufLocUC    1   51[BANK2 ] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4830 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;Total ram usage:       13 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; Hardware stack levels required when called:    8
  4837 ;; This function calls:
  4838 ;;		_CRC16
  4839 ;; This function is called by:
  4840 ;;		_RetransmitMessageSt7540
  4841 ;;		_CreateAndSend
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text23
  4846  009F92                     __ptext23:
  4847                           	opt stack 0
  4848  009F92                     _CreateMessageST7540:
  4849                           	opt stack 19
  4850                           
  4851                           ;ST7540.c: 274: unsigned char dataBufLocUC;
  4852                           ;ST7540.c: 275: unsigned short packetCRCUS;
  4853                           ;ST7540.c: 277: bufferTXST7540UCAG[0] = 0xAA;
  4854                           
  4855                           ; BSR set to: 2
  4856                           ;incstack = 0
  4857  009F92  0EAA               	movlw	170
  4858  009F94  0103               	movlb	3	; () banked
  4859  009F96  6F4C               	movwf	_bufferTXST7540UCAG& (0+255),b
  4860                           
  4861                           ;ST7540.c: 278: bufferTXST7540UCAG[1] = 0xAA;
  4862  009F98  0EAA               	movlw	170
  4863  009F9A  0103               	movlb	3	; () banked
  4864  009F9C  6F4D               	movwf	(_bufferTXST7540UCAG+1)& (0+255),b
  4865                           
  4866                           ;ST7540.c: 279: bufferTXST7540UCAG[2] = (unsigned long short) 0x9b58 >> 8;
  4867  009F9E  0E9B               	movlw	155
  4868  009FA0  0103               	movlb	3	; () banked
  4869  009FA2  6F4E               	movwf	(_bufferTXST7540UCAG+2)& (0+255),b
  4870                           
  4871                           ;ST7540.c: 280: bufferTXST7540UCAG[3] = (unsigned long short) 0x9b58;
  4872  009FA4  0E58               	movlw	88
  4873  009FA6  0103               	movlb	3	; () banked
  4874  009FA8  6F4F               	movwf	(_bufferTXST7540UCAG+3)& (0+255),b
  4875                           
  4876                           ; BSR set to: 3
  4877                           ;ST7540.c: 281: bufferTXST7540UCAG[4] = 9 + dataLenUC;
  4878  009FAA  0102               	movlb	2	; () banked
  4879  009FAC  512D               	movf	CreateMessageST7540@dataLenUC& (0+255),w,b
  4880  009FAE  0F09               	addlw	9
  4881  009FB0  0103               	movlb	3	; () banked
  4882  009FB2  6F50               	movwf	(_bufferTXST7540UCAG+4)& (0+255),b
  4883                           
  4884                           ; BSR set to: 3
  4885                           ;ST7540.c: 282: bufferTXST7540UCAG[5] = packetSourceUS >> 8;
  4886  009FB4  0102               	movlb	2	; () banked
  4887  009FB6  5129               	movf	(CreateMessageST7540@packetSourceUS+1)& (0+255),w,b
  4888  009FB8  0103               	movlb	3	; () banked
  4889  009FBA  6F51               	movwf	(_bufferTXST7540UCAG+5)& (0+255),b
  4890                           
  4891                           ; BSR set to: 3
  4892                           ;ST7540.c: 283: bufferTXST7540UCAG[6] = packetSourceUS;
  4893  009FBC  C228  F352         	movff	CreateMessageST7540@packetSourceUS,_bufferTXST7540UCAG+6
  4894                           
  4895                           ; BSR set to: 3
  4896                           ;ST7540.c: 284: bufferTXST7540UCAG[7] = packetDestUS >> 8;
  4897  009FC0  0102               	movlb	2	; () banked
  4898  009FC2  512B               	movf	(CreateMessageST7540@packetDestUS+1)& (0+255),w,b
  4899  009FC4  0103               	movlb	3	; () banked
  4900  009FC6  6F53               	movwf	(_bufferTXST7540UCAG+7)& (0+255),b
  4901                           
  4902                           ; BSR set to: 3
  4903                           ;ST7540.c: 285: bufferTXST7540UCAG[8] = packetDestUS;
  4904  009FC8  C22A  F354         	movff	CreateMessageST7540@packetDestUS,_bufferTXST7540UCAG+8
  4905                           
  4906                           ; BSR set to: 3
  4907                           ;ST7540.c: 286: bufferTXST7540UCAG[9] = packetNumberUCG++;
  4908  009FCC  C2A4  F355         	movff	_packetNumberUCG,_bufferTXST7540UCAG+9
  4909                           
  4910                           ; BSR set to: 3
  4911  009FD0  0102               	movlb	2	; () banked
  4912  009FD2  2BA4               	incf	_packetNumberUCG& (0+255),f,b
  4913                           
  4914                           ; BSR set to: 2
  4915                           ;ST7540.c: 287: bufferTXST7540UCAG[10] = commandUC;
  4916  009FD4  C22C  F356         	movff	CreateMessageST7540@commandUC,_bufferTXST7540UCAG+10
  4917                           
  4918                           ; BSR set to: 2
  4919                           ;ST7540.c: 289: for(dataBufLocUC = 0; dataBufLocUC < dataLenUC; dataBufLocUC++)
  4920  009FD8  0E00               	movlw	0
  4921  009FDA  0102               	movlb	2	; () banked
  4922  009FDC  6F34               	movwf	CreateMessageST7540@dataBufLocUC& (0+255),b
  4923  009FDE  D021               	goto	l6461
  4924  009FE0                     l6457:
  4925                           
  4926                           ; BSR set to: 2
  4927                           ;ST7540.c: 290: bufferTXST7540UCAG[dataBufLocUC + 11] = dataBuf[dataBufLocUC];
  4928  009FE0  0102               	movlb	2	; () banked
  4929  009FE2  5134               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  4930  009FE4  0D01               	mullw	1
  4931  009FE6  50F3               	movf	prodl,w,c
  4932  009FE8  0102               	movlb	2	; () banked
  4933  009FEA  252E               	addwf	CreateMessageST7540@dataBuf& (0+255),w,b
  4934  009FEC  6ED9               	movwf	fsr2l,c
  4935  009FEE  50F4               	movf	prodh,w,c
  4936  009FF0  0102               	movlb	2	; () banked
  4937  009FF2  212F               	addwfc	(CreateMessageST7540@dataBuf+1)& (0+255),w,b
  4938  009FF4  6EDA               	movwf	fsr2h,c
  4939  009FF6  0102               	movlb	2	; () banked
  4940  009FF8  5134               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  4941  009FFA  0102               	movlb	2	; () banked
  4942  009FFC  6F30               	movwf	??_CreateMessageST7540& (0+255),b
  4943  009FFE  6B31               	clrf	(??_CreateMessageST7540+1)& (0+255),b
  4944  00A000  0E0B               	movlw	11
  4945  00A002  0102               	movlb	2	; () banked
  4946  00A004  2730               	addwf	??_CreateMessageST7540& (0+255),f,b
  4947  00A006  0E00               	movlw	0
  4948  00A008  2331               	addwfc	(??_CreateMessageST7540+1)& (0+255),f,b
  4949  00A00A  0E4C               	movlw	low _bufferTXST7540UCAG
  4950  00A00C  0102               	movlb	2	; () banked
  4951  00A00E  2530               	addwf	??_CreateMessageST7540& (0+255),w,b
  4952  00A010  6EE1               	movwf	fsr1l,c
  4953  00A012  0E03               	movlw	high _bufferTXST7540UCAG
  4954  00A014  0102               	movlb	2	; () banked
  4955  00A016  2131               	addwfc	(??_CreateMessageST7540+1)& (0+255),w,b
  4956  00A018  6EE2               	movwf	fsr1h,c
  4957  00A01A  CFDF FFE7          	movff	indf2,indf1
  4958                           
  4959                           ; BSR set to: 2
  4960  00A01E  0102               	movlb	2	; () banked
  4961  00A020  2B34               	incf	CreateMessageST7540@dataBufLocUC& (0+255),f,b
  4962  00A022                     l6461:
  4963                           
  4964                           ; BSR set to: 2
  4965  00A022  0102               	movlb	2	; () banked
  4966  00A024  512D               	movf	CreateMessageST7540@dataLenUC& (0+255),w,b
  4967  00A026  0102               	movlb	2	; () banked
  4968  00A028  5D34               	subwf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  4969  00A02A  A0D8               	btfss	status,0,c
  4970  00A02C  D7D9               	goto	l6457
  4971                           
  4972                           ; BSR set to: 2
  4973                           ;ST7540.c: 291: dataBufLocUC += 11;
  4974                           
  4975                           ; BSR set to: 2
  4976  00A02E  0E0B               	movlw	11
  4977  00A030  0102               	movlb	2	; () banked
  4978  00A032  2734               	addwf	CreateMessageST7540@dataBufLocUC& (0+255),f,b
  4979                           
  4980                           ; BSR set to: 2
  4981                           ;ST7540.c: 293: packetCRCUS = CRC16(bufferTXST7540UCAG + 4, 9 + dataLenUC - 2);
  4982  00A034  0E50               	movlw	low (_bufferTXST7540UCAG+4)
  4983  00A036  0102               	movlb	2	; () banked
  4984  00A038  6F1B               	movwf	CRC16@data_p& (0+255),b
  4985  00A03A  0E03               	movlw	high (_bufferTXST7540UCAG+4)
  4986  00A03C  0102               	movlb	2	; () banked
  4987  00A03E  6F1C               	movwf	(CRC16@data_p+1)& (0+255),b
  4988  00A040  0E07               	movlw	7
  4989  00A042  0102               	movlb	2	; () banked
  4990  00A044  252D               	addwf	CreateMessageST7540@dataLenUC& (0+255),w,b
  4991  00A046  0102               	movlb	2	; () banked
  4992  00A048  6F1D               	movwf	CRC16@length& (0+255),b
  4993  00A04A  0102               	movlb	2	; () banked
  4994  00A04C  6B1E               	clrf	(CRC16@length+1)& (0+255),b
  4995  00A04E  0E00               	movlw	0
  4996  00A050  231E               	addwfc	(CRC16@length+1)& (0+255),f,b
  4997  00A052  EC8A  F04D         	call	_CRC16	;wreg free
  4998  00A056  C21B  F232         	movff	?_CRC16,CreateMessageST7540@packetCRCUS
  4999  00A05A  C21C  F233         	movff	?_CRC16+1,CreateMessageST7540@packetCRCUS+1
  5000                           
  5001                           ;ST7540.c: 294: bufferTXST7540UCAG[dataBufLocUC++] = packetCRCUS >> 8;
  5002  00A05E  0102               	movlb	2	; () banked
  5003  00A060  5134               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5004  00A062  0D01               	mullw	1
  5005  00A064  0E4C               	movlw	low _bufferTXST7540UCAG
  5006  00A066  24F3               	addwf	prodl,w,c
  5007  00A068  6ED9               	movwf	fsr2l,c
  5008  00A06A  0E03               	movlw	high _bufferTXST7540UCAG
  5009  00A06C  20F4               	addwfc	prodh,w,c
  5010  00A06E  6EDA               	movwf	fsr2h,c
  5011  00A070  0102               	movlb	2	; () banked
  5012  00A072  5133               	movf	(CreateMessageST7540@packetCRCUS+1)& (0+255),w,b
  5013  00A074  6EDF               	movwf	indf2,c
  5014                           
  5015                           ; BSR set to: 2
  5016  00A076  0102               	movlb	2	; () banked
  5017  00A078  2B34               	incf	CreateMessageST7540@dataBufLocUC& (0+255),f,b
  5018                           
  5019                           ; BSR set to: 2
  5020                           ;ST7540.c: 295: bufferTXST7540UCAG[dataBufLocUC] = packetCRCUS;
  5021  00A07A  0102               	movlb	2	; () banked
  5022  00A07C  5134               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5023  00A07E  0D01               	mullw	1
  5024  00A080  0E4C               	movlw	low _bufferTXST7540UCAG
  5025  00A082  24F3               	addwf	prodl,w,c
  5026  00A084  6ED9               	movwf	fsr2l,c
  5027  00A086  0E03               	movlw	high _bufferTXST7540UCAG
  5028  00A088  20F4               	addwfc	prodh,w,c
  5029  00A08A  6EDA               	movwf	fsr2h,c
  5030  00A08C  C232  FFDF         	movff	CreateMessageST7540@packetCRCUS,indf2
  5031                           
  5032                           ; BSR set to: 2
  5033                           ;ST7540.c: 296: bufferTXLenUCG = dataBufLocUC;
  5034  00A090  C234  F2A7         	movff	CreateMessageST7540@dataBufLocUC,_bufferTXLenUCG
  5035                           
  5036                           ; BSR set to: 2
  5037  00A094  0012               	return		;funcret
  5038  00A096                     __end_of_CreateMessageST7540:
  5039                           	opt stack 0
  5040                           tblptru	equ	0xFF8
  5041                           tblptrh	equ	0xFF7
  5042                           tblptrl	equ	0xFF6
  5043                           tablat	equ	0xFF5
  5044                           prodh	equ	0xFF4
  5045                           prodl	equ	0xFF3
  5046                           intcon	equ	0xFF2
  5047                           postinc0	equ	0xFEE
  5048                           wreg	equ	0xFE8
  5049                           indf1	equ	0xFE7
  5050                           postinc1	equ	0xFE6
  5051                           postdec1	equ	0xFE5
  5052                           fsr1h	equ	0xFE2
  5053                           fsr1l	equ	0xFE1
  5054                           indf2	equ	0xFDF
  5055                           postinc2	equ	0xFDE
  5056                           postdec2	equ	0xFDD
  5057                           fsr2h	equ	0xFDA
  5058                           fsr2l	equ	0xFD9
  5059                           status	equ	0xFD8
  5060                           
  5061 ;; *************** function _CRC16 *****************
  5062 ;; Defined at:
  5063 ;;		line 19 in file "crc16.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  data_p          2   26[BANK2 ] PTR unsigned char 
  5066 ;;		 -> bufferRXST7540UCAG(75), bufferTXST7540UCAG(79), 
  5067 ;;  length          2   28[BANK2 ] unsigned short 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  crc             2   37[BANK2 ] unsigned int 
  5070 ;;  data            2   35[BANK2 ] unsigned int 
  5071 ;;  i               1   34[BANK2 ] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  2   26[BANK2 ] unsigned short 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5081 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;Total ram usage:       13 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    7
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_CreateMessageST7540
  5092 ;;		_CheckCRCST7540
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           	psect	text24
  5097  009B14                     __ptext24:
  5098                           	opt stack 0
  5099  009B14                     _CRC16:
  5100                           	opt stack 18
  5101                           
  5102                           ;crc16.c: 21: unsigned char i;
  5103                           ;crc16.c: 22: unsigned int data;
  5104                           ;crc16.c: 23: unsigned int crc = 0xffff;
  5105                           
  5106                           ; BSR set to: 2
  5107                           ;incstack = 0
  5108  009B14  0102               	movlb	2	; () banked
  5109  009B16  6926               	setf	CRC16@crc& (0+255),b
  5110  009B18  6927               	setf	(CRC16@crc+1)& (0+255),b
  5111                           
  5112                           ; BSR set to: 2
  5113                           ;crc16.c: 25: if (length == 0)
  5114  009B1A  0102               	movlb	2	; () banked
  5115  009B1C  511D               	movf	CRC16@length& (0+255),w,b
  5116  009B1E  0102               	movlb	2	; () banked
  5117  009B20  111E               	iorwf	(CRC16@length+1)& (0+255),w,b
  5118  009B22  A4D8               	btfss	status,2,c
  5119  009B24  D009               	goto	l6263
  5120                           
  5121                           ; BSR set to: 2
  5122                           ;crc16.c: 26: return (~crc);
  5123  009B26  0102               	movlb	2	; () banked
  5124  009B28  1D26               	comf	CRC16@crc& (0+255),w,b
  5125  009B2A  0102               	movlb	2	; () banked
  5126  009B2C  6F1B               	movwf	?_CRC16& (0+255),b
  5127  009B2E  0102               	movlb	2	; () banked
  5128  009B30  1D27               	comf	(CRC16@crc+1)& (0+255),w,b
  5129  009B32  0102               	movlb	2	; () banked
  5130  009B34  6F1C               	movwf	(?_CRC16+1)& (0+255),b
  5131                           
  5132                           ; BSR set to: 2
  5133  009B36  0012               	return	
  5134  009B38                     l6263:
  5135                           
  5136                           ; BSR set to: 2
  5137                           ;crc16.c: 29: {
  5138                           ;crc16.c: 30: for (i=0, data=(unsigned int)0xff & *data_p++;
  5139  009B38  0E00               	movlw	0
  5140  009B3A  0102               	movlb	2	; () banked
  5141  009B3C  6F23               	movwf	CRC16@i& (0+255),b
  5142                           
  5143                           ; BSR set to: 2
  5144  009B3E  C21B  FFD9         	movff	CRC16@data_p,fsr2l
  5145  009B42  C21C  FFDA         	movff	CRC16@data_p+1,fsr2h
  5146  009B46  50DF               	movf	indf2,w,c
  5147  009B48  0102               	movlb	2	; () banked
  5148  009B4A  6F1F               	movwf	??_CRC16& (0+255),b
  5149  009B4C  0102               	movlb	2	; () banked
  5150  009B4E  511F               	movf	??_CRC16& (0+255),w,b
  5151  009B50  0102               	movlb	2	; () banked
  5152  009B52  6F24               	movwf	CRC16@data& (0+255),b
  5153  009B54  6B25               	clrf	(CRC16@data+1)& (0+255),b
  5154                           
  5155                           ; BSR set to: 2
  5156  009B56  0102               	movlb	2	; () banked
  5157  009B58  4B1B               	infsnz	CRC16@data_p& (0+255),f,b
  5158  009B5A  2B1C               	incf	(CRC16@data_p+1)& (0+255),f,b
  5159  009B5C                     l6269:
  5160                           
  5161                           ; BSR set to: 2
  5162                           ;crc16.c: 31: i < 8;
  5163                           ;crc16.c: 32: i++, data >>= 1)
  5164  009B5C  0E07               	movlw	7
  5165  009B5E  0102               	movlb	2	; () banked
  5166  009B60  6523               	cpfsgt	CRC16@i& (0+255),b
  5167  009B62  D001               	goto	l6273
  5168  009B64  D041               	goto	l6281
  5169  009B66                     l6273:
  5170                           
  5171                           ; BSR set to: 2
  5172                           ;crc16.c: 33: {
  5173                           ;crc16.c: 34: if ((crc & 0x0001) ^ (data & 0x0001))
  5174  009B66  0E01               	movlw	1
  5175  009B68  0102               	movlb	2	; () banked
  5176  009B6A  1524               	andwf	CRC16@data& (0+255),w,b
  5177  009B6C  0102               	movlb	2	; () banked
  5178  009B6E  6F1F               	movwf	??_CRC16& (0+255),b
  5179  009B70  0E00               	movlw	0
  5180  009B72  0102               	movlb	2	; () banked
  5181  009B74  1525               	andwf	(CRC16@data+1)& (0+255),w,b
  5182  009B76  0102               	movlb	2	; () banked
  5183  009B78  6F20               	movwf	(??_CRC16+1)& (0+255),b
  5184  009B7A  0E01               	movlw	1
  5185  009B7C  0102               	movlb	2	; () banked
  5186  009B7E  1526               	andwf	CRC16@crc& (0+255),w,b
  5187  009B80  0102               	movlb	2	; () banked
  5188  009B82  6F21               	movwf	(??_CRC16+2)& (0+255),b
  5189  009B84  0E00               	movlw	0
  5190  009B86  0102               	movlb	2	; () banked
  5191  009B88  1527               	andwf	(CRC16@crc+1)& (0+255),w,b
  5192  009B8A  0102               	movlb	2	; () banked
  5193  009B8C  6F22               	movwf	(??_CRC16+3)& (0+255),b
  5194  009B8E  0102               	movlb	2	; () banked
  5195  009B90  511F               	movf	??_CRC16& (0+255),w,b
  5196  009B92  0102               	movlb	2	; () banked
  5197  009B94  1B21               	xorwf	(??_CRC16+2)& (0+255),f,b
  5198  009B96  0102               	movlb	2	; () banked
  5199  009B98  5120               	movf	(??_CRC16+1)& (0+255),w,b
  5200  009B9A  0102               	movlb	2	; () banked
  5201  009B9C  1B22               	xorwf	(??_CRC16+3)& (0+255),f,b
  5202  009B9E  0102               	movlb	2	; () banked
  5203  009BA0  5121               	movf	(??_CRC16+2)& (0+255),w,b
  5204  009BA2  0102               	movlb	2	; () banked
  5205  009BA4  1122               	iorwf	(??_CRC16+3)& (0+255),w,b
  5206  009BA6  B4D8               	btfsc	status,2,c
  5207  009BA8  D014               	goto	l6277
  5208                           
  5209                           ; BSR set to: 2
  5210                           ;crc16.c: 35: crc = (crc >> 1) ^ 0x8408;
  5211  009BAA  90D8               	bcf	status,0,c
  5212  009BAC  0102               	movlb	2	; () banked
  5213  009BAE  3127               	rrcf	(CRC16@crc+1)& (0+255),w,b
  5214  009BB0  0102               	movlb	2	; () banked
  5215  009BB2  6F20               	movwf	(??_CRC16+1)& (0+255),b
  5216  009BB4  0102               	movlb	2	; () banked
  5217  009BB6  3126               	rrcf	CRC16@crc& (0+255),w,b
  5218  009BB8  0102               	movlb	2	; () banked
  5219  009BBA  6F1F               	movwf	??_CRC16& (0+255),b
  5220  009BBC  0E08               	movlw	8
  5221  009BBE  0102               	movlb	2	; () banked
  5222  009BC0  191F               	xorwf	??_CRC16& (0+255),w,b
  5223  009BC2  0102               	movlb	2	; () banked
  5224  009BC4  6F26               	movwf	CRC16@crc& (0+255),b
  5225  009BC6  0E84               	movlw	132
  5226  009BC8  0102               	movlb	2	; () banked
  5227  009BCA  1920               	xorwf	(??_CRC16+1)& (0+255),w,b
  5228  009BCC  0102               	movlb	2	; () banked
  5229  009BCE  6F27               	movwf	(CRC16@crc+1)& (0+255),b
  5230  009BD0  D004               	goto	l611
  5231  009BD2                     l6277:
  5232                           
  5233                           ; BSR set to: 2
  5234                           ;crc16.c: 36: else crc >>= 1;
  5235  009BD2  0102               	movlb	2	; () banked
  5236  009BD4  90D8               	bcf	status,0,c
  5237  009BD6  3327               	rrcf	(CRC16@crc+1)& (0+255),f,b
  5238  009BD8  3326               	rrcf	CRC16@crc& (0+255),f,b
  5239  009BDA                     l611:
  5240                           
  5241                           ; BSR set to: 2
  5242  009BDA  0102               	movlb	2	; () banked
  5243  009BDC  2B23               	incf	CRC16@i& (0+255),f,b
  5244  009BDE  0102               	movlb	2	; () banked
  5245  009BE0  90D8               	bcf	status,0,c
  5246  009BE2  3325               	rrcf	(CRC16@data+1)& (0+255),f,b
  5247  009BE4  3324               	rrcf	CRC16@data& (0+255),f,b
  5248  009BE6  D7BA               	goto	l6269
  5249  009BE8                     l6281:
  5250                           
  5251                           ; BSR set to: 2
  5252                           ;crc16.c: 37: }
  5253                           ;crc16.c: 38: } while (--length);
  5254  009BE8  0102               	movlb	2	; () banked
  5255  009BEA  071D               	decf	CRC16@length& (0+255),f,b
  5256  009BEC  A0D8               	btfss	status,0,c
  5257  009BEE  071E               	decf	(CRC16@length+1)& (0+255),f,b
  5258  009BF0  0102               	movlb	2	; () banked
  5259  009BF2  511D               	movf	CRC16@length& (0+255),w,b
  5260  009BF4  0102               	movlb	2	; () banked
  5261  009BF6  111E               	iorwf	(CRC16@length+1)& (0+255),w,b
  5262  009BF8  A4D8               	btfss	status,2,c
  5263  009BFA  D79E               	goto	l6263
  5264                           
  5265                           ; BSR set to: 2
  5266                           ;crc16.c: 40: crc = ~crc;
  5267                           
  5268                           ; BSR set to: 2
  5269  009BFC  0102               	movlb	2	; () banked
  5270  009BFE  1F26               	comf	CRC16@crc& (0+255),f,b
  5271  009C00  1F27               	comf	(CRC16@crc+1)& (0+255),f,b
  5272                           
  5273                           ; BSR set to: 2
  5274                           ;crc16.c: 41: data = crc;
  5275  009C02  C226  F224         	movff	CRC16@crc,CRC16@data
  5276  009C06  C227  F225         	movff	CRC16@crc+1,CRC16@data+1
  5277                           
  5278                           ; BSR set to: 2
  5279                           ;crc16.c: 42: crc = (crc << 8) | (data >> 8 & 0xff);
  5280  009C0A  C224  F21F         	movff	CRC16@data,??_CRC16
  5281  009C0E  C225  F220         	movff	CRC16@data+1,??_CRC16+1
  5282  009C12  C220  F21F         	movff	??_CRC16+1,??_CRC16
  5283  009C16  0102               	movlb	2	; () banked
  5284  009C18  6B20               	clrf	(??_CRC16+1)& (0+255),b
  5285  009C1A  0102               	movlb	2	; () banked
  5286  009C1C  511F               	movf	??_CRC16& (0+255),w,b
  5287  009C1E  C226  F221         	movff	CRC16@crc,??_CRC16+2
  5288  009C22  C227  F222         	movff	CRC16@crc+1,??_CRC16+3
  5289  009C26  C221  F222         	movff	??_CRC16+2,??_CRC16+3
  5290  009C2A  0102               	movlb	2	; () banked
  5291  009C2C  6B21               	clrf	(??_CRC16+2)& (0+255),b
  5292  009C2E  0102               	movlb	2	; () banked
  5293  009C30  1121               	iorwf	(??_CRC16+2)& (0+255),w,b
  5294  009C32  0102               	movlb	2	; () banked
  5295  009C34  6F26               	movwf	CRC16@crc& (0+255),b
  5296  009C36  0102               	movlb	2	; () banked
  5297  009C38  5122               	movf	(??_CRC16+3)& (0+255),w,b
  5298  009C3A  0102               	movlb	2	; () banked
  5299  009C3C  6F27               	movwf	(CRC16@crc+1)& (0+255),b
  5300                           
  5301                           ; BSR set to: 2
  5302                           ;crc16.c: 44: return (crc);
  5303  009C3E  C226  F21B         	movff	CRC16@crc,?_CRC16
  5304  009C42  C227  F21C         	movff	CRC16@crc+1,?_CRC16+1
  5305  009C46  0012               	return	
  5306  009C48                     __end_of_CRC16:
  5307                           	opt stack 0
  5308                           tblptru	equ	0xFF8
  5309                           tblptrh	equ	0xFF7
  5310                           tblptrl	equ	0xFF6
  5311                           tablat	equ	0xFF5
  5312                           prodh	equ	0xFF4
  5313                           prodl	equ	0xFF3
  5314                           intcon	equ	0xFF2
  5315                           postinc0	equ	0xFEE
  5316                           wreg	equ	0xFE8
  5317                           indf1	equ	0xFE7
  5318                           postinc1	equ	0xFE6
  5319                           postdec1	equ	0xFE5
  5320                           fsr1h	equ	0xFE2
  5321                           fsr1l	equ	0xFE1
  5322                           indf2	equ	0xFDF
  5323                           postinc2	equ	0xFDE
  5324                           postdec2	equ	0xFDD
  5325                           fsr2h	equ	0xFDA
  5326                           fsr2l	equ	0xFD9
  5327                           status	equ	0xFD8
  5328                           
  5329 ;; *************** function _CollisionCheck *****************
  5330 ;; Defined at:
  5331 ;;		line 206 in file "mastercomms.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  delayValueUS    2   41[BANK2 ] unsigned short 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5348 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;Total ram usage:        2 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    9
  5352 ;; This function calls:
  5353 ;;		_LineIdleST7540
  5354 ;;		_MangleSerial
  5355 ;;		_WaitTickCount
  5356 ;; This function is called by:
  5357 ;;		_ProcessMasterComms
  5358 ;;		_CreateAndSend
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	text25
  5363  00B1F2                     __ptext25:
  5364                           	opt stack 0
  5365  00B1F2                     _CollisionCheck:
  5366                           	opt stack 18
  5367                           
  5368                           ;mastercomms.c: 207: unsigned short delayValueUS;
  5369                           ;mastercomms.c: 209: delayValueUS = MangleSerial(iscSerialUSG) & 0b0000001111111111;
  5370                           
  5371                           ; BSR set to: 2
  5372                           ;incstack = 0
  5373  00B1F2  C2A9  F21B         	movff	_iscSerialUSG,MangleSerial@mangleValueUS
  5374  00B1F6  C2AA  F21C         	movff	_iscSerialUSG+1,MangleSerial@mangleValueUS+1
  5375  00B1FA  ECBE  F04E         	call	_MangleSerial	;wreg free
  5376  00B1FE  0EFF               	movlw	255
  5377  00B200  0102               	movlb	2	; () banked
  5378  00B202  151B               	andwf	?_MangleSerial& (0+255),w,b
  5379  00B204  0102               	movlb	2	; () banked
  5380  00B206  6F2A               	movwf	CollisionCheck@delayValueUS& (0+255),b
  5381  00B208  0E03               	movlw	3
  5382  00B20A  0102               	movlb	2	; () banked
  5383  00B20C  151C               	andwf	(?_MangleSerial+1)& (0+255),w,b
  5384  00B20E  0102               	movlb	2	; () banked
  5385  00B210  6F2B               	movwf	(CollisionCheck@delayValueUS+1)& (0+255),b
  5386  00B212                     l857:
  5387                           
  5388                           ;mastercomms.c: 211: WaitTickCount(delayValueUS);
  5389  00B212  C22A  F21B         	movff	CollisionCheck@delayValueUS,WaitTickCount@tickCountUS
  5390  00B216  C22B  F21C         	movff	CollisionCheck@delayValueUS+1,WaitTickCount@tickCountUS+1
  5391  00B21A  EC70  F05A         	call	_WaitTickCount	;wreg free
  5392                           
  5393                           ;mastercomms.c: 212: }while(!LineIdleST7540());
  5394  00B21E  EC11  F05B         	call	_LineIdleST7540	;wreg free
  5395  00B222  0900               	iorlw	0
  5396  00B224  A4D8               	btfss	status,2,c
  5397  00B226  0012               	return	
  5398  00B228  D7F4               	goto	l857
  5399  00B22A                     __end_of_CollisionCheck:
  5400                           	opt stack 0
  5401                           tblptru	equ	0xFF8
  5402                           tblptrh	equ	0xFF7
  5403                           tblptrl	equ	0xFF6
  5404                           tablat	equ	0xFF5
  5405                           prodh	equ	0xFF4
  5406                           prodl	equ	0xFF3
  5407                           intcon	equ	0xFF2
  5408                           postinc0	equ	0xFEE
  5409                           wreg	equ	0xFE8
  5410                           indf1	equ	0xFE7
  5411                           postinc1	equ	0xFE6
  5412                           postdec1	equ	0xFE5
  5413                           fsr1h	equ	0xFE2
  5414                           fsr1l	equ	0xFE1
  5415                           indf2	equ	0xFDF
  5416                           postinc2	equ	0xFDE
  5417                           postdec2	equ	0xFDD
  5418                           fsr2h	equ	0xFDA
  5419                           fsr2l	equ	0xFD9
  5420                           status	equ	0xFD8
  5421                           
  5422 ;; *************** function _MangleSerial *****************
  5423 ;; Defined at:
  5424 ;;		line 180 in file "mastercomms.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;  mangleValueU    2   26[BANK2 ] unsigned short 
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  cycleCountUC    1   40[BANK2 ] unsigned char 
  5429 ;;  b12UC           1   37[BANK2 ] unsigned char 
  5430 ;;  b10UC           1   36[BANK2 ] unsigned char 
  5431 ;;  b6UC            1   35[BANK2 ] unsigned char 
  5432 ;;  b4UC            1   34[BANK2 ] unsigned char 
  5433 ;;  b2UC            1   33[BANK2 ] unsigned char 
  5434 ;;  b1UC            1   32[BANK2 ] unsigned char 
  5435 ;;  b0UC            1   31[BANK2 ] unsigned char 
  5436 ;;  xorOutputUC     1   30[BANK2 ] unsigned char 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  2   26[BANK2 ] unsigned short 
  5439 ;; Registers used:
  5440 ;;		wreg, status,2, status,0
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5447 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;Total ram usage:       15 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; Hardware stack levels required when called:    7
  5453 ;; This function calls:
  5454 ;;		Nothing
  5455 ;; This function is called by:
  5456 ;;		_CollisionCheck
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text26
  5461  009D7C                     __ptext26:
  5462                           	opt stack 0
  5463  009D7C                     _MangleSerial:
  5464                           	opt stack 19
  5465                           
  5466                           ;mastercomms.c: 181: unsigned char cycleCountUC;
  5467                           ;mastercomms.c: 182: unsigned char xorOutputUC;
  5468                           ;mastercomms.c: 183: unsigned char b0UC, b1UC, b2UC, b4UC, b6UC, b10UC, b12UC;
  5469                           ;mastercomms.c: 185: __nop();
  5470                           
  5471                           ;incstack = 0
  5472  009D7C  F000               	nop	
  5473                           
  5474                           ;mastercomms.c: 187: for(cycleCountUC = 0; cycleCountUC < 160; cycleCountUC++){
  5475  009D7E  0E00               	movlw	0
  5476  009D80  0102               	movlb	2	; () banked
  5477  009D82  6F29               	movwf	MangleSerial@cycleCountUC& (0+255),b
  5478  009D84                     l6343:
  5479                           
  5480                           ; BSR set to: 2
  5481  009D84  0E9F               	movlw	159
  5482  009D86  0102               	movlb	2	; () banked
  5483  009D88  6529               	cpfsgt	MangleSerial@cycleCountUC& (0+255),b
  5484  009D8A  D001               	goto	l6347
  5485  009D8C  D077               	goto	l848
  5486  009D8E                     l6347:
  5487                           
  5488                           ; BSR set to: 2
  5489                           ;mastercomms.c: 188: b0UC = (mangleValueUS & 0b0000000000000001)?1:0;
  5490  009D8E  0102               	movlb	2	; () banked
  5491  009D90  A11B               	btfss	MangleSerial@mangleValueUS& (0+255),0,b
  5492  009D92  D002               	goto	u6840
  5493  009D94  0E01               	movlw	1
  5494  009D96  D001               	goto	u6850
  5495  009D98                     u6840:
  5496  009D98  0E00               	movlw	0
  5497  009D9A                     u6850:
  5498  009D9A  0102               	movlb	2	; () banked
  5499  009D9C  6F20               	movwf	MangleSerial@b0UC& (0+255),b
  5500                           
  5501                           ;mastercomms.c: 189: b1UC = (mangleValueUS & 0b0000000000000010)?1:0;
  5502  009D9E  0102               	movlb	2	; () banked
  5503  009DA0  A31B               	btfss	MangleSerial@mangleValueUS& (0+255),1,b
  5504  009DA2  D002               	goto	u6860
  5505  009DA4  0E01               	movlw	1
  5506  009DA6  D001               	goto	u6870
  5507  009DA8                     u6860:
  5508  009DA8  0E00               	movlw	0
  5509  009DAA                     u6870:
  5510  009DAA  0102               	movlb	2	; () banked
  5511  009DAC  6F21               	movwf	MangleSerial@b1UC& (0+255),b
  5512                           
  5513                           ;mastercomms.c: 190: b2UC = (mangleValueUS & 0b0000000000000100)?1:0;
  5514  009DAE  0102               	movlb	2	; () banked
  5515  009DB0  A51B               	btfss	MangleSerial@mangleValueUS& (0+255),2,b
  5516  009DB2  D002               	goto	u6880
  5517  009DB4  0E01               	movlw	1
  5518  009DB6  D001               	goto	u6890
  5519  009DB8                     u6880:
  5520  009DB8  0E00               	movlw	0
  5521  009DBA                     u6890:
  5522  009DBA  0102               	movlb	2	; () banked
  5523  009DBC  6F22               	movwf	MangleSerial@b2UC& (0+255),b
  5524                           
  5525                           ;mastercomms.c: 191: b4UC = (mangleValueUS & 0b0000000000010000)?1:0;
  5526  009DBE  0102               	movlb	2	; () banked
  5527  009DC0  A91B               	btfss	MangleSerial@mangleValueUS& (0+255),4,b
  5528  009DC2  D002               	goto	u6900
  5529  009DC4  0E01               	movlw	1
  5530  009DC6  D001               	goto	u6910
  5531  009DC8                     u6900:
  5532  009DC8  0E00               	movlw	0
  5533  009DCA                     u6910:
  5534  009DCA  0102               	movlb	2	; () banked
  5535  009DCC  6F23               	movwf	MangleSerial@b4UC& (0+255),b
  5536                           
  5537                           ;mastercomms.c: 192: b6UC = (mangleValueUS & 0b0000000001000000)?1:0;
  5538  009DCE  0102               	movlb	2	; () banked
  5539  009DD0  AD1B               	btfss	MangleSerial@mangleValueUS& (0+255),6,b
  5540  009DD2  D002               	goto	u6920
  5541  009DD4  0E01               	movlw	1
  5542  009DD6  D001               	goto	u6930
  5543  009DD8                     u6920:
  5544  009DD8  0E00               	movlw	0
  5545  009DDA                     u6930:
  5546  009DDA  0102               	movlb	2	; () banked
  5547  009DDC  6F24               	movwf	MangleSerial@b6UC& (0+255),b
  5548                           
  5549                           ;mastercomms.c: 193: b10UC = (mangleValueUS & 0b0000010000000000)?1:0;
  5550  009DDE  0102               	movlb	2	; () banked
  5551  009DE0  A51C               	btfss	(MangleSerial@mangleValueUS+1)& (0+255),2,b
  5552  009DE2  D002               	goto	u6940
  5553  009DE4  0E01               	movlw	1
  5554  009DE6  D001               	goto	u6950
  5555  009DE8                     u6940:
  5556  009DE8  0E00               	movlw	0
  5557  009DEA                     u6950:
  5558  009DEA  0102               	movlb	2	; () banked
  5559  009DEC  6F25               	movwf	MangleSerial@b10UC& (0+255),b
  5560                           
  5561                           ;mastercomms.c: 194: b12UC = (mangleValueUS & 0b0001000000000000)?1:0;
  5562  009DEE  0102               	movlb	2	; () banked
  5563  009DF0  A91C               	btfss	(MangleSerial@mangleValueUS+1)& (0+255),4,b
  5564  009DF2  D002               	goto	u6960
  5565  009DF4  0E01               	movlw	1
  5566  009DF6  D001               	goto	u6970
  5567  009DF8                     u6960:
  5568  009DF8  0E00               	movlw	0
  5569  009DFA                     u6970:
  5570  009DFA  0102               	movlb	2	; () banked
  5571  009DFC  6F26               	movwf	MangleSerial@b12UC& (0+255),b
  5572                           
  5573                           ; BSR set to: 2
  5574                           ;mastercomms.c: 195: xorOutputUC = b0UC ^ b1UC ^ b2UC ^ b4UC ^ b6UC ^ b10UC ^ b12UC;
  5575  009DFE  0102               	movlb	2	; () banked
  5576  009E00  5120               	movf	MangleSerial@b0UC& (0+255),w,b
  5577  009E02  0102               	movlb	2	; () banked
  5578  009E04  1921               	xorwf	MangleSerial@b1UC& (0+255),w,b
  5579  009E06  0102               	movlb	2	; () banked
  5580  009E08  1922               	xorwf	MangleSerial@b2UC& (0+255),w,b
  5581  009E0A  0102               	movlb	2	; () banked
  5582  009E0C  1923               	xorwf	MangleSerial@b4UC& (0+255),w,b
  5583  009E0E  0102               	movlb	2	; () banked
  5584  009E10  1924               	xorwf	MangleSerial@b6UC& (0+255),w,b
  5585  009E12  0102               	movlb	2	; () banked
  5586  009E14  1925               	xorwf	MangleSerial@b10UC& (0+255),w,b
  5587  009E16  0102               	movlb	2	; () banked
  5588  009E18  1926               	xorwf	MangleSerial@b12UC& (0+255),w,b
  5589  009E1A  0102               	movlb	2	; () banked
  5590  009E1C  6F1F               	movwf	MangleSerial@xorOutputUC& (0+255),b
  5591                           
  5592                           ; BSR set to: 2
  5593                           ;mastercomms.c: 196: mangleValueUS = (mangleValueUS >> 1) | (xorOutputUC?0b1000000000000
      +                          000:0);
  5594  009E1E  0102               	movlb	2	; () banked
  5595  009E20  511F               	movf	MangleSerial@xorOutputUC& (0+255),w,b
  5596  009E22  0102               	movlb	2	; () banked
  5597  009E24  A4D8               	btfss	status,2,c
  5598  009E26  D002               	goto	l6355
  5599                           
  5600                           ; BSR set to: 2
  5601  009E28  0E00               	movlw	0
  5602  009E2A  D001               	goto	L5
  5603  009E2C                     l6355:
  5604                           
  5605                           ; BSR set to: 2
  5606  009E2C  0E80               	movlw	128
  5607  009E2E                     L5:
  5608  009E2E  0102               	movlb	2	; () banked
  5609  009E30  6F28               	movwf	(_MangleSerial$2317+1)& (0+255),b
  5610  009E32  0E00               	movlw	0
  5611  009E34  6F27               	movwf	_MangleSerial$2317& (0+255),b
  5612                           
  5613                           ; BSR set to: 2
  5614                           
  5615                           ; BSR set to: 2
  5616  009E36  90D8               	bcf	status,0,c
  5617  009E38  0102               	movlb	2	; () banked
  5618  009E3A  311C               	rrcf	(MangleSerial@mangleValueUS+1)& (0+255),w,b
  5619  009E3C  0102               	movlb	2	; () banked
  5620  009E3E  6F1E               	movwf	(??_MangleSerial+1)& (0+255),b
  5621  009E40  0102               	movlb	2	; () banked
  5622  009E42  311B               	rrcf	MangleSerial@mangleValueUS& (0+255),w,b
  5623  009E44  0102               	movlb	2	; () banked
  5624  009E46  6F1D               	movwf	??_MangleSerial& (0+255),b
  5625  009E48  0102               	movlb	2	; () banked
  5626  009E4A  5127               	movf	_MangleSerial$2317& (0+255),w,b
  5627  009E4C  0102               	movlb	2	; () banked
  5628  009E4E  111D               	iorwf	??_MangleSerial& (0+255),w,b
  5629  009E50  0102               	movlb	2	; () banked
  5630  009E52  6F1B               	movwf	MangleSerial@mangleValueUS& (0+255),b
  5631  009E54  0102               	movlb	2	; () banked
  5632  009E56  5128               	movf	(_MangleSerial$2317+1)& (0+255),w,b
  5633  009E58  0102               	movlb	2	; () banked
  5634  009E5A  111E               	iorwf	(??_MangleSerial+1)& (0+255),w,b
  5635  009E5C  0102               	movlb	2	; () banked
  5636  009E5E  6F1C               	movwf	(MangleSerial@mangleValueUS+1)& (0+255),b
  5637                           
  5638                           ; BSR set to: 2
  5639                           ;mastercomms.c: 197: if(!mangleValueUS)
  5640  009E60  0102               	movlb	2	; () banked
  5641  009E62  511B               	movf	MangleSerial@mangleValueUS& (0+255),w,b
  5642  009E64  0102               	movlb	2	; () banked
  5643  009E66  111C               	iorwf	(MangleSerial@mangleValueUS+1)& (0+255),w,b
  5644  009E68  A4D8               	btfss	status,2,c
  5645  009E6A  D005               	goto	l6363
  5646                           
  5647                           ; BSR set to: 2
  5648                           ;mastercomms.c: 198: mangleValueUS = 1;
  5649  009E6C  0E00               	movlw	0
  5650  009E6E  0102               	movlb	2	; () banked
  5651  009E70  6F1C               	movwf	(MangleSerial@mangleValueUS+1)& (0+255),b
  5652  009E72  0E01               	movlw	1
  5653  009E74  6F1B               	movwf	MangleSerial@mangleValueUS& (0+255),b
  5654  009E76                     l6363:
  5655                           
  5656                           ; BSR set to: 2
  5657  009E76  0102               	movlb	2	; () banked
  5658  009E78  2B29               	incf	MangleSerial@cycleCountUC& (0+255),f,b
  5659  009E7A  D784               	goto	l6343
  5660  009E7C                     l848:
  5661                           
  5662                           ; BSR set to: 2
  5663                           ;mastercomms.c: 199: }
  5664                           ;mastercomms.c: 201: __nop();
  5665  009E7C  F000               	nop	
  5666                           
  5667                           ;mastercomms.c: 203: return mangleValueUS;
  5668  009E7E  C21B  F21B         	movff	MangleSerial@mangleValueUS,?_MangleSerial
  5669  009E82  C21C  F21C         	movff	MangleSerial@mangleValueUS+1,?_MangleSerial+1
  5670  009E86  0012               	return		;funcret
  5671  009E88                     __end_of_MangleSerial:
  5672                           	opt stack 0
  5673                           tblptru	equ	0xFF8
  5674                           tblptrh	equ	0xFF7
  5675                           tblptrl	equ	0xFF6
  5676                           tablat	equ	0xFF5
  5677                           prodh	equ	0xFF4
  5678                           prodl	equ	0xFF3
  5679                           intcon	equ	0xFF2
  5680                           postinc0	equ	0xFEE
  5681                           wreg	equ	0xFE8
  5682                           indf1	equ	0xFE7
  5683                           postinc1	equ	0xFE6
  5684                           postdec1	equ	0xFE5
  5685                           fsr1h	equ	0xFE2
  5686                           fsr1l	equ	0xFE1
  5687                           indf2	equ	0xFDF
  5688                           postinc2	equ	0xFDE
  5689                           postdec2	equ	0xFDD
  5690                           fsr2h	equ	0xFDA
  5691                           fsr2l	equ	0xFD9
  5692                           status	equ	0xFD8
  5693                           
  5694 ;; *************** function _LineIdleST7540 *****************
  5695 ;; Defined at:
  5696 ;;		line 242 in file "ST7540.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;		None
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      unsigned char 
  5703 ;; Registers used:
  5704 ;;		wreg
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;Total ram usage:        0 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    7
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_RetransmitMessageSt7540
  5721 ;;		_CollisionCheck
  5722 ;;		_CreateAndSend
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           	psect	text27
  5727  00B622                     __ptext27:
  5728                           	opt stack 0
  5729  00B622                     _LineIdleST7540:
  5730                           	opt stack 20
  5731                           
  5732                           ;ST7540.c: 243: if(PORTCbits.RC2)
  5733                           
  5734                           ;incstack = 0
  5735  00B622  A482               	btfss	3970,2,c	;volatile
  5736  00B624  D002               	goto	l6309
  5737                           
  5738                           ;ST7540.c: 244: return 0;
  5739  00B626  0E00               	movlw	0
  5740  00B628  0012               	return	
  5741  00B62A                     l6309:
  5742                           
  5743                           ;ST7540.c: 245: return 1;
  5744  00B62A  0E01               	movlw	1
  5745  00B62C  0012               	return	
  5746  00B62E                     __end_of_LineIdleST7540:
  5747                           	opt stack 0
  5748                           tblptru	equ	0xFF8
  5749                           tblptrh	equ	0xFF7
  5750                           tblptrl	equ	0xFF6
  5751                           tablat	equ	0xFF5
  5752                           prodh	equ	0xFF4
  5753                           prodl	equ	0xFF3
  5754                           intcon	equ	0xFF2
  5755                           postinc0	equ	0xFEE
  5756                           wreg	equ	0xFE8
  5757                           indf1	equ	0xFE7
  5758                           postinc1	equ	0xFE6
  5759                           postdec1	equ	0xFE5
  5760                           fsr1h	equ	0xFE2
  5761                           fsr1l	equ	0xFE1
  5762                           indf2	equ	0xFDF
  5763                           postinc2	equ	0xFDE
  5764                           postdec2	equ	0xFDD
  5765                           fsr2h	equ	0xFDA
  5766                           fsr2l	equ	0xFD9
  5767                           status	equ	0xFD8
  5768                           
  5769 ;; *************** function _ForceFiringMode *****************
  5770 ;; Defined at:
  5771 ;;		line 147 in file "mastercomms.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;  forceModeUC     1    wreg     unsigned char 
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;  forceModeUC     1   28[BANK2 ] unsigned char 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      void 
  5778 ;; Registers used:
  5779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;Total ram usage:        1 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    9
  5792 ;; This function calls:
  5793 ;;		_ClearPastValues
  5794 ;;		_ResetBoosterStates
  5795 ;; This function is called by:
  5796 ;;		_ProcessMasterComms
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text28
  5801  00AFF4                     __ptext28:
  5802                           	opt stack 0
  5803  00AFF4                     _ForceFiringMode:
  5804                           	opt stack 20
  5805                           
  5806                           ;incstack = 0
  5807                           ;ForceFiringMode@forceModeUC stored from wreg
  5808  00AFF4  0102               	movlb	2	; () banked
  5809  00AFF6  6F1D               	movwf	ForceFiringMode@forceModeUC& (0+255),b
  5810                           
  5811                           ;mastercomms.c: 149: if(forceModeUC == 0 && !(statusFlagsUSLG & 0b0100000000000000000000
      +                          00)){
  5812  00AFF8  0102               	movlb	2	; () banked
  5813  00AFFA  511D               	movf	ForceFiringMode@forceModeUC& (0+255),w,b
  5814  00AFFC  0102               	movlb	2	; () banked
  5815  00AFFE  A4D8               	btfss	status,2,c
  5816  00B000  D009               	goto	l5263
  5817                           
  5818                           ; BSR set to: 2
  5819  00B002  0102               	movlb	2	; () banked
  5820  00B004  BD8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
  5821  00B006  D006               	goto	l5263
  5822                           
  5823                           ; BSR set to: 2
  5824                           ;mastercomms.c: 150: LATDbits.LATD7 = 0;
  5825  00B008  9E8C               	bcf	3980,7,c	;volatile
  5826                           
  5827                           ; BSR set to: 2
  5828                           ;mastercomms.c: 151: ResetBoosterStates();
  5829  00B00A  EC61  F05A         	call	_ResetBoosterStates	;wreg free
  5830                           
  5831                           ;mastercomms.c: 152: ClearPastValues();
  5832  00B00E  EC52  F05A         	call	_ClearPastValues	;wreg free
  5833                           
  5834                           ;mastercomms.c: 153: }else{
  5835  00B012  0012               	return	
  5836  00B014                     l5263:
  5837                           
  5838                           ;mastercomms.c: 154: statusFlagsUSLG |= 0b000000000000000000000010;
  5839  00B014  0102               	movlb	2	; () banked
  5840  00B016  838A               	bsf	_statusFlagsUSLG& (0+255),1,b	;volatile
  5841                           
  5842                           ;mastercomms.c: 155: statusFlagsUSLG &= ~0b001000000000000000000000;
  5843  00B018  0102               	movlb	2	; () banked
  5844  00B01A  9B8C               	bcf	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
  5845                           
  5846                           ;mastercomms.c: 156: statusFlagsUSLG |= 0b000000001000000000000000;
  5847  00B01C  0102               	movlb	2	; () banked
  5848  00B01E  8F8B               	bsf	(_statusFlagsUSLG+1)& (0+255),7,b	;volatile
  5849                           
  5850                           ; BSR set to: 2
  5851                           ;mastercomms.c: 157: if(!(statusFlagsUSLG & 0b000000000000000000100000) ||((statusFlagsU
      +                          SLG & 0b000000000000000000100000)&& (ISO_COUNTER >= 15)))
  5852  00B020  0102               	movlb	2	; () banked
  5853  00B022  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
  5854  00B024  D007               	goto	l837
  5855                           
  5856                           ; BSR set to: 2
  5857  00B026  0102               	movlb	2	; () banked
  5858  00B028  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
  5859  00B02A  D005               	goto	l835
  5860                           
  5861                           ; BSR set to: 2
  5862  00B02C  0E0E               	movlw	14
  5863  00B02E  0102               	movlb	2	; () banked
  5864  00B030  65A1               	cpfsgt	_ISO_COUNTER& (0+255),b
  5865  00B032  D001               	goto	l835
  5866  00B034                     l837:
  5867                           
  5868                           ; BSR set to: 2
  5869                           ;mastercomms.c: 158: LATDbits.LATD7 = 1;
  5870  00B034  8E8C               	bsf	3980,7,c	;volatile
  5871  00B036                     l835:
  5872                           
  5873                           ; BSR set to: 2
  5874                           ;mastercomms.c: 159: LATBbits.LATB3 = 0;
  5875  00B036  968A               	bcf	3978,3,c	;volatile
  5876  00B038  0012               	return	
  5877  00B03A                     __end_of_ForceFiringMode:
  5878                           	opt stack 0
  5879                           tblptru	equ	0xFF8
  5880                           tblptrh	equ	0xFF7
  5881                           tblptrl	equ	0xFF6
  5882                           tablat	equ	0xFF5
  5883                           prodh	equ	0xFF4
  5884                           prodl	equ	0xFF3
  5885                           intcon	equ	0xFF2
  5886                           postinc0	equ	0xFEE
  5887                           wreg	equ	0xFE8
  5888                           indf1	equ	0xFE7
  5889                           postinc1	equ	0xFE6
  5890                           postdec1	equ	0xFE5
  5891                           fsr1h	equ	0xFE2
  5892                           fsr1l	equ	0xFE1
  5893                           indf2	equ	0xFDF
  5894                           postinc2	equ	0xFDE
  5895                           postdec2	equ	0xFDD
  5896                           fsr2h	equ	0xFDA
  5897                           fsr2l	equ	0xFD9
  5898                           status	equ	0xFD8
  5899                           
  5900 ;; *************** function _ClearPastValues *****************
  5901 ;; Defined at:
  5902 ;;		line 279 in file "mastercomms.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  boosterCount    1   27[BANK2 ] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;Total ram usage:        1 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    8
  5923 ;; This function calls:
  5924 ;;		_ClearPastValue
  5925 ;; This function is called by:
  5926 ;;		_ForceFiringMode
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text29
  5931  00B4A4                     __ptext29:
  5932                           	opt stack 0
  5933  00B4A4                     _ClearPastValues:
  5934                           	opt stack 20
  5935                           
  5936                           ;mastercomms.c: 280: unsigned char boosterCountUC;
  5937                           ;mastercomms.c: 282: for(boosterCountUC = 0; boosterCountUC < 31; boosterCountUC++)
  5938                           
  5939                           ;incstack = 0
  5940  00B4A4  0E00               	movlw	0
  5941  00B4A6  0102               	movlb	2	; () banked
  5942  00B4A8  6F1C               	movwf	ClearPastValues@boosterCountUC& (0+255),b
  5943  00B4AA                     l4653:
  5944                           
  5945                           ; BSR set to: 2
  5946  00B4AA  0E1E               	movlw	30
  5947  00B4AC  0102               	movlb	2	; () banked
  5948  00B4AE  651C               	cpfsgt	ClearPastValues@boosterCountUC& (0+255),b
  5949  00B4B0  D001               	goto	l4657
  5950  00B4B2  0012               	return	
  5951  00B4B4                     l4657:
  5952                           
  5953                           ; BSR set to: 2
  5954                           ;mastercomms.c: 283: ClearPastValue(boosterCountUC);
  5955  00B4B4  0102               	movlb	2	; () banked
  5956  00B4B6  511C               	movf	ClearPastValues@boosterCountUC& (0+255),w,b
  5957  00B4B8  EC1A  F056         	call	_ClearPastValue
  5958  00B4BC  0102               	movlb	2	; () banked
  5959  00B4BE  2B1C               	incf	ClearPastValues@boosterCountUC& (0+255),f,b
  5960  00B4C0  D7F4               	goto	l4653
  5961  00B4C2                     __end_of_ClearPastValues:
  5962                           	opt stack 0
  5963                           tblptru	equ	0xFF8
  5964                           tblptrh	equ	0xFF7
  5965                           tblptrl	equ	0xFF6
  5966                           tablat	equ	0xFF5
  5967                           prodh	equ	0xFF4
  5968                           prodl	equ	0xFF3
  5969                           intcon	equ	0xFF2
  5970                           postinc0	equ	0xFEE
  5971                           wreg	equ	0xFE8
  5972                           indf1	equ	0xFE7
  5973                           postinc1	equ	0xFE6
  5974                           postdec1	equ	0xFE5
  5975                           fsr1h	equ	0xFE2
  5976                           fsr1l	equ	0xFE1
  5977                           indf2	equ	0xFDF
  5978                           postinc2	equ	0xFDE
  5979                           postdec2	equ	0xFDD
  5980                           fsr2h	equ	0xFDA
  5981                           fsr2l	equ	0xFD9
  5982                           status	equ	0xFD8
  5983                           
  5984 ;; *************** function _ClearPastValue *****************
  5985 ;; Defined at:
  5986 ;;		line 272 in file "mastercomms.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  valuePosUC      1    wreg     unsigned char 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  valuePosUC      1   26[BANK2 ] unsigned char 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6004 ;;Total ram usage:        1 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    7
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		_ClearPastValues
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text30
  6015  00AC34                     __ptext30:
  6016                           	opt stack 0
  6017  00AC34                     _ClearPastValue:
  6018                           	opt stack 20
  6019                           
  6020                           ; BSR set to: 2
  6021                           ;incstack = 0
  6022                           ;ClearPastValue@valuePosUC stored from wreg
  6023  00AC34  0102               	movlb	2	; () banked
  6024  00AC36  6F1B               	movwf	ClearPastValue@valuePosUC& (0+255),b
  6025                           
  6026                           ;mastercomms.c: 273: pastBoosterValuesUSAG[0][valuePosUC] = 0;
  6027  00AC38  0102               	movlb	2	; () banked
  6028  00AC3A  511B               	movf	ClearPastValue@valuePosUC& (0+255),w,b
  6029  00AC3C  0D02               	mullw	2
  6030  00AC3E  0E00               	movlw	low _pastBoosterValuesUSAG
  6031  00AC40  24F3               	addwf	prodl,w,c
  6032  00AC42  6ED9               	movwf	fsr2l,c
  6033  00AC44  0E06               	movlw	high _pastBoosterValuesUSAG
  6034  00AC46  20F4               	addwfc	prodh,w,c
  6035  00AC48  6EDA               	movwf	fsr2h,c
  6036  00AC4A  0E00               	movlw	0
  6037  00AC4C  6EDE               	movwf	postinc2,c
  6038  00AC4E  0E00               	movlw	0
  6039  00AC50  6EDD               	movwf	postdec2,c
  6040                           
  6041                           ;mastercomms.c: 274: pastBoosterValuesUSAG[1][valuePosUC] = 0;
  6042  00AC52  0102               	movlb	2	; () banked
  6043  00AC54  511B               	movf	ClearPastValue@valuePosUC& (0+255),w,b
  6044  00AC56  0D02               	mullw	2
  6045  00AC58  0E3E               	movlw	low (_pastBoosterValuesUSAG+62)
  6046  00AC5A  24F3               	addwf	prodl,w,c
  6047  00AC5C  6ED9               	movwf	fsr2l,c
  6048  00AC5E  0E06               	movlw	high (_pastBoosterValuesUSAG+62)
  6049  00AC60  20F4               	addwfc	prodh,w,c
  6050  00AC62  6EDA               	movwf	fsr2h,c
  6051  00AC64  0E00               	movlw	0
  6052  00AC66  6EDE               	movwf	postinc2,c
  6053  00AC68  0E00               	movlw	0
  6054  00AC6A  6EDD               	movwf	postdec2,c
  6055                           
  6056                           ;mastercomms.c: 275: pastBoosterValuesUSAG[2][valuePosUC] = 0;
  6057  00AC6C  0102               	movlb	2	; () banked
  6058  00AC6E  511B               	movf	ClearPastValue@valuePosUC& (0+255),w,b
  6059  00AC70  0D02               	mullw	2
  6060  00AC72  0E7C               	movlw	low (_pastBoosterValuesUSAG+124)
  6061  00AC74  24F3               	addwf	prodl,w,c
  6062  00AC76  6ED9               	movwf	fsr2l,c
  6063  00AC78  0E06               	movlw	high (_pastBoosterValuesUSAG+124)
  6064  00AC7A  20F4               	addwfc	prodh,w,c
  6065  00AC7C  6EDA               	movwf	fsr2h,c
  6066  00AC7E  0E00               	movlw	0
  6067  00AC80  6EDE               	movwf	postinc2,c
  6068  00AC82  0E00               	movlw	0
  6069  00AC84  6EDD               	movwf	postdec2,c
  6070                           
  6071                           ;mastercomms.c: 276: pastBoosterValuesUSAG[3][valuePosUC] = 0;
  6072  00AC86  0102               	movlb	2	; () banked
  6073  00AC88  511B               	movf	ClearPastValue@valuePosUC& (0+255),w,b
  6074  00AC8A  0D02               	mullw	2
  6075  00AC8C  0EBA               	movlw	low (_pastBoosterValuesUSAG+186)
  6076  00AC8E  24F3               	addwf	prodl,w,c
  6077  00AC90  6ED9               	movwf	fsr2l,c
  6078  00AC92  0E06               	movlw	high (_pastBoosterValuesUSAG+186)
  6079  00AC94  20F4               	addwfc	prodh,w,c
  6080  00AC96  6EDA               	movwf	fsr2h,c
  6081  00AC98  0E00               	movlw	0
  6082  00AC9A  6EDE               	movwf	postinc2,c
  6083  00AC9C  0E00               	movlw	0
  6084  00AC9E  6EDD               	movwf	postdec2,c
  6085                           
  6086                           ; BSR set to: 2
  6087  00ACA0  0012               	return		;funcret
  6088  00ACA2                     __end_of_ClearPastValue:
  6089                           	opt stack 0
  6090                           tblptru	equ	0xFF8
  6091                           tblptrh	equ	0xFF7
  6092                           tblptrl	equ	0xFF6
  6093                           tablat	equ	0xFF5
  6094                           prodh	equ	0xFF4
  6095                           prodl	equ	0xFF3
  6096                           intcon	equ	0xFF2
  6097                           postinc0	equ	0xFEE
  6098                           wreg	equ	0xFE8
  6099                           indf1	equ	0xFE7
  6100                           postinc1	equ	0xFE6
  6101                           postdec1	equ	0xFE5
  6102                           fsr1h	equ	0xFE2
  6103                           fsr1l	equ	0xFE1
  6104                           indf2	equ	0xFDF
  6105                           postinc2	equ	0xFDE
  6106                           postdec2	equ	0xFDD
  6107                           fsr2h	equ	0xFDA
  6108                           fsr2l	equ	0xFD9
  6109                           status	equ	0xFD8
  6110                           
  6111 ;; *************** function _DataReadyST7540 *****************
  6112 ;; Defined at:
  6113 ;;		line 356 in file "ST7540.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;		None
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      unsigned char 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6131 ;;Total ram usage:        0 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; Hardware stack levels required when called:    7
  6134 ;; This function calls:
  6135 ;;		Nothing
  6136 ;; This function is called by:
  6137 ;;		_ProcessMasterComms
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text31
  6142  00B65A                     __ptext31:
  6143                           	opt stack 0
  6144  00B65A                     _DataReadyST7540:
  6145                           	opt stack 22
  6146                           
  6147                           ;ST7540.c: 357: return (flagST7540UCG & 4);
  6148                           
  6149                           ; BSR set to: 2
  6150                           ;incstack = 0
  6151  00B65A  0102               	movlb	2	; () banked
  6152  00B65C  51A8               	movf	_flagST7540UCG& (0+255),w,b
  6153  00B65E  0B04               	andlw	4
  6154  00B660  0012               	return	
  6155  00B662                     __end_of_DataReadyST7540:
  6156                           	opt stack 0
  6157                           tblptru	equ	0xFF8
  6158                           tblptrh	equ	0xFF7
  6159                           tblptrl	equ	0xFF6
  6160                           tablat	equ	0xFF5
  6161                           prodh	equ	0xFF4
  6162                           prodl	equ	0xFF3
  6163                           intcon	equ	0xFF2
  6164                           postinc0	equ	0xFEE
  6165                           wreg	equ	0xFE8
  6166                           indf1	equ	0xFE7
  6167                           postinc1	equ	0xFE6
  6168                           postdec1	equ	0xFE5
  6169                           fsr1h	equ	0xFE2
  6170                           fsr1l	equ	0xFE1
  6171                           indf2	equ	0xFDF
  6172                           postinc2	equ	0xFDE
  6173                           postdec2	equ	0xFDD
  6174                           fsr2h	equ	0xFDA
  6175                           fsr2l	equ	0xFD9
  6176                           status	equ	0xFD8
  6177                           
  6178 ;; *************** function _InitSystem *****************
  6179 ;; Defined at:
  6180 ;;		line 89 in file "main.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      void 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;Total ram usage:        0 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    7
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		_main
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text32
  6209  00AACC                     __ptext32:
  6210                           	opt stack 0
  6211  00AACC                     _InitSystem:
  6212                           	opt stack 23
  6213                           
  6214                           ;main.c: 94: OSCTUNEbits.PLLEN = 1;
  6215                           
  6216                           ; BSR set to: 2
  6217                           ;incstack = 0
  6218  00AACC  8C9B               	bsf	3995,6,c	;volatile
  6219                           
  6220                           ;main.c: 95: OSCCONbits.IRCF = 0b110;
  6221  00AACE  50D3               	movf	4051,w,c	;volatile
  6222  00AAD0  0B8F               	andlw	-113
  6223  00AAD2  0960               	iorlw	96
  6224  00AAD4  6ED3               	movwf	4051,c	;volatile
  6225                           
  6226                           ;main.c: 98: PR2 = 150;
  6227  00AAD6  0E96               	movlw	150
  6228  00AAD8  6ECB               	movwf	4043,c	;volatile
  6229                           
  6230                           ;main.c: 99: T2CONbits.T2OUTPS = 0b0111;
  6231  00AADA  50CA               	movf	4042,w,c	;volatile
  6232  00AADC  0B87               	andlw	-121
  6233  00AADE  0938               	iorlw	56
  6234  00AAE0  6ECA               	movwf	4042,c	;volatile
  6235                           
  6236                           ;main.c: 100: PIR1bits.TMR2IF = 0;
  6237  00AAE2  929E               	bcf	3998,1,c	;volatile
  6238                           
  6239                           ;main.c: 101: PIE1bits.TMR2IE = 1;
  6240  00AAE4  829D               	bsf	3997,1,c	;volatile
  6241                           
  6242                           ;main.c: 102: T2CONbits.TMR2ON = 1;
  6243  00AAE6  84CA               	bsf	4042,2,c	;volatile
  6244                           
  6245                           ;main.c: 103: INTCONbits.PEIE = 1;
  6246  00AAE8  8CF2               	bsf	intcon,6,c	;volatile
  6247                           
  6248                           ;main.c: 104: INTCONbits.GIE = 1;
  6249  00AAEA  8EF2               	bsf	intcon,7,c	;volatile
  6250                           
  6251                           ;main.c: 107: ADCON1bits.ACQT = 0b001;
  6252  00AAEC  50C1               	movf	4033,w,c	;volatile
  6253  00AAEE  0BC7               	andlw	-57
  6254  00AAF0  0908               	iorlw	8
  6255  00AAF2  6EC1               	movwf	4033,c	;volatile
  6256                           
  6257                           ;main.c: 108: ADCON1bits.ADCS = 0b110;
  6258  00AAF4  50C1               	movf	4033,w,c	;volatile
  6259  00AAF6  0BF8               	andlw	-8
  6260  00AAF8  0906               	iorlw	6
  6261  00AAFA  6EC1               	movwf	4033,c	;volatile
  6262                           
  6263                           ;main.c: 109: ADCON1bits.ADFM = 1;
  6264  00AAFC  8EC1               	bsf	4033,7,c	;volatile
  6265                           
  6266                           ;main.c: 110: ADCON0bits.ADON = 1;
  6267  00AAFE  80C2               	bsf	4034,0,c	;volatile
  6268                           
  6269                           ;main.c: 112: TRISAbits.TRISA5 = 1;
  6270  00AB00  8A92               	bsf	3986,5,c	;volatile
  6271                           
  6272                           ;main.c: 115: TRISBbits.TRISB7 =0;
  6273  00AB02  9E93               	bcf	3987,7,c	;volatile
  6274                           
  6275                           ;main.c: 116: TRISBbits.TRISB6 =0;
  6276  00AB04  9C93               	bcf	3987,6,c	;volatile
  6277                           
  6278                           ;main.c: 117: LATBbits.LATB7 =0;
  6279  00AB06  9E8A               	bcf	3978,7,c	;volatile
  6280                           
  6281                           ;main.c: 118: LATBbits.LATB6 =0;
  6282  00AB08  9C8A               	bcf	3978,6,c	;volatile
  6283                           
  6284                           ;main.c: 121: TRISAbits.TRISA6 = 0;
  6285  00AB0A  9C92               	bcf	3986,6,c	;volatile
  6286                           
  6287                           ;main.c: 122: TRISBbits.TRISB3 = 0;
  6288  00AB0C  9693               	bcf	3987,3,c	;volatile
  6289                           
  6290                           ;main.c: 123: TRISCbits.TRISC0 = 0;
  6291  00AB0E  9094               	bcf	3988,0,c	;volatile
  6292                           
  6293                           ;main.c: 124: LATAbits.LATA6 = 0;
  6294  00AB10  9C89               	bcf	3977,6,c	;volatile
  6295                           
  6296                           ;main.c: 125: LATBbits.LATB3 = 0;
  6297  00AB12  968A               	bcf	3978,3,c	;volatile
  6298                           
  6299                           ;main.c: 126: LATCbits.LATC0 = 0;
  6300  00AB14  908B               	bcf	3979,0,c	;volatile
  6301                           
  6302                           ;main.c: 130: TRISCbits.TRISC4 = 0;
  6303  00AB16  9894               	bcf	3988,4,c	;volatile
  6304                           
  6305                           ;main.c: 131: LATCbits.LATC4 = 0;
  6306  00AB18  988B               	bcf	3979,4,c	;volatile
  6307                           
  6308                           ;main.c: 134: TRISDbits.TRISD7 = 0;
  6309  00AB1A  9E95               	bcf	3989,7,c	;volatile
  6310                           
  6311                           ;main.c: 135: LATDbits.LATD7 = 0;
  6312  00AB1C  9E8C               	bcf	3980,7,c	;volatile
  6313                           
  6314                           ;main.c: 137: TRISAbits.TRISA5 = 0;
  6315  00AB1E  9A92               	bcf	3986,5,c	;volatile
  6316                           
  6317                           ;main.c: 138: LATAbits.LATA5 = 0;
  6318  00AB20  9A89               	bcf	3977,5,c	;volatile
  6319                           
  6320                           ;main.c: 139: statusFlagsUSLG |= 0b000000010000000000000000;
  6321  00AB22  0102               	movlb	2	; () banked
  6322  00AB24  818C               	bsf	(_statusFlagsUSLG+2)& (0+255),0,b	;volatile
  6323                           
  6324                           ; BSR set to: 2
  6325                           ;main.c: 142: TRISAbits.TRISA2 = 0;
  6326  00AB26  9492               	bcf	3986,2,c	;volatile
  6327                           
  6328                           ; BSR set to: 2
  6329                           ;main.c: 143: LATAbits.LATA2 = 0;
  6330  00AB28  9489               	bcf	3977,2,c	;volatile
  6331                           
  6332                           ; BSR set to: 2
  6333                           ;main.c: 145: TRISBbits.TRISB2 = 0;
  6334  00AB2A  9493               	bcf	3987,2,c	;volatile
  6335                           
  6336                           ; BSR set to: 2
  6337                           ;main.c: 146: LATBbits.LATB2 = 1;
  6338  00AB2C  848A               	bsf	3978,2,c	;volatile
  6339                           
  6340                           ; BSR set to: 2
  6341                           ;main.c: 148: TRISDbits.TRISD1 = 0;
  6342  00AB2E  9295               	bcf	3989,1,c	;volatile
  6343                           
  6344                           ; BSR set to: 2
  6345                           ;main.c: 149: LATDbits.LATD1 = 1;
  6346  00AB30  828C               	bsf	3980,1,c	;volatile
  6347                           
  6348                           ; BSR set to: 2
  6349                           ;main.c: 151: TRISBbits.TRISB1 = 1;
  6350  00AB32  8293               	bsf	3987,1,c	;volatile
  6351                           
  6352                           ; BSR set to: 2
  6353                           ;main.c: 152: ANCON1bits.PCFG10 = 0;
  6354  00AB34  010F               	movlb	15	; () banked
  6355  00AB36  9549               	bcf	73,2,b	;volatile
  6356                           
  6357                           ; BSR set to: 15
  6358                           ;main.c: 155: TRISAbits.TRISA1 = 1;
  6359  00AB38  8292               	bsf	3986,1,c	;volatile
  6360                           
  6361                           ; BSR set to: 15
  6362                           ;main.c: 156: ANCON0bits.PCFG1 = 0;
  6363  00AB3A  010F               	movlb	15	; () banked
  6364  00AB3C  9348               	bcf	72,1,b	;volatile
  6365                           
  6366                           ; BSR set to: 15
  6367                           ;main.c: 158: TRISEbits.TRISE1 = 1;
  6368  00AB3E  8296               	bsf	3990,1,c	;volatile
  6369                           
  6370                           ; BSR set to: 15
  6371                           ;main.c: 159: ANCON0bits.PCFG6 = 0;
  6372  00AB40  010F               	movlb	15	; () banked
  6373  00AB42  9D48               	bcf	72,6,b	;volatile
  6374                           
  6375                           ; BSR set to: 15
  6376                           ;main.c: 162: TRISEbits.TRISE0 = 0;
  6377  00AB44  9096               	bcf	3990,0,c	;volatile
  6378                           
  6379                           ; BSR set to: 15
  6380                           ;main.c: 163: LATEbits.LATE0 = 0;
  6381  00AB46  908D               	bcf	3981,0,c	;volatile
  6382                           
  6383                           ; BSR set to: 15
  6384                           ;main.c: 166: LATDbits.LATD7 = 1;
  6385  00AB48  8E8C               	bsf	3980,7,c	;volatile
  6386                           
  6387                           ; BSR set to: 15
  6388  00AB4A  0012               	return		;funcret
  6389  00AB4C                     __end_of_InitSystem:
  6390                           	opt stack 0
  6391                           tblptru	equ	0xFF8
  6392                           tblptrh	equ	0xFF7
  6393                           tblptrl	equ	0xFF6
  6394                           tablat	equ	0xFF5
  6395                           prodh	equ	0xFF4
  6396                           prodl	equ	0xFF3
  6397                           intcon	equ	0xFF2
  6398                           postinc0	equ	0xFEE
  6399                           wreg	equ	0xFE8
  6400                           indf1	equ	0xFE7
  6401                           postinc1	equ	0xFE6
  6402                           postdec1	equ	0xFE5
  6403                           fsr1h	equ	0xFE2
  6404                           fsr1l	equ	0xFE1
  6405                           indf2	equ	0xFDF
  6406                           postinc2	equ	0xFDE
  6407                           postdec2	equ	0xFDD
  6408                           fsr2h	equ	0xFDA
  6409                           fsr2l	equ	0xFD9
  6410                           status	equ	0xFD8
  6411                           
  6412 ;; *************** function _InitStates *****************
  6413 ;; Defined at:
  6414 ;;		line 169 in file "main.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;		None
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      void 
  6421 ;; Registers used:
  6422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;Total ram usage:        0 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:   11
  6435 ;; This function calls:
  6436 ;;		_ClearPacketNumbers
  6437 ;;		_ReadFlashValues
  6438 ;;		_ResetBoosterStates
  6439 ;; This function is called by:
  6440 ;;		_main
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text33
  6445  00B606                     __ptext33:
  6446                           	opt stack 0
  6447  00B606                     _InitStates:
  6448                           	opt stack 19
  6449                           
  6450                           ;main.c: 171: ResetBoosterStates();
  6451                           
  6452                           ; BSR set to: 15
  6453                           ;incstack = 0
  6454  00B606  EC61  F05A         	call	_ResetBoosterStates	;wreg free
  6455                           
  6456                           ;main.c: 172: ReadFlashValues();
  6457  00B60A  EC39  F053         	call	_ReadFlashValues	;wreg free
  6458                           
  6459                           ;main.c: 173: ClearPacketNumbers();
  6460  00B60E  ECB2  F057         	call	_ClearPacketNumbers	;wreg free
  6461  00B612  0012               	return		;funcret
  6462  00B614                     __end_of_InitStates:
  6463                           	opt stack 0
  6464                           tblptru	equ	0xFF8
  6465                           tblptrh	equ	0xFF7
  6466                           tblptrl	equ	0xFF6
  6467                           tablat	equ	0xFF5
  6468                           prodh	equ	0xFF4
  6469                           prodl	equ	0xFF3
  6470                           intcon	equ	0xFF2
  6471                           postinc0	equ	0xFEE
  6472                           wreg	equ	0xFE8
  6473                           indf1	equ	0xFE7
  6474                           postinc1	equ	0xFE6
  6475                           postdec1	equ	0xFE5
  6476                           fsr1h	equ	0xFE2
  6477                           fsr1l	equ	0xFE1
  6478                           indf2	equ	0xFDF
  6479                           postinc2	equ	0xFDE
  6480                           postdec2	equ	0xFDD
  6481                           fsr2h	equ	0xFDA
  6482                           fsr2l	equ	0xFD9
  6483                           status	equ	0xFD8
  6484                           
  6485 ;; *************** function _ResetBoosterStates *****************
  6486 ;; Defined at:
  6487 ;;		line 589 in file "boostercomms.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;		None
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  boosterCount    1   27[BANK2 ] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      void 
  6494 ;; Registers used:
  6495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6502 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6505 ;;Total ram usage:        1 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; Hardware stack levels required when called:    8
  6508 ;; This function calls:
  6509 ;;		_ResetSingleBoosterState
  6510 ;; This function is called by:
  6511 ;;		_InitStates
  6512 ;;		_ForceFiringMode
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text34
  6517  00B4C2                     __ptext34:
  6518                           	opt stack 0
  6519  00B4C2                     _ResetBoosterStates:
  6520                           	opt stack 20
  6521                           
  6522                           ;boostercomms.c: 590: unsigned char boosterCountUC;
  6523                           ;boostercomms.c: 592: for(boosterCountUC = 0; boosterCountUC < 30; boosterCountUC++)
  6524                           
  6525                           ;incstack = 0
  6526  00B4C2  0E00               	movlw	0
  6527  00B4C4  0102               	movlb	2	; () banked
  6528  00B4C6  6F1C               	movwf	ResetBoosterStates@boosterCountUC& (0+255),b
  6529  00B4C8                     l4567:
  6530                           
  6531                           ; BSR set to: 2
  6532  00B4C8  0E1D               	movlw	29
  6533  00B4CA  0102               	movlb	2	; () banked
  6534  00B4CC  651C               	cpfsgt	ResetBoosterStates@boosterCountUC& (0+255),b
  6535  00B4CE  D001               	goto	l4571
  6536  00B4D0  0012               	return	
  6537  00B4D2                     l4571:
  6538                           
  6539                           ; BSR set to: 2
  6540                           ;boostercomms.c: 593: ResetSingleBoosterState(boosterCountUC);
  6541  00B4D2  0102               	movlb	2	; () banked
  6542  00B4D4  511C               	movf	ResetBoosterStates@boosterCountUC& (0+255),w,b
  6543  00B4D6  ECB1  F051         	call	_ResetSingleBoosterState
  6544  00B4DA  0102               	movlb	2	; () banked
  6545  00B4DC  2B1C               	incf	ResetBoosterStates@boosterCountUC& (0+255),f,b
  6546  00B4DE  D7F4               	goto	l4567
  6547  00B4E0                     __end_of_ResetBoosterStates:
  6548                           	opt stack 0
  6549                           tblptru	equ	0xFF8
  6550                           tblptrh	equ	0xFF7
  6551                           tblptrl	equ	0xFF6
  6552                           tablat	equ	0xFF5
  6553                           prodh	equ	0xFF4
  6554                           prodl	equ	0xFF3
  6555                           intcon	equ	0xFF2
  6556                           postinc0	equ	0xFEE
  6557                           wreg	equ	0xFE8
  6558                           indf1	equ	0xFE7
  6559                           postinc1	equ	0xFE6
  6560                           postdec1	equ	0xFE5
  6561                           fsr1h	equ	0xFE2
  6562                           fsr1l	equ	0xFE1
  6563                           indf2	equ	0xFDF
  6564                           postinc2	equ	0xFDE
  6565                           postdec2	equ	0xFDD
  6566                           fsr2h	equ	0xFDA
  6567                           fsr2l	equ	0xFD9
  6568                           status	equ	0xFD8
  6569                           
  6570 ;; *************** function _ResetSingleBoosterState *****************
  6571 ;; Defined at:
  6572 ;;		line 577 in file "boostercomms.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  boosterNumbe    1    wreg     unsigned char 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  boosterNumbe    1   26[BANK2 ] unsigned char 
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  1    wreg      void 
  6579 ;; Registers used:
  6580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;Total ram usage:        1 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:    7
  6593 ;; This function calls:
  6594 ;;		Nothing
  6595 ;; This function is called by:
  6596 ;;		_ResetBoosterStates
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text35
  6601  00A362                     __ptext35:
  6602                           	opt stack 0
  6603  00A362                     _ResetSingleBoosterState:
  6604                           	opt stack 20
  6605                           
  6606                           ; BSR set to: 2
  6607                           ;incstack = 0
  6608                           ;ResetSingleBoosterState@boosterNumberUC stored from wreg
  6609  00A362  0102               	movlb	2	; () banked
  6610  00A364  6F1B               	movwf	ResetSingleBoosterState@boosterNumberUC& (0+255),b
  6611                           
  6612                           ;boostercomms.c: 578: boosterCommsData[4][boosterNumberUC] = 10;
  6613  00A366  0102               	movlb	2	; () banked
  6614  00A368  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6615  00A36A  0D01               	mullw	1
  6616  00A36C  0E78               	movlw	low (_boosterCommsData+120)
  6617  00A36E  24F3               	addwf	prodl,w,c
  6618  00A370  6ED9               	movwf	fsr2l,c
  6619  00A372  0E04               	movlw	high (_boosterCommsData+120)
  6620  00A374  20F4               	addwfc	prodh,w,c
  6621  00A376  6EDA               	movwf	fsr2h,c
  6622  00A378  0E0A               	movlw	10
  6623  00A37A  6EDF               	movwf	indf2,c
  6624                           
  6625                           ;boostercomms.c: 579: boosterCommsData[5][boosterNumberUC] = 0;
  6626  00A37C  0102               	movlb	2	; () banked
  6627  00A37E  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6628  00A380  0D01               	mullw	1
  6629  00A382  0E96               	movlw	low (_boosterCommsData+150)
  6630  00A384  24F3               	addwf	prodl,w,c
  6631  00A386  6ED9               	movwf	fsr2l,c
  6632  00A388  0E04               	movlw	high (_boosterCommsData+150)
  6633  00A38A  20F4               	addwfc	prodh,w,c
  6634  00A38C  6EDA               	movwf	fsr2h,c
  6635  00A38E  0E00               	movlw	0
  6636  00A390  6EDF               	movwf	indf2,c
  6637                           
  6638                           ;boostercomms.c: 580: boosterCommsData[6][boosterNumberUC] = 0;
  6639  00A392  0102               	movlb	2	; () banked
  6640  00A394  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6641  00A396  0D01               	mullw	1
  6642  00A398  0EB4               	movlw	low (_boosterCommsData+180)
  6643  00A39A  24F3               	addwf	prodl,w,c
  6644  00A39C  6ED9               	movwf	fsr2l,c
  6645  00A39E  0E04               	movlw	high (_boosterCommsData+180)
  6646  00A3A0  20F4               	addwfc	prodh,w,c
  6647  00A3A2  6EDA               	movwf	fsr2h,c
  6648  00A3A4  0E00               	movlw	0
  6649  00A3A6  6EDF               	movwf	indf2,c
  6650                           
  6651                           ;boostercomms.c: 581: boosterCommsData[7][boosterNumberUC] = 0;
  6652  00A3A8  0102               	movlb	2	; () banked
  6653  00A3AA  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6654  00A3AC  0D01               	mullw	1
  6655  00A3AE  0ED2               	movlw	low (_boosterCommsData+210)
  6656  00A3B0  24F3               	addwf	prodl,w,c
  6657  00A3B2  6ED9               	movwf	fsr2l,c
  6658  00A3B4  0E04               	movlw	high (_boosterCommsData+210)
  6659  00A3B6  20F4               	addwfc	prodh,w,c
  6660  00A3B8  6EDA               	movwf	fsr2h,c
  6661  00A3BA  0E00               	movlw	0
  6662  00A3BC  6EDF               	movwf	indf2,c
  6663                           
  6664                           ;boostercomms.c: 582: boosterCommsData[0][boosterNumberUC] = 0;
  6665  00A3BE  0102               	movlb	2	; () banked
  6666  00A3C0  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6667  00A3C2  0D01               	mullw	1
  6668  00A3C4  0E00               	movlw	low _boosterCommsData
  6669  00A3C6  24F3               	addwf	prodl,w,c
  6670  00A3C8  6ED9               	movwf	fsr2l,c
  6671  00A3CA  0E04               	movlw	high _boosterCommsData
  6672  00A3CC  20F4               	addwfc	prodh,w,c
  6673  00A3CE  6EDA               	movwf	fsr2h,c
  6674  00A3D0  0E00               	movlw	0
  6675  00A3D2  6EDF               	movwf	indf2,c
  6676                           
  6677                           ;boostercomms.c: 583: boosterCommsData[1][boosterNumberUC] = 0;
  6678  00A3D4  0102               	movlb	2	; () banked
  6679  00A3D6  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6680  00A3D8  0D01               	mullw	1
  6681  00A3DA  0E1E               	movlw	low (_boosterCommsData+30)
  6682  00A3DC  24F3               	addwf	prodl,w,c
  6683  00A3DE  6ED9               	movwf	fsr2l,c
  6684  00A3E0  0E04               	movlw	high (_boosterCommsData+30)
  6685  00A3E2  20F4               	addwfc	prodh,w,c
  6686  00A3E4  6EDA               	movwf	fsr2h,c
  6687  00A3E6  0E00               	movlw	0
  6688  00A3E8  6EDF               	movwf	indf2,c
  6689                           
  6690                           ;boostercomms.c: 584: boosterCommsData[2][boosterNumberUC] = 0;
  6691  00A3EA  0102               	movlb	2	; () banked
  6692  00A3EC  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6693  00A3EE  0D01               	mullw	1
  6694  00A3F0  0E3C               	movlw	low (_boosterCommsData+60)
  6695  00A3F2  24F3               	addwf	prodl,w,c
  6696  00A3F4  6ED9               	movwf	fsr2l,c
  6697  00A3F6  0E04               	movlw	high (_boosterCommsData+60)
  6698  00A3F8  20F4               	addwfc	prodh,w,c
  6699  00A3FA  6EDA               	movwf	fsr2h,c
  6700  00A3FC  0E00               	movlw	0
  6701  00A3FE  6EDF               	movwf	indf2,c
  6702                           
  6703                           ;boostercomms.c: 585: boosterCommsData[3][boosterNumberUC] = 0;
  6704  00A400  0102               	movlb	2	; () banked
  6705  00A402  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6706  00A404  0D01               	mullw	1
  6707  00A406  0E5A               	movlw	low (_boosterCommsData+90)
  6708  00A408  24F3               	addwf	prodl,w,c
  6709  00A40A  6ED9               	movwf	fsr2l,c
  6710  00A40C  0E04               	movlw	high (_boosterCommsData+90)
  6711  00A40E  20F4               	addwfc	prodh,w,c
  6712  00A410  6EDA               	movwf	fsr2h,c
  6713  00A412  0E00               	movlw	0
  6714  00A414  6EDF               	movwf	indf2,c
  6715                           
  6716                           ;boostercomms.c: 586: boosterCommsDataSerial[boosterNumberUC] = 0;
  6717  00A416  0102               	movlb	2	; () banked
  6718  00A418  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6719  00A41A  0D02               	mullw	2
  6720  00A41C  0E00               	movlw	low _boosterCommsDataSerial
  6721  00A41E  24F3               	addwf	prodl,w,c
  6722  00A420  6ED9               	movwf	fsr2l,c
  6723  00A422  0E03               	movlw	high _boosterCommsDataSerial
  6724  00A424  20F4               	addwfc	prodh,w,c
  6725  00A426  6EDA               	movwf	fsr2h,c
  6726  00A428  0E00               	movlw	0
  6727  00A42A  6EDE               	movwf	postinc2,c
  6728  00A42C  0E00               	movlw	0
  6729  00A42E  6EDD               	movwf	postdec2,c
  6730                           
  6731                           ; BSR set to: 2
  6732  00A430  0012               	return		;funcret
  6733  00A432                     __end_of_ResetSingleBoosterState:
  6734                           	opt stack 0
  6735                           tblptru	equ	0xFF8
  6736                           tblptrh	equ	0xFF7
  6737                           tblptrl	equ	0xFF6
  6738                           tablat	equ	0xFF5
  6739                           prodh	equ	0xFF4
  6740                           prodl	equ	0xFF3
  6741                           intcon	equ	0xFF2
  6742                           postinc0	equ	0xFEE
  6743                           wreg	equ	0xFE8
  6744                           indf1	equ	0xFE7
  6745                           postinc1	equ	0xFE6
  6746                           postdec1	equ	0xFE5
  6747                           fsr1h	equ	0xFE2
  6748                           fsr1l	equ	0xFE1
  6749                           indf2	equ	0xFDF
  6750                           postinc2	equ	0xFDE
  6751                           postdec2	equ	0xFDD
  6752                           fsr2h	equ	0xFDA
  6753                           fsr2l	equ	0xFD9
  6754                           status	equ	0xFD8
  6755                           
  6756 ;; *************** function _ReadFlashValues *****************
  6757 ;; Defined at:
  6758 ;;		line 227 in file "peripherals.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;		None
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      void 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6775 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6776 ;;Total ram usage:        3 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:   10
  6779 ;; This function calls:
  6780 ;;		_FlashReadAddress
  6781 ;;		_WriteFlashValues
  6782 ;;		_getSerialFromMemory
  6783 ;; This function is called by:
  6784 ;;		_InitStates
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text36
  6789  00A672                     __ptext36:
  6790                           	opt stack 0
  6791  00A672                     _ReadFlashValues:
  6792                           	opt stack 19
  6793                           
  6794                           ;peripherals.c: 228: nextSerialUSG = FlashReadAddress(0xFBFE);
  6795                           
  6796                           ; BSR set to: 2
  6797                           ;incstack = 0
  6798  00A672  0EFB               	movlw	251
  6799  00A674  0102               	movlb	2	; () banked
  6800  00A676  6F1C               	movwf	(FlashReadAddress@flashAddressUS+1)& (0+255),b
  6801  00A678  0EFE               	movlw	254
  6802  00A67A  6F1B               	movwf	FlashReadAddress@flashAddressUS& (0+255),b
  6803  00A67C  ECD8  F05A         	call	_FlashReadAddress	;wreg free
  6804  00A680  0102               	movlb	2	; () banked
  6805  00A682  6F61               	movwf	??_ReadFlashValues& (0+255),b
  6806  00A684  0102               	movlb	2	; () banked
  6807  00A686  5161               	movf	??_ReadFlashValues& (0+255),w,b
  6808  00A688  0102               	movlb	2	; () banked
  6809  00A68A  6F91               	movwf	_nextSerialUSG& (0+255),b
  6810  00A68C  6B92               	clrf	(_nextSerialUSG+1)& (0+255),b
  6811                           
  6812                           ;peripherals.c: 229: nextSerialUSG |= ((unsigned short) FlashReadAddress(0xFBFE+1)) << 8
      +                          ;
  6813  00A68E  0EFB               	movlw	251
  6814  00A690  0102               	movlb	2	; () banked
  6815  00A692  6F1C               	movwf	(FlashReadAddress@flashAddressUS+1)& (0+255),b
  6816  00A694  691B               	setf	FlashReadAddress@flashAddressUS& (0+255),b
  6817  00A696  ECD8  F05A         	call	_FlashReadAddress	;wreg free
  6818  00A69A  0102               	movlb	2	; () banked
  6819  00A69C  6F61               	movwf	??_ReadFlashValues& (0+255),b
  6820  00A69E  0102               	movlb	2	; () banked
  6821  00A6A0  5161               	movf	??_ReadFlashValues& (0+255),w,b
  6822  00A6A2  0102               	movlb	2	; () banked
  6823  00A6A4  6F63               	movwf	(??_ReadFlashValues+2)& (0+255),b
  6824  00A6A6  6B62               	clrf	(??_ReadFlashValues+1)& (0+255),b
  6825  00A6A8  0102               	movlb	2	; () banked
  6826  00A6AA  5162               	movf	(??_ReadFlashValues+1)& (0+255),w,b
  6827  00A6AC  0102               	movlb	2	; () banked
  6828  00A6AE  1391               	iorwf	_nextSerialUSG& (0+255),f,b
  6829  00A6B0  0102               	movlb	2	; () banked
  6830  00A6B2  5163               	movf	(??_ReadFlashValues+2)& (0+255),w,b
  6831  00A6B4  0102               	movlb	2	; () banked
  6832  00A6B6  1392               	iorwf	(_nextSerialUSG+1)& (0+255),f,b
  6833                           
  6834                           ;peripherals.c: 230: iscSerialUSG = FlashReadAddress(0xFBFD);
  6835  00A6B8  0EFB               	movlw	251
  6836  00A6BA  0102               	movlb	2	; () banked
  6837  00A6BC  6F1C               	movwf	(FlashReadAddress@flashAddressUS+1)& (0+255),b
  6838  00A6BE  0EFD               	movlw	253
  6839  00A6C0  6F1B               	movwf	FlashReadAddress@flashAddressUS& (0+255),b
  6840  00A6C2  ECD8  F05A         	call	_FlashReadAddress	;wreg free
  6841  00A6C6  0102               	movlb	2	; () banked
  6842  00A6C8  6F61               	movwf	??_ReadFlashValues& (0+255),b
  6843  00A6CA  0102               	movlb	2	; () banked
  6844  00A6CC  5161               	movf	??_ReadFlashValues& (0+255),w,b
  6845  00A6CE  0102               	movlb	2	; () banked
  6846  00A6D0  6FA9               	movwf	_iscSerialUSG& (0+255),b
  6847  00A6D2  6BAA               	clrf	(_iscSerialUSG+1)& (0+255),b
  6848                           
  6849                           ;peripherals.c: 231: iscSerialUSG |= ((unsigned short) FlashReadAddress(0xFBFD+1)) << 8;
  6850  00A6D4  0EFB               	movlw	251
  6851  00A6D6  0102               	movlb	2	; () banked
  6852  00A6D8  6F1C               	movwf	(FlashReadAddress@flashAddressUS+1)& (0+255),b
  6853  00A6DA  0EFE               	movlw	254
  6854  00A6DC  6F1B               	movwf	FlashReadAddress@flashAddressUS& (0+255),b
  6855  00A6DE  ECD8  F05A         	call	_FlashReadAddress	;wreg free
  6856  00A6E2  0102               	movlb	2	; () banked
  6857  00A6E4  6F61               	movwf	??_ReadFlashValues& (0+255),b
  6858  00A6E6  0102               	movlb	2	; () banked
  6859  00A6E8  5161               	movf	??_ReadFlashValues& (0+255),w,b
  6860  00A6EA  0102               	movlb	2	; () banked
  6861  00A6EC  6F63               	movwf	(??_ReadFlashValues+2)& (0+255),b
  6862  00A6EE  6B62               	clrf	(??_ReadFlashValues+1)& (0+255),b
  6863  00A6F0  0102               	movlb	2	; () banked
  6864  00A6F2  5162               	movf	(??_ReadFlashValues+1)& (0+255),w,b
  6865  00A6F4  0102               	movlb	2	; () banked
  6866  00A6F6  13A9               	iorwf	_iscSerialUSG& (0+255),f,b
  6867  00A6F8  0102               	movlb	2	; () banked
  6868  00A6FA  5163               	movf	(??_ReadFlashValues+2)& (0+255),w,b
  6869  00A6FC  0102               	movlb	2	; () banked
  6870  00A6FE  13AA               	iorwf	(_iscSerialUSG+1)& (0+255),f,b
  6871                           
  6872                           ; BSR set to: 2
  6873                           ;peripherals.c: 233: if(nextSerialUSG == 0xFFFF){
  6874  00A700  0102               	movlb	2	; () banked
  6875  00A702  2991               	incf	_nextSerialUSG& (0+255),w,b
  6876  00A704  E10E               	bnz	l1085
  6877  00A706  0102               	movlb	2	; () banked
  6878  00A708  2992               	incf	(_nextSerialUSG+1)& (0+255),w,b
  6879  00A70A  A4D8               	btfss	status,2,c
  6880  00A70C  0012               	return	
  6881                           
  6882                           ; BSR set to: 2
  6883                           ;peripherals.c: 234: nextSerialUSG = 1;
  6884  00A70E  0E00               	movlw	0
  6885  00A710  0102               	movlb	2	; () banked
  6886  00A712  6F92               	movwf	(_nextSerialUSG+1)& (0+255),b
  6887  00A714  0E01               	movlw	1
  6888  00A716  6F91               	movwf	_nextSerialUSG& (0+255),b
  6889                           
  6890                           ; BSR set to: 2
  6891                           ;peripherals.c: 235: getSerialFromMemory();
  6892  00A718  ECC5  F059         	call	_getSerialFromMemory	;wreg free
  6893                           
  6894                           ;peripherals.c: 236: WriteFlashValues();
  6895  00A71C  EC1D  F058         	call	_WriteFlashValues	;wreg free
  6896  00A720  0012               	return	
  6897  00A722                     l1085:
  6898  00A722  0012               	return		;funcret
  6899  00A724                     __end_of_ReadFlashValues:
  6900                           	opt stack 0
  6901                           tblptru	equ	0xFF8
  6902                           tblptrh	equ	0xFF7
  6903                           tblptrl	equ	0xFF6
  6904                           tablat	equ	0xFF5
  6905                           prodh	equ	0xFF4
  6906                           prodl	equ	0xFF3
  6907                           intcon	equ	0xFF2
  6908                           postinc0	equ	0xFEE
  6909                           wreg	equ	0xFE8
  6910                           indf1	equ	0xFE7
  6911                           postinc1	equ	0xFE6
  6912                           postdec1	equ	0xFE5
  6913                           fsr1h	equ	0xFE2
  6914                           fsr1l	equ	0xFE1
  6915                           indf2	equ	0xFDF
  6916                           postinc2	equ	0xFDE
  6917                           postdec2	equ	0xFDD
  6918                           fsr2h	equ	0xFDA
  6919                           fsr2l	equ	0xFD9
  6920                           status	equ	0xFD8
  6921                           
  6922 ;; *************** function _getSerialFromMemory *****************
  6923 ;; Defined at:
  6924 ;;		line 240 in file "peripherals.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;		None
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  state          64   32[BANK2 ] unsigned char [64]
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1    wreg      void 
  6931 ;; Registers used:
  6932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;      Totals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6942 ;;Total ram usage:       64 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:    8
  6945 ;; This function calls:
  6946 ;;		_readRegisterFromProgram
  6947 ;; This function is called by:
  6948 ;;		_ReadFlashValues
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text37
  6953  00B38A                     __ptext37:
  6954                           	opt stack 0
  6955  00B38A                     _getSerialFromMemory:
  6956                           	opt stack 20
  6957                           
  6958                           ;peripherals.c: 241: unsigned char state[64];
  6959                           ;peripherals.c: 242: readRegisterFromProgram(0x4000, state);
  6960                           
  6961                           ;incstack = 0
  6962  00B38A  0E40               	movlw	64
  6963  00B38C  0102               	movlb	2	; () banked
  6964  00B38E  6F1C               	movwf	(readRegisterFromProgram@address+1)& (0+255),b
  6965  00B390  0E00               	movlw	0
  6966  00B392  6F1B               	movwf	readRegisterFromProgram@address& (0+255),b
  6967  00B394  0E21               	movlw	low getSerialFromMemory@state
  6968  00B396  0102               	movlb	2	; () banked
  6969  00B398  6F1D               	movwf	readRegisterFromProgram@buffer& (0+255),b
  6970  00B39A  0E02               	movlw	high getSerialFromMemory@state
  6971  00B39C  0102               	movlb	2	; () banked
  6972  00B39E  6F1E               	movwf	(readRegisterFromProgram@buffer+1)& (0+255),b
  6973  00B3A0  EC64  F057         	call	_readRegisterFromProgram	;wreg free
  6974                           
  6975                           ;peripherals.c: 244: iscSerialUSG = state[1] << 8;
  6976  00B3A4  0102               	movlb	2	; () banked
  6977  00B3A6  5122               	movf	(getSerialFromMemory@state+1)& (0+255),w,b
  6978  00B3A8  0102               	movlb	2	; () banked
  6979  00B3AA  6FAA               	movwf	(_iscSerialUSG+1)& (0+255),b
  6980  00B3AC  6BA9               	clrf	_iscSerialUSG& (0+255),b
  6981                           
  6982                           ; BSR set to: 2
  6983                           ;peripherals.c: 245: iscSerialUSG |= state[0];
  6984  00B3AE  0102               	movlb	2	; () banked
  6985  00B3B0  5121               	movf	getSerialFromMemory@state& (0+255),w,b
  6986  00B3B2  0102               	movlb	2	; () banked
  6987  00B3B4  13A9               	iorwf	_iscSerialUSG& (0+255),f,b
  6988                           
  6989                           ; BSR set to: 2
  6990  00B3B6  0012               	return		;funcret
  6991  00B3B8                     __end_of_getSerialFromMemory:
  6992                           	opt stack 0
  6993                           tblptru	equ	0xFF8
  6994                           tblptrh	equ	0xFF7
  6995                           tblptrl	equ	0xFF6
  6996                           tablat	equ	0xFF5
  6997                           prodh	equ	0xFF4
  6998                           prodl	equ	0xFF3
  6999                           intcon	equ	0xFF2
  7000                           postinc0	equ	0xFEE
  7001                           wreg	equ	0xFE8
  7002                           indf1	equ	0xFE7
  7003                           postinc1	equ	0xFE6
  7004                           postdec1	equ	0xFE5
  7005                           fsr1h	equ	0xFE2
  7006                           fsr1l	equ	0xFE1
  7007                           indf2	equ	0xFDF
  7008                           postinc2	equ	0xFDE
  7009                           postdec2	equ	0xFDD
  7010                           fsr2h	equ	0xFDA
  7011                           fsr2l	equ	0xFD9
  7012                           status	equ	0xFD8
  7013                           
  7014 ;; *************** function _readRegisterFromProgram *****************
  7015 ;; Defined at:
  7016 ;;		line 249 in file "peripherals.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  address         2   26[BANK2 ] unsigned short 
  7019 ;;  buffer          2   28[BANK2 ] PTR unsigned char 
  7020 ;;		 -> getSerialFromMemory@state(64), 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  i               2   30[BANK2 ] int 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      void 
  7025 ;; Registers used:
  7026 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7033 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7035 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;Total ram usage:        6 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    7
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_getSerialFromMemory
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text38
  7047  00AEC8                     __ptext38:
  7048                           	opt stack 0
  7049  00AEC8                     _readRegisterFromProgram:
  7050                           	opt stack 20
  7051                           
  7052                           ;peripherals.c: 250: TBLPTRU = 0x00;
  7053                           
  7054                           ; BSR set to: 2
  7055                           ;incstack = 0
  7056  00AEC8  0E00               	movlw	0
  7057  00AECA  6EF8               	movwf	tblptru,c	;volatile
  7058                           
  7059                           ;peripherals.c: 251: TBLPTRH = (unsigned char)(address >> 8);
  7060  00AECC  0102               	movlb	2	; () banked
  7061  00AECE  511C               	movf	(readRegisterFromProgram@address+1)& (0+255),w,b
  7062  00AED0  6EF7               	movwf	tblptrh,c	;volatile
  7063                           
  7064                           ; BSR set to: 2
  7065                           ;peripherals.c: 252: TBLPTRL = (unsigned char)(address & 0xFF);
  7066  00AED2  C21B  FFF6         	movff	readRegisterFromProgram@address,tblptrl	;volatile
  7067                           
  7068                           ;peripherals.c: 254: for(int i = 0; i < 64; i ++){
  7069  00AED6  0E00               	movlw	0
  7070  00AED8  0102               	movlb	2	; () banked
  7071  00AEDA  6F20               	movwf	(readRegisterFromProgram@i+1)& (0+255),b
  7072  00AEDC  0E00               	movlw	0
  7073  00AEDE  6F1F               	movwf	readRegisterFromProgram@i& (0+255),b
  7074  00AEE0                     l4437:
  7075                           
  7076                           ; BSR set to: 2
  7077  00AEE0  0102               	movlb	2	; () banked
  7078  00AEE2  BF20               	btfsc	(readRegisterFromProgram@i+1)& (0+255),7,b
  7079  00AEE4  D008               	goto	l1091
  7080  00AEE6  0102               	movlb	2	; () banked
  7081  00AEE8  5120               	movf	(readRegisterFromProgram@i+1)& (0+255),w,b
  7082  00AEEA  E116               	bnz	l1093
  7083  00AEEC  0E40               	movlw	64
  7084  00AEEE  0102               	movlb	2	; () banked
  7085  00AEF0  5D1F               	subwf	readRegisterFromProgram@i& (0+255),w,b
  7086  00AEF2  B0D8               	btfsc	status,0,c
  7087  00AEF4  0012               	return	
  7088  00AEF6                     l1091:
  7089                           
  7090                           ; BSR set to: 2
  7091  00AEF6  0009               	tblrd		*+	;# 
  7092                           
  7093                           ;peripherals.c: 256: buffer[i] = TABLAT;
  7094  00AEF8  0102               	movlb	2	; () banked
  7095  00AEFA  511F               	movf	readRegisterFromProgram@i& (0+255),w,b
  7096  00AEFC  0102               	movlb	2	; () banked
  7097  00AEFE  251D               	addwf	readRegisterFromProgram@buffer& (0+255),w,b
  7098  00AF00  6ED9               	movwf	fsr2l,c
  7099  00AF02  0102               	movlb	2	; () banked
  7100  00AF04  5120               	movf	(readRegisterFromProgram@i+1)& (0+255),w,b
  7101  00AF06  0102               	movlb	2	; () banked
  7102  00AF08  211E               	addwfc	(readRegisterFromProgram@buffer+1)& (0+255),w,b
  7103  00AF0A  6EDA               	movwf	fsr2h,c
  7104  00AF0C  CFF5 FFDF          	movff	tablat,indf2	;volatile
  7105                           
  7106                           ; BSR set to: 2
  7107  00AF10  0102               	movlb	2	; () banked
  7108  00AF12  4B1F               	infsnz	readRegisterFromProgram@i& (0+255),f,b
  7109  00AF14  2B20               	incf	(readRegisterFromProgram@i+1)& (0+255),f,b
  7110  00AF16  D7E4               	goto	l4437
  7111  00AF18                     l1093:
  7112                           
  7113                           ; BSR set to: 2
  7114  00AF18  0012               	return		;funcret
  7115  00AF1A                     __end_of_readRegisterFromProgram:
  7116                           	opt stack 0
  7117                           tblptru	equ	0xFF8
  7118                           tblptrh	equ	0xFF7
  7119                           tblptrl	equ	0xFF6
  7120                           tablat	equ	0xFF5
  7121                           prodh	equ	0xFF4
  7122                           prodl	equ	0xFF3
  7123                           intcon	equ	0xFF2
  7124                           postinc0	equ	0xFEE
  7125                           wreg	equ	0xFE8
  7126                           indf1	equ	0xFE7
  7127                           postinc1	equ	0xFE6
  7128                           postdec1	equ	0xFE5
  7129                           fsr1h	equ	0xFE2
  7130                           fsr1l	equ	0xFE1
  7131                           indf2	equ	0xFDF
  7132                           postinc2	equ	0xFDE
  7133                           postdec2	equ	0xFDD
  7134                           fsr2h	equ	0xFDA
  7135                           fsr2l	equ	0xFD9
  7136                           status	equ	0xFD8
  7137                           
  7138 ;; *************** function _WriteFlashValues *****************
  7139 ;; Defined at:
  7140 ;;		line 221 in file "peripherals.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;		None
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      void 
  7147 ;; Registers used:
  7148 ;;		wreg, status,2, status,0, cstack
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;Total ram usage:        0 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:    9
  7161 ;; This function calls:
  7162 ;;		_FlashEraseBlock
  7163 ;;		_FlashWriteWord
  7164 ;; This function is called by:
  7165 ;;		_SetSerialNumber
  7166 ;;		_ReadFlashValues
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169                           
  7170                           	psect	text39
  7171  00B03A                     __ptext39:
  7172                           	opt stack 0
  7173  00B03A                     _WriteFlashValues:
  7174                           	opt stack 19
  7175                           
  7176                           ;peripherals.c: 222: FlashEraseBlock(0xFBFE);
  7177                           
  7178                           ; BSR set to: 2
  7179                           ;incstack = 0
  7180  00B03A  0EFB               	movlw	251
  7181  00B03C  0102               	movlb	2	; () banked
  7182  00B03E  6F1C               	movwf	(FlashEraseBlock@flashAddressUS+1)& (0+255),b
  7183  00B040  0EFE               	movlw	254
  7184  00B042  6F1B               	movwf	FlashEraseBlock@flashAddressUS& (0+255),b
  7185  00B044  EC31  F059         	call	_FlashEraseBlock	;wreg free
  7186                           
  7187                           ;peripherals.c: 223: FlashWriteWord(0xFBFE, nextSerialUSG, nextSerialUSG >> 8);
  7188  00B048  0EFB               	movlw	251
  7189  00B04A  0102               	movlb	2	; () banked
  7190  00B04C  6F1C               	movwf	(FlashWriteWord@flashAddressUS+1)& (0+255),b
  7191  00B04E  0EFE               	movlw	254
  7192  00B050  6F1B               	movwf	FlashWriteWord@flashAddressUS& (0+255),b
  7193  00B052  C291  F21D         	movff	_nextSerialUSG,FlashWriteWord@lsbUC
  7194  00B056  0102               	movlb	2	; () banked
  7195  00B058  5192               	movf	(_nextSerialUSG+1)& (0+255),w,b
  7196  00B05A  0102               	movlb	2	; () banked
  7197  00B05C  6F1E               	movwf	FlashWriteWord@msbUC& (0+255),b
  7198  00B05E  EC60  F058         	call	_FlashWriteWord	;wreg free
  7199                           
  7200                           ;peripherals.c: 224: FlashWriteWord(0xFBFD, iscSerialUSG, iscSerialUSG >> 8);
  7201  00B062  0EFB               	movlw	251
  7202  00B064  0102               	movlb	2	; () banked
  7203  00B066  6F1C               	movwf	(FlashWriteWord@flashAddressUS+1)& (0+255),b
  7204  00B068  0EFD               	movlw	253
  7205  00B06A  6F1B               	movwf	FlashWriteWord@flashAddressUS& (0+255),b
  7206  00B06C  C2A9  F21D         	movff	_iscSerialUSG,FlashWriteWord@lsbUC
  7207  00B070  0102               	movlb	2	; () banked
  7208  00B072  51AA               	movf	(_iscSerialUSG+1)& (0+255),w,b
  7209  00B074  0102               	movlb	2	; () banked
  7210  00B076  6F1E               	movwf	FlashWriteWord@msbUC& (0+255),b
  7211  00B078  EC60  F058         	call	_FlashWriteWord	;wreg free
  7212  00B07C  0012               	return		;funcret
  7213  00B07E                     __end_of_WriteFlashValues:
  7214                           	opt stack 0
  7215                           tblptru	equ	0xFF8
  7216                           tblptrh	equ	0xFF7
  7217                           tblptrl	equ	0xFF6
  7218                           tablat	equ	0xFF5
  7219                           prodh	equ	0xFF4
  7220                           prodl	equ	0xFF3
  7221                           intcon	equ	0xFF2
  7222                           postinc0	equ	0xFEE
  7223                           wreg	equ	0xFE8
  7224                           indf1	equ	0xFE7
  7225                           postinc1	equ	0xFE6
  7226                           postdec1	equ	0xFE5
  7227                           fsr1h	equ	0xFE2
  7228                           fsr1l	equ	0xFE1
  7229                           indf2	equ	0xFDF
  7230                           postinc2	equ	0xFDE
  7231                           postdec2	equ	0xFDD
  7232                           fsr2h	equ	0xFDA
  7233                           fsr2l	equ	0xFD9
  7234                           status	equ	0xFD8
  7235                           
  7236 ;; *************** function _FlashWriteWord *****************
  7237 ;; Defined at:
  7238 ;;		line 189 in file "peripherals.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  flashAddress    2   26[BANK2 ] unsigned short 
  7241 ;;  lsbUC           1   28[BANK2 ] unsigned char 
  7242 ;;  msbUC           1   29[BANK2 ] unsigned char 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;  intStatusUC     1   30[BANK2 ] unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1    wreg      void 
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;Total ram usage:        5 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:    8
  7261 ;; This function calls:
  7262 ;;		_FlashUnlockSequence
  7263 ;; This function is called by:
  7264 ;;		_WriteFlashValues
  7265 ;;		_writeExecutableState
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           	psect	text40
  7270  00B0C0                     __ptext40:
  7271                           	opt stack 0
  7272  00B0C0                     _FlashWriteWord:
  7273                           	opt stack 19
  7274                           
  7275                           ;peripherals.c: 190: unsigned char intStatusUC;
  7276                           ;peripherals.c: 192: intStatusUC = INTCONbits.GIE;
  7277                           
  7278                           ;incstack = 0
  7279  00B0C0  0E00               	movlw	0
  7280  00B0C2  BEF2               	btfsc	intcon,7,c	;volatile
  7281  00B0C4  0E01               	movlw	1
  7282  00B0C6  0102               	movlb	2	; () banked
  7283  00B0C8  6F1F               	movwf	FlashWriteWord@intStatusUC& (0+255),b
  7284                           
  7285                           ; BSR set to: 2
  7286                           ;peripherals.c: 193: INTCONbits.GIE = 0;
  7287  00B0CA  9EF2               	bcf	intcon,7,c	;volatile
  7288                           
  7289                           ; BSR set to: 2
  7290                           ;peripherals.c: 195: TBLPTRU = 0;
  7291  00B0CC  0E00               	movlw	0
  7292  00B0CE  6EF8               	movwf	tblptru,c	;volatile
  7293                           
  7294                           ; BSR set to: 2
  7295                           ;peripherals.c: 196: TBLPTRH = flashAddressUS >> 8;
  7296  00B0D0  0102               	movlb	2	; () banked
  7297  00B0D2  511C               	movf	(FlashWriteWord@flashAddressUS+1)& (0+255),w,b
  7298  00B0D4  6EF7               	movwf	tblptrh,c	;volatile
  7299                           
  7300                           ; BSR set to: 2
  7301                           ;peripherals.c: 197: TBLPTRL = flashAddressUS;
  7302  00B0D6  C21B  FFF6         	movff	FlashWriteWord@flashAddressUS,tblptrl	;volatile
  7303                           
  7304                           ; BSR set to: 2
  7305                           ;peripherals.c: 199: TABLAT = lsbUC;
  7306  00B0DA  C21D  FFF5         	movff	FlashWriteWord@lsbUC,tablat	;volatile
  7307  00B0DE  000D               	tblwt		*+	;# 
  7308                           
  7309                           ;peripherals.c: 205: TABLAT = msbUC;
  7310  00B0E0  C21E  FFF5         	movff	FlashWriteWord@msbUC,tablat	;volatile
  7311  00B0E4  000C               	tblwt		*	;# 
  7312                           
  7313                           ;peripherals.c: 211: EECON1bits.WPROG = 1;
  7314  00B0E6  8AA6               	bsf	4006,5,c	;volatile
  7315                           
  7316                           ;peripherals.c: 212: EECON1bits.WREN = 1;
  7317  00B0E8  84A6               	bsf	4006,2,c	;volatile
  7318                           
  7319                           ;peripherals.c: 213: FlashUnlockSequence();
  7320  00B0EA  EC17  F05B         	call	_FlashUnlockSequence	;wreg free
  7321                           
  7322                           ;peripherals.c: 214: EECON1bits.WPROG = 0;
  7323  00B0EE  9AA6               	bcf	4006,5,c	;volatile
  7324                           
  7325                           ;peripherals.c: 215: EECON1bits.WREN = 0;
  7326  00B0F0  94A6               	bcf	4006,2,c	;volatile
  7327                           
  7328                           ;peripherals.c: 217: if(intStatusUC)
  7329  00B0F2  0102               	movlb	2	; () banked
  7330  00B0F4  511F               	movf	FlashWriteWord@intStatusUC& (0+255),w,b
  7331  00B0F6  0102               	movlb	2	; () banked
  7332  00B0F8  B4D8               	btfsc	status,2,c
  7333  00B0FA  0012               	return	
  7334                           
  7335                           ; BSR set to: 2
  7336                           ;peripherals.c: 218: INTCONbits.GIE = 1;
  7337  00B0FC  8EF2               	bsf	intcon,7,c	;volatile
  7338  00B0FE  0012               	return	
  7339  00B100                     __end_of_FlashWriteWord:
  7340                           	opt stack 0
  7341                           tblptru	equ	0xFF8
  7342                           tblptrh	equ	0xFF7
  7343                           tblptrl	equ	0xFF6
  7344                           tablat	equ	0xFF5
  7345                           prodh	equ	0xFF4
  7346                           prodl	equ	0xFF3
  7347                           intcon	equ	0xFF2
  7348                           postinc0	equ	0xFEE
  7349                           wreg	equ	0xFE8
  7350                           indf1	equ	0xFE7
  7351                           postinc1	equ	0xFE6
  7352                           postdec1	equ	0xFE5
  7353                           fsr1h	equ	0xFE2
  7354                           fsr1l	equ	0xFE1
  7355                           indf2	equ	0xFDF
  7356                           postinc2	equ	0xFDE
  7357                           postdec2	equ	0xFDD
  7358                           fsr2h	equ	0xFDA
  7359                           fsr2l	equ	0xFD9
  7360                           status	equ	0xFD8
  7361                           
  7362 ;; *************** function _FlashEraseBlock *****************
  7363 ;; Defined at:
  7364 ;;		line 164 in file "peripherals.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  flashAddress    2   26[BANK2 ] unsigned short 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  intStatusUC     1   28[BANK2 ] unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1    wreg      void 
  7371 ;; Registers used:
  7372 ;;		wreg, status,2, status,0, cstack
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7378 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7379 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7381 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7382 ;;Total ram usage:        3 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    8
  7385 ;; This function calls:
  7386 ;;		_FlashUnlockSequence
  7387 ;; This function is called by:
  7388 ;;		_WriteFlashValues
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text41
  7393  00B262                     __ptext41:
  7394                           	opt stack 0
  7395  00B262                     _FlashEraseBlock:
  7396                           	opt stack 19
  7397                           
  7398                           ;peripherals.c: 165: unsigned char intStatusUC;
  7399                           ;peripherals.c: 167: intStatusUC = INTCONbits.GIE;
  7400                           
  7401                           ; BSR set to: 2
  7402                           ;incstack = 0
  7403  00B262  0E00               	movlw	0
  7404  00B264  BEF2               	btfsc	intcon,7,c	;volatile
  7405  00B266  0E01               	movlw	1
  7406  00B268  0102               	movlb	2	; () banked
  7407  00B26A  6F1D               	movwf	FlashEraseBlock@intStatusUC& (0+255),b
  7408                           
  7409                           ; BSR set to: 2
  7410                           ;peripherals.c: 168: INTCONbits.GIE = 0;
  7411  00B26C  9EF2               	bcf	intcon,7,c	;volatile
  7412                           
  7413                           ; BSR set to: 2
  7414                           ;peripherals.c: 170: TBLPTRU = 0;
  7415  00B26E  0E00               	movlw	0
  7416  00B270  6EF8               	movwf	tblptru,c	;volatile
  7417                           
  7418                           ; BSR set to: 2
  7419                           ;peripherals.c: 171: TBLPTRH = (flashAddressUS >> 8) & ~0b11;
  7420  00B272  0102               	movlb	2	; () banked
  7421  00B274  511C               	movf	(FlashEraseBlock@flashAddressUS+1)& (0+255),w,b
  7422  00B276  0BFC               	andlw	252
  7423  00B278  6EF7               	movwf	tblptrh,c	;volatile
  7424                           
  7425                           ; BSR set to: 2
  7426                           ;peripherals.c: 172: TBLPTRU = 0;
  7427  00B27A  0E00               	movlw	0
  7428  00B27C  6EF8               	movwf	tblptru,c	;volatile
  7429                           
  7430                           ; BSR set to: 2
  7431                           ;peripherals.c: 174: EECON1bits.WREN = 1;
  7432  00B27E  84A6               	bsf	4006,2,c	;volatile
  7433                           
  7434                           ; BSR set to: 2
  7435                           ;peripherals.c: 175: EECON1bits.FREE = 1;
  7436  00B280  88A6               	bsf	4006,4,c	;volatile
  7437                           
  7438                           ; BSR set to: 2
  7439                           ;peripherals.c: 176: FlashUnlockSequence();
  7440  00B282  EC17  F05B         	call	_FlashUnlockSequence	;wreg free
  7441                           
  7442                           ;peripherals.c: 177: EECON1bits.WREN = 0;
  7443  00B286  94A6               	bcf	4006,2,c	;volatile
  7444                           
  7445                           ;peripherals.c: 179: if(intStatusUC)
  7446  00B288  0102               	movlb	2	; () banked
  7447  00B28A  511D               	movf	FlashEraseBlock@intStatusUC& (0+255),w,b
  7448  00B28C  0102               	movlb	2	; () banked
  7449  00B28E  B4D8               	btfsc	status,2,c
  7450  00B290  0012               	return	
  7451                           
  7452                           ; BSR set to: 2
  7453                           ;peripherals.c: 180: INTCONbits.GIE = 1;
  7454  00B292  8EF2               	bsf	intcon,7,c	;volatile
  7455  00B294  0012               	return	
  7456  00B296                     __end_of_FlashEraseBlock:
  7457                           	opt stack 0
  7458                           tblptru	equ	0xFF8
  7459                           tblptrh	equ	0xFF7
  7460                           tblptrl	equ	0xFF6
  7461                           tablat	equ	0xFF5
  7462                           prodh	equ	0xFF4
  7463                           prodl	equ	0xFF3
  7464                           intcon	equ	0xFF2
  7465                           postinc0	equ	0xFEE
  7466                           wreg	equ	0xFE8
  7467                           indf1	equ	0xFE7
  7468                           postinc1	equ	0xFE6
  7469                           postdec1	equ	0xFE5
  7470                           fsr1h	equ	0xFE2
  7471                           fsr1l	equ	0xFE1
  7472                           indf2	equ	0xFDF
  7473                           postinc2	equ	0xFDE
  7474                           postdec2	equ	0xFDD
  7475                           fsr2h	equ	0xFDA
  7476                           fsr2l	equ	0xFD9
  7477                           status	equ	0xFD8
  7478                           
  7479 ;; *************** function _FlashUnlockSequence *****************
  7480 ;; Defined at:
  7481 ;;		line 183 in file "peripherals.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;		None
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;		None
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      void 
  7488 ;; Registers used:
  7489 ;;		wreg, status,2
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;Total ram usage:        0 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; Hardware stack levels required when called:    7
  7502 ;; This function calls:
  7503 ;;		Nothing
  7504 ;; This function is called by:
  7505 ;;		_FlashEraseBlock
  7506 ;;		_FlashWriteWord
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text42
  7511  00B62E                     __ptext42:
  7512                           	opt stack 0
  7513  00B62E                     _FlashUnlockSequence:
  7514                           	opt stack 19
  7515                           
  7516                           ;peripherals.c: 184: EECON2 = 0x55;
  7517                           
  7518                           ; BSR set to: 2
  7519                           ;incstack = 0
  7520  00B62E  0E55               	movlw	85
  7521  00B630  6EA7               	movwf	4007,c	;volatile
  7522                           
  7523                           ;peripherals.c: 185: EECON2 = 0xAA;
  7524  00B632  0EAA               	movlw	170
  7525  00B634  6EA7               	movwf	4007,c	;volatile
  7526                           
  7527                           ;peripherals.c: 186: EECON1bits.WR = 1;
  7528  00B636  82A6               	bsf	4006,1,c	;volatile
  7529  00B638  0012               	return		;funcret
  7530  00B63A                     __end_of_FlashUnlockSequence:
  7531                           	opt stack 0
  7532                           tblptru	equ	0xFF8
  7533                           tblptrh	equ	0xFF7
  7534                           tblptrl	equ	0xFF6
  7535                           tablat	equ	0xFF5
  7536                           prodh	equ	0xFF4
  7537                           prodl	equ	0xFF3
  7538                           intcon	equ	0xFF2
  7539                           postinc0	equ	0xFEE
  7540                           wreg	equ	0xFE8
  7541                           indf1	equ	0xFE7
  7542                           postinc1	equ	0xFE6
  7543                           postdec1	equ	0xFE5
  7544                           fsr1h	equ	0xFE2
  7545                           fsr1l	equ	0xFE1
  7546                           indf2	equ	0xFDF
  7547                           postinc2	equ	0xFDE
  7548                           postdec2	equ	0xFDD
  7549                           fsr2h	equ	0xFDA
  7550                           fsr2l	equ	0xFD9
  7551                           status	equ	0xFD8
  7552                           
  7553 ;; *************** function _FlashReadAddress *****************
  7554 ;; Defined at:
  7555 ;;		line 151 in file "peripherals.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  flashAddress    2   26[BANK2 ] unsigned short 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      unsigned char 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7569 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;Total ram usage:        2 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    7
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_ReadFlashValues
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text43
  7584  00B5B0                     __ptext43:
  7585                           	opt stack 0
  7586  00B5B0                     _FlashReadAddress:
  7587                           	opt stack 21
  7588                           
  7589                           ;peripherals.c: 153: TBLPTRU = 0;
  7590                           
  7591                           ;incstack = 0
  7592  00B5B0  0E00               	movlw	0
  7593  00B5B2  6EF8               	movwf	tblptru,c	;volatile
  7594                           
  7595                           ;peripherals.c: 154: TBLPTRH = flashAddressUS >> 8;
  7596  00B5B4  0102               	movlb	2	; () banked
  7597  00B5B6  511C               	movf	(FlashReadAddress@flashAddressUS+1)& (0+255),w,b
  7598  00B5B8  6EF7               	movwf	tblptrh,c	;volatile
  7599                           
  7600                           ; BSR set to: 2
  7601                           ;peripherals.c: 155: TBLPTRL = flashAddressUS;
  7602  00B5BA  C21B  FFF6         	movff	FlashReadAddress@flashAddressUS,tblptrl	;volatile
  7603  00B5BE  0008               	tblrd		*	;# 
  7604                           
  7605                           ;peripherals.c: 161: return TABLAT;
  7606  00B5C0  50F5               	movf	tablat,w,c	;volatile
  7607  00B5C2  0012               	return	
  7608  00B5C4                     __end_of_FlashReadAddress:
  7609                           	opt stack 0
  7610                           tblptru	equ	0xFF8
  7611                           tblptrh	equ	0xFF7
  7612                           tblptrl	equ	0xFF6
  7613                           tablat	equ	0xFF5
  7614                           prodh	equ	0xFF4
  7615                           prodl	equ	0xFF3
  7616                           intcon	equ	0xFF2
  7617                           postinc0	equ	0xFEE
  7618                           wreg	equ	0xFE8
  7619                           indf1	equ	0xFE7
  7620                           postinc1	equ	0xFE6
  7621                           postdec1	equ	0xFE5
  7622                           fsr1h	equ	0xFE2
  7623                           fsr1l	equ	0xFE1
  7624                           indf2	equ	0xFDF
  7625                           postinc2	equ	0xFDE
  7626                           postdec2	equ	0xFDD
  7627                           fsr2h	equ	0xFDA
  7628                           fsr2l	equ	0xFD9
  7629                           status	equ	0xFD8
  7630                           
  7631 ;; *************** function _ClearPacketNumbers *****************
  7632 ;; Defined at:
  7633 ;;		line 215 in file "mastercomms.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;		None
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  iscCountUC      1   26[BANK2 ] unsigned char 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7650 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7651 ;;Total ram usage:        1 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; Hardware stack levels required when called:    7
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_InitStates
  7658 ;;		_SavePacketNumber
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text44
  7663  00AF64                     __ptext44:
  7664                           	opt stack 0
  7665  00AF64                     _ClearPacketNumbers:
  7666                           	opt stack 20
  7667                           
  7668                           ;mastercomms.c: 216: unsigned char iscCountUC;
  7669                           ;mastercomms.c: 218: for(iscCountUC = 0; iscCountUC < 31; iscCountUC++){
  7670                           
  7671                           ;incstack = 0
  7672  00AF64  0E00               	movlw	0
  7673  00AF66  0102               	movlb	2	; () banked
  7674  00AF68  6F1B               	movwf	ClearPacketNumbers@iscCountUC& (0+255),b
  7675  00AF6A                     l6329:
  7676                           
  7677                           ; BSR set to: 2
  7678  00AF6A  0E1E               	movlw	30
  7679  00AF6C  0102               	movlb	2	; () banked
  7680  00AF6E  651B               	cpfsgt	ClearPacketNumbers@iscCountUC& (0+255),b
  7681  00AF70  D001               	goto	l6333
  7682  00AF72  0012               	return	
  7683  00AF74                     l6333:
  7684                           
  7685                           ; BSR set to: 2
  7686                           ;mastercomms.c: 219: packetNumbersUSAG[1][iscCountUC] = 0;
  7687  00AF74  0102               	movlb	2	; () banked
  7688  00AF76  511B               	movf	ClearPacketNumbers@iscCountUC& (0+255),w,b
  7689  00AF78  0D02               	mullw	2
  7690  00AF7A  0EC2               	movlw	low (_packetNumbersUSAG+62)
  7691  00AF7C  24F3               	addwf	prodl,w,c
  7692  00AF7E  6ED9               	movwf	fsr2l,c
  7693  00AF80  0E05               	movlw	high (_packetNumbersUSAG+62)
  7694  00AF82  20F4               	addwfc	prodh,w,c
  7695  00AF84  6EDA               	movwf	fsr2h,c
  7696  00AF86  0E00               	movlw	0
  7697  00AF88  6EDE               	movwf	postinc2,c
  7698  00AF8A  0E00               	movlw	0
  7699  00AF8C  6EDD               	movwf	postdec2,c
  7700                           
  7701                           ;mastercomms.c: 220: packetNumbersUSAG[0][iscCountUC] = 0;
  7702  00AF8E  0102               	movlb	2	; () banked
  7703  00AF90  511B               	movf	ClearPacketNumbers@iscCountUC& (0+255),w,b
  7704  00AF92  0D02               	mullw	2
  7705  00AF94  0E84               	movlw	low _packetNumbersUSAG
  7706  00AF96  24F3               	addwf	prodl,w,c
  7707  00AF98  6ED9               	movwf	fsr2l,c
  7708  00AF9A  0E05               	movlw	high _packetNumbersUSAG
  7709  00AF9C  20F4               	addwfc	prodh,w,c
  7710  00AF9E  6EDA               	movwf	fsr2h,c
  7711  00AFA0  0E00               	movlw	0
  7712  00AFA2  6EDE               	movwf	postinc2,c
  7713  00AFA4  0E00               	movlw	0
  7714  00AFA6  6EDD               	movwf	postdec2,c
  7715                           
  7716                           ; BSR set to: 2
  7717  00AFA8  0102               	movlb	2	; () banked
  7718  00AFAA  2B1B               	incf	ClearPacketNumbers@iscCountUC& (0+255),f,b
  7719  00AFAC  D7DE               	goto	l6329
  7720  00AFAE                     __end_of_ClearPacketNumbers:
  7721                           	opt stack 0
  7722                           tblptru	equ	0xFF8
  7723                           tblptrh	equ	0xFF7
  7724                           tblptrl	equ	0xFF6
  7725                           tablat	equ	0xFF5
  7726                           prodh	equ	0xFF4
  7727                           prodl	equ	0xFF3
  7728                           intcon	equ	0xFF2
  7729                           postinc0	equ	0xFEE
  7730                           wreg	equ	0xFE8
  7731                           indf1	equ	0xFE7
  7732                           postinc1	equ	0xFE6
  7733                           postdec1	equ	0xFE5
  7734                           fsr1h	equ	0xFE2
  7735                           fsr1l	equ	0xFE1
  7736                           indf2	equ	0xFDF
  7737                           postinc2	equ	0xFDE
  7738                           postdec2	equ	0xFDD
  7739                           fsr2h	equ	0xFDA
  7740                           fsr2l	equ	0xFD9
  7741                           status	equ	0xFD8
  7742                           
  7743 ;; *************** function _InitST7540Wrapper *****************
  7744 ;; Defined at:
  7745 ;;		line 176 in file "main.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;		None
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  initCountUC     1   51[BANK2 ] unsigned char 
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;Total ram usage:        1 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; Hardware stack levels required when called:   11
  7766 ;; This function calls:
  7767 ;;		_InitST7540
  7768 ;; This function is called by:
  7769 ;;		_main
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text45
  7774  00B412                     __ptext45:
  7775                           	opt stack 0
  7776  00B412                     _InitST7540Wrapper:
  7777                           	opt stack 19
  7778                           
  7779                           ;main.c: 177: unsigned char initCountUC;
  7780                           ;main.c: 179: for(initCountUC = 0; initCountUC < 5; initCountUC++){
  7781                           
  7782                           ; BSR set to: 2
  7783                           ;incstack = 0
  7784  00B412  0E00               	movlw	0
  7785  00B414  0102               	movlb	2	; () banked
  7786  00B416  6F34               	movwf	InitST7540Wrapper@initCountUC& (0+255),b
  7787  00B418                     l6779:
  7788                           
  7789                           ; BSR set to: 2
  7790  00B418  0E04               	movlw	4
  7791  00B41A  0102               	movlb	2	; () banked
  7792  00B41C  6534               	cpfsgt	InitST7540Wrapper@initCountUC& (0+255),b
  7793  00B41E  D001               	goto	l6783
  7794  00B420  0012               	return	
  7795  00B422                     l6783:
  7796                           
  7797                           ; BSR set to: 2
  7798                           ;main.c: 180: if(InitST7540()){
  7799  00B422  EC4B  F050         	call	_InitST7540	;wreg free
  7800  00B426  0900               	iorlw	0
  7801  00B428  B4D8               	btfsc	status,2,c
  7802  00B42A  D003               	goto	l6787
  7803                           
  7804                           ;main.c: 182: statusFlagsUSLG |= 0b000000000000000000000010;
  7805  00B42C  0102               	movlb	2	; () banked
  7806  00B42E  838A               	bsf	_statusFlagsUSLG& (0+255),1,b	;volatile
  7807                           
  7808                           ;main.c: 183: break;
  7809  00B430  0012               	return	
  7810  00B432                     l6787:
  7811  00B432  0102               	movlb	2	; () banked
  7812  00B434  2B34               	incf	InitST7540Wrapper@initCountUC& (0+255),f,b
  7813  00B436  D7F0               	goto	l6779
  7814  00B438                     __end_of_InitST7540Wrapper:
  7815                           	opt stack 0
  7816                           tblptru	equ	0xFF8
  7817                           tblptrh	equ	0xFF7
  7818                           tblptrl	equ	0xFF6
  7819                           tablat	equ	0xFF5
  7820                           prodh	equ	0xFF4
  7821                           prodl	equ	0xFF3
  7822                           intcon	equ	0xFF2
  7823                           postinc0	equ	0xFEE
  7824                           wreg	equ	0xFE8
  7825                           indf1	equ	0xFE7
  7826                           postinc1	equ	0xFE6
  7827                           postdec1	equ	0xFE5
  7828                           fsr1h	equ	0xFE2
  7829                           fsr1l	equ	0xFE1
  7830                           indf2	equ	0xFDF
  7831                           postinc2	equ	0xFDE
  7832                           postdec2	equ	0xFDD
  7833                           fsr2h	equ	0xFDA
  7834                           fsr2l	equ	0xFD9
  7835                           status	equ	0xFD8
  7836                           
  7837 ;; *************** function _InitST7540 *****************
  7838 ;; Defined at:
  7839 ;;		line 88 in file "ST7540.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;		None
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  configDataRX    3   48[BANK2 ] unsigned um
  7844 ;;  frameDataRXU    3   45[BANK2 ] unsigned um
  7845 ;;  configDataTX    3   42[BANK2 ] unsigned um
  7846 ;;  frameDataTXU    3   39[BANK2 ] unsigned um
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  1    wreg      unsigned char 
  7849 ;; Registers used:
  7850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7857 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7859 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7860 ;;Total ram usage:       12 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; Hardware stack levels required when called:   10
  7863 ;; This function calls:
  7864 ;;		_InitST7540Pins
  7865 ;;		_ReadConfigST7540
  7866 ;;		_WriteConfigST7540
  7867 ;; This function is called by:
  7868 ;;		_InitST7540Wrapper
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872                           	psect	text46
  7873  00A096                     __ptext46:
  7874                           	opt stack 0
  7875  00A096                     _InitST7540:
  7876                           	opt stack 19
  7877                           
  7878                           ;ST7540.c: 89: unsigned long short frameDataTXUS;
  7879                           ;ST7540.c: 90: unsigned long short frameDataRXUS = 0;
  7880                           
  7881                           ; BSR set to: 2
  7882                           ;incstack = 0
  7883  00A096  0E00               	movlw	0
  7884  00A098  0102               	movlb	2	; () banked
  7885  00A09A  6F2E               	movwf	InitST7540@frameDataRXUS& (0+255),b
  7886  00A09C  0E00               	movlw	0
  7887  00A09E  0102               	movlb	2	; () banked
  7888  00A0A0  6F2F               	movwf	(InitST7540@frameDataRXUS+1)& (0+255),b
  7889  00A0A2  0E00               	movlw	0
  7890  00A0A4  0102               	movlb	2	; () banked
  7891  00A0A6  6F30               	movwf	(InitST7540@frameDataRXUS+2)& (0+255),b
  7892                           
  7893                           ;ST7540.c: 91: unsigned long short configDataTXUS;
  7894                           ;ST7540.c: 92: unsigned long short configDataRXUS = 0;
  7895  00A0A8  0E00               	movlw	0
  7896  00A0AA  0102               	movlb	2	; () banked
  7897  00A0AC  6F31               	movwf	InitST7540@configDataRXUS& (0+255),b
  7898  00A0AE  0E00               	movlw	0
  7899  00A0B0  0102               	movlb	2	; () banked
  7900  00A0B2  6F32               	movwf	(InitST7540@configDataRXUS+1)& (0+255),b
  7901  00A0B4  0E00               	movlw	0
  7902  00A0B6  0102               	movlb	2	; () banked
  7903  00A0B8  6F33               	movwf	(InitST7540@configDataRXUS+2)& (0+255),b
  7904                           
  7905                           ; BSR set to: 2
  7906                           ;ST7540.c: 94: InitST7540Pins();
  7907  00A0BA  ECBE  F058         	call	_InitST7540Pins	;wreg free
  7908                           
  7909                           ;ST7540.c: 96: frameDataTXUS = (unsigned long short) 0x9b58;
  7910  00A0BE  0E58               	movlw	88
  7911  00A0C0  0102               	movlb	2	; () banked
  7912  00A0C2  6F28               	movwf	InitST7540@frameDataTXUS& (0+255),b
  7913  00A0C4  0E9B               	movlw	155
  7914  00A0C6  0102               	movlb	2	; () banked
  7915  00A0C8  6F29               	movwf	(InitST7540@frameDataTXUS+1)& (0+255),b
  7916  00A0CA  0E00               	movlw	0
  7917  00A0CC  0102               	movlb	2	; () banked
  7918  00A0CE  6F2A               	movwf	(InitST7540@frameDataTXUS+2)& (0+255),b
  7919                           
  7920                           ; BSR set to: 2
  7921                           ;ST7540.c: 97: configDataTXUS = 0b000000000000000000000110 |
  7922                           ;ST7540.c: 98: 0b000000000000000000010000 |
  7923                           ;ST7540.c: 99: 0b000000000000000000000000 |
  7924                           ;ST7540.c: 100: 0b000000000000000000000000 |
  7925                           ;ST7540.c: 101: 0b000000000000000010000000 |
  7926                           ;ST7540.c: 102: 0b000000000000001000000000 |
  7927                           ;ST7540.c: 103: 0b000000000001000000000000 |
  7928                           ;ST7540.c: 104: 0b000000000000000000000000 |
  7929                           ;ST7540.c: 105: 0b000000001000000000000000 |
  7930                           ;ST7540.c: 106: 0b000000100000000000000000 |
  7931                           ;ST7540.c: 107: 0b000001000000000000000000 |
  7932                           ;ST7540.c: 108: 0b000000000000000000000000 |
  7933  00A0D0  0E96               	movlw	150
  7934  00A0D2  0102               	movlb	2	; () banked
  7935  00A0D4  6F2B               	movwf	InitST7540@configDataTXUS& (0+255),b
  7936  00A0D6  0E92               	movlw	146
  7937  00A0D8  0102               	movlb	2	; () banked
  7938  00A0DA  6F2C               	movwf	(InitST7540@configDataTXUS+1)& (0+255),b
  7939  00A0DC  0E76               	movlw	118
  7940  00A0DE  0102               	movlb	2	; () banked
  7941  00A0E0  6F2D               	movwf	(InitST7540@configDataTXUS+2)& (0+255),b
  7942                           
  7943                           ; BSR set to: 2
  7944                           ;ST7540.c: 114: SSP2STATbits.SMP = 0;
  7945  00A0E2  9E73               	bcf	3955,7,c	;volatile
  7946                           
  7947                           ; BSR set to: 2
  7948                           ;ST7540.c: 115: SSP2STATbits.CKE = 1;
  7949  00A0E4  8C73               	bsf	3955,6,c	;volatile
  7950                           
  7951                           ; BSR set to: 2
  7952                           ;ST7540.c: 116: SSP2CON1bits.CKP = 0;
  7953  00A0E6  9872               	bcf	3954,4,c	;volatile
  7954                           
  7955                           ; BSR set to: 2
  7956                           ;ST7540.c: 117: SSP2CON1bits.SSPM = 0b0100;
  7957  00A0E8  5072               	movf	3954,w,c	;volatile
  7958  00A0EA  0BF0               	andlw	-16
  7959  00A0EC  0904               	iorlw	4
  7960  00A0EE  6E72               	movwf	3954,c	;volatile
  7961                           
  7962                           ; BSR set to: 2
  7963                           ;ST7540.c: 127: WriteConfigST7540(frameDataTXUS, configDataTXUS);
  7964  00A0F0  C228  F21D         	movff	InitST7540@frameDataTXUS,WriteConfigST7540@frameDataUS
  7965  00A0F4  C229  F21E         	movff	InitST7540@frameDataTXUS+1,WriteConfigST7540@frameDataUS+1
  7966  00A0F8  C22A  F21F         	movff	InitST7540@frameDataTXUS+2,WriteConfigST7540@frameDataUS+2
  7967  00A0FC  C22B  F220         	movff	InitST7540@configDataTXUS,WriteConfigST7540@configDataUS
  7968  00A100  C22C  F221         	movff	InitST7540@configDataTXUS+1,WriteConfigST7540@configDataUS+1
  7969  00A104  C22D  F222         	movff	InitST7540@configDataTXUS+2,WriteConfigST7540@configDataUS+2
  7970  00A108  EC92  F053         	call	_WriteConfigST7540	;wreg free
  7971                           
  7972                           ;ST7540.c: 128: WriteConfigST7540(frameDataTXUS, configDataTXUS);
  7973  00A10C  C228  F21D         	movff	InitST7540@frameDataTXUS,WriteConfigST7540@frameDataUS
  7974  00A110  C229  F21E         	movff	InitST7540@frameDataTXUS+1,WriteConfigST7540@frameDataUS+1
  7975  00A114  C22A  F21F         	movff	InitST7540@frameDataTXUS+2,WriteConfigST7540@frameDataUS+2
  7976  00A118  C22B  F220         	movff	InitST7540@configDataTXUS,WriteConfigST7540@configDataUS
  7977  00A11C  C22C  F221         	movff	InitST7540@configDataTXUS+1,WriteConfigST7540@configDataUS+1
  7978  00A120  C22D  F222         	movff	InitST7540@configDataTXUS+2,WriteConfigST7540@configDataUS+2
  7979  00A124  EC92  F053         	call	_WriteConfigST7540	;wreg free
  7980                           
  7981                           ;ST7540.c: 129: ReadConfigST7540(&frameDataRXUS, &configDataRXUS);
  7982  00A128  0E2E               	movlw	low InitST7540@frameDataRXUS
  7983  00A12A  0102               	movlb	2	; () banked
  7984  00A12C  6F1B               	movwf	ReadConfigST7540@frameDataUS& (0+255),b
  7985  00A12E  0E02               	movlw	high InitST7540@frameDataRXUS
  7986  00A130  0102               	movlb	2	; () banked
  7987  00A132  6F1C               	movwf	(ReadConfigST7540@frameDataUS+1)& (0+255),b
  7988  00A134  0E31               	movlw	low InitST7540@configDataRXUS
  7989  00A136  0102               	movlb	2	; () banked
  7990  00A138  6F1D               	movwf	ReadConfigST7540@configDataUS& (0+255),b
  7991  00A13A  0E02               	movlw	high InitST7540@configDataRXUS
  7992  00A13C  0102               	movlb	2	; () banked
  7993  00A13E  6F1E               	movwf	(ReadConfigST7540@configDataUS+1)& (0+255),b
  7994  00A140  ECDE  F04C         	call	_ReadConfigST7540	;wreg free
  7995                           
  7996                           ;ST7540.c: 131: if((frameDataTXUS != frameDataRXUS) && (configDataTXUS != configDataRXUS
      +                          ))
  7997  00A144  0102               	movlb	2	; () banked
  7998  00A146  512E               	movf	InitST7540@frameDataRXUS& (0+255),w,b
  7999  00A148  0102               	movlb	2	; () banked
  8000  00A14A  1928               	xorwf	InitST7540@frameDataTXUS& (0+255),w,b
  8001  00A14C  E10B               	bnz	u7210
  8002  00A14E  0102               	movlb	2	; () banked
  8003  00A150  512F               	movf	(InitST7540@frameDataRXUS+1)& (0+255),w,b
  8004  00A152  0102               	movlb	2	; () banked
  8005  00A154  1929               	xorwf	(InitST7540@frameDataTXUS+1)& (0+255),w,b
  8006  00A156  E106               	bnz	u7210
  8007  00A158  0102               	movlb	2	; () banked
  8008  00A15A  5130               	movf	(InitST7540@frameDataRXUS+2)& (0+255),w,b
  8009  00A15C  0102               	movlb	2	; () banked
  8010  00A15E  192A               	xorwf	(InitST7540@frameDataTXUS+2)& (0+255),w,b
  8011  00A160  B4D8               	btfsc	status,2,c
  8012  00A162  D012               	goto	l81
  8013  00A164                     u7210:
  8014                           
  8015                           ; BSR set to: 2
  8016  00A164  0102               	movlb	2	; () banked
  8017  00A166  5131               	movf	InitST7540@configDataRXUS& (0+255),w,b
  8018  00A168  0102               	movlb	2	; () banked
  8019  00A16A  192B               	xorwf	InitST7540@configDataTXUS& (0+255),w,b
  8020  00A16C  E10B               	bnz	u7220
  8021  00A16E  0102               	movlb	2	; () banked
  8022  00A170  5132               	movf	(InitST7540@configDataRXUS+1)& (0+255),w,b
  8023  00A172  0102               	movlb	2	; () banked
  8024  00A174  192C               	xorwf	(InitST7540@configDataTXUS+1)& (0+255),w,b
  8025  00A176  E106               	bnz	u7220
  8026  00A178  0102               	movlb	2	; () banked
  8027  00A17A  5133               	movf	(InitST7540@configDataRXUS+2)& (0+255),w,b
  8028  00A17C  0102               	movlb	2	; () banked
  8029  00A17E  192D               	xorwf	(InitST7540@configDataTXUS+2)& (0+255),w,b
  8030  00A180  B4D8               	btfsc	status,2,c
  8031  00A182  D002               	goto	l81
  8032  00A184                     u7220:
  8033                           
  8034                           ; BSR set to: 2
  8035                           ;ST7540.c: 132: return 0;
  8036  00A184  0E00               	movlw	0
  8037                           
  8038                           ; BSR set to: 2
  8039  00A186  0012               	return	
  8040  00A188                     l81:
  8041                           
  8042                           ; BSR set to: 2
  8043                           ;ST7540.c: 134: PIR3bits.SSP2IF = 0;
  8044  00A188  9EA4               	bcf	4004,7,c	;volatile
  8045                           
  8046                           ;ST7540.c: 135: PIE3bits.SSP2IE = 1;
  8047  00A18A  8EA3               	bsf	4003,7,c	;volatile
  8048                           
  8049                           ;ST7540.c: 136: INTCONbits.PEIE = 1;
  8050  00A18C  8CF2               	bsf	intcon,6,c	;volatile
  8051                           
  8052                           ; BSR set to: 2
  8053                           ;ST7540.c: 138: return 1;
  8054  00A18E  0E01               	movlw	1
  8055  00A190  0012               	return	
  8056  00A192                     __end_of_InitST7540:
  8057                           	opt stack 0
  8058                           tblptru	equ	0xFF8
  8059                           tblptrh	equ	0xFF7
  8060                           tblptrl	equ	0xFF6
  8061                           tablat	equ	0xFF5
  8062                           prodh	equ	0xFF4
  8063                           prodl	equ	0xFF3
  8064                           intcon	equ	0xFF2
  8065                           postinc0	equ	0xFEE
  8066                           wreg	equ	0xFE8
  8067                           indf1	equ	0xFE7
  8068                           postinc1	equ	0xFE6
  8069                           postdec1	equ	0xFE5
  8070                           fsr1h	equ	0xFE2
  8071                           fsr1l	equ	0xFE1
  8072                           indf2	equ	0xFDF
  8073                           postinc2	equ	0xFDE
  8074                           postdec2	equ	0xFDD
  8075                           fsr2h	equ	0xFDA
  8076                           fsr2l	equ	0xFD9
  8077                           status	equ	0xFD8
  8078                           
  8079 ;; *************** function _WriteConfigST7540 *****************
  8080 ;; Defined at:
  8081 ;;		line 141 in file "ST7540.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  frameDataUS     3   28[BANK2 ] unsigned um
  8084 ;;  configDataUS    3   31[BANK2 ] unsigned um
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  bitsSentUC      1   38[BANK2 ] unsigned char 
  8087 ;;  discardUC       1   37[BANK2 ] unsigned char 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      void 
  8090 ;; Registers used:
  8091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8097 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;Total ram usage:       11 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; Hardware stack levels required when called:    9
  8104 ;; This function calls:
  8105 ;;		_WaitTickCount
  8106 ;; This function is called by:
  8107 ;;		_InitST7540
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text47
  8112  00A724                     __ptext47:
  8113                           	opt stack 0
  8114  00A724                     _WriteConfigST7540:
  8115                           	opt stack 19
  8116                           
  8117                           ;ST7540.c: 142: unsigned char discardUC;
  8118                           ;ST7540.c: 143: unsigned char bitsSentUC;
  8119                           ;ST7540.c: 145: bufferTXST7540UCAG[0] = (frameDataUS & 0b111111110000000000000000) >> 16
      +                          ;
  8120                           
  8121                           ; BSR set to: 2
  8122                           ;incstack = 0
  8123  00A724  C21F  F34C         	movff	WriteConfigST7540@frameDataUS+2,_bufferTXST7540UCAG
  8124                           
  8125                           ;ST7540.c: 146: bufferTXST7540UCAG[1] = (frameDataUS & 0b000000001111111100000000) >> 8;
  8126  00A728  C21D  F223         	movff	WriteConfigST7540@frameDataUS,??_WriteConfigST7540
  8127  00A72C  C21E  F224         	movff	WriteConfigST7540@frameDataUS+1,??_WriteConfigST7540+1
  8128  00A730  C21F  F225         	movff	WriteConfigST7540@frameDataUS+2,??_WriteConfigST7540+2
  8129  00A734  C224  F223         	movff	??_WriteConfigST7540+1,??_WriteConfigST7540
  8130  00A738  C225  F224         	movff	??_WriteConfigST7540+2,??_WriteConfigST7540+1
  8131  00A73C  0102               	movlb	2	; () banked
  8132  00A73E  6B25               	clrf	(??_WriteConfigST7540+2)& (0+255),b
  8133  00A740  0102               	movlb	2	; () banked
  8134  00A742  5123               	movf	??_WriteConfigST7540& (0+255),w,b
  8135  00A744  0103               	movlb	3	; () banked
  8136  00A746  6F4D               	movwf	(_bufferTXST7540UCAG+1)& (0+255),b
  8137                           
  8138                           ; BSR set to: 3
  8139                           ;ST7540.c: 147: bufferTXST7540UCAG[2] = frameDataUS & 0b000000000000000011111111;
  8140  00A748  C21D  F34E         	movff	WriteConfigST7540@frameDataUS,_bufferTXST7540UCAG+2
  8141                           
  8142                           ; BSR set to: 3
  8143                           ;ST7540.c: 148: bufferTXST7540UCAG[3] = (configDataUS & 0b111111110000000000000000) >> 1
      +                          6;
  8144  00A74C  C222  F34F         	movff	WriteConfigST7540@configDataUS+2,_bufferTXST7540UCAG+3
  8145                           
  8146                           ;ST7540.c: 149: bufferTXST7540UCAG[4] = (configDataUS & 0b000000001111111100000000) >> 8
      +                          ;
  8147  00A750  C220  F223         	movff	WriteConfigST7540@configDataUS,??_WriteConfigST7540
  8148  00A754  C221  F224         	movff	WriteConfigST7540@configDataUS+1,??_WriteConfigST7540+1
  8149  00A758  C222  F225         	movff	WriteConfigST7540@configDataUS+2,??_WriteConfigST7540+2
  8150  00A75C  C224  F223         	movff	??_WriteConfigST7540+1,??_WriteConfigST7540
  8151  00A760  C225  F224         	movff	??_WriteConfigST7540+2,??_WriteConfigST7540+1
  8152  00A764  0102               	movlb	2	; () banked
  8153  00A766  6B25               	clrf	(??_WriteConfigST7540+2)& (0+255),b
  8154  00A768  0102               	movlb	2	; () banked
  8155  00A76A  5123               	movf	??_WriteConfigST7540& (0+255),w,b
  8156  00A76C  0103               	movlb	3	; () banked
  8157  00A76E  6F50               	movwf	(_bufferTXST7540UCAG+4)& (0+255),b
  8158                           
  8159                           ; BSR set to: 3
  8160                           ;ST7540.c: 150: bufferTXST7540UCAG[5] = configDataUS & 0b000000000000000011111111;
  8161  00A770  C220  F351         	movff	WriteConfigST7540@configDataUS,_bufferTXST7540UCAG+5
  8162                           
  8163                           ; BSR set to: 3
  8164                           ;ST7540.c: 152: LATDbits.LATD2 = 1;
  8165  00A774  848C               	bsf	3980,2,c	;volatile
  8166                           
  8167                           ; BSR set to: 3
  8168                           ;ST7540.c: 153: LATCbits.LATC3 = 0;
  8169  00A776  968B               	bcf	3979,3,c	;volatile
  8170  00A778                     l85:
  8171  00A778  BA83               	btfsc	3971,5,c	;volatile
  8172  00A77A  D7FE               	goto	l85
  8173                           
  8174                           ;ST7540.c: 155: SSP2CON1bits.SSPEN = 1;
  8175  00A77C  8A72               	bsf	3954,5,c	;volatile
  8176                           
  8177                           ;ST7540.c: 157: for(bitsSentUC = 0; bitsSentUC < 6; bitsSentUC++){
  8178  00A77E  0E00               	movlw	0
  8179  00A780  0102               	movlb	2	; () banked
  8180  00A782  6F27               	movwf	WriteConfigST7540@bitsSentUC& (0+255),b
  8181  00A784                     l6519:
  8182                           
  8183                           ; BSR set to: 2
  8184  00A784  0E05               	movlw	5
  8185  00A786  0102               	movlb	2	; () banked
  8186  00A788  6527               	cpfsgt	WriteConfigST7540@bitsSentUC& (0+255),b
  8187  00A78A  D001               	goto	l88
  8188  00A78C  D012               	goto	l89
  8189  00A78E                     l88:
  8190                           
  8191                           ; BSR set to: 2
  8192                           ;ST7540.c: 158: discardUC = SSP2BUF;
  8193  00A78E  CF75 F226          	movff	3957,WriteConfigST7540@discardUC	;volatile
  8194                           
  8195                           ; BSR set to: 2
  8196                           ;ST7540.c: 159: SSP2BUF = bufferTXST7540UCAG[bitsSentUC];
  8197  00A792  0102               	movlb	2	; () banked
  8198  00A794  5127               	movf	WriteConfigST7540@bitsSentUC& (0+255),w,b
  8199  00A796  0D01               	mullw	1
  8200  00A798  0E4C               	movlw	low _bufferTXST7540UCAG
  8201  00A79A  24F3               	addwf	prodl,w,c
  8202  00A79C  6ED9               	movwf	fsr2l,c
  8203  00A79E  0E03               	movlw	high _bufferTXST7540UCAG
  8204  00A7A0  20F4               	addwfc	prodh,w,c
  8205  00A7A2  6EDA               	movwf	fsr2h,c
  8206  00A7A4  50DF               	movf	indf2,w,c
  8207  00A7A6  6E75               	movwf	3957,c	;volatile
  8208  00A7A8                     l90:
  8209  00A7A8  A073               	btfss	3955,0,c	;volatile
  8210  00A7AA  D7FE               	goto	l90
  8211  00A7AC  0102               	movlb	2	; () banked
  8212  00A7AE  2B27               	incf	WriteConfigST7540@bitsSentUC& (0+255),f,b
  8213  00A7B0  D7E9               	goto	l6519
  8214  00A7B2                     l89:
  8215                           
  8216                           ; BSR set to: 2
  8217                           ;ST7540.c: 161: }
  8218                           ;ST7540.c: 163: LATDbits.LATD2 = 0;
  8219  00A7B2  948C               	bcf	3980,2,c	;volatile
  8220                           
  8221                           ;ST7540.c: 164: LATCbits.LATC3 = 1;
  8222  00A7B4  868B               	bsf	3979,3,c	;volatile
  8223                           
  8224                           ;ST7540.c: 165: SSP2CON1bits.SSPEN = 0;
  8225  00A7B6  9A72               	bcf	3954,5,c	;volatile
  8226                           
  8227                           ; BSR set to: 2
  8228                           ;ST7540.c: 166: WaitTickCount(20);
  8229  00A7B8  0E00               	movlw	0
  8230  00A7BA  0102               	movlb	2	; () banked
  8231  00A7BC  6F1C               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
  8232  00A7BE  0E14               	movlw	20
  8233  00A7C0  6F1B               	movwf	WaitTickCount@tickCountUS& (0+255),b
  8234  00A7C2  EC70  F05A         	call	_WaitTickCount	;wreg free
  8235  00A7C6  0012               	return		;funcret
  8236  00A7C8                     __end_of_WriteConfigST7540:
  8237                           	opt stack 0
  8238                           tblptru	equ	0xFF8
  8239                           tblptrh	equ	0xFF7
  8240                           tblptrl	equ	0xFF6
  8241                           tablat	equ	0xFF5
  8242                           prodh	equ	0xFF4
  8243                           prodl	equ	0xFF3
  8244                           intcon	equ	0xFF2
  8245                           postinc0	equ	0xFEE
  8246                           wreg	equ	0xFE8
  8247                           indf1	equ	0xFE7
  8248                           postinc1	equ	0xFE6
  8249                           postdec1	equ	0xFE5
  8250                           fsr1h	equ	0xFE2
  8251                           fsr1l	equ	0xFE1
  8252                           indf2	equ	0xFDF
  8253                           postinc2	equ	0xFDE
  8254                           postdec2	equ	0xFDD
  8255                           fsr2h	equ	0xFDA
  8256                           fsr2l	equ	0xFD9
  8257                           status	equ	0xFD8
  8258                           
  8259 ;; *************** function _WaitTickCount *****************
  8260 ;; Defined at:
  8261 ;;		line 25 in file "peripherals.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;  tickCountUS     2   26[BANK2 ] unsigned short 
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		wreg, status,2, status,0, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8275 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;Total ram usage:        2 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    8
  8282 ;; This function calls:
  8283 ;;		_WaitNewTick
  8284 ;; This function is called by:
  8285 ;;		_WriteConfigST7540
  8286 ;;		_CollisionCheck
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           	psect	text48
  8291  00B4E0                     __ptext48:
  8292                           	opt stack 0
  8293  00B4E0                     _WaitTickCount:
  8294                           	opt stack 18
  8295                           
  8296                           ;peripherals.c: 26: while(tickCountUS--)
  8297                           
  8298                           ;incstack = 0
  8299  00B4E0  D002               	goto	l6301
  8300  00B4E2                     l6299:
  8301                           
  8302                           ;peripherals.c: 27: WaitNewTick();
  8303  00B4E2  EC1D  F05B         	call	_WaitNewTick	;wreg free
  8304  00B4E6                     l6301:
  8305  00B4E6  0102               	movlb	2	; () banked
  8306  00B4E8  071B               	decf	WaitTickCount@tickCountUS& (0+255),f,b
  8307  00B4EA  A0D8               	btfss	status,0,c
  8308  00B4EC  071C               	decf	(WaitTickCount@tickCountUS+1)& (0+255),f,b
  8309  00B4EE  0102               	movlb	2	; () banked
  8310  00B4F0  291B               	incf	WaitTickCount@tickCountUS& (0+255),w,b
  8311  00B4F2  E1F7               	bnz	l6299
  8312  00B4F4  0102               	movlb	2	; () banked
  8313  00B4F6  291C               	incf	(WaitTickCount@tickCountUS+1)& (0+255),w,b
  8314  00B4F8  B4D8               	btfsc	status,2,c
  8315  00B4FA  0012               	return	
  8316  00B4FC  D7F2               	goto	l6299
  8317  00B4FE                     __end_of_WaitTickCount:
  8318                           	opt stack 0
  8319                           tblptru	equ	0xFF8
  8320                           tblptrh	equ	0xFF7
  8321                           tblptrl	equ	0xFF6
  8322                           tablat	equ	0xFF5
  8323                           prodh	equ	0xFF4
  8324                           prodl	equ	0xFF3
  8325                           intcon	equ	0xFF2
  8326                           postinc0	equ	0xFEE
  8327                           wreg	equ	0xFE8
  8328                           indf1	equ	0xFE7
  8329                           postinc1	equ	0xFE6
  8330                           postdec1	equ	0xFE5
  8331                           fsr1h	equ	0xFE2
  8332                           fsr1l	equ	0xFE1
  8333                           indf2	equ	0xFDF
  8334                           postinc2	equ	0xFDE
  8335                           postdec2	equ	0xFDD
  8336                           fsr2h	equ	0xFDA
  8337                           fsr2l	equ	0xFD9
  8338                           status	equ	0xFD8
  8339                           
  8340 ;; *************** function _WaitNewTick *****************
  8341 ;; Defined at:
  8342 ;;		line 20 in file "peripherals.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;		None
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;		None
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  1    wreg      void 
  8349 ;; Registers used:
  8350 ;;		status,2, status,0
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;Total ram usage:        0 bytes
  8361 ;; Hardware stack levels used:    1
  8362 ;; Hardware stack levels required when called:    7
  8363 ;; This function calls:
  8364 ;;		Nothing
  8365 ;; This function is called by:
  8366 ;;		_WaitTickCount
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           	psect	text49
  8371  00B63A                     __ptext49:
  8372                           	opt stack 0
  8373  00B63A                     _WaitNewTick:
  8374                           	opt stack 18
  8375  00B63A                     l1006:
  8376  00B63A  0102               	movlb	2	; () banked
  8377  00B63C  A18A               	btfss	_statusFlagsUSLG& (0+255),0,b	;volatile
  8378  00B63E  D7FD               	goto	l1006
  8379                           
  8380                           ; BSR set to: 2
  8381                           ;peripherals.c: 22: statusFlagsUSLG &= ~0b000000000000000000000001;
  8382                           
  8383                           ; BSR set to: 2
  8384  00B640  0102               	movlb	2	; () banked
  8385  00B642  918A               	bcf	_statusFlagsUSLG& (0+255),0,b	;volatile
  8386                           
  8387                           ; BSR set to: 2
  8388  00B644  0012               	return		;funcret
  8389  00B646                     __end_of_WaitNewTick:
  8390                           	opt stack 0
  8391                           tblptru	equ	0xFF8
  8392                           tblptrh	equ	0xFF7
  8393                           tblptrl	equ	0xFF6
  8394                           tablat	equ	0xFF5
  8395                           prodh	equ	0xFF4
  8396                           prodl	equ	0xFF3
  8397                           intcon	equ	0xFF2
  8398                           postinc0	equ	0xFEE
  8399                           wreg	equ	0xFE8
  8400                           indf1	equ	0xFE7
  8401                           postinc1	equ	0xFE6
  8402                           postdec1	equ	0xFE5
  8403                           fsr1h	equ	0xFE2
  8404                           fsr1l	equ	0xFE1
  8405                           indf2	equ	0xFDF
  8406                           postinc2	equ	0xFDE
  8407                           postdec2	equ	0xFDD
  8408                           fsr2h	equ	0xFDA
  8409                           fsr2l	equ	0xFD9
  8410                           status	equ	0xFD8
  8411                           
  8412 ;; *************** function _ReadConfigST7540 *****************
  8413 ;; Defined at:
  8414 ;;		line 169 in file "ST7540.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  frameDataUS     2   26[BANK2 ] PTR unsigned um
  8417 ;;		 -> InitST7540@frameDataRXUS(3), 
  8418 ;;  configDataUS    2   28[BANK2 ] PTR unsigned um
  8419 ;;		 -> InitST7540@configDataRXUS(3), 
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;  bitsReceived    1   34[BANK2 ] unsigned char 
  8422 ;;  discardUC       1   33[BANK2 ] unsigned char 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8432 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8433 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8435 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8436 ;;Total ram usage:        9 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; Hardware stack levels required when called:    7
  8439 ;; This function calls:
  8440 ;;		Nothing
  8441 ;; This function is called by:
  8442 ;;		_InitST7540
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text50
  8447  0099BC                     __ptext50:
  8448                           	opt stack 0
  8449  0099BC                     _ReadConfigST7540:
  8450                           	opt stack 21
  8451                           
  8452                           ;ST7540.c: 170: unsigned char bitsReceivedUC;
  8453                           ;ST7540.c: 171: unsigned char discardUC;
  8454                           ;ST7540.c: 173: LATDbits.LATD2 = 1;
  8455                           
  8456                           ; BSR set to: 2
  8457                           ;incstack = 0
  8458  0099BC  848C               	bsf	3980,2,c	;volatile
  8459                           
  8460                           ;ST7540.c: 174: LATCbits.LATC3 = 1;
  8461  0099BE  868B               	bsf	3979,3,c	;volatile
  8462  0099C0                     l96:
  8463  0099C0  BA83               	btfsc	3971,5,c	;volatile
  8464  0099C2  D7FE               	goto	l96
  8465                           
  8466                           ;ST7540.c: 176: SSP2CON1bits.SSPEN = 1;
  8467  0099C4  8A72               	bsf	3954,5,c	;volatile
  8468                           
  8469                           ;ST7540.c: 178: discardUC = SSP2BUF;
  8470  0099C6  CF75 F222          	movff	3957,ReadConfigST7540@discardUC	;volatile
  8471                           
  8472                           ;ST7540.c: 179: SSP2BUF = 0;
  8473  0099CA  0E00               	movlw	0
  8474  0099CC  6E75               	movwf	3957,c	;volatile
  8475                           
  8476                           ;ST7540.c: 180: for(bitsReceivedUC = 0; bitsReceivedUC < 6; bitsReceivedUC++){
  8477  0099CE  0E00               	movlw	0
  8478  0099D0  0102               	movlb	2	; () banked
  8479  0099D2  6F23               	movwf	ReadConfigST7540@bitsReceivedUC& (0+255),b
  8480  0099D4                     l4527:
  8481                           
  8482                           ; BSR set to: 2
  8483  0099D4  0E05               	movlw	5
  8484  0099D6  0102               	movlb	2	; () banked
  8485  0099D8  6523               	cpfsgt	ReadConfigST7540@bitsReceivedUC& (0+255),b
  8486  0099DA  D001               	goto	l101
  8487  0099DC  D012               	goto	l100
  8488  0099DE                     l101:
  8489  0099DE  A073               	btfss	3955,0,c	;volatile
  8490  0099E0  D7FE               	goto	l101
  8491                           
  8492                           ;ST7540.c: 182: bufferRXST7540UCAG[bitsReceivedUC] = SSP2BUF;
  8493  0099E2  0102               	movlb	2	; () banked
  8494  0099E4  5123               	movf	ReadConfigST7540@bitsReceivedUC& (0+255),w,b
  8495  0099E6  0D01               	mullw	1
  8496  0099E8  0E9B               	movlw	low _bufferRXST7540UCAG
  8497  0099EA  24F3               	addwf	prodl,w,c
  8498  0099EC  6ED9               	movwf	fsr2l,c
  8499  0099EE  0E03               	movlw	high _bufferRXST7540UCAG
  8500  0099F0  20F4               	addwfc	prodh,w,c
  8501  0099F2  6EDA               	movwf	fsr2h,c
  8502  0099F4  CF75 FFDF          	movff	3957,indf2	;volatile
  8503                           
  8504                           ; BSR set to: 2
  8505                           ;ST7540.c: 183: SSP2BUF = 0;
  8506  0099F8  0E00               	movlw	0
  8507  0099FA  6E75               	movwf	3957,c	;volatile
  8508                           
  8509                           ; BSR set to: 2
  8510  0099FC  0102               	movlb	2	; () banked
  8511  0099FE  2B23               	incf	ReadConfigST7540@bitsReceivedUC& (0+255),f,b
  8512  009A00  D7E9               	goto	l4527
  8513  009A02                     l100:
  8514                           
  8515                           ; BSR set to: 2
  8516                           ;ST7540.c: 184: }
  8517                           ;ST7540.c: 186: LATDbits.LATD2 = 0;
  8518  009A02  948C               	bcf	3980,2,c	;volatile
  8519                           
  8520                           ;ST7540.c: 187: SSP2CON1bits.SSPEN = 0;
  8521  009A04  9A72               	bcf	3954,5,c	;volatile
  8522                           
  8523                           ; BSR set to: 2
  8524                           ;ST7540.c: 189: *frameDataUS = 0;
  8525  009A06  C21B  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
  8526  009A0A  C21C  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
  8527  009A0E  0E00               	movlw	0
  8528  009A10  6EDE               	movwf	postinc2,c
  8529  009A12  0E00               	movlw	0
  8530  009A14  6EDE               	movwf	postinc2,c
  8531  009A16  0E00               	movlw	0
  8532  009A18  6EDE               	movwf	postinc2,c
  8533                           
  8534                           ;ST7540.c: 190: *configDataUS = 0;
  8535  009A1A  C21D  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
  8536  009A1E  C21E  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
  8537  009A22  0E00               	movlw	0
  8538  009A24  6EDE               	movwf	postinc2,c
  8539  009A26  0E00               	movlw	0
  8540  009A28  6EDE               	movwf	postinc2,c
  8541  009A2A  0E00               	movlw	0
  8542  009A2C  6EDE               	movwf	postinc2,c
  8543                           
  8544                           ;ST7540.c: 192: *frameDataUS |= ((unsigned long short) bufferRXST7540UCAG[0] << 16);
  8545  009A2E  0103               	movlb	3	; () banked
  8546  009A30  519B               	movf	_bufferRXST7540UCAG& (0+255),w,b
  8547  009A32  0102               	movlb	2	; () banked
  8548  009A34  6F21               	movwf	(??_ReadConfigST7540+2)& (0+255),b
  8549  009A36  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8550  009A38  6B1F               	clrf	??_ReadConfigST7540& (0+255),b
  8551  009A3A  C21B  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
  8552  009A3E  C21C  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
  8553  009A42  0102               	movlb	2	; () banked
  8554  009A44  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8555  009A46  12DE               	iorwf	postinc2,f,c
  8556  009A48  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8557  009A4A  12DE               	iorwf	postinc2,f,c
  8558  009A4C  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8559  009A4E  12DE               	iorwf	postinc2,f,c
  8560                           
  8561                           ; BSR set to: 2
  8562                           ;ST7540.c: 193: *frameDataUS |= ((unsigned long short) bufferRXST7540UCAG[1] << 8);
  8563  009A50  0103               	movlb	3	; () banked
  8564  009A52  519C               	movf	(_bufferRXST7540UCAG+1)& (0+255),w,b
  8565  009A54  0102               	movlb	2	; () banked
  8566  009A56  6F1F               	movwf	??_ReadConfigST7540& (0+255),b
  8567  009A58  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8568  009A5A  6B21               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  8569  009A5C  C220  F221         	movff	??_ReadConfigST7540+1,??_ReadConfigST7540+2
  8570  009A60  C21F  F220         	movff	??_ReadConfigST7540,??_ReadConfigST7540+1
  8571  009A64  0102               	movlb	2	; () banked
  8572  009A66  6B1F               	clrf	??_ReadConfigST7540& (0+255),b
  8573  009A68  C21B  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
  8574  009A6C  C21C  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
  8575  009A70  0102               	movlb	2	; () banked
  8576  009A72  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8577  009A74  12DE               	iorwf	postinc2,f,c
  8578  009A76  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8579  009A78  12DE               	iorwf	postinc2,f,c
  8580  009A7A  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8581  009A7C  12DE               	iorwf	postinc2,f,c
  8582                           
  8583                           ; BSR set to: 2
  8584                           ;ST7540.c: 194: *frameDataUS |= bufferRXST7540UCAG[2];
  8585  009A7E  0103               	movlb	3	; () banked
  8586  009A80  519D               	movf	(_bufferRXST7540UCAG+2)& (0+255),w,b
  8587  009A82  0102               	movlb	2	; () banked
  8588  009A84  6F1F               	movwf	??_ReadConfigST7540& (0+255),b
  8589  009A86  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8590  009A88  6B21               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  8591  009A8A  C21B  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
  8592  009A8E  C21C  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
  8593  009A92  0102               	movlb	2	; () banked
  8594  009A94  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8595  009A96  12DE               	iorwf	postinc2,f,c
  8596  009A98  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8597  009A9A  12DE               	iorwf	postinc2,f,c
  8598  009A9C  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8599  009A9E  12DE               	iorwf	postinc2,f,c
  8600                           
  8601                           ;ST7540.c: 195: *configDataUS |= ((unsigned long short) bufferRXST7540UCAG[3] << 16);
  8602  009AA0  0103               	movlb	3	; () banked
  8603  009AA2  519E               	movf	(_bufferRXST7540UCAG+3)& (0+255),w,b
  8604  009AA4  0102               	movlb	2	; () banked
  8605  009AA6  6F21               	movwf	(??_ReadConfigST7540+2)& (0+255),b
  8606  009AA8  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8607  009AAA  6B1F               	clrf	??_ReadConfigST7540& (0+255),b
  8608  009AAC  C21D  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
  8609  009AB0  C21E  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
  8610  009AB4  0102               	movlb	2	; () banked
  8611  009AB6  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8612  009AB8  12DE               	iorwf	postinc2,f,c
  8613  009ABA  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8614  009ABC  12DE               	iorwf	postinc2,f,c
  8615  009ABE  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8616  009AC0  12DE               	iorwf	postinc2,f,c
  8617                           
  8618                           ; BSR set to: 2
  8619                           ;ST7540.c: 196: *configDataUS |= ((unsigned long short) bufferRXST7540UCAG[4] << 8);
  8620  009AC2  0103               	movlb	3	; () banked
  8621  009AC4  519F               	movf	(_bufferRXST7540UCAG+4)& (0+255),w,b
  8622  009AC6  0102               	movlb	2	; () banked
  8623  009AC8  6F1F               	movwf	??_ReadConfigST7540& (0+255),b
  8624  009ACA  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8625  009ACC  6B21               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  8626  009ACE  C220  F221         	movff	??_ReadConfigST7540+1,??_ReadConfigST7540+2
  8627  009AD2  C21F  F220         	movff	??_ReadConfigST7540,??_ReadConfigST7540+1
  8628  009AD6  0102               	movlb	2	; () banked
  8629  009AD8  6B1F               	clrf	??_ReadConfigST7540& (0+255),b
  8630  009ADA  C21D  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
  8631  009ADE  C21E  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
  8632  009AE2  0102               	movlb	2	; () banked
  8633  009AE4  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8634  009AE6  12DE               	iorwf	postinc2,f,c
  8635  009AE8  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8636  009AEA  12DE               	iorwf	postinc2,f,c
  8637  009AEC  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8638  009AEE  12DE               	iorwf	postinc2,f,c
  8639                           
  8640                           ; BSR set to: 2
  8641                           ;ST7540.c: 197: *configDataUS |= bufferRXST7540UCAG[5];
  8642  009AF0  0103               	movlb	3	; () banked
  8643  009AF2  51A0               	movf	(_bufferRXST7540UCAG+5)& (0+255),w,b
  8644  009AF4  0102               	movlb	2	; () banked
  8645  009AF6  6F1F               	movwf	??_ReadConfigST7540& (0+255),b
  8646  009AF8  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8647  009AFA  6B21               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  8648  009AFC  C21D  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
  8649  009B00  C21E  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
  8650  009B04  0102               	movlb	2	; () banked
  8651  009B06  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8652  009B08  12DE               	iorwf	postinc2,f,c
  8653  009B0A  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8654  009B0C  12DE               	iorwf	postinc2,f,c
  8655  009B0E  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8656  009B10  12DE               	iorwf	postinc2,f,c
  8657                           
  8658                           ; BSR set to: 2
  8659  009B12  0012               	return		;funcret
  8660  009B14                     __end_of_ReadConfigST7540:
  8661                           	opt stack 0
  8662                           tblptru	equ	0xFF8
  8663                           tblptrh	equ	0xFF7
  8664                           tblptrl	equ	0xFF6
  8665                           tablat	equ	0xFF5
  8666                           prodh	equ	0xFF4
  8667                           prodl	equ	0xFF3
  8668                           intcon	equ	0xFF2
  8669                           postinc0	equ	0xFEE
  8670                           wreg	equ	0xFE8
  8671                           indf1	equ	0xFE7
  8672                           postinc1	equ	0xFE6
  8673                           postdec1	equ	0xFE5
  8674                           fsr1h	equ	0xFE2
  8675                           fsr1l	equ	0xFE1
  8676                           indf2	equ	0xFDF
  8677                           postinc2	equ	0xFDE
  8678                           postdec2	equ	0xFDD
  8679                           fsr2h	equ	0xFDA
  8680                           fsr2l	equ	0xFD9
  8681                           status	equ	0xFD8
  8682                           
  8683 ;; *************** function _InitST7540Pins *****************
  8684 ;; Defined at:
  8685 ;;		line 373 in file "ST7540.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, status,2, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:    8
  8706 ;; This function calls:
  8707 ;;		_PPSLockFunc
  8708 ;;		_PPSUnlockFunc
  8709 ;; This function is called by:
  8710 ;;		_InitST7540
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text51
  8715  00B17C                     __ptext51:
  8716                           	opt stack 0
  8717  00B17C                     _InitST7540Pins:
  8718                           	opt stack 20
  8719                           
  8720                           ;ST7540.c: 375: PPSUnlockFunc();
  8721                           
  8722                           ; BSR set to: 2
  8723                           ;incstack = 0
  8724  00B17C  ECE2  F05A         	call	_PPSUnlockFunc	;wreg free
  8725                           
  8726                           ;ST7540.c: 378: RPINR21 = 23;
  8727  00B180  0E17               	movlw	23
  8728  00B182  010E               	movlb	14	; () banked
  8729  00B184  6FFC               	movwf	252,b	;volatile
  8730                           
  8731                           ; BSR set to: 14
  8732                           ;ST7540.c: 379: RPINR22 = 22;
  8733  00B186  0E16               	movlw	22
  8734  00B188  010E               	movlb	14	; () banked
  8735  00B18A  6FFD               	movwf	253,b	;volatile
  8736                           
  8737                           ; BSR set to: 14
  8738                           ;ST7540.c: 385: RPOR21 = 10;
  8739  00B18C  0E0A               	movlw	10
  8740  00B18E  010E               	movlb	14	; () banked
  8741  00B190  6FD5               	movwf	213,b	;volatile
  8742                           
  8743                           ; BSR set to: 14
  8744                           ;ST7540.c: 388: PPSLockFunc();
  8745  00B192  ECEB  F05A         	call	_PPSLockFunc	;wreg free
  8746                           
  8747                           ;ST7540.c: 391: TRISDbits.TRISD3 = 1;
  8748  00B196  8695               	bsf	3989,3,c	;volatile
  8749                           
  8750                           ;ST7540.c: 395: TRISBbits.TRISB4 = 1;
  8751  00B198  8893               	bsf	3987,4,c	;volatile
  8752                           
  8753                           ;ST7540.c: 399: INTCONbits.RBIE = 1;
  8754  00B19A  86F2               	bsf	intcon,3,c	;volatile
  8755                           
  8756                           ;ST7540.c: 402: TRISDbits.TRISD2 = 0;
  8757  00B19C  9495               	bcf	3989,2,c	;volatile
  8758                           
  8759                           ;ST7540.c: 404: LATDbits.LATD2 = 0;
  8760  00B19E  948C               	bcf	3980,2,c	;volatile
  8761                           
  8762                           ;ST7540.c: 407: TRISDbits.TRISD6 = 1;
  8763  00B1A0  8C95               	bsf	3989,6,c	;volatile
  8764                           
  8765                           ;ST7540.c: 411: TRISDbits.TRISD4 = 0;
  8766  00B1A2  9895               	bcf	3989,4,c	;volatile
  8767                           
  8768                           ;ST7540.c: 413: LATDbits.LATD4 = 0;
  8769  00B1A4  988C               	bcf	3980,4,c	;volatile
  8770                           
  8771                           ;ST7540.c: 416: TRISCbits.TRISC3 = 0;
  8772  00B1A6  9694               	bcf	3988,3,c	;volatile
  8773                           
  8774                           ;ST7540.c: 418: LATCbits.LATC3 = 1;
  8775  00B1A8  868B               	bsf	3979,3,c	;volatile
  8776                           
  8777                           ;ST7540.c: 421: TRISCbits.TRISC2 = 1;
  8778  00B1AA  8494               	bsf	3988,2,c	;volatile
  8779                           
  8780                           ;ST7540.c: 422: ANCON1bits.PCFG11 = 1;
  8781  00B1AC  010F               	movlb	15	; () banked
  8782  00B1AE  8749               	bsf	73,3,b	;volatile
  8783                           
  8784                           ; BSR set to: 15
  8785                           ;ST7540.c: 425: TRISDbits.TRISD5 = 1;
  8786  00B1B0  8A95               	bsf	3989,5,c	;volatile
  8787                           
  8788                           ; BSR set to: 15
  8789                           ;ST7540.c: 429: TRISCbits.TRISC1 = 0;
  8790  00B1B2  9294               	bcf	3988,1,c	;volatile
  8791                           
  8792                           ; BSR set to: 15
  8793                           ;ST7540.c: 431: LATCbits.LATC1 = 0;
  8794  00B1B4  928B               	bcf	3979,1,c	;volatile
  8795                           
  8796                           ; BSR set to: 15
  8797  00B1B6  0012               	return		;funcret
  8798  00B1B8                     __end_of_InitST7540Pins:
  8799                           	opt stack 0
  8800                           tblptru	equ	0xFF8
  8801                           tblptrh	equ	0xFF7
  8802                           tblptrl	equ	0xFF6
  8803                           tablat	equ	0xFF5
  8804                           prodh	equ	0xFF4
  8805                           prodl	equ	0xFF3
  8806                           intcon	equ	0xFF2
  8807                           postinc0	equ	0xFEE
  8808                           wreg	equ	0xFE8
  8809                           indf1	equ	0xFE7
  8810                           postinc1	equ	0xFE6
  8811                           postdec1	equ	0xFE5
  8812                           fsr1h	equ	0xFE2
  8813                           fsr1l	equ	0xFE1
  8814                           indf2	equ	0xFDF
  8815                           postinc2	equ	0xFDE
  8816                           postdec2	equ	0xFDD
  8817                           fsr2h	equ	0xFDA
  8818                           fsr2l	equ	0xFD9
  8819                           status	equ	0xFD8
  8820                           
  8821 ;; *************** function _PPSUnlockFunc *****************
  8822 ;; Defined at:
  8823 ;;		line 30 in file "peripherals.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;		None
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;		None
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      void 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;Total ram usage:        0 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    7
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_InitST7540Pins
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text52
  8852  00B5C4                     __ptext52:
  8853                           	opt stack 0
  8854  00B5C4                     _PPSUnlockFunc:
  8855                           	opt stack 20
  8856                           
  8857                           ;peripherals.c: 31: INTCONbits.GIE = 0;
  8858                           
  8859                           ; BSR set to: 15
  8860                           ;incstack = 0
  8861  00B5C4  9EF2               	bcf	intcon,7,c	;volatile
  8862                           
  8863                           ;peripherals.c: 32: EECON2 = 0x55;
  8864  00B5C6  0E55               	movlw	85
  8865  00B5C8  6EA7               	movwf	4007,c	;volatile
  8866                           
  8867                           ;peripherals.c: 33: EECON2 = 0xAA;
  8868  00B5CA  0EAA               	movlw	170
  8869  00B5CC  6EA7               	movwf	4007,c	;volatile
  8870                           
  8871                           ;peripherals.c: 34: PPSCONbits.IOLOCK = 0;
  8872  00B5CE  010E               	movlb	14	; () banked
  8873  00B5D0  91BF               	bcf	191,0,b	;volatile
  8874                           
  8875                           ; BSR set to: 14
  8876                           ;peripherals.c: 35: INTCONbits.GIE = 1;
  8877  00B5D2  8EF2               	bsf	intcon,7,c	;volatile
  8878                           
  8879                           ; BSR set to: 14
  8880  00B5D4  0012               	return		;funcret
  8881  00B5D6                     __end_of_PPSUnlockFunc:
  8882                           	opt stack 0
  8883                           tblptru	equ	0xFF8
  8884                           tblptrh	equ	0xFF7
  8885                           tblptrl	equ	0xFF6
  8886                           tablat	equ	0xFF5
  8887                           prodh	equ	0xFF4
  8888                           prodl	equ	0xFF3
  8889                           intcon	equ	0xFF2
  8890                           postinc0	equ	0xFEE
  8891                           wreg	equ	0xFE8
  8892                           indf1	equ	0xFE7
  8893                           postinc1	equ	0xFE6
  8894                           postdec1	equ	0xFE5
  8895                           fsr1h	equ	0xFE2
  8896                           fsr1l	equ	0xFE1
  8897                           indf2	equ	0xFDF
  8898                           postinc2	equ	0xFDE
  8899                           postdec2	equ	0xFDD
  8900                           fsr2h	equ	0xFDA
  8901                           fsr2l	equ	0xFD9
  8902                           status	equ	0xFD8
  8903                           
  8904 ;; *************** function _PPSLockFunc *****************
  8905 ;; Defined at:
  8906 ;;		line 38 in file "peripherals.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;		None
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;		None
  8911 ;; Return value:  Size  Location     Type
  8912 ;;                  1    wreg      void 
  8913 ;; Registers used:
  8914 ;;		wreg, status,2
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;Total ram usage:        0 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; Hardware stack levels required when called:    7
  8927 ;; This function calls:
  8928 ;;		Nothing
  8929 ;; This function is called by:
  8930 ;;		_InitST7540Pins
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           	psect	text53
  8935  00B5D6                     __ptext53:
  8936                           	opt stack 0
  8937  00B5D6                     _PPSLockFunc:
  8938                           	opt stack 20
  8939                           
  8940                           ;peripherals.c: 39: INTCONbits.GIE = 0;
  8941                           
  8942                           ; BSR set to: 14
  8943                           ;incstack = 0
  8944  00B5D6  9EF2               	bcf	intcon,7,c	;volatile
  8945                           
  8946                           ;peripherals.c: 40: EECON2 = 0x55;
  8947  00B5D8  0E55               	movlw	85
  8948  00B5DA  6EA7               	movwf	4007,c	;volatile
  8949                           
  8950                           ;peripherals.c: 41: EECON2 = 0xAA;
  8951  00B5DC  0EAA               	movlw	170
  8952  00B5DE  6EA7               	movwf	4007,c	;volatile
  8953                           
  8954                           ;peripherals.c: 42: PPSCONbits.IOLOCK = 1;
  8955  00B5E0  010E               	movlb	14	; () banked
  8956  00B5E2  81BF               	bsf	191,0,b	;volatile
  8957                           
  8958                           ; BSR set to: 14
  8959                           ;peripherals.c: 43: INTCONbits.GIE = 1;
  8960  00B5E4  8EF2               	bsf	intcon,7,c	;volatile
  8961                           
  8962                           ; BSR set to: 14
  8963  00B5E6  0012               	return		;funcret
  8964  00B5E8                     __end_of_PPSLockFunc:
  8965                           	opt stack 0
  8966                           tblptru	equ	0xFF8
  8967                           tblptrh	equ	0xFF7
  8968                           tblptrl	equ	0xFF6
  8969                           tablat	equ	0xFF5
  8970                           prodh	equ	0xFF4
  8971                           prodl	equ	0xFF3
  8972                           intcon	equ	0xFF2
  8973                           postinc0	equ	0xFEE
  8974                           wreg	equ	0xFE8
  8975                           indf1	equ	0xFE7
  8976                           postinc1	equ	0xFE6
  8977                           postdec1	equ	0xFE5
  8978                           fsr1h	equ	0xFE2
  8979                           fsr1l	equ	0xFE1
  8980                           indf2	equ	0xFDF
  8981                           postinc2	equ	0xFDE
  8982                           postdec2	equ	0xFDD
  8983                           fsr2h	equ	0xFDA
  8984                           fsr2l	equ	0xFD9
  8985                           status	equ	0xFD8
  8986                           
  8987 ;; *************** function _isr *****************
  8988 ;; Defined at:
  8989 ;;		line 30 in file "main.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;		None
  8992 ;; Auto vars:     Size  Location     Type
  8993 ;;  discardUC       1   25[BANK2 ] unsigned char 
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  1    wreg      void 
  8996 ;; Registers used:
  8997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  9003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;Total ram usage:       15 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:    6
  9010 ;; This function calls:
  9011 ;;		_BoosterCommsDispatcher
  9012 ;;		_BoosterDataCommandComms
  9013 ;;		_RXReadyISRHandlerST7540
  9014 ;;		_SPIISRHandlerST7540
  9015 ;;		i2_ForceFiringMode
  9016 ;; This function is called by:
  9017 ;;		Interrupt level 2
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	intcode
  9022  008108                     __pintcode:
  9023                           	opt stack 0
  9024  008108                     _isr:
  9025                           	opt stack 18
  9026                           
  9027                           ; BSR set to: 14
  9028                           ;incstack = 0
  9029  008108  821E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9030  00810A  CFFA F20C          	movff	pclath,??_isr
  9031  00810E  CFFB F20D          	movff	pclatu,??_isr+1
  9032  008112  CFE9 F20E          	movff	fsr0l,??_isr+2
  9033  008116  CFEA F20F          	movff	fsr0h,??_isr+3
  9034  00811A  CFE1 F210          	movff	fsr1l,??_isr+4
  9035  00811E  CFE2 F211          	movff	fsr1h,??_isr+5
  9036  008122  CFD9 F212          	movff	fsr2l,??_isr+6
  9037  008126  CFDA F213          	movff	fsr2h,??_isr+7
  9038  00812A  CFF3 F214          	movff	prodl,??_isr+8
  9039  00812E  CFF4 F215          	movff	prodh,??_isr+9
  9040  008132  CFF6 F216          	movff	tblptrl,??_isr+10
  9041  008136  CFF7 F217          	movff	tblptrh,??_isr+11
  9042  00813A  CFF8 F218          	movff	tblptru,??_isr+12
  9043  00813E  CFF5 F219          	movff	tablat,??_isr+13
  9044                           
  9045                           ;main.c: 31: unsigned char discardUC;
  9046                           ;main.c: 33: if(PIR1bits.TMR2IF){
  9047  008142  A29E               	btfss	3998,1,c	;volatile
  9048  008144  D01D               	goto	i2l6229
  9049                           
  9050                           ;main.c: 34: PIR1bits.TMR2IF = 0;
  9051  008146  929E               	bcf	3998,1,c	;volatile
  9052                           
  9053                           ;main.c: 37: if(++masterCommsTimeoutUSG == 40000){
  9054  008148  0103               	movlb	3	; () banked
  9055  00814A  4B3F               	infsnz	_masterCommsTimeoutUSG& (0+255),f,b
  9056  00814C  2B40               	incf	(_masterCommsTimeoutUSG+1)& (0+255),f,b
  9057  00814E  0E40               	movlw	64
  9058  008150  0103               	movlb	3	; () banked
  9059  008152  193F               	xorwf	_masterCommsTimeoutUSG& (0+255),w,b
  9060  008154  E10F               	bnz	i2l6223
  9061  008156  0E9C               	movlw	156
  9062  008158  0103               	movlb	3	; () banked
  9063  00815A  1940               	xorwf	(_masterCommsTimeoutUSG+1)& (0+255),w,b
  9064  00815C  A4D8               	btfss	status,2,c
  9065  00815E  D00A               	goto	i2l6223
  9066                           
  9067                           ; BSR set to: 3
  9068                           ;main.c: 38: ForceFiringMode(0);
  9069  008160  0E00               	movlw	0
  9070  008162  EC80  F058         	call	i2_ForceFiringMode
  9071                           
  9072                           ;main.c: 41: statusFlagsUSLG &= ~0b000000000000000000000010;
  9073  008166  0102               	movlb	2	; () banked
  9074  008168  938A               	bcf	_statusFlagsUSLG& (0+255),1,b	;volatile
  9075                           
  9076                           ; BSR set to: 2
  9077                           ;main.c: 42: masterCommsTimeoutUSG = 0;
  9078  00816A  0E00               	movlw	0
  9079  00816C  0103               	movlb	3	; () banked
  9080  00816E  6F40               	movwf	(_masterCommsTimeoutUSG+1)& (0+255),b
  9081  008170  0E00               	movlw	0
  9082  008172  6F3F               	movwf	_masterCommsTimeoutUSG& (0+255),b
  9083  008174                     i2l6223:
  9084                           
  9085                           ; BSR set to: 3
  9086                           ;main.c: 43: }
  9087                           ;main.c: 49: statusFlagsUSLG |= 0b000000000000000000000001;
  9088  008174  0102               	movlb	2	; () banked
  9089  008176  818A               	bsf	_statusFlagsUSLG& (0+255),0,b	;volatile
  9090                           
  9091                           ; BSR set to: 2
  9092                           ;main.c: 50: BoosterDataCommandComms();
  9093  008178  ECED  F040         	call	_BoosterDataCommandComms	;wreg free
  9094                           
  9095                           ;main.c: 51: BoosterCommsDispatcher();
  9096  00817C  EC3D  F051         	call	_BoosterCommsDispatcher	;wreg free
  9097  008180                     i2l6229:
  9098                           
  9099                           ;main.c: 53: }
  9100                           ;main.c: 55: if(PIR3bits.SSP2IF){
  9101  008180  BEA4               	btfsc	4004,7,c	;volatile
  9102                           
  9103                           ;main.c: 56: SPIISRHandlerST7540();
  9104  008182  ECD2  F054         	call	_SPIISRHandlerST7540	;wreg free
  9105                           
  9106                           ;main.c: 57: }
  9107                           ;main.c: 59: if(INTCONbits.RBIF){
  9108  008186  A0F2               	btfss	intcon,0,c	;volatile
  9109  008188  D008               	goto	i2l699
  9110                           
  9111                           ;main.c: 60: discardUC = PORTBbits.RP4;
  9112  00818A  0E00               	movlw	0
  9113  00818C  B281               	btfsc	3969,1,c	;volatile
  9114  00818E  0E01               	movlw	1
  9115  008190  0102               	movlb	2	; () banked
  9116  008192  6F1A               	movwf	isr@discardUC& (0+255),b
  9117                           
  9118                           ; BSR set to: 2
  9119                           ;main.c: 61: RXReadyISRHandlerST7540();
  9120  008194  EC0A  F05B         	call	_RXReadyISRHandlerST7540	;wreg free
  9121                           
  9122                           ;main.c: 62: INTCONbits.RBIF = 0;
  9123  008198  90F2               	bcf	intcon,0,c	;volatile
  9124  00819A                     i2l699:
  9125  00819A  C219  FFF5         	movff	??_isr+13,tablat
  9126  00819E  C218  FFF8         	movff	??_isr+12,tblptru
  9127  0081A2  C217  FFF7         	movff	??_isr+11,tblptrh
  9128  0081A6  C216  FFF6         	movff	??_isr+10,tblptrl
  9129  0081AA  C215  FFF4         	movff	??_isr+9,prodh
  9130  0081AE  C214  FFF3         	movff	??_isr+8,prodl
  9131  0081B2  C213  FFDA         	movff	??_isr+7,fsr2h
  9132  0081B6  C212  FFD9         	movff	??_isr+6,fsr2l
  9133  0081BA  C211  FFE2         	movff	??_isr+5,fsr1h
  9134  0081BE  C210  FFE1         	movff	??_isr+4,fsr1l
  9135  0081C2  C20F  FFEA         	movff	??_isr+3,fsr0h
  9136  0081C6  C20E  FFE9         	movff	??_isr+2,fsr0l
  9137  0081CA  C20D  FFFB         	movff	??_isr+1,pclatu
  9138  0081CE  C20C  FFFA         	movff	??_isr,pclath
  9139  0081D2  921E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9140  0081D4  0011               	retfie		f
  9141  0081D6                     __end_of_isr:
  9142                           	opt stack 0
  9143                           pclatu	equ	0xFFB
  9144                           pclath	equ	0xFFA
  9145                           tblptru	equ	0xFF8
  9146                           tblptrh	equ	0xFF7
  9147                           tblptrl	equ	0xFF6
  9148                           tablat	equ	0xFF5
  9149                           prodh	equ	0xFF4
  9150                           prodl	equ	0xFF3
  9151                           intcon	equ	0xFF2
  9152                           postinc0	equ	0xFEE
  9153                           fsr0h	equ	0xFEA
  9154                           fsr0l	equ	0xFE9
  9155                           wreg	equ	0xFE8
  9156                           indf1	equ	0xFE7
  9157                           postinc1	equ	0xFE6
  9158                           postdec1	equ	0xFE5
  9159                           fsr1h	equ	0xFE2
  9160                           fsr1l	equ	0xFE1
  9161                           indf2	equ	0xFDF
  9162                           postinc2	equ	0xFDE
  9163                           postdec2	equ	0xFDD
  9164                           fsr2h	equ	0xFDA
  9165                           fsr2l	equ	0xFD9
  9166                           status	equ	0xFD8
  9167                           
  9168 ;; *************** function i2_ForceFiringMode *****************
  9169 ;; Defined at:
  9170 ;;		line 147 in file "mastercomms.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;  forceModeUC     1    wreg     unsigned char 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;  forceModeUC     1    2[COMRAM] unsigned char 
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  1    wreg      void 
  9177 ;; Registers used:
  9178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  9184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9188 ;;Total ram usage:        1 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; Hardware stack levels required when called:    2
  9191 ;; This function calls:
  9192 ;;		i2_ClearPastValues
  9193 ;;		i2_ResetBoosterStates
  9194 ;; This function is called by:
  9195 ;;		_isr
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text55
  9200  00B100                     __ptext55:
  9201                           	opt stack 0
  9202  00B100                     i2_ForceFiringMode:
  9203                           	opt stack 21
  9204                           
  9205                           ;incstack = 0
  9206                           ;i2ForceFiringMode@forceModeUC stored from wreg
  9207  00B100  6E03               	movwf	i2ForceFiringMode@forceModeUC,c
  9208                           
  9209                           ;mastercomms.c: 149: if(forceModeUC == 0 && !(statusFlagsUSLG & 0b0100000000000000000000
      +                          00)){
  9210  00B102  5003               	movf	i2ForceFiringMode@forceModeUC,w,c
  9211  00B104  A4D8               	btfss	status,2,c
  9212  00B106  D009               	goto	i2l6201
  9213  00B108  0102               	movlb	2	; () banked
  9214  00B10A  BD8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
  9215  00B10C  D006               	goto	i2l6201
  9216                           
  9217                           ; BSR set to: 2
  9218                           ;mastercomms.c: 150: LATDbits.LATD7 = 0;
  9219  00B10E  9E8C               	bcf	3980,7,c	;volatile
  9220                           
  9221                           ; BSR set to: 2
  9222                           ;mastercomms.c: 151: ResetBoosterStates();
  9223  00B110  ECCD  F05A         	call	i2_ResetBoosterStates	;wreg free
  9224                           
  9225                           ;mastercomms.c: 152: ClearPastValues();
  9226  00B114  ECC2  F05A         	call	i2_ClearPastValues	;wreg free
  9227                           
  9228                           ;mastercomms.c: 153: }else{
  9229  00B118  0012               	return	
  9230  00B11A                     i2l6201:
  9231                           
  9232                           ;mastercomms.c: 154: statusFlagsUSLG |= 0b000000000000000000000010;
  9233  00B11A  0102               	movlb	2	; () banked
  9234  00B11C  838A               	bsf	_statusFlagsUSLG& (0+255),1,b	;volatile
  9235                           
  9236                           ;mastercomms.c: 155: statusFlagsUSLG &= ~0b001000000000000000000000;
  9237  00B11E  0102               	movlb	2	; () banked
  9238  00B120  9B8C               	bcf	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
  9239                           
  9240                           ;mastercomms.c: 156: statusFlagsUSLG |= 0b000000001000000000000000;
  9241  00B122  0102               	movlb	2	; () banked
  9242  00B124  8F8B               	bsf	(_statusFlagsUSLG+1)& (0+255),7,b	;volatile
  9243                           
  9244                           ; BSR set to: 2
  9245                           ;mastercomms.c: 157: if(!(statusFlagsUSLG & 0b000000000000000000100000) ||((statusFlagsU
      +                          SLG & 0b000000000000000000100000)&& (ISO_COUNTER >= 15)))
  9246  00B126  0102               	movlb	2	; () banked
  9247  00B128  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
  9248  00B12A  D007               	goto	i2l837
  9249                           
  9250                           ; BSR set to: 2
  9251  00B12C  0102               	movlb	2	; () banked
  9252  00B12E  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
  9253  00B130  D005               	goto	i2l835
  9254                           
  9255                           ; BSR set to: 2
  9256  00B132  0E0E               	movlw	14
  9257  00B134  0102               	movlb	2	; () banked
  9258  00B136  65A1               	cpfsgt	_ISO_COUNTER& (0+255),b
  9259  00B138  D001               	goto	i2l835
  9260  00B13A                     i2l837:
  9261                           
  9262                           ; BSR set to: 2
  9263                           ;mastercomms.c: 158: LATDbits.LATD7 = 1;
  9264  00B13A  8E8C               	bsf	3980,7,c	;volatile
  9265  00B13C                     i2l835:
  9266                           
  9267                           ; BSR set to: 2
  9268                           ;mastercomms.c: 159: LATBbits.LATB3 = 0;
  9269  00B13C  968A               	bcf	3978,3,c	;volatile
  9270  00B13E  0012               	return	
  9271  00B140                     __end_ofi2_ForceFiringMode:
  9272                           	opt stack 0
  9273                           pclatu	equ	0xFFB
  9274                           pclath	equ	0xFFA
  9275                           tblptru	equ	0xFF8
  9276                           tblptrh	equ	0xFF7
  9277                           tblptrl	equ	0xFF6
  9278                           tablat	equ	0xFF5
  9279                           prodh	equ	0xFF4
  9280                           prodl	equ	0xFF3
  9281                           intcon	equ	0xFF2
  9282                           postinc0	equ	0xFEE
  9283                           fsr0h	equ	0xFEA
  9284                           fsr0l	equ	0xFE9
  9285                           wreg	equ	0xFE8
  9286                           indf1	equ	0xFE7
  9287                           postinc1	equ	0xFE6
  9288                           postdec1	equ	0xFE5
  9289                           fsr1h	equ	0xFE2
  9290                           fsr1l	equ	0xFE1
  9291                           indf2	equ	0xFDF
  9292                           postinc2	equ	0xFDE
  9293                           postdec2	equ	0xFDD
  9294                           fsr2h	equ	0xFDA
  9295                           fsr2l	equ	0xFD9
  9296                           status	equ	0xFD8
  9297                           
  9298 ;; *************** function _SPIISRHandlerST7540 *****************
  9299 ;; Defined at:
  9300 ;;		line 200 in file "ST7540.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;		None
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;  dataReadUC      1    0[COMRAM] unsigned char 
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      void 
  9307 ;; Registers used:
  9308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  9314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9318 ;;Total ram usage:        1 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; This function calls:
  9321 ;;		Nothing
  9322 ;; This function is called by:
  9323 ;;		_isr
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           	psect	text56
  9328  00A9A4                     __ptext56:
  9329                           	opt stack 0
  9330  00A9A4                     _SPIISRHandlerST7540:
  9331                           	opt stack 23
  9332                           
  9333                           ;ST7540.c: 201: unsigned char dataReadUC;
  9334                           ;ST7540.c: 203: if(!PIE3bits.SSP2IE){
  9335                           
  9336                           ;incstack = 0
  9337  00A9A4  BEA3               	btfsc	4003,7,c	;volatile
  9338  00A9A6  D002               	goto	i2l107
  9339                           
  9340                           ;ST7540.c: 204: PIR3bits.SSP2IF = 0;
  9341  00A9A8  9EA4               	bcf	4004,7,c	;volatile
  9342                           
  9343                           ;ST7540.c: 205: return;
  9344  00A9AA  0012               	return	
  9345  00A9AC                     i2l107:
  9346                           
  9347                           ;ST7540.c: 206: }
  9348                           ;ST7540.c: 208: dataReadUC = SSP2BUF;
  9349  00A9AC  CF75 F001          	movff	3957,SPIISRHandlerST7540@dataReadUC	;volatile
  9350                           
  9351                           ;ST7540.c: 209: SSP2BUF = 0;
  9352  00A9B0  0E00               	movlw	0
  9353  00A9B2  6E75               	movwf	3957,c	;volatile
  9354                           
  9355                           ;ST7540.c: 211: if(flagST7540UCG & 1){
  9356  00A9B4  0102               	movlb	2	; () banked
  9357  00A9B6  A1A8               	btfss	_flagST7540UCG& (0+255),0,b
  9358  00A9B8  D01A               	goto	i2l109
  9359                           
  9360                           ; BSR set to: 2
  9361                           ;ST7540.c: 212: if(bufferTXNextUCG > bufferTXLenUCG){
  9362  00A9BA  0102               	movlb	2	; () banked
  9363  00A9BC  51A6               	movf	_bufferTXNextUCG& (0+255),w,b
  9364  00A9BE  0102               	movlb	2	; () banked
  9365  00A9C0  5DA7               	subwf	_bufferTXLenUCG& (0+255),w,b
  9366  00A9C2  B0D8               	btfsc	status,0,c
  9367  00A9C4  D006               	goto	i2l5511
  9368                           
  9369                           ; BSR set to: 2
  9370                           ;ST7540.c: 213: flagST7540UCG &= ~1;
  9371  00A9C6  0102               	movlb	2	; () banked
  9372  00A9C8  91A8               	bcf	_flagST7540UCG& (0+255),0,b
  9373                           
  9374                           ; BSR set to: 2
  9375                           ;ST7540.c: 214: SSP2CON1bits.SSPEN = 0;
  9376  00A9CA  9A72               	bcf	3954,5,c	;volatile
  9377                           
  9378                           ; BSR set to: 2
  9379                           ;ST7540.c: 215: PIR3bits.SSP2IF = 0;
  9380  00A9CC  9EA4               	bcf	4004,7,c	;volatile
  9381                           
  9382                           ; BSR set to: 2
  9383                           ;ST7540.c: 216: LATCbits.LATC3 = 1;
  9384  00A9CE  868B               	bsf	3979,3,c	;volatile
  9385                           
  9386                           ; BSR set to: 2
  9387                           ;ST7540.c: 217: return;
  9388  00A9D0  0012               	return	
  9389  00A9D2                     i2l5511:
  9390                           
  9391                           ; BSR set to: 2
  9392                           ;ST7540.c: 218: }
  9393                           ;ST7540.c: 219: SSP2BUF = bufferTXST7540UCAG[bufferTXNextUCG++];
  9394  00A9D2  0102               	movlb	2	; () banked
  9395  00A9D4  51A6               	movf	_bufferTXNextUCG& (0+255),w,b
  9396  00A9D6  0D01               	mullw	1
  9397  00A9D8  0E4C               	movlw	low _bufferTXST7540UCAG
  9398  00A9DA  24F3               	addwf	prodl,w,c
  9399  00A9DC  6ED9               	movwf	fsr2l,c
  9400  00A9DE  0E03               	movlw	high _bufferTXST7540UCAG
  9401  00A9E0  20F4               	addwfc	prodh,w,c
  9402  00A9E2  6EDA               	movwf	fsr2h,c
  9403  00A9E4  50DF               	movf	indf2,w,c
  9404  00A9E6  6E75               	movwf	3957,c	;volatile
  9405                           
  9406                           ; BSR set to: 2
  9407  00A9E8  0102               	movlb	2	; () banked
  9408  00A9EA  2BA6               	incf	_bufferTXNextUCG& (0+255),f,b
  9409                           
  9410                           ;ST7540.c: 220: }else if(flagST7540UCG & 2){
  9411  00A9EC  D025               	goto	i2l111
  9412  00A9EE                     i2l109:
  9413                           
  9414                           ; BSR set to: 2
  9415  00A9EE  0102               	movlb	2	; () banked
  9416  00A9F0  A3A8               	btfss	_flagST7540UCG& (0+255),1,b
  9417  00A9F2  D022               	goto	i2l111
  9418                           
  9419                           ; BSR set to: 2
  9420                           ;ST7540.c: 221: bufferRXST7540UCAG[bufferRXNextUCG++] = dataReadUC;
  9421  00A9F4  0102               	movlb	2	; () banked
  9422  00A9F6  51A5               	movf	_bufferRXNextUCG& (0+255),w,b
  9423  00A9F8  0D01               	mullw	1
  9424  00A9FA  0E9B               	movlw	low _bufferRXST7540UCAG
  9425  00A9FC  24F3               	addwf	prodl,w,c
  9426  00A9FE  6ED9               	movwf	fsr2l,c
  9427  00AA00  0E03               	movlw	high _bufferRXST7540UCAG
  9428  00AA02  20F4               	addwfc	prodh,w,c
  9429  00AA04  6EDA               	movwf	fsr2h,c
  9430  00AA06  C001  FFDF         	movff	SPIISRHandlerST7540@dataReadUC,indf2
  9431                           
  9432                           ; BSR set to: 2
  9433  00AA0A  0102               	movlb	2	; () banked
  9434  00AA0C  2BA5               	incf	_bufferRXNextUCG& (0+255),f,b
  9435                           
  9436                           ; BSR set to: 2
  9437                           ;ST7540.c: 222: if(bufferRXST7540UCAG[0] == bufferRXNextUCG){
  9438  00AA0E  0102               	movlb	2	; () banked
  9439  00AA10  51A5               	movf	_bufferRXNextUCG& (0+255),w,b
  9440  00AA12  0103               	movlb	3	; () banked
  9441  00AA14  199B               	xorwf	_bufferRXST7540UCAG& (0+255),w,b
  9442  00AA16  A4D8               	btfss	status,2,c
  9443  00AA18  D00F               	goto	i2l111
  9444                           
  9445                           ; BSR set to: 3
  9446                           ;ST7540.c: 223: if(bufferRXST7540UCAG[6] == 0x31)
  9447  00AA1A  0E31               	movlw	49
  9448  00AA1C  0103               	movlb	3	; () banked
  9449  00AA1E  19A1               	xorwf	(_bufferRXST7540UCAG+6)& (0+255),w,b
  9450  00AA20  A4D8               	btfss	status,2,c
  9451  00AA22  D003               	goto	i2l5525
  9452                           
  9453                           ; BSR set to: 3
  9454                           ;ST7540.c: 224: bufferRXST7540UCAG[0] = 9;
  9455  00AA24  0E09               	movlw	9
  9456  00AA26  0103               	movlb	3	; () banked
  9457  00AA28  6F9B               	movwf	_bufferRXST7540UCAG& (0+255),b
  9458  00AA2A                     i2l5525:
  9459                           
  9460                           ; BSR set to: 3
  9461                           ;ST7540.c: 225: flagST7540UCG |= 4;
  9462  00AA2A  0102               	movlb	2	; () banked
  9463  00AA2C  85A8               	bsf	_flagST7540UCG& (0+255),2,b
  9464                           
  9465                           ; BSR set to: 2
  9466                           ;ST7540.c: 226: flagST7540UCG &= ~2;
  9467  00AA2E  0102               	movlb	2	; () banked
  9468  00AA30  93A8               	bcf	_flagST7540UCG& (0+255),1,b
  9469                           
  9470                           ; BSR set to: 2
  9471                           ;ST7540.c: 227: SSP2CON1bits.SSPEN = 0;
  9472  00AA32  9A72               	bcf	3954,5,c	;volatile
  9473                           
  9474                           ; BSR set to: 2
  9475                           ;ST7540.c: 228: PIR3bits.SSP2IF = 0;
  9476  00AA34  9EA4               	bcf	4004,7,c	;volatile
  9477                           
  9478                           ; BSR set to: 2
  9479                           ;ST7540.c: 229: return;
  9480  00AA36  0012               	return	
  9481  00AA38                     i2l111:
  9482                           
  9483                           ;ST7540.c: 230: }
  9484                           ;ST7540.c: 231: }
  9485                           ;ST7540.c: 233: PIR3bits.SSP2IF = 0;
  9486  00AA38  9EA4               	bcf	4004,7,c	;volatile
  9487  00AA3A  0012               	return		;funcret
  9488  00AA3C                     __end_of_SPIISRHandlerST7540:
  9489                           	opt stack 0
  9490                           pclatu	equ	0xFFB
  9491                           pclath	equ	0xFFA
  9492                           tblptru	equ	0xFF8
  9493                           tblptrh	equ	0xFF7
  9494                           tblptrl	equ	0xFF6
  9495                           tablat	equ	0xFF5
  9496                           prodh	equ	0xFF4
  9497                           prodl	equ	0xFF3
  9498                           intcon	equ	0xFF2
  9499                           postinc0	equ	0xFEE
  9500                           fsr0h	equ	0xFEA
  9501                           fsr0l	equ	0xFE9
  9502                           wreg	equ	0xFE8
  9503                           indf1	equ	0xFE7
  9504                           postinc1	equ	0xFE6
  9505                           postdec1	equ	0xFE5
  9506                           fsr1h	equ	0xFE2
  9507                           fsr1l	equ	0xFE1
  9508                           indf2	equ	0xFDF
  9509                           postinc2	equ	0xFDE
  9510                           postdec2	equ	0xFDD
  9511                           fsr2h	equ	0xFDA
  9512                           fsr2l	equ	0xFD9
  9513                           status	equ	0xFD8
  9514                           
  9515 ;; *************** function _RXReadyISRHandlerST7540 *****************
  9516 ;; Defined at:
  9517 ;;		line 236 in file "ST7540.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;		None
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;		None
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  1    wreg      void 
  9524 ;; Registers used:
  9525 ;;		None
  9526 ;; Tracked objects:
  9527 ;;		On entry : 0/0
  9528 ;;		On exit  : 0/0
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  9531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;Total ram usage:        0 bytes
  9536 ;; Hardware stack levels used:    1
  9537 ;; This function calls:
  9538 ;;		Nothing
  9539 ;; This function is called by:
  9540 ;;		_isr
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           	psect	text57
  9545  00B614                     __ptext57:
  9546                           	opt stack 0
  9547  00B614                     _RXReadyISRHandlerST7540:
  9548                           	opt stack 23
  9549                           
  9550                           ;ST7540.c: 237: if((flagST7540UCG & 2) && !PORTBbits.RP4){
  9551                           
  9552                           ;incstack = 0
  9553  00B614  0102               	movlb	2	; () banked
  9554  00B616  A3A8               	btfss	_flagST7540UCG& (0+255),1,b
  9555  00B618  0012               	return	
  9556                           
  9557                           ; BSR set to: 2
  9558  00B61A  B281               	btfsc	3969,1,c	;volatile
  9559  00B61C  0012               	return	
  9560                           
  9561                           ; BSR set to: 2
  9562                           ;ST7540.c: 238: SSP2CON1bits.SSPEN = 1;
  9563  00B61E  8A72               	bsf	3954,5,c	;volatile
  9564  00B620  0012               	return	
  9565  00B622                     __end_of_RXReadyISRHandlerST7540:
  9566                           	opt stack 0
  9567                           pclatu	equ	0xFFB
  9568                           pclath	equ	0xFFA
  9569                           tblptru	equ	0xFF8
  9570                           tblptrh	equ	0xFF7
  9571                           tblptrl	equ	0xFF6
  9572                           tablat	equ	0xFF5
  9573                           prodh	equ	0xFF4
  9574                           prodl	equ	0xFF3
  9575                           intcon	equ	0xFF2
  9576                           postinc0	equ	0xFEE
  9577                           fsr0h	equ	0xFEA
  9578                           fsr0l	equ	0xFE9
  9579                           wreg	equ	0xFE8
  9580                           indf1	equ	0xFE7
  9581                           postinc1	equ	0xFE6
  9582                           postdec1	equ	0xFE5
  9583                           fsr1h	equ	0xFE2
  9584                           fsr1l	equ	0xFE1
  9585                           indf2	equ	0xFDF
  9586                           postinc2	equ	0xFDE
  9587                           postdec2	equ	0xFDD
  9588                           fsr2h	equ	0xFDA
  9589                           fsr2l	equ	0xFD9
  9590                           status	equ	0xFD8
  9591                           
  9592 ;; *************** function _BoosterDataCommandComms *****************
  9593 ;; Defined at:
  9594 ;;		line 48 in file "boostercomms.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;		None
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  commsADCValu    2   19[COMRAM] unsigned short 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      void 
  9601 ;; Registers used:
  9602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  9608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9609 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;Total ram usage:        4 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:    2
  9615 ;; This function calls:
  9616 ;;		_CheckLineFault
  9617 ;;		_InitEarthLeakage
  9618 ;;		_ProcessRXFrame
  9619 ;;		_ReadAnalogVoltage
  9620 ;;		_ReadEarthLeakage
  9621 ;;		_ReadKeySwitch
  9622 ;;		_SetCommsLow
  9623 ;;		i2_SetCommsHigh
  9624 ;; This function is called by:
  9625 ;;		_isr
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           	psect	text58
  9630  0081DA                     __ptext58:
  9631                           	opt stack 0
  9632  0081DA                     _BoosterDataCommandComms:
  9633                           	opt stack 21
  9634                           
  9635                           ;boostercomms.c: 49: static unsigned short counterCommsStatusUSS;
  9636                           ;boostercomms.c: 50: static unsigned short counterSyncStatusUSS;
  9637                           ;boostercomms.c: 51: static unsigned char commsBitsSentUCS;
  9638                           ;boostercomms.c: 52: static unsigned char framesReceivedPhaseUCS;
  9639                           ;boostercomms.c: 54: unsigned short commsADCValueUS;
  9640                           ;boostercomms.c: 55: static unsigned char syncModeUCS;
  9641                           ;boostercomms.c: 56: static unsigned char bitsReadUCS;
  9642                           ;boostercomms.c: 57: static unsigned char lvlCountUCS;
  9643                           ;boostercomms.c: 58: static unsigned short recvFrameUSS;
  9644                           
  9645                           ; BSR set to: 2
  9646                           ;incstack = 0
  9647  0081DA  0102               	movlb	2	; () banked
  9648  0081DC  4B8D               	infsnz	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),f,b
  9649  0081DE  2B8E               	incf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),f,b
  9650                           
  9651                           ;boostercomms.c: 64: counterSyncStatusUSS++;
  9652  0081E0  0103               	movlb	3	; () banked
  9653  0081E2  4B43               	infsnz	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),f,b
  9654  0081E4  2B44               	incf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),f,b
  9655                           
  9656                           ;boostercomms.c: 65: switch(commsStatusUCG){
  9657  0081E6  D3E8               	goto	i2l5945
  9658  0081E8                     i2l270:
  9659                           
  9660                           ; BSR set to: 2
  9661                           ;boostercomms.c: 69: if(!(statusFlagsUSLG & 0b000000000000000000001000)){
  9662  0081E8  0102               	movlb	2	; () banked
  9663  0081EA  B78A               	btfsc	_statusFlagsUSLG& (0+255),3,b	;volatile
  9664  0081EC  D00A               	goto	i2l271
  9665                           
  9666                           ; BSR set to: 2
  9667                           ;boostercomms.c: 70: statusFlagsUSLG |= 0b000000000000000000001000;
  9668  0081EE  0102               	movlb	2	; () banked
  9669  0081F0  878A               	bsf	_statusFlagsUSLG& (0+255),3,b	;volatile
  9670                           
  9671                           ; BSR set to: 2
  9672                           ;boostercomms.c: 71: counterCommsStatusUSS = 0;
  9673  0081F2  0E00               	movlw	0
  9674  0081F4  0102               	movlb	2	; () banked
  9675  0081F6  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
  9676  0081F8  0E00               	movlw	0
  9677  0081FA  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
  9678                           
  9679                           ; BSR set to: 2
  9680                           ;boostercomms.c: 73: SetCommsLow();
  9681  0081FC  EC37  F05B         	call	_SetCommsLow	;wreg free
  9682                           
  9683                           ;boostercomms.c: 74: }else if(((statusFlagsUSLG & 0b000000000000000000000100) && (counte
      +                          rCommsStatusUSS == 200)) ||
  9684  008200  0012               	return	
  9685  008202                     i2l271:
  9686                           
  9687                           ; BSR set to: 2
  9688                           ;boostercomms.c: 75: (!(statusFlagsUSLG & 0b000000000000000000000100) && (counterCommsSt
      +                          atusUSS == 250))){
  9689  008202  0102               	movlb	2	; () banked
  9690  008204  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
  9691  008206  D007               	goto	i2l277
  9692                           
  9693                           ; BSR set to: 2
  9694  008208  0EC8               	movlw	200
  9695  00820A  0102               	movlb	2	; () banked
  9696  00820C  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9697  00820E  0102               	movlb	2	; () banked
  9698  008210  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9699  008212  B4D8               	btfsc	status,2,c
  9700  008214  D00A               	goto	i2l5553
  9701  008216                     i2l277:
  9702                           
  9703                           ; BSR set to: 2
  9704  008216  0102               	movlb	2	; () banked
  9705  008218  B58A               	btfsc	_statusFlagsUSLG& (0+255),2,b	;volatile
  9706  00821A  0012               	return	
  9707                           
  9708                           ; BSR set to: 2
  9709  00821C  0EFA               	movlw	250
  9710  00821E  0102               	movlb	2	; () banked
  9711  008220  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9712  008222  0102               	movlb	2	; () banked
  9713  008224  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9714  008226  A4D8               	btfss	status,2,c
  9715  008228  0012               	return	
  9716  00822A                     i2l5553:
  9717                           
  9718                           ; BSR set to: 2
  9719                           ;boostercomms.c: 76: commsStatusUCG = 2;
  9720  00822A  0E02               	movlw	2
  9721  00822C  0102               	movlb	2	; () banked
  9722  00822E  6FA3               	movwf	_commsStatusUCG& (0+255),b
  9723                           
  9724                           ; BSR set to: 2
  9725                           ;boostercomms.c: 77: statusFlagsUSLG &= ~0b000000000000000000001000;
  9726  008230  0102               	movlb	2	; () banked
  9727  008232  978A               	bcf	_statusFlagsUSLG& (0+255),3,b	;volatile
  9728                           
  9729                           ; BSR set to: 2
  9730                           ;boostercomms.c: 78: counterCommsStatusUSS = 0;
  9731  008234  0E00               	movlw	0
  9732  008236  0102               	movlb	2	; () banked
  9733  008238  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
  9734  00823A  0E00               	movlw	0
  9735  00823C  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
  9736                           
  9737                           ; BSR set to: 2
  9738                           ;boostercomms.c: 79: SetCommsHigh();
  9739  00823E  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
  9740                           
  9741                           ;boostercomms.c: 80: }
  9742                           ;boostercomms.c: 81: break;
  9743  008242  0012               	return	
  9744  008244                     i2l279:
  9745                           
  9746                           ; BSR set to: 2
  9747                           ;boostercomms.c: 83: if(!(statusFlagsUSLG & 0b000000000000000000001000)){
  9748  008244  0102               	movlb	2	; () banked
  9749  008246  B78A               	btfsc	_statusFlagsUSLG& (0+255),3,b	;volatile
  9750  008248  D011               	goto	i2l5569
  9751                           
  9752                           ; BSR set to: 2
  9753                           ;boostercomms.c: 84: statusFlagsUSLG |= 0b000000000000000000001000;
  9754  00824A  0102               	movlb	2	; () banked
  9755  00824C  878A               	bsf	_statusFlagsUSLG& (0+255),3,b	;volatile
  9756                           
  9757                           ; BSR set to: 2
  9758                           ;boostercomms.c: 85: if(statusFlagsUSLG & 0b000000000000000000000100)
  9759  00824E  0102               	movlb	2	; () banked
  9760  008250  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
  9761  008252  D008               	goto	i2l5567
  9762                           
  9763                           ; BSR set to: 2
  9764                           ;boostercomms.c: 86: commsTXBitsUSLG <<= 21;
  9765  008254  0103               	movlb	3	; () banked
  9766  008256  0E15               	movlw	21
  9767  008258                     i2u565_45:
  9768  008258  90D8               	bcf	status,0,c
  9769  00825A  373C               	rlcf	_commsTXBitsUSLG& (0+255),f,b
  9770  00825C  373D               	rlcf	(_commsTXBitsUSLG+1)& (0+255),f,b
  9771  00825E  373E               	rlcf	(_commsTXBitsUSLG+2)& (0+255),f,b
  9772  008260  2EE8               	decfsz	wreg,f,c
  9773  008262  D7FA               	goto	i2u565_45
  9774  008264                     i2l5567:
  9775                           
  9776                           ;boostercomms.c: 87: commsBitsSentUCS = 0;
  9777  008264  0E00               	movlw	0
  9778  008266  0102               	movlb	2	; () banked
  9779  008268  6F9A               	movwf	BoosterDataCommandComms@commsBitsSentUCS& (0+255),b
  9780                           
  9781                           ;boostercomms.c: 88: }else{
  9782  00826A  0012               	return	
  9783  00826C                     i2l5569:
  9784                           
  9785                           ; BSR set to: 2
  9786                           ;boostercomms.c: 89: if(counterCommsStatusUSS == 65){
  9787  00826C  0E41               	movlw	65
  9788  00826E  0102               	movlb	2	; () banked
  9789  008270  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9790  008272  0102               	movlb	2	; () banked
  9791  008274  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9792  008276  A4D8               	btfss	status,2,c
  9793  008278  D006               	goto	i2l5575
  9794                           
  9795                           ; BSR set to: 2
  9796                           ;boostercomms.c: 90: if(!(commsTXBitsUSLG & 0b100000000000000000000000))
  9797  00827A  0103               	movlb	3	; () banked
  9798  00827C  BF3E               	btfsc	(_commsTXBitsUSLG+2)& (0+255),7,b
  9799  00827E  0012               	return	
  9800                           
  9801                           ; BSR set to: 3
  9802                           ;boostercomms.c: 91: SetCommsLow();
  9803  008280  EC37  F05B         	call	_SetCommsLow	;wreg free
  9804                           
  9805                           ;boostercomms.c: 92: }else if(counterCommsStatusUSS == 75){
  9806  008284  0012               	return	
  9807  008286                     i2l5575:
  9808  008286  0E4B               	movlw	75
  9809  008288  0102               	movlb	2	; () banked
  9810  00828A  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9811  00828C  0102               	movlb	2	; () banked
  9812  00828E  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9813  008290  A4D8               	btfss	status,2,c
  9814  008292  D003               	goto	i2l5579
  9815                           
  9816                           ; BSR set to: 2
  9817                           ;boostercomms.c: 93: SetCommsLow();
  9818  008294  EC37  F05B         	call	_SetCommsLow	;wreg free
  9819                           
  9820                           ;boostercomms.c: 94: }else if(counterCommsStatusUSS == 100){
  9821  008298  0012               	return	
  9822  00829A                     i2l5579:
  9823  00829A  0E64               	movlw	100
  9824  00829C  0102               	movlb	2	; () banked
  9825  00829E  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9826  0082A0  0102               	movlb	2	; () banked
  9827  0082A2  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9828  0082A4  A4D8               	btfss	status,2,c
  9829  0082A6  0012               	return	
  9830                           
  9831                           ; BSR set to: 2
  9832                           ;boostercomms.c: 95: commsTXBitsUSLG <<= 1;
  9833  0082A8  0103               	movlb	3	; () banked
  9834  0082AA  90D8               	bcf	status,0,c
  9835  0082AC  373C               	rlcf	_commsTXBitsUSLG& (0+255),f,b
  9836  0082AE  373D               	rlcf	(_commsTXBitsUSLG+1)& (0+255),f,b
  9837  0082B0  373E               	rlcf	(_commsTXBitsUSLG+2)& (0+255),f,b
  9838                           
  9839                           ;boostercomms.c: 96: commsBitsSentUCS++;
  9840  0082B2  0102               	movlb	2	; () banked
  9841  0082B4  2B9A               	incf	BoosterDataCommandComms@commsBitsSentUCS& (0+255),f,b
  9842                           
  9843                           ; BSR set to: 2
  9844                           ;boostercomms.c: 97: SetCommsHigh();
  9845  0082B6  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
  9846                           
  9847                           ;boostercomms.c: 98: if((statusFlagsUSLG & 0b000000000000000000000100) && (commsBitsSent
      +                          UCS == 3)){
  9848  0082BA  0102               	movlb	2	; () banked
  9849  0082BC  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
  9850  0082BE  D00B               	goto	i2l289
  9851                           
  9852                           ; BSR set to: 2
  9853  0082C0  0E03               	movlw	3
  9854  0082C2  0102               	movlb	2	; () banked
  9855  0082C4  199A               	xorwf	BoosterDataCommandComms@commsBitsSentUCS& (0+255),w,b
  9856  0082C6  A4D8               	btfss	status,2,c
  9857  0082C8  D006               	goto	i2l289
  9858                           
  9859                           ; BSR set to: 2
  9860                           ;boostercomms.c: 99: commsStatusUCG = 4;
  9861  0082CA  0E04               	movlw	4
  9862  0082CC  0102               	movlb	2	; () banked
  9863  0082CE  6FA3               	movwf	_commsStatusUCG& (0+255),b
  9864                           
  9865                           ; BSR set to: 2
  9866                           ;boostercomms.c: 100: statusFlagsUSLG &= ~0b000000000000000000001000;
  9867  0082D0  0102               	movlb	2	; () banked
  9868  0082D2  978A               	bcf	_statusFlagsUSLG& (0+255),3,b	;volatile
  9869                           
  9870                           ;boostercomms.c: 101: }else if(!(statusFlagsUSLG & 0b000000000000000000000100) && (comms
      +                          BitsSentUCS == 24)){
  9871  0082D4  D013               	goto	i2l5603
  9872  0082D6                     i2l289:
  9873                           
  9874                           ; BSR set to: 2
  9875  0082D6  0102               	movlb	2	; () banked
  9876  0082D8  B58A               	btfsc	_statusFlagsUSLG& (0+255),2,b	;volatile
  9877  0082DA  D010               	goto	i2l5603
  9878                           
  9879                           ; BSR set to: 2
  9880  0082DC  0E18               	movlw	24
  9881  0082DE  0102               	movlb	2	; () banked
  9882  0082E0  199A               	xorwf	BoosterDataCommandComms@commsBitsSentUCS& (0+255),w,b
  9883  0082E2  A4D8               	btfss	status,2,c
  9884  0082E4  D00B               	goto	i2l5603
  9885                           
  9886                           ; BSR set to: 2
  9887                           ;boostercomms.c: 102: commsStatusUCG = 3;
  9888  0082E6  0E03               	movlw	3
  9889  0082E8  0102               	movlb	2	; () banked
  9890  0082EA  6FA3               	movwf	_commsStatusUCG& (0+255),b
  9891                           
  9892                           ; BSR set to: 2
  9893                           ;boostercomms.c: 103: statusFlagsUSLG &= ~0b000000000000000000001000;
  9894  0082EC  0102               	movlb	2	; () banked
  9895  0082EE  978A               	bcf	_statusFlagsUSLG& (0+255),3,b	;volatile
  9896                           
  9897                           ; BSR set to: 2
  9898                           ;boostercomms.c: 104: framesReceivedPhaseUCS = 0;
  9899  0082F0  0E00               	movlw	0
  9900  0082F2  0102               	movlb	2	; () banked
  9901  0082F4  6F99               	movwf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),b
  9902                           
  9903                           ; BSR set to: 2
  9904                           ;boostercomms.c: 105: syncModeUCS = 5;
  9905  0082F6  0E05               	movlw	5
  9906  0082F8  0102               	movlb	2	; () banked
  9907  0082FA  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
  9908  0082FC                     i2l5603:
  9909                           
  9910                           ; BSR set to: 2
  9911                           ;boostercomms.c: 106: }
  9912                           ;boostercomms.c: 107: counterCommsStatusUSS = 0;
  9913  0082FC  0E00               	movlw	0
  9914  0082FE  0102               	movlb	2	; () banked
  9915  008300  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
  9916  008302  0E00               	movlw	0
  9917  008304  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
  9918                           
  9919                           ; BSR set to: 2
  9920                           ;boostercomms.c: 108: }
  9921                           ;boostercomms.c: 109: }
  9922                           ;boostercomms.c: 110: break;
  9923                           
  9924                           ; BSR set to: 2
  9925                           
  9926                           ; BSR set to: 2
  9927                           
  9928                           ; BSR set to: 2
  9929  008306  0012               	return	
  9930  008308                     i2l5605:
  9931                           
  9932                           ; BSR set to: 2
  9933                           ;boostercomms.c: 112: commsADCValueUS = ReadAnalogVoltage(2);
  9934  008308  0E02               	movlw	2
  9935  00830A  EC3F  F058         	call	_ReadAnalogVoltage
  9936  00830E  C001  F014         	movff	?_ReadAnalogVoltage,BoosterDataCommandComms@commsADCValueUS
  9937  008312  C002  F015         	movff	?_ReadAnalogVoltage+1,BoosterDataCommandComms@commsADCValueUS+1
  9938                           
  9939                           ;boostercomms.c: 113: switch(syncModeUCS){
  9940  008316  D148               	goto	i2l5721
  9941  008318                     i2l5607:
  9942                           
  9943                           ;boostercomms.c: 115: if(counterCommsStatusUSS > (75 - 10) && (framesReceivedPhaseUCS ==
      +                           0))
  9944  008318  0102               	movlb	2	; () banked
  9945  00831A  518E               	movf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9946  00831C  E105               	bnz	i2u574_40
  9947  00831E  0E42               	movlw	66
  9948  008320  0102               	movlb	2	; () banked
  9949  008322  5D8D               	subwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9950  008324  A0D8               	btfss	status,0,c
  9951  008326  D008               	goto	i2l5613
  9952  008328                     i2u574_40:
  9953                           
  9954                           ; BSR set to: 2
  9955  008328  0102               	movlb	2	; () banked
  9956  00832A  5199               	movf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),w,b
  9957  00832C  A4D8               	btfss	status,2,c
  9958  00832E  D004               	goto	i2l5613
  9959                           
  9960                           ; BSR set to: 2
  9961                           ;boostercomms.c: 116: syncModeUCS = 0;
  9962  008330  0E00               	movlw	0
  9963  008332  0102               	movlb	2	; () banked
  9964  008334  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
  9965  008336  0012               	return	
  9966  008338                     i2l5613:
  9967                           
  9968                           ; BSR set to: 2
  9969                           ;boostercomms.c: 117: else if(framesReceivedPhaseUCS != 0)
  9970  008338  0102               	movlb	2	; () banked
  9971  00833A  5199               	movf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),w,b
  9972  00833C  B4D8               	btfsc	status,2,c
  9973  00833E  0012               	return	
  9974                           
  9975                           ; BSR set to: 2
  9976                           ;boostercomms.c: 118: syncModeUCS = 0;
  9977  008340  0E00               	movlw	0
  9978  008342  0102               	movlb	2	; () banked
  9979  008344  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
  9980                           
  9981                           ; BSR set to: 2
  9982                           ;boostercomms.c: 119: break;
  9983                           
  9984                           ; BSR set to: 2
  9985  008346  0012               	return	
  9986  008348                     i2l5617:
  9987                           
  9988                           ; BSR set to: 2
  9989                           ;boostercomms.c: 123: if((commsADCValueUS-commsOffsetADCValueUS) > 310){
  9990  008348  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
  9991  00834C  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
  9992  008350  1E12               	comf	??_BoosterDataCommandComms,f,c
  9993  008352  1E13               	comf	??_BoosterDataCommandComms+1,f,c
  9994  008354  4A12               	infsnz	??_BoosterDataCommandComms,f,c
  9995  008356  2A13               	incf	??_BoosterDataCommandComms+1,f,c
  9996  008358  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
  9997  00835A  2612               	addwf	??_BoosterDataCommandComms,f,c
  9998  00835C  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
  9999  00835E  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
 10000  008360  0E37               	movlw	55
 10001  008362  5C12               	subwf	??_BoosterDataCommandComms,w,c
 10002  008364  0E01               	movlw	1
 10003  008366  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
 10004  008368  A0D8               	btfss	status,0,c
 10005  00836A  D00E               	goto	i2l5627
 10006                           
 10007                           ; BSR set to: 2
 10008                           ;boostercomms.c: 124: syncModeUCS = 1;
 10009  00836C  0E01               	movlw	1
 10010  00836E  0102               	movlb	2	; () banked
 10011  008370  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10012                           
 10013                           ; BSR set to: 2
 10014                           ;boostercomms.c: 125: statusFlagsUSLG |= 0b000000000000001000000000;
 10015  008372  0102               	movlb	2	; () banked
 10016  008374  838B               	bsf	(_statusFlagsUSLG+1)& (0+255),1,b	;volatile
 10017                           
 10018                           ; BSR set to: 2
 10019                           ;boostercomms.c: 126: counterSyncStatusUSS = 0;
 10020  008376  0E00               	movlw	0
 10021  008378  0103               	movlb	3	; () banked
 10022  00837A  6F44               	movwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),b
 10023  00837C  0E00               	movlw	0
 10024  00837E  6F43               	movwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),b
 10025                           
 10026                           ; BSR set to: 3
 10027                           ;boostercomms.c: 127: lvlCountUCS = 1;
 10028  008380  0E01               	movlw	1
 10029  008382  0102               	movlb	2	; () banked
 10030  008384  6F96               	movwf	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10031                           
 10032                           ;boostercomms.c: 128: }else if(counterCommsStatusUSS > (75 + 50))
 10033  008386  0012               	return	
 10034  008388                     i2l5627:
 10035                           
 10036                           ; BSR set to: 2
 10037  008388  0102               	movlb	2	; () banked
 10038  00838A  518E               	movf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10039  00838C  E105               	bnz	i2u578_40
 10040  00838E  0E7E               	movlw	126
 10041  008390  0102               	movlb	2	; () banked
 10042  008392  5D8D               	subwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10043  008394  A0D8               	btfss	status,0,c
 10044  008396  0012               	return	
 10045  008398                     i2u578_40:
 10046                           
 10047                           ; BSR set to: 2
 10048                           ;boostercomms.c: 129: syncModeUCS = 4;
 10049  008398  0E04               	movlw	4
 10050  00839A  0102               	movlb	2	; () banked
 10051  00839C  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10052                           
 10053                           ; BSR set to: 2
 10054                           ;boostercomms.c: 130: break;
 10055                           
 10056                           ; BSR set to: 2
 10057  00839E  0012               	return	
 10058  0083A0                     i2l5631:
 10059                           
 10060                           ; BSR set to: 2
 10061                           ;boostercomms.c: 132: if((commsADCValueUS-commsOffsetADCValueUS) > 310)
 10062  0083A0  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
 10063  0083A4  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
 10064  0083A8  1E12               	comf	??_BoosterDataCommandComms,f,c
 10065  0083AA  1E13               	comf	??_BoosterDataCommandComms+1,f,c
 10066  0083AC  4A12               	infsnz	??_BoosterDataCommandComms,f,c
 10067  0083AE  2A13               	incf	??_BoosterDataCommandComms+1,f,c
 10068  0083B0  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
 10069  0083B2  2612               	addwf	??_BoosterDataCommandComms,f,c
 10070  0083B4  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
 10071  0083B6  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
 10072  0083B8  0E37               	movlw	55
 10073  0083BA  5C12               	subwf	??_BoosterDataCommandComms,w,c
 10074  0083BC  0E01               	movlw	1
 10075  0083BE  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
 10076  0083C0  A0D8               	btfss	status,0,c
 10077  0083C2  D002               	goto	i2l5635
 10078                           
 10079                           ; BSR set to: 2
 10080                           ;boostercomms.c: 133: lvlCountUCS++;
 10081  0083C4  0102               	movlb	2	; () banked
 10082  0083C6  2B96               	incf	BoosterDataCommandComms@lvlCountUCS& (0+255),f,b
 10083  0083C8                     i2l5635:
 10084                           
 10085                           ; BSR set to: 2
 10086                           ;boostercomms.c: 134: if((commsADCValueUS-commsOffsetADCValueUS) > 620){
 10087  0083C8  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
 10088  0083CC  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
 10089  0083D0  1E12               	comf	??_BoosterDataCommandComms,f,c
 10090  0083D2  1E13               	comf	??_BoosterDataCommandComms+1,f,c
 10091  0083D4  4A12               	infsnz	??_BoosterDataCommandComms,f,c
 10092  0083D6  2A13               	incf	??_BoosterDataCommandComms+1,f,c
 10093  0083D8  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
 10094  0083DA  2612               	addwf	??_BoosterDataCommandComms,f,c
 10095  0083DC  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
 10096  0083DE  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
 10097  0083E0  0E6D               	movlw	109
 10098  0083E2  5C12               	subwf	??_BoosterDataCommandComms,w,c
 10099  0083E4  0E02               	movlw	2
 10100  0083E6  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
 10101  0083E8  A0D8               	btfss	status,0,c
 10102  0083EA  D005               	goto	i2l5641
 10103                           
 10104                           ; BSR set to: 2
 10105                           ;boostercomms.c: 135: syncModeUCS = 4;
 10106  0083EC  0E04               	movlw	4
 10107  0083EE  0102               	movlb	2	; () banked
 10108  0083F0  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10109                           
 10110                           ; BSR set to: 2
 10111                           ;boostercomms.c: 136: statusFlagsUSLG |= 0b000000000000010000000000;
 10112  0083F2  0102               	movlb	2	; () banked
 10113  0083F4  858B               	bsf	(_statusFlagsUSLG+1)& (0+255),2,b	;volatile
 10114  0083F6                     i2l5641:
 10115                           
 10116                           ; BSR set to: 2
 10117                           ;boostercomms.c: 137: }
 10118                           ;boostercomms.c: 138: if(counterSyncStatusUSS == 80){
 10119  0083F6  0E50               	movlw	80
 10120  0083F8  0103               	movlb	3	; () banked
 10121  0083FA  1943               	xorwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),w,b
 10122  0083FC  0103               	movlb	3	; () banked
 10123  0083FE  1144               	iorwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),w,b
 10124  008400  A4D8               	btfss	status,2,c
 10125  008402  0012               	return	
 10126                           
 10127                           ; BSR set to: 3
 10128                           ;boostercomms.c: 139: if(lvlCountUCS < 80 - 10){
 10129  008404  0E46               	movlw	70
 10130  008406  0102               	movlb	2	; () banked
 10131  008408  6196               	cpfslt	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10132  00840A  D007               	goto	i2l5651
 10133                           
 10134                           ; BSR set to: 2
 10135                           ;boostercomms.c: 140: LATAbits.LATA6 = 1;
 10136  00840C  8C89               	bsf	3977,6,c	;volatile
 10137                           
 10138                           ; BSR set to: 2
 10139                           ;boostercomms.c: 141: syncModeUCS = 4;
 10140  00840E  0E04               	movlw	4
 10141  008410  0102               	movlb	2	; () banked
 10142  008412  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10143                           
 10144                           ; BSR set to: 2
 10145                           ;boostercomms.c: 142: statusFlagsUSLG |= 0b000000000000000100000000;
 10146  008414  0102               	movlb	2	; () banked
 10147  008416  818B               	bsf	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 10148                           
 10149                           ;boostercomms.c: 143: }else{
 10150  008418  0012               	return	
 10151  00841A                     i2l5651:
 10152                           
 10153                           ; BSR set to: 2
 10154                           ;boostercomms.c: 144: syncModeUCS = 2;
 10155  00841A  0E02               	movlw	2
 10156  00841C  0102               	movlb	2	; () banked
 10157  00841E  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10158                           
 10159                           ;boostercomms.c: 145: counterSyncStatusUSS = 0;
 10160  008420  0E00               	movlw	0
 10161  008422  0103               	movlb	3	; () banked
 10162  008424  6F44               	movwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),b
 10163  008426  0E00               	movlw	0
 10164  008428  6F43               	movwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),b
 10165                           
 10166                           ;boostercomms.c: 146: recvFrameUSS = 0;
 10167  00842A  0E00               	movlw	0
 10168  00842C  0103               	movlb	3	; () banked
 10169  00842E  6F42               	movwf	(BoosterDataCommandComms@recvFrameUSS+1)& (0+255),b
 10170  008430  0E00               	movlw	0
 10171  008432  6F41               	movwf	BoosterDataCommandComms@recvFrameUSS& (0+255),b
 10172                           
 10173                           ;boostercomms.c: 147: bitsReadUCS = 0;
 10174  008434  0E00               	movlw	0
 10175  008436  0102               	movlb	2	; () banked
 10176  008438  6F97               	movwf	BoosterDataCommandComms@bitsReadUCS& (0+255),b
 10177                           
 10178                           ;boostercomms.c: 148: lvlCountUCS = 0;
 10179  00843A  0E00               	movlw	0
 10180  00843C  0102               	movlb	2	; () banked
 10181  00843E  6F96               	movwf	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10182                           
 10183                           ; BSR set to: 2
 10184                           ;boostercomms.c: 149: }
 10185                           ;boostercomms.c: 150: }
 10186                           ;boostercomms.c: 151: break;
 10187                           
 10188                           ; BSR set to: 2
 10189  008440  0012               	return	
 10190  008442                     i2l5653:
 10191                           
 10192                           ; BSR set to: 2
 10193                           ;boostercomms.c: 153: if((commsADCValueUS-commsOffsetADCValueUS) > 310)
 10194  008442  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
 10195  008446  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
 10196  00844A  1E12               	comf	??_BoosterDataCommandComms,f,c
 10197  00844C  1E13               	comf	??_BoosterDataCommandComms+1,f,c
 10198  00844E  4A12               	infsnz	??_BoosterDataCommandComms,f,c
 10199  008450  2A13               	incf	??_BoosterDataCommandComms+1,f,c
 10200  008452  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
 10201  008454  2612               	addwf	??_BoosterDataCommandComms,f,c
 10202  008456  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
 10203  008458  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
 10204  00845A  0E37               	movlw	55
 10205  00845C  5C12               	subwf	??_BoosterDataCommandComms,w,c
 10206  00845E  0E01               	movlw	1
 10207  008460  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
 10208  008462  A0D8               	btfss	status,0,c
 10209  008464  D002               	goto	i2l5657
 10210                           
 10211                           ; BSR set to: 2
 10212                           ;boostercomms.c: 154: lvlCountUCS++;
 10213  008466  0102               	movlb	2	; () banked
 10214  008468  2B96               	incf	BoosterDataCommandComms@lvlCountUCS& (0+255),f,b
 10215  00846A                     i2l5657:
 10216                           
 10217                           ; BSR set to: 2
 10218                           ;boostercomms.c: 155: if(counterSyncStatusUSS == 60){
 10219  00846A  0E3C               	movlw	60
 10220  00846C  0103               	movlb	3	; () banked
 10221  00846E  1943               	xorwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),w,b
 10222  008470  0103               	movlb	3	; () banked
 10223  008472  1144               	iorwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),w,b
 10224  008474  A4D8               	btfss	status,2,c
 10225  008476  0012               	return	
 10226                           
 10227                           ; BSR set to: 3
 10228                           ;boostercomms.c: 156: recvFrameUSS <<= 1;
 10229  008478  0103               	movlb	3	; () banked
 10230  00847A  90D8               	bcf	status,0,c
 10231  00847C  3741               	rlcf	BoosterDataCommandComms@recvFrameUSS& (0+255),f,b
 10232  00847E  3742               	rlcf	(BoosterDataCommandComms@recvFrameUSS+1)& (0+255),f,b
 10233                           
 10234                           ; BSR set to: 3
 10235                           ;boostercomms.c: 157: if((lvlCountUCS < 10) || (lvlCountUCS > 50)){
 10236  008480  0E09               	movlw	9
 10237  008482  0102               	movlb	2	; () banked
 10238  008484  6596               	cpfsgt	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10239  008486  D004               	goto	i2l5665
 10240                           
 10241                           ; BSR set to: 2
 10242  008488  0E32               	movlw	50
 10243  00848A  0102               	movlb	2	; () banked
 10244  00848C  6596               	cpfsgt	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10245  00848E  D006               	goto	i2l5669
 10246  008490                     i2l5665:
 10247                           
 10248                           ; BSR set to: 2
 10249                           ;boostercomms.c: 158: syncModeUCS = 4;
 10250  008490  0E04               	movlw	4
 10251  008492  0102               	movlb	2	; () banked
 10252  008494  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10253                           
 10254                           ; BSR set to: 2
 10255                           ;boostercomms.c: 159: statusFlagsUSLG |= 0b000000000000000100000000;
 10256  008496  0102               	movlb	2	; () banked
 10257  008498  818B               	bsf	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 10258                           
 10259                           ;boostercomms.c: 160: }else if(lvlCountUCS < 30){
 10260  00849A  D006               	goto	i2l5673
 10261  00849C                     i2l5669:
 10262                           
 10263                           ; BSR set to: 2
 10264  00849C  0E1E               	movlw	30
 10265  00849E  0102               	movlb	2	; () banked
 10266  0084A0  6196               	cpfslt	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10267  0084A2  D002               	goto	i2l5673
 10268                           
 10269                           ; BSR set to: 2
 10270                           ;boostercomms.c: 161: recvFrameUSS |= 1;
 10271  0084A4  0103               	movlb	3	; () banked
 10272  0084A6  8141               	bsf	BoosterDataCommandComms@recvFrameUSS& (0+255),0,b
 10273  0084A8                     i2l5673:
 10274                           
 10275                           ;boostercomms.c: 162: }
 10276                           ;boostercomms.c: 163: if(++bitsReadUCS == 16)
 10277  0084A8  0102               	movlb	2	; () banked
 10278  0084AA  2B97               	incf	BoosterDataCommandComms@bitsReadUCS& (0+255),f,b
 10279  0084AC  0E10               	movlw	16
 10280  0084AE  0102               	movlb	2	; () banked
 10281  0084B0  1997               	xorwf	BoosterDataCommandComms@bitsReadUCS& (0+255),w,b
 10282  0084B2  A4D8               	btfss	status,2,c
 10283  0084B4  D003               	goto	i2l317
 10284                           
 10285                           ; BSR set to: 2
 10286                           ;boostercomms.c: 164: syncModeUCS = 3;
 10287  0084B6  0E03               	movlw	3
 10288  0084B8  0102               	movlb	2	; () banked
 10289  0084BA  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10290  0084BC                     i2l317:
 10291                           
 10292                           ; BSR set to: 2
 10293                           ;boostercomms.c: 165: lvlCountUCS = 0;
 10294  0084BC  0E00               	movlw	0
 10295  0084BE  0102               	movlb	2	; () banked
 10296  0084C0  6F96               	movwf	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10297                           
 10298                           ;boostercomms.c: 166: counterSyncStatusUSS = 0;
 10299  0084C2  0E00               	movlw	0
 10300  0084C4  0103               	movlb	3	; () banked
 10301  0084C6  6F44               	movwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),b
 10302  0084C8  0E00               	movlw	0
 10303  0084CA  6F43               	movwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),b
 10304                           
 10305                           ; BSR set to: 3
 10306                           ;boostercomms.c: 167: }
 10307                           ;boostercomms.c: 168: break;
 10308  0084CC  0012               	return	
 10309  0084CE                     i2l5677:
 10310                           
 10311                           ;boostercomms.c: 170: if((commsADCValueUS-commsOffsetADCValueUS) > 310)
 10312  0084CE  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
 10313  0084D2  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
 10314  0084D6  1E12               	comf	??_BoosterDataCommandComms,f,c
 10315  0084D8  1E13               	comf	??_BoosterDataCommandComms+1,f,c
 10316  0084DA  4A12               	infsnz	??_BoosterDataCommandComms,f,c
 10317  0084DC  2A13               	incf	??_BoosterDataCommandComms+1,f,c
 10318  0084DE  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
 10319  0084E0  2612               	addwf	??_BoosterDataCommandComms,f,c
 10320  0084E2  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
 10321  0084E4  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
 10322  0084E6  0E37               	movlw	55
 10323  0084E8  5C12               	subwf	??_BoosterDataCommandComms,w,c
 10324  0084EA  0E01               	movlw	1
 10325  0084EC  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
 10326  0084EE  A0D8               	btfss	status,0,c
 10327  0084F0  D002               	goto	i2l5681
 10328                           
 10329                           ;boostercomms.c: 171: lvlCountUCS++;
 10330  0084F2  0102               	movlb	2	; () banked
 10331  0084F4  2B96               	incf	BoosterDataCommandComms@lvlCountUCS& (0+255),f,b
 10332  0084F6                     i2l5681:
 10333                           
 10334                           ;boostercomms.c: 172: if((commsADCValueUS-commsOffsetADCValueUS) > 620){
 10335  0084F6  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
 10336  0084FA  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
 10337  0084FE  1E12               	comf	??_BoosterDataCommandComms,f,c
 10338  008500  1E13               	comf	??_BoosterDataCommandComms+1,f,c
 10339  008502  4A12               	infsnz	??_BoosterDataCommandComms,f,c
 10340  008504  2A13               	incf	??_BoosterDataCommandComms+1,f,c
 10341  008506  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
 10342  008508  2612               	addwf	??_BoosterDataCommandComms,f,c
 10343  00850A  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
 10344  00850C  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
 10345  00850E  0E6D               	movlw	109
 10346  008510  5C12               	subwf	??_BoosterDataCommandComms,w,c
 10347  008512  0E02               	movlw	2
 10348  008514  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
 10349  008516  A0D8               	btfss	status,0,c
 10350  008518  D005               	goto	i2l5687
 10351                           
 10352                           ;boostercomms.c: 173: syncModeUCS = 4;
 10353  00851A  0E04               	movlw	4
 10354  00851C  0102               	movlb	2	; () banked
 10355  00851E  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10356                           
 10357                           ; BSR set to: 2
 10358                           ;boostercomms.c: 174: statusFlagsUSLG |= 0b000000000000010000000000;
 10359  008520  0102               	movlb	2	; () banked
 10360  008522  858B               	bsf	(_statusFlagsUSLG+1)& (0+255),2,b	;volatile
 10361  008524                     i2l5687:
 10362                           
 10363                           ;boostercomms.c: 175: }
 10364                           ;boostercomms.c: 176: if(counterSyncStatusUSS == 110){
 10365  008524  0E6E               	movlw	110
 10366  008526  0103               	movlb	3	; () banked
 10367  008528  1943               	xorwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),w,b
 10368  00852A  0103               	movlb	3	; () banked
 10369  00852C  1144               	iorwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),w,b
 10370  00852E  A4D8               	btfss	status,2,c
 10371  008530  0012               	return	
 10372                           
 10373                           ; BSR set to: 3
 10374                           ;boostercomms.c: 177: if(lvlCountUCS < 110 - 10)
 10375  008532  0E64               	movlw	100
 10376  008534  0102               	movlb	2	; () banked
 10377  008536  6196               	cpfslt	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10378  008538  D002               	goto	i2l5693
 10379                           
 10380                           ; BSR set to: 2
 10381                           ;boostercomms.c: 178: statusFlagsUSLG |= 0b000000000000000100000000;
 10382  00853A  0102               	movlb	2	; () banked
 10383  00853C  818B               	bsf	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 10384  00853E                     i2l5693:
 10385                           
 10386                           ; BSR set to: 2
 10387                           ;boostercomms.c: 179: syncModeUCS = 4;
 10388  00853E  0E04               	movlw	4
 10389  008540  0102               	movlb	2	; () banked
 10390  008542  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10391                           
 10392                           ; BSR set to: 2
 10393                           ;boostercomms.c: 180: }
 10394                           ;boostercomms.c: 181: break;
 10395  008544  0012               	return	
 10396  008546                     i2l5695:
 10397                           
 10398                           ; BSR set to: 2
 10399                           ;boostercomms.c: 183: if(counterCommsStatusUSS == 1300){
 10400  008546  0E14               	movlw	20
 10401  008548  0102               	movlb	2	; () banked
 10402  00854A  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10403  00854C  E104               	bnz	i2u593_41
 10404  00854E  0E05               	movlw	5
 10405  008550  0102               	movlb	2	; () banked
 10406  008552  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10407  008554  A4D8               	btfss	status,2,c
 10408  008556                     i2u593_41:
 10409  008556  0012               	return	
 10410                           
 10411                           ; BSR set to: 2
 10412                           ;boostercomms.c: 184: ProcessRXFrame(recvFrameUSS, framesReceivedPhaseUCS+1);
 10413  008558  C341  F007         	movff	BoosterDataCommandComms@recvFrameUSS,ProcessRXFrame@recvFrameUS
 10414  00855C  C342  F008         	movff	BoosterDataCommandComms@recvFrameUSS+1,ProcessRXFrame@recvFrameUS+1
 10415  008560  0102               	movlb	2	; () banked
 10416  008562  2999               	incf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),w,b
 10417  008564  6E09               	movwf	ProcessRXFrame@frameNumUC,c
 10418  008566  EC01  F047         	call	_ProcessRXFrame	;wreg free
 10419                           
 10420                           ;boostercomms.c: 185: if(statusFlagsUSLG & 0b000000000000000000000100){
 10421  00856A  0102               	movlb	2	; () banked
 10422  00856C  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
 10423  00856E  D004               	goto	i2l5703
 10424                           
 10425                           ; BSR set to: 2
 10426                           ;boostercomms.c: 186: commsStatusUCG = 4;
 10427  008570  0E04               	movlw	4
 10428  008572  0102               	movlb	2	; () banked
 10429  008574  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10430                           
 10431                           ;boostercomms.c: 187: }else{
 10432  008576  D005               	goto	i2l5707
 10433  008578                     i2l5703:
 10434                           
 10435                           ; BSR set to: 2
 10436                           ;boostercomms.c: 188: commsStatusUCG = 6;
 10437  008578  0E06               	movlw	6
 10438  00857A  0102               	movlb	2	; () banked
 10439  00857C  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10440                           
 10441                           ; BSR set to: 2
 10442                           ;boostercomms.c: 189: SetCommsLow();
 10443  00857E  EC37  F05B         	call	_SetCommsLow	;wreg free
 10444  008582                     i2l5707:
 10445                           
 10446                           ;boostercomms.c: 190: }
 10447                           ;boostercomms.c: 191: counterCommsStatusUSS = 0;
 10448  008582  0E00               	movlw	0
 10449  008584  0102               	movlb	2	; () banked
 10450  008586  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 10451  008588  0E00               	movlw	0
 10452  00858A  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 10453                           
 10454                           ; BSR set to: 2
 10455                           ;boostercomms.c: 192: recvFrameUSS = 0;
 10456  00858C  0E00               	movlw	0
 10457  00858E  0103               	movlb	3	; () banked
 10458  008590  6F42               	movwf	(BoosterDataCommandComms@recvFrameUSS+1)& (0+255),b
 10459  008592  0E00               	movlw	0
 10460  008594  6F41               	movwf	BoosterDataCommandComms@recvFrameUSS& (0+255),b
 10461                           
 10462                           ; BSR set to: 3
 10463                           ;boostercomms.c: 193: framesReceivedPhaseUCS++;
 10464  008596  0102               	movlb	2	; () banked
 10465  008598  2B99               	incf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),f,b
 10466                           
 10467                           ; BSR set to: 2
 10468                           ;boostercomms.c: 194: statusFlagsUSLG &= ~0b000000000000001000000000;
 10469  00859A  0102               	movlb	2	; () banked
 10470  00859C  938B               	bcf	(_statusFlagsUSLG+1)& (0+255),1,b	;volatile
 10471                           
 10472                           ; BSR set to: 2
 10473                           ;boostercomms.c: 195: statusFlagsUSLG &= ~0b000000000000000100000000;
 10474  00859E  0102               	movlb	2	; () banked
 10475  0085A0  918B               	bcf	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 10476                           
 10477                           ; BSR set to: 2
 10478                           ;boostercomms.c: 196: statusFlagsUSLG &= ~0b000000000000010000000000;
 10479  0085A2  0102               	movlb	2	; () banked
 10480  0085A4  958B               	bcf	(_statusFlagsUSLG+1)& (0+255),2,b	;volatile
 10481                           
 10482                           ; BSR set to: 2
 10483                           ;boostercomms.c: 199: }
 10484                           
 10485                           ; BSR set to: 2
 10486                           ;boostercomms.c: 197: }
 10487                           ;boostercomms.c: 198: break;
 10488  0085A6  0012               	return	
 10489  0085A8                     i2l5721:
 10490  0085A8  0102               	movlb	2	; () banked
 10491  0085AA  5198               	movf	BoosterDataCommandComms@syncModeUCS& (0+255),w,b
 10492                           
 10493                           ; Switch size 1, requested type "space"
 10494                           ; Number of cases is 6, Range of values is 0 to 5
 10495                           ; switch strategies available:
 10496                           ; Name         Instructions Cycles
 10497                           ; simple_byte           19    10 (average)
 10498                           ;	Chosen strategy is simple_byte
 10499  0085AC  0A00               	xorlw	0	; case 0
 10500  0085AE  B4D8               	btfsc	status,2,c
 10501  0085B0  D6CB               	goto	i2l5617
 10502  0085B2  0A01               	xorlw	1	; case 1
 10503  0085B4  B4D8               	btfsc	status,2,c
 10504  0085B6  D6F4               	goto	i2l5631
 10505  0085B8  0A03               	xorlw	3	; case 2
 10506  0085BA  B4D8               	btfsc	status,2,c
 10507  0085BC  D742               	goto	i2l5653
 10508  0085BE  0A01               	xorlw	1	; case 3
 10509  0085C0  B4D8               	btfsc	status,2,c
 10510  0085C2  D785               	goto	i2l5677
 10511  0085C4  0A07               	xorlw	7	; case 4
 10512  0085C6  B4D8               	btfsc	status,2,c
 10513  0085C8  D7BE               	goto	i2l5695
 10514  0085CA  0A01               	xorlw	1	; case 5
 10515  0085CC  A4D8               	btfss	status,2,c
 10516                           
 10517                           ; BSR set to: 2
 10518                           ;boostercomms.c: 200: break;
 10519  0085CE  0012               	return	
 10520  0085D0  D6A3               	goto	i2l5607
 10521  0085D2                     i2l327:
 10522                           
 10523                           ; BSR set to: 2
 10524                           ;boostercomms.c: 202: if(!(statusFlagsUSLG & 0b000000000000000000001000)){
 10525  0085D2  0102               	movlb	2	; () banked
 10526  0085D4  B78A               	btfsc	_statusFlagsUSLG& (0+255),3,b	;volatile
 10527  0085D6  D006               	goto	i2l5727
 10528                           
 10529                           ; BSR set to: 2
 10530                           ;boostercomms.c: 203: statusFlagsUSLG |= 0b000000000000000000001000;
 10531  0085D8  0102               	movlb	2	; () banked
 10532  0085DA  878A               	bsf	_statusFlagsUSLG& (0+255),3,b	;volatile
 10533                           
 10534                           ; BSR set to: 2
 10535                           ;boostercomms.c: 204: framesReceivedPhaseUCS = 0;
 10536  0085DC  0E00               	movlw	0
 10537  0085DE  0102               	movlb	2	; () banked
 10538  0085E0  6F99               	movwf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),b
 10539                           
 10540                           ;boostercomms.c: 205: }else{
 10541  0085E2  0012               	return	
 10542  0085E4                     i2l5727:
 10543                           
 10544                           ; BSR set to: 2
 10545                           ;boostercomms.c: 206: if(framesReceivedPhaseUCS == 15){
 10546  0085E4  0E0F               	movlw	15
 10547  0085E6  0102               	movlb	2	; () banked
 10548  0085E8  1999               	xorwf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),w,b
 10549  0085EA  A4D8               	btfss	status,2,c
 10550  0085EC  D014               	goto	i2l5741
 10551                           
 10552                           ; BSR set to: 2
 10553                           ;boostercomms.c: 207: if(statusFlagsUSLG & 0b000000000000000010000000){
 10554  0085EE  0102               	movlb	2	; () banked
 10555  0085F0  AF8A               	btfss	_statusFlagsUSLG& (0+255),7,b	;volatile
 10556  0085F2  D00A               	goto	i2l5739
 10557                           
 10558                           ; BSR set to: 2
 10559                           ;boostercomms.c: 208: commsStatusUCG = 6;
 10560  0085F4  0E06               	movlw	6
 10561  0085F6  0102               	movlb	2	; () banked
 10562  0085F8  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10563                           
 10564                           ; BSR set to: 2
 10565                           ;boostercomms.c: 209: statusFlagsUSLG &= ~0b000000000000000000001000;
 10566  0085FA  0102               	movlb	2	; () banked
 10567  0085FC  978A               	bcf	_statusFlagsUSLG& (0+255),3,b	;volatile
 10568                           
 10569                           ; BSR set to: 2
 10570                           ;boostercomms.c: 210: statusFlagsUSLG &= ~0b000000000000000010000000;
 10571  0085FE  0102               	movlb	2	; () banked
 10572  008600  9F8A               	bcf	_statusFlagsUSLG& (0+255),7,b	;volatile
 10573                           
 10574                           ; BSR set to: 2
 10575                           ;boostercomms.c: 211: SetCommsLow();
 10576  008602  EC37  F05B         	call	_SetCommsLow	;wreg free
 10577                           
 10578                           ;boostercomms.c: 212: }else{
 10579  008606  0012               	return	
 10580  008608                     i2l5739:
 10581                           
 10582                           ;boostercomms.c: 213: commsStatusUCG = 5;
 10583  008608  0E05               	movlw	5
 10584  00860A  0102               	movlb	2	; () banked
 10585  00860C  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10586                           
 10587                           ;boostercomms.c: 214: framesReceivedPhaseUCS = 0;
 10588  00860E  0E00               	movlw	0
 10589  008610  0102               	movlb	2	; () banked
 10590  008612  6F99               	movwf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),b
 10591                           
 10592                           ; BSR set to: 2
 10593                           ;boostercomms.c: 215: }
 10594                           ;boostercomms.c: 216: }else{
 10595  008614  0012               	return	
 10596  008616                     i2l5741:
 10597                           
 10598                           ; BSR set to: 2
 10599                           ;boostercomms.c: 217: commsStatusUCG = 3;
 10600  008616  0E03               	movlw	3
 10601  008618  0102               	movlb	2	; () banked
 10602  00861A  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10603                           
 10604                           ;boostercomms.c: 218: syncModeUCS = 5;
 10605  00861C  0E05               	movlw	5
 10606  00861E  0102               	movlb	2	; () banked
 10607  008620  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10608                           
 10609                           ; BSR set to: 2
 10610                           ;boostercomms.c: 219: }
 10611                           ;boostercomms.c: 220: }
 10612                           ;boostercomms.c: 221: break;
 10613                           
 10614                           ; BSR set to: 2
 10615  008622  0012               	return	
 10616  008624                     i2l5743:
 10617                           
 10618                           ; BSR set to: 2
 10619                           ;boostercomms.c: 223: if(counterCommsStatusUSS == 2){
 10620  008624  0E02               	movlw	2
 10621  008626  0102               	movlb	2	; () banked
 10622  008628  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10623  00862A  0102               	movlb	2	; () banked
 10624  00862C  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10625  00862E  A4D8               	btfss	status,2,c
 10626  008630  D021               	goto	i2l5761
 10627                           
 10628                           ; BSR set to: 2
 10629                           ;boostercomms.c: 224: if(statusFlagsUSLG & 0b001000000000000000000000)
 10630  008632  0102               	movlb	2	; () banked
 10631  008634  BB8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
 10632  008636  0012               	return	
 10633                           
 10634                           ; BSR set to: 2
 10635                           ;boostercomms.c: 228: else if(!(statusFlagsUSLG & 0b000000000000000001000000) && (status
      +                          FlagsUSLG & 0b000000000000000000000010)&&!(statusFlagsUSLG & 0b000000000000000000100000)
      +                          &&!(statusFlagsUSLG & 0b000000000000000000010000)){
 10636                           
 10637                           ; BSR set to: 2
 10638  008638  0102               	movlb	2	; () banked
 10639  00863A  BD8A               	btfsc	_statusFlagsUSLG& (0+255),6,b	;volatile
 10640  00863C  D00B               	goto	i2l338
 10641                           
 10642                           ; BSR set to: 2
 10643  00863E  0102               	movlb	2	; () banked
 10644  008640  A38A               	btfss	_statusFlagsUSLG& (0+255),1,b	;volatile
 10645  008642  D008               	goto	i2l338
 10646                           
 10647                           ; BSR set to: 2
 10648  008644  0102               	movlb	2	; () banked
 10649  008646  BB8A               	btfsc	_statusFlagsUSLG& (0+255),5,b	;volatile
 10650  008648  D005               	goto	i2l338
 10651                           
 10652                           ; BSR set to: 2
 10653  00864A  0102               	movlb	2	; () banked
 10654  00864C  B98A               	btfsc	_statusFlagsUSLG& (0+255),4,b	;volatile
 10655  00864E  D002               	goto	i2l338
 10656                           
 10657                           ; BSR set to: 2
 10658                           ;boostercomms.c: 229: LATAbits.LATA6 = 1;
 10659  008650  8C89               	bsf	3977,6,c	;volatile
 10660                           
 10661                           ;boostercomms.c: 230: }
 10662  008652  0012               	return	
 10663  008654                     i2l338:
 10664                           
 10665                           ; BSR set to: 2
 10666                           ;boostercomms.c: 231: else if((statusFlagsUSLG & 0b000000000000000001000000) || (statusF
      +                          lagsUSLG & 0b000000000000000000010000)){
 10667  008654  0102               	movlb	2	; () banked
 10668  008656  BD8A               	btfsc	_statusFlagsUSLG& (0+255),6,b	;volatile
 10669  008658  D003               	goto	i2l342
 10670                           
 10671                           ; BSR set to: 2
 10672  00865A  0102               	movlb	2	; () banked
 10673  00865C  A98A               	btfss	_statusFlagsUSLG& (0+255),4,b	;volatile
 10674  00865E  D002               	goto	i2l340
 10675  008660                     i2l342:
 10676                           
 10677                           ; BSR set to: 2
 10678                           ;boostercomms.c: 232: LATBbits.LATB3 = 1;
 10679  008660  868A               	bsf	3978,3,c	;volatile
 10680                           
 10681                           ;boostercomms.c: 234: }
 10682  008662  0012               	return	
 10683  008664                     i2l340:
 10684                           
 10685                           ; BSR set to: 2
 10686                           ;boostercomms.c: 235: else if (!(statusFlagsUSLG & 0b000000000000000000000010)||(statusF
      +                          lagsUSLG & 0b000000000000000000100000)){
 10687  008664  0102               	movlb	2	; () banked
 10688  008666  A38A               	btfss	_statusFlagsUSLG& (0+255),1,b	;volatile
 10689  008668  D003               	goto	i2l346
 10690                           
 10691                           ; BSR set to: 2
 10692  00866A  0102               	movlb	2	; () banked
 10693  00866C  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
 10694  00866E  0012               	return	
 10695  008670                     i2l346:
 10696                           
 10697                           ; BSR set to: 2
 10698                           ;boostercomms.c: 236: LATCbits.LATC0 = 1;
 10699  008670  808B               	bsf	3979,0,c	;volatile
 10700                           
 10701                           ; BSR set to: 2
 10702                           ;boostercomms.c: 237: }
 10703                           ;boostercomms.c: 238: }else if(counterCommsStatusUSS == 500){
 10704                           
 10705                           ; BSR set to: 2
 10706                           
 10707                           ; BSR set to: 2
 10708                           
 10709                           ; BSR set to: 2
 10710  008672  0012               	return	
 10711  008674                     i2l5761:
 10712                           
 10713                           ; BSR set to: 2
 10714  008674  0EF4               	movlw	244
 10715  008676  0102               	movlb	2	; () banked
 10716  008678  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10717  00867A  E103               	bnz	i2u608_41
 10718  00867C  0102               	movlb	2	; () banked
 10719  00867E  058E               	decf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10720  008680  A4D8               	btfss	status,2,c
 10721  008682                     i2u608_41:
 10722  008682  0012               	return	
 10723                           
 10724                           ; BSR set to: 2
 10725                           ;boostercomms.c: 239: commsStatusUCG = 4;
 10726  008684  0E04               	movlw	4
 10727  008686  0102               	movlb	2	; () banked
 10728  008688  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10729                           
 10730                           ; BSR set to: 2
 10731                           ;boostercomms.c: 240: statusFlagsUSLG |= 0b000000000000000010000000;
 10732  00868A  0102               	movlb	2	; () banked
 10733  00868C  8F8A               	bsf	_statusFlagsUSLG& (0+255),7,b	;volatile
 10734                           
 10735                           ; BSR set to: 2
 10736                           ;boostercomms.c: 241: counterCommsStatusUSS = 0;
 10737  00868E  0E00               	movlw	0
 10738  008690  0102               	movlb	2	; () banked
 10739  008692  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 10740  008694  0E00               	movlw	0
 10741  008696  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 10742                           
 10743                           ; BSR set to: 2
 10744                           ;boostercomms.c: 242: if(!(statusFlagsUSLG & 0b001000000000000000000000)){
 10745  008698  0102               	movlb	2	; () banked
 10746  00869A  BB8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
 10747  00869C  0012               	return	
 10748                           
 10749                           ; BSR set to: 2
 10750                           ;boostercomms.c: 243: LATAbits.LATA6 = 0;
 10751  00869E  9C89               	bcf	3977,6,c	;volatile
 10752                           
 10753                           ;boostercomms.c: 244: LATBbits.LATB3 = 0;
 10754  0086A0  968A               	bcf	3978,3,c	;volatile
 10755                           
 10756                           ;boostercomms.c: 245: LATCbits.LATC0 = 0;
 10757  0086A2  908B               	bcf	3979,0,c	;volatile
 10758                           
 10759                           ; BSR set to: 2
 10760                           ;boostercomms.c: 246: }
 10761                           ;boostercomms.c: 247: }
 10762                           ;boostercomms.c: 248: break;
 10763                           
 10764                           ; BSR set to: 2
 10765                           
 10766                           ; BSR set to: 2
 10767  0086A4  0012               	return	
 10768  0086A6                     i2l5773:
 10769                           
 10770                           ; BSR set to: 2
 10771                           ;boostercomms.c: 250: if(counterCommsStatusUSS == 300){
 10772  0086A6  0E2C               	movlw	44
 10773  0086A8  0102               	movlb	2	; () banked
 10774  0086AA  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10775  0086AC  E103               	bnz	i2u610_41
 10776  0086AE  0102               	movlb	2	; () banked
 10777  0086B0  058E               	decf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10778  0086B2  A4D8               	btfss	status,2,c
 10779  0086B4                     i2u610_41:
 10780  0086B4  0012               	return	
 10781                           
 10782                           ; BSR set to: 2
 10783                           ;boostercomms.c: 251: commsStatusUCG = 7;
 10784  0086B6  0E07               	movlw	7
 10785  0086B8  0102               	movlb	2	; () banked
 10786  0086BA  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10787                           
 10788                           ;boostercomms.c: 252: counterCommsStatusUSS = 0;
 10789  0086BC  0E00               	movlw	0
 10790  0086BE  0102               	movlb	2	; () banked
 10791  0086C0  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 10792  0086C2  0E00               	movlw	0
 10793  0086C4  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 10794                           
 10795                           ; BSR set to: 2
 10796                           ;boostercomms.c: 253: SetCommsHigh();
 10797  0086C6  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
 10798                           
 10799                           ;boostercomms.c: 254: }
 10800                           ;boostercomms.c: 255: break;
 10801  0086CA  0012               	return	
 10802  0086CC                     i2l352:
 10803                           
 10804                           ; BSR set to: 2
 10805                           ;boostercomms.c: 257: if(!(statusFlagsUSLG & 0b000000000000000000001000)){
 10806  0086CC  0102               	movlb	2	; () banked
 10807  0086CE  B78A               	btfsc	_statusFlagsUSLG& (0+255),3,b	;volatile
 10808  0086D0  D021               	goto	i2l5797
 10809                           
 10810                           ; BSR set to: 2
 10811                           ;boostercomms.c: 258: statusFlagsUSLG |= 0b000000000000000000001000;
 10812  0086D2  0102               	movlb	2	; () banked
 10813  0086D4  878A               	bsf	_statusFlagsUSLG& (0+255),3,b	;volatile
 10814                           
 10815                           ; BSR set to: 2
 10816                           ;boostercomms.c: 259: if(statusFlagsUSLG & 0b001000000000000000000000)
 10817  0086D6  0102               	movlb	2	; () banked
 10818  0086D8  BB8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
 10819  0086DA  D014               	goto	i2l5793
 10820                           
 10821                           ; BSR set to: 2
 10822                           ;boostercomms.c: 263: else if((statusFlagsUSLG & 0b000000000000000001000000) || (statusF
      +                          lagsUSLG & 0b000000000000000000010000) || !(statusFlagsUSLG & 0b000000000000000000000010
      +                          )){
 10823                           
 10824                           ; BSR set to: 2
 10825  0086DC  0102               	movlb	2	; () banked
 10826  0086DE  BD8A               	btfsc	_statusFlagsUSLG& (0+255),6,b	;volatile
 10827  0086E0  D006               	goto	i2l358
 10828                           
 10829                           ; BSR set to: 2
 10830  0086E2  0102               	movlb	2	; () banked
 10831  0086E4  B98A               	btfsc	_statusFlagsUSLG& (0+255),4,b	;volatile
 10832  0086E6  D003               	goto	i2l358
 10833                           
 10834                           ; BSR set to: 2
 10835  0086E8  0102               	movlb	2	; () banked
 10836  0086EA  B38A               	btfsc	_statusFlagsUSLG& (0+255),1,b	;volatile
 10837  0086EC  D005               	goto	i2l356
 10838  0086EE                     i2l358:
 10839                           
 10840                           ; BSR set to: 2
 10841                           ;boostercomms.c: 265: if (statusFlagsUSLG & 0b000000000000000000000100){
 10842  0086EE  0102               	movlb	2	; () banked
 10843  0086F0  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
 10844  0086F2  D005               	goto	i2l5791
 10845                           
 10846                           ; BSR set to: 2
 10847                           ;boostercomms.c: 266: LATBbits.LATB3 = 1;
 10848  0086F4  868A               	bsf	3978,3,c	;volatile
 10849                           
 10850                           ;boostercomms.c: 267: }
 10851  0086F6  D006               	goto	i2l5793
 10852  0086F8                     i2l356:
 10853                           
 10854                           ; BSR set to: 2
 10855                           ;boostercomms.c: 271: else if(!(statusFlagsUSLG & 0b000000000000000000000100))
 10856  0086F8  0102               	movlb	2	; () banked
 10857  0086FA  B58A               	btfsc	_statusFlagsUSLG& (0+255),2,b	;volatile
 10858  0086FC  D002               	goto	i2l362
 10859  0086FE                     i2l5791:
 10860                           
 10861                           ; BSR set to: 2
 10862                           ;boostercomms.c: 272: LATCbits.LATC0 = 1;
 10863  0086FE  808B               	bsf	3979,0,c	;volatile
 10864  008700  D001               	goto	i2l5793
 10865  008702                     i2l362:
 10866                           
 10867                           ; BSR set to: 2
 10868                           ;boostercomms.c: 273: else{
 10869                           ;boostercomms.c: 274: LATAbits.LATA6 = 1;
 10870  008702  8C89               	bsf	3977,6,c	;volatile
 10871  008704                     i2l5793:
 10872                           
 10873                           ; BSR set to: 2
 10874                           ;boostercomms.c: 275: }
 10875                           ;boostercomms.c: 278: InitEarthLeakage();
 10876  008704  ECA9  F05A         	call	_InitEarthLeakage	;wreg free
 10877                           
 10878                           ;boostercomms.c: 279: counterELTTests =0;
 10879  008708  0E00               	movlw	0
 10880  00870A  0103               	movlb	3	; () banked
 10881  00870C  6F48               	movwf	(_counterELTTests+1)& (0+255),b
 10882  00870E  0E00               	movlw	0
 10883  008710  6F47               	movwf	_counterELTTests& (0+255),b
 10884                           
 10885                           ;boostercomms.c: 281: }else if(counterCommsStatusUSS >= 245 && counterELTTests <=5){
 10886  008712  0012               	return	
 10887  008714                     i2l5797:
 10888  008714  0102               	movlb	2	; () banked
 10889  008716  518E               	movf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10890  008718  E105               	bnz	i2u618_40
 10891  00871A  0EF5               	movlw	245
 10892  00871C  0102               	movlb	2	; () banked
 10893  00871E  5D8D               	subwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10894  008720  A0D8               	btfss	status,0,c
 10895  008722  D00B               	goto	i2l5803
 10896  008724                     i2u618_40:
 10897                           
 10898                           ; BSR set to: 2
 10899  008724  0103               	movlb	3	; () banked
 10900  008726  5148               	movf	(_counterELTTests+1)& (0+255),w,b
 10901  008728  E108               	bnz	i2l5803
 10902  00872A  0E06               	movlw	6
 10903  00872C  0103               	movlb	3	; () banked
 10904  00872E  5D47               	subwf	_counterELTTests& (0+255),w,b
 10905  008730  B0D8               	btfsc	status,0,c
 10906  008732  D003               	goto	i2l5803
 10907                           
 10908                           ; BSR set to: 3
 10909                           ;boostercomms.c: 282: ReadEarthLeakage();
 10910  008734  ECB4  F056         	call	_ReadEarthLeakage	;wreg free
 10911                           
 10912                           ;boostercomms.c: 283: }else if(counterCommsStatusUSS == 500){
 10913  008738  0012               	return	
 10914  00873A                     i2l5803:
 10915  00873A  0EF4               	movlw	244
 10916  00873C  0102               	movlb	2	; () banked
 10917  00873E  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10918  008740  E103               	bnz	i2u620_41
 10919  008742  0102               	movlb	2	; () banked
 10920  008744  058E               	decf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10921  008746  A4D8               	btfss	status,2,c
 10922  008748                     i2u620_41:
 10923  008748  0012               	return	
 10924                           
 10925                           ; BSR set to: 2
 10926                           ;boostercomms.c: 284: statusFlagsUSLG &= ~0b000000000000000000001000;
 10927  00874A  0102               	movlb	2	; () banked
 10928  00874C  978A               	bcf	_statusFlagsUSLG& (0+255),3,b	;volatile
 10929                           
 10930                           ; BSR set to: 2
 10931                           ;boostercomms.c: 285: commsStatusUCG = 9;
 10932  00874E  0E09               	movlw	9
 10933  008750  0102               	movlb	2	; () banked
 10934  008752  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10935                           
 10936                           ; BSR set to: 2
 10937                           ;boostercomms.c: 286: cableTestUCS = 0;
 10938  008754  0E00               	movlw	0
 10939  008756  0102               	movlb	2	; () banked
 10940  008758  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 10941                           
 10942                           ; BSR set to: 2
 10943                           ;boostercomms.c: 287: counterCommsStatusUSS = 0;
 10944  00875A  0E00               	movlw	0
 10945  00875C  0102               	movlb	2	; () banked
 10946  00875E  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 10947  008760  0E00               	movlw	0
 10948  008762  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 10949                           
 10950                           ; BSR set to: 2
 10951                           ;boostercomms.c: 288: if(!(statusFlagsUSLG & 0b001000000000000000000000)){
 10952  008764  0102               	movlb	2	; () banked
 10953  008766  BB8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
 10954  008768  0012               	return	
 10955                           
 10956                           ; BSR set to: 2
 10957                           ;boostercomms.c: 289: LATAbits.LATA6 = 0;
 10958  00876A  9C89               	bcf	3977,6,c	;volatile
 10959                           
 10960                           ;boostercomms.c: 290: LATBbits.LATB3 = 0;
 10961  00876C  968A               	bcf	3978,3,c	;volatile
 10962                           
 10963                           ;boostercomms.c: 291: LATCbits.LATC0 = 0;
 10964  00876E  908B               	bcf	3979,0,c	;volatile
 10965                           
 10966                           ; BSR set to: 2
 10967                           ;boostercomms.c: 292: }
 10968                           ;boostercomms.c: 302: }
 10969                           ;boostercomms.c: 303: break;
 10970                           
 10971                           ; BSR set to: 2
 10972                           
 10973                           ; BSR set to: 2
 10974                           
 10975                           ; BSR set to: 2
 10976  008770  0012               	return	
 10977  008772                     i2l5817:
 10978                           
 10979                           ; BSR set to: 2
 10980                           ;boostercomms.c: 305: counterCommsStatusUSS++;
 10981  008772  0102               	movlb	2	; () banked
 10982  008774  4B8D               	infsnz	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),f,b
 10983  008776  2B8E               	incf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),f,b
 10984                           
 10985                           ;boostercomms.c: 306: switch(cableFaultModeUCS){
 10986  008778  D064               	goto	i2l5863
 10987  00877A                     i2l5819:
 10988                           
 10989                           ; BSR set to: 2
 10990                           ;boostercomms.c: 308: counterCommsStatusUSS = 0;
 10991  00877A  0E00               	movlw	0
 10992  00877C  0102               	movlb	2	; () banked
 10993  00877E  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 10994  008780  0E00               	movlw	0
 10995  008782  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 10996                           
 10997                           ;boostercomms.c: 309: cableFaultModeUCS = 4;
 10998  008784  0E04               	movlw	4
 10999  008786  0102               	movlb	2	; () banked
 11000  008788  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11001                           
 11002                           ;boostercomms.c: 310: break;
 11003  00878A  0012               	return	
 11004  00878C                     i2l5821:
 11005                           
 11006                           ; BSR set to: 2
 11007                           ;boostercomms.c: 312: if(counterCommsStatusUSS == 39500){
 11008  00878C  0E4C               	movlw	76
 11009  00878E  0102               	movlb	2	; () banked
 11010  008790  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11011  008792  E104               	bnz	i2u622_41
 11012  008794  0E9A               	movlw	154
 11013  008796  0102               	movlb	2	; () banked
 11014  008798  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11015  00879A  A4D8               	btfss	status,2,c
 11016  00879C                     i2u622_41:
 11017  00879C  0012               	return	
 11018                           
 11019                           ; BSR set to: 2
 11020                           ;boostercomms.c: 313: cableFaultModeUCS = 6;
 11021  00879E  0E06               	movlw	6
 11022  0087A0  0102               	movlb	2	; () banked
 11023  0087A2  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11024                           
 11025                           ; BSR set to: 2
 11026                           ;boostercomms.c: 314: LATBbits.LATB3 = 1;
 11027  0087A4  868A               	bsf	3978,3,c	;volatile
 11028                           
 11029                           ; BSR set to: 2
 11030                           ;boostercomms.c: 315: }
 11031                           ;boostercomms.c: 316: break;
 11032  0087A6  0012               	return	
 11033  0087A8                     i2l5827:
 11034                           
 11035                           ; BSR set to: 2
 11036                           ;boostercomms.c: 318: if(counterCommsStatusUSS == 40000){
 11037  0087A8  0E40               	movlw	64
 11038  0087AA  0102               	movlb	2	; () banked
 11039  0087AC  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11040  0087AE  E104               	bnz	i2u623_41
 11041  0087B0  0E9C               	movlw	156
 11042  0087B2  0102               	movlb	2	; () banked
 11043  0087B4  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11044  0087B6  A4D8               	btfss	status,2,c
 11045  0087B8                     i2u623_41:
 11046  0087B8  0012               	return	
 11047                           
 11048                           ; BSR set to: 2
 11049                           ;boostercomms.c: 319: cableFaultModeUCS = 5;
 11050  0087BA  0E05               	movlw	5
 11051  0087BC  0102               	movlb	2	; () banked
 11052  0087BE  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11053                           
 11054                           ; BSR set to: 2
 11055                           ;boostercomms.c: 320: LATBbits.LATB3 = 0;
 11056  0087C0  968A               	bcf	3978,3,c	;volatile
 11057                           
 11058                           ;boostercomms.c: 321: counterCommsStatusUSS=0;
 11059  0087C2  0E00               	movlw	0
 11060  0087C4  0102               	movlb	2	; () banked
 11061  0087C6  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 11062  0087C8  0E00               	movlw	0
 11063  0087CA  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 11064                           
 11065                           ; BSR set to: 2
 11066                           ;boostercomms.c: 322: }
 11067                           ;boostercomms.c: 323: break;
 11068  0087CC  0012               	return	
 11069  0087CE                     i2l5833:
 11070                           
 11071                           ; BSR set to: 2
 11072                           ;boostercomms.c: 325: if(counterCommsStatusUSS == 35000)
 11073  0087CE  0EB8               	movlw	184
 11074  0087D0  0102               	movlb	2	; () banked
 11075  0087D2  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11076  0087D4  E104               	bnz	i2u624_41
 11077  0087D6  0E88               	movlw	136
 11078  0087D8  0102               	movlb	2	; () banked
 11079  0087DA  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11080  0087DC  A4D8               	btfss	status,2,c
 11081  0087DE                     i2u624_41:
 11082  0087DE  0012               	return	
 11083                           
 11084                           ; BSR set to: 2
 11085                           ;boostercomms.c: 326: cableFaultModeUCS = 1;
 11086  0087E0  0E01               	movlw	1
 11087  0087E2  0102               	movlb	2	; () banked
 11088  0087E4  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11089                           
 11090                           ; BSR set to: 2
 11091                           ;boostercomms.c: 327: break;
 11092  0087E6  0012               	return	
 11093  0087E8                     i2l5837:
 11094                           
 11095                           ; BSR set to: 2
 11096                           ;boostercomms.c: 329: SetCommsHigh();
 11097  0087E8  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
 11098                           
 11099                           ;boostercomms.c: 330: cableFaultModeUCS = 2;
 11100  0087EC  0E02               	movlw	2
 11101  0087EE  0102               	movlb	2	; () banked
 11102  0087F0  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11103                           
 11104                           ;boostercomms.c: 331: break;
 11105  0087F2  0012               	return	
 11106  0087F4                     i2l5841:
 11107                           
 11108                           ; BSR set to: 2
 11109                           ;boostercomms.c: 333: if(counterCommsStatusUSS == 40000){
 11110  0087F4  0E40               	movlw	64
 11111  0087F6  0102               	movlb	2	; () banked
 11112  0087F8  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11113  0087FA  E104               	bnz	i2u625_41
 11114  0087FC  0E9C               	movlw	156
 11115  0087FE  0102               	movlb	2	; () banked
 11116  008800  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11117  008802  A4D8               	btfss	status,2,c
 11118  008804                     i2u625_41:
 11119  008804  0012               	return	
 11120                           
 11121                           ; BSR set to: 2
 11122                           ;boostercomms.c: 334: CheckLineFault();
 11123  008806  EC24  F04E         	call	_CheckLineFault	;wreg free
 11124                           
 11125                           ;boostercomms.c: 335: cableFaultModeUCS = 3;
 11126  00880A  0E03               	movlw	3
 11127  00880C  0102               	movlb	2	; () banked
 11128  00880E  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11129                           
 11130                           ; BSR set to: 2
 11131                           ;boostercomms.c: 336: LATBbits.LATB3 = 1;
 11132  008810  868A               	bsf	3978,3,c	;volatile
 11133                           
 11134                           ; BSR set to: 2
 11135                           ;boostercomms.c: 337: }
 11136                           ;boostercomms.c: 338: break;
 11137  008812  0012               	return	
 11138  008814                     i2l5849:
 11139                           
 11140                           ; BSR set to: 2
 11141                           ;boostercomms.c: 340: if(counterCommsStatusUSS == 40500){
 11142  008814  0E34               	movlw	52
 11143  008816  0102               	movlb	2	; () banked
 11144  008818  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11145  00881A  E104               	bnz	i2u626_41
 11146  00881C  0E9E               	movlw	158
 11147  00881E  0102               	movlb	2	; () banked
 11148  008820  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11149  008822  A4D8               	btfss	status,2,c
 11150  008824                     i2u626_41:
 11151  008824  0012               	return	
 11152                           
 11153                           ; BSR set to: 2
 11154                           ;boostercomms.c: 341: LATBbits.LATB3 = 0;
 11155  008826  968A               	bcf	3978,3,c	;volatile
 11156                           
 11157                           ; BSR set to: 2
 11158                           ;boostercomms.c: 342: cableFaultModeUCS = 0;
 11159  008828  0E00               	movlw	0
 11160  00882A  0102               	movlb	2	; () banked
 11161  00882C  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11162                           
 11163                           ; BSR set to: 2
 11164                           ;boostercomms.c: 343: if(statusFlagsUSLG & 0b010000000000000000000000)
 11165  00882E  0102               	movlb	2	; () banked
 11166  008830  AD8C               	btfss	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
 11167  008832  D003               	goto	i2l5859
 11168                           
 11169                           ; BSR set to: 2
 11170                           ;boostercomms.c: 344: SetCommsLow();
 11171  008834  EC37  F05B         	call	_SetCommsLow	;wreg free
 11172  008838  0012               	return	
 11173  00883A                     i2l5859:
 11174                           
 11175                           ;boostercomms.c: 345: else
 11176                           ;boostercomms.c: 346: commsStatusUCG = 0;
 11177  00883A  0E00               	movlw	0
 11178  00883C  0102               	movlb	2	; () banked
 11179  00883E  6FA3               	movwf	_commsStatusUCG& (0+255),b
 11180                           
 11181                           ; BSR set to: 2
 11182                           ;boostercomms.c: 350: }
 11183                           
 11184                           ; BSR set to: 2
 11185                           ;boostercomms.c: 348: }
 11186                           ;boostercomms.c: 349: break;
 11187                           
 11188                           ; BSR set to: 2
 11189  008840  0012               	return	
 11190  008842                     i2l5863:
 11191                           
 11192                           ; BSR set to: 2
 11193  008842  0102               	movlb	2	; () banked
 11194  008844  5195               	movf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),w,b
 11195                           
 11196                           ; Switch size 1, requested type "space"
 11197                           ; Number of cases is 7, Range of values is 0 to 6
 11198                           ; switch strategies available:
 11199                           ; Name         Instructions Cycles
 11200                           ; simple_byte           22    12 (average)
 11201                           ;	Chosen strategy is simple_byte
 11202  008846  0A00               	xorlw	0	; case 0
 11203  008848  B4D8               	btfsc	status,2,c
 11204  00884A  D797               	goto	i2l5819
 11205  00884C  0A01               	xorlw	1	; case 1
 11206  00884E  B4D8               	btfsc	status,2,c
 11207  008850  D7CB               	goto	i2l5837
 11208  008852  0A03               	xorlw	3	; case 2
 11209  008854  B4D8               	btfsc	status,2,c
 11210  008856  D7CE               	goto	i2l5841
 11211  008858  0A01               	xorlw	1	; case 3
 11212  00885A  B4D8               	btfsc	status,2,c
 11213  00885C  D7DB               	goto	i2l5849
 11214  00885E  0A07               	xorlw	7	; case 4
 11215  008860  B4D8               	btfsc	status,2,c
 11216  008862  D794               	goto	i2l5821
 11217  008864  0A01               	xorlw	1	; case 5
 11218  008866  B4D8               	btfsc	status,2,c
 11219  008868  D7B2               	goto	i2l5833
 11220  00886A  0A03               	xorlw	3	; case 6
 11221  00886C  A4D8               	btfss	status,2,c
 11222                           
 11223                           ; BSR set to: 2
 11224                           ;boostercomms.c: 351: break;
 11225  00886E  0012               	return	
 11226  008870  D79B               	goto	i2l5827
 11227  008872                     i2l5865:
 11228                           
 11229                           ; BSR set to: 2
 11230                           ;boostercomms.c: 353: counterCommsStatusUSS++;
 11231  008872  0102               	movlb	2	; () banked
 11232  008874  4B8D               	infsnz	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),f,b
 11233  008876  2B8E               	incf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),f,b
 11234                           
 11235                           ;boostercomms.c: 354: switch(cableTestUCS){
 11236  008878  D093               	goto	i2l5941
 11237  00887A                     i2l5867:
 11238                           
 11239                           ; BSR set to: 2
 11240                           ;boostercomms.c: 356: if(counterCommsStatusUSS == 1000){
 11241  00887A  0EE8               	movlw	232
 11242  00887C  0102               	movlb	2	; () banked
 11243  00887E  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11244  008880  E104               	bnz	i2u628_41
 11245  008882  0E03               	movlw	3
 11246  008884  0102               	movlb	2	; () banked
 11247  008886  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11248  008888  A4D8               	btfss	status,2,c
 11249  00888A                     i2u628_41:
 11250  00888A  0012               	return	
 11251                           
 11252                           ; BSR set to: 2
 11253                           ;boostercomms.c: 357: if((statusFlagsUSLG & 0b000000000000000000000100)){
 11254  00888C  0102               	movlb	2	; () banked
 11255  00888E  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
 11256  008890  D004               	goto	i2l5875
 11257                           
 11258                           ; BSR set to: 2
 11259                           ;boostercomms.c: 358: ReadKeySwitch();
 11260  008892  EC64  F059         	call	_ReadKeySwitch	;wreg free
 11261                           
 11262                           ;boostercomms.c: 359: CheckLineFault();
 11263  008896  EC24  F04E         	call	_CheckLineFault	;wreg free
 11264  00889A                     i2l5875:
 11265                           
 11266                           ;boostercomms.c: 360: }
 11267                           ;boostercomms.c: 361: if ((statusFlagsUSLG & 0b000000000000000000100000) && ISO_COUNTER 
      +                          == 0){
 11268  00889A  0102               	movlb	2	; () banked
 11269  00889C  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
 11270  00889E  D010               	goto	i2l391
 11271                           
 11272                           ; BSR set to: 2
 11273  0088A0  0102               	movlb	2	; () banked
 11274  0088A2  51A1               	movf	_ISO_COUNTER& (0+255),w,b
 11275  0088A4  A4D8               	btfss	status,2,c
 11276  0088A6  D00C               	goto	i2l391
 11277                           
 11278                           ; BSR set to: 2
 11279                           ;boostercomms.c: 362: counterCommsStatusUSS = 0;
 11280  0088A8  0E00               	movlw	0
 11281  0088AA  0102               	movlb	2	; () banked
 11282  0088AC  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 11283  0088AE  0E00               	movlw	0
 11284  0088B0  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 11285                           
 11286                           ;boostercomms.c: 363: cableTestUCS = 1;
 11287  0088B2  0E01               	movlw	1
 11288  0088B4  0102               	movlb	2	; () banked
 11289  0088B6  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 11290                           
 11291                           ; BSR set to: 2
 11292                           ;boostercomms.c: 364: SetCommsLow();
 11293  0088B8  EC37  F05B         	call	_SetCommsLow	;wreg free
 11294                           
 11295                           ;boostercomms.c: 365: LATDbits.LATD7 = 0;
 11296  0088BC  9E8C               	bcf	3980,7,c	;volatile
 11297                           
 11298                           ;boostercomms.c: 366: }
 11299  0088BE  0012               	return	
 11300  0088C0                     i2l391:
 11301                           
 11302                           ; BSR set to: 2
 11303                           ;boostercomms.c: 367: else if(statusFlagsUSLG & 0b010000000000000000000000){
 11304  0088C0  0102               	movlb	2	; () banked
 11305  0088C2  AD8C               	btfss	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
 11306  0088C4  D009               	goto	i2l5891
 11307                           
 11308                           ; BSR set to: 2
 11309                           ;boostercomms.c: 368: SetCommsLow();
 11310  0088C6  EC37  F05B         	call	_SetCommsLow	;wreg free
 11311                           
 11312                           ;boostercomms.c: 369: commsStatusUCG = 8;
 11313  0088CA  0E08               	movlw	8
 11314  0088CC  0102               	movlb	2	; () banked
 11315  0088CE  6FA3               	movwf	_commsStatusUCG& (0+255),b
 11316                           
 11317                           ; BSR set to: 2
 11318                           ;boostercomms.c: 370: cableFaultModeUCS = 0;
 11319  0088D0  0E00               	movlw	0
 11320  0088D2  0102               	movlb	2	; () banked
 11321  0088D4  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11322                           
 11323                           ;boostercomms.c: 371: }
 11324  0088D6  0012               	return	
 11325  0088D8                     i2l5891:
 11326                           
 11327                           ; BSR set to: 2
 11328                           ;boostercomms.c: 372: else
 11329                           ;boostercomms.c: 373: commsStatusUCG = 0;
 11330  0088D8  0E00               	movlw	0
 11331  0088DA  0102               	movlb	2	; () banked
 11332  0088DC  6FA3               	movwf	_commsStatusUCG& (0+255),b
 11333                           
 11334                           ; BSR set to: 2
 11335                           ;boostercomms.c: 374: }
 11336                           ;boostercomms.c: 375: break;
 11337                           
 11338                           ; BSR set to: 2
 11339                           
 11340                           ; BSR set to: 2
 11341  0088DE  0012               	return	
 11342  0088E0                     i2l5893:
 11343                           
 11344                           ; BSR set to: 2
 11345                           ;boostercomms.c: 377: if(counterCommsStatusUSS == 39600){
 11346  0088E0  0EB0               	movlw	176
 11347  0088E2  0102               	movlb	2	; () banked
 11348  0088E4  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11349  0088E6  E116               	bnz	i2l5907
 11350  0088E8  0E9A               	movlw	154
 11351  0088EA  0102               	movlb	2	; () banked
 11352  0088EC  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11353  0088EE  A4D8               	btfss	status,2,c
 11354  0088F0  D011               	goto	i2l5907
 11355                           
 11356                           ; BSR set to: 2
 11357                           ;boostercomms.c: 378: ReadKeySwitch();
 11358  0088F2  EC64  F059         	call	_ReadKeySwitch	;wreg free
 11359                           
 11360                           ;boostercomms.c: 379: if((statusFlagsUSLG & 0b000000000000000000100000))
 11361  0088F6  0102               	movlb	2	; () banked
 11362  0088F8  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
 11363  0088FA  D002               	goto	i2l5901
 11364                           
 11365                           ; BSR set to: 2
 11366                           ;boostercomms.c: 380: LATAbits.LATA6 = 1;
 11367  0088FC  8C89               	bsf	3977,6,c	;volatile
 11368  0088FE  0012               	return	
 11369  008900                     i2l5901:
 11370                           
 11371                           ; BSR set to: 2
 11372                           ;boostercomms.c: 381: else{
 11373                           ;boostercomms.c: 382: commsStatusUCG = 0;
 11374  008900  0E00               	movlw	0
 11375  008902  0102               	movlb	2	; () banked
 11376  008904  6FA3               	movwf	_commsStatusUCG& (0+255),b
 11377                           
 11378                           ;boostercomms.c: 383: cableTestUCS = 0;
 11379  008906  0E00               	movlw	0
 11380  008908  0102               	movlb	2	; () banked
 11381  00890A  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 11382                           
 11383                           ; BSR set to: 2
 11384                           ;boostercomms.c: 384: LATDbits.LATD7 = 1;
 11385  00890C  8E8C               	bsf	3980,7,c	;volatile
 11386                           
 11387                           ; BSR set to: 2
 11388                           ;boostercomms.c: 385: SetCommsHigh();
 11389  00890E  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
 11390                           
 11391                           ;boostercomms.c: 386: }
 11392                           ;boostercomms.c: 387: }
 11393  008912  0012               	return	
 11394  008914                     i2l5907:
 11395                           
 11396                           ;boostercomms.c: 388: else if(counterCommsStatusUSS == 40000){
 11397  008914  0E40               	movlw	64
 11398  008916  0102               	movlb	2	; () banked
 11399  008918  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11400  00891A  E104               	bnz	i2u635_41
 11401  00891C  0E9C               	movlw	156
 11402  00891E  0102               	movlb	2	; () banked
 11403  008920  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11404  008922  A4D8               	btfss	status,2,c
 11405  008924                     i2u635_41:
 11406  008924  0012               	return	
 11407                           
 11408                           ; BSR set to: 2
 11409                           ;boostercomms.c: 389: LATAbits.LATA6 = 0;
 11410  008926  9C89               	bcf	3977,6,c	;volatile
 11411                           
 11412                           ; BSR set to: 2
 11413                           ;boostercomms.c: 390: counterCommsStatusUSS = 0;
 11414  008928  0E00               	movlw	0
 11415  00892A  0102               	movlb	2	; () banked
 11416  00892C  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 11417  00892E  0E00               	movlw	0
 11418  008930  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 11419                           
 11420                           ;boostercomms.c: 391: cableTestUCS = 3;
 11421  008932  0E03               	movlw	3
 11422  008934  0102               	movlb	2	; () banked
 11423  008936  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 11424                           
 11425                           ; BSR set to: 2
 11426                           ;boostercomms.c: 392: }
 11427                           ;boostercomms.c: 393: break;
 11428                           
 11429                           ; BSR set to: 2
 11430  008938  0012               	return	
 11431  00893A                     i2l5913:
 11432                           
 11433                           ; BSR set to: 2
 11434                           ;boostercomms.c: 395: if(counterCommsStatusUSS == 39600){
 11435  00893A  0EB0               	movlw	176
 11436  00893C  0102               	movlb	2	; () banked
 11437  00893E  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11438  008940  E11A               	bnz	i2l5929
 11439  008942  0E9A               	movlw	154
 11440  008944  0102               	movlb	2	; () banked
 11441  008946  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11442  008948  A4D8               	btfss	status,2,c
 11443  00894A  D015               	goto	i2l5929
 11444                           
 11445                           ; BSR set to: 2
 11446                           ;boostercomms.c: 396: ReadKeySwitch();
 11447  00894C  EC64  F059         	call	_ReadKeySwitch	;wreg free
 11448                           
 11449                           ;boostercomms.c: 397: if((statusFlagsUSLG & 0b000000000000000000100000) && (ISO_COUNTER 
      +                          < 15))
 11450  008950  0102               	movlb	2	; () banked
 11451  008952  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
 11452  008954  D006               	goto	i2l5923
 11453                           
 11454                           ; BSR set to: 2
 11455  008956  0E0F               	movlw	15
 11456  008958  0102               	movlb	2	; () banked
 11457  00895A  61A1               	cpfslt	_ISO_COUNTER& (0+255),b
 11458  00895C  D002               	goto	i2l5923
 11459                           
 11460                           ; BSR set to: 2
 11461                           ;boostercomms.c: 398: LATCbits.LATC0 = 1;
 11462  00895E  808B               	bsf	3979,0,c	;volatile
 11463  008960  0012               	return	
 11464  008962                     i2l5923:
 11465                           
 11466                           ; BSR set to: 2
 11467                           ;boostercomms.c: 399: else{
 11468                           ;boostercomms.c: 400: commsStatusUCG = 0;
 11469  008962  0E00               	movlw	0
 11470  008964  0102               	movlb	2	; () banked
 11471  008966  6FA3               	movwf	_commsStatusUCG& (0+255),b
 11472                           
 11473                           ;boostercomms.c: 401: cableTestUCS = 0;
 11474  008968  0E00               	movlw	0
 11475  00896A  0102               	movlb	2	; () banked
 11476  00896C  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 11477                           
 11478                           ; BSR set to: 2
 11479                           ;boostercomms.c: 402: LATDbits.LATD7 = 1;
 11480  00896E  8E8C               	bsf	3980,7,c	;volatile
 11481                           
 11482                           ; BSR set to: 2
 11483                           ;boostercomms.c: 403: SetCommsHigh();
 11484  008970  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
 11485                           
 11486                           ;boostercomms.c: 404: }
 11487                           ;boostercomms.c: 405: }
 11488  008974  0012               	return	
 11489  008976                     i2l5929:
 11490                           
 11491                           ;boostercomms.c: 406: else if(counterCommsStatusUSS == 40000){
 11492  008976  0E40               	movlw	64
 11493  008978  0102               	movlb	2	; () banked
 11494  00897A  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11495  00897C  E13E               	bnz	i2l269
 11496  00897E  0E9C               	movlw	156
 11497  008980  0102               	movlb	2	; () banked
 11498  008982  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11499  008984  A4D8               	btfss	status,2,c
 11500  008986  0012               	return	
 11501                           
 11502                           ; BSR set to: 2
 11503                           ;boostercomms.c: 407: LATCbits.LATC0 = 0;
 11504  008988  908B               	bcf	3979,0,c	;volatile
 11505                           
 11506                           ; BSR set to: 2
 11507                           ;boostercomms.c: 408: cableTestUCS = 1;
 11508  00898A  0E01               	movlw	1
 11509  00898C  0102               	movlb	2	; () banked
 11510  00898E  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 11511                           
 11512                           ; BSR set to: 2
 11513                           ;boostercomms.c: 409: ISO_COUNTER++;
 11514  008990  0102               	movlb	2	; () banked
 11515  008992  2BA1               	incf	_ISO_COUNTER& (0+255),f,b
 11516                           
 11517                           ; BSR set to: 2
 11518                           ;boostercomms.c: 410: counterCommsStatusUSS = 0;
 11519  008994  0E00               	movlw	0
 11520  008996  0102               	movlb	2	; () banked
 11521  008998  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 11522  00899A  0E00               	movlw	0
 11523  00899C  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 11524                           
 11525                           ; BSR set to: 2
 11526                           ;boostercomms.c: 413: }
 11527                           
 11528                           ; BSR set to: 2
 11529                           ;boostercomms.c: 411: }
 11530                           ;boostercomms.c: 412: break;
 11531                           
 11532                           ; BSR set to: 2
 11533  00899E  0012               	return	
 11534  0089A0                     i2l5941:
 11535                           
 11536                           ; BSR set to: 2
 11537  0089A0  0102               	movlb	2	; () banked
 11538  0089A2  5194               	movf	BoosterDataCommandComms@cableTestUCS& (0+255),w,b
 11539                           
 11540                           ; Switch size 1, requested type "space"
 11541                           ; Number of cases is 3, Range of values is 0 to 3
 11542                           ; switch strategies available:
 11543                           ; Name         Instructions Cycles
 11544                           ; simple_byte           10     6 (average)
 11545                           ;	Chosen strategy is simple_byte
 11546  0089A4  0A00               	xorlw	0	; case 0
 11547  0089A6  B4D8               	btfsc	status,2,c
 11548  0089A8  D768               	goto	i2l5867
 11549  0089AA  0A01               	xorlw	1	; case 1
 11550  0089AC  B4D8               	btfsc	status,2,c
 11551  0089AE  D798               	goto	i2l5893
 11552  0089B0  0A02               	xorlw	2	; case 3
 11553  0089B2  A4D8               	btfss	status,2,c
 11554                           
 11555                           ; BSR set to: 2
 11556                           ;boostercomms.c: 415: }
 11557                           
 11558                           ; BSR set to: 2
 11559                           ;boostercomms.c: 414: break;
 11560  0089B4  0012               	return	
 11561  0089B6  D7C1               	goto	i2l5913
 11562  0089B8                     i2l5945:
 11563  0089B8  0102               	movlb	2	; () banked
 11564  0089BA  51A3               	movf	_commsStatusUCG& (0+255),w,b
 11565                           
 11566                           ; Switch size 1, requested type "space"
 11567                           ; Number of cases is 10, Range of values is 0 to 9
 11568                           ; switch strategies available:
 11569                           ; Name         Instructions Cycles
 11570                           ; simple_byte           31    16 (average)
 11571                           ;	Chosen strategy is simple_byte
 11572  0089BC  0A00               	xorlw	0	; case 0
 11573  0089BE  B4D8               	btfsc	status,2,c
 11574  0089C0  0012               	return	
 11575  0089C2  0A01               	xorlw	1	; case 1
 11576  0089C4  B4D8               	btfsc	status,2,c
 11577  0089C6  D410               	goto	i2l270
 11578  0089C8  0A03               	xorlw	3	; case 2
 11579  0089CA  B4D8               	btfsc	status,2,c
 11580  0089CC  D43B               	goto	i2l279
 11581  0089CE  0A01               	xorlw	1	; case 3
 11582  0089D0  B4D8               	btfsc	status,2,c
 11583  0089D2  D49A               	goto	i2l5605
 11584  0089D4  0A07               	xorlw	7	; case 4
 11585  0089D6  B4D8               	btfsc	status,2,c
 11586  0089D8  D5FC               	goto	i2l327
 11587  0089DA  0A01               	xorlw	1	; case 5
 11588  0089DC  B4D8               	btfsc	status,2,c
 11589  0089DE  D622               	goto	i2l5743
 11590  0089E0  0A03               	xorlw	3	; case 6
 11591  0089E2  B4D8               	btfsc	status,2,c
 11592  0089E4  D660               	goto	i2l5773
 11593  0089E6  0A01               	xorlw	1	; case 7
 11594  0089E8  B4D8               	btfsc	status,2,c
 11595  0089EA  D670               	goto	i2l352
 11596  0089EC  0A0F               	xorlw	15	; case 8
 11597  0089EE  B4D8               	btfsc	status,2,c
 11598  0089F0  D6C0               	goto	i2l5817
 11599  0089F2  0A01               	xorlw	1	; case 9
 11600  0089F4  A4D8               	btfss	status,2,c
 11601  0089F6  0012               	return	
 11602  0089F8  D73C               	goto	i2l5865
 11603  0089FA                     i2l269:
 11604  0089FA  0012               	return		;funcret
 11605  0089FC                     __end_of_BoosterDataCommandComms:
 11606                           	opt stack 0
 11607                           pclatu	equ	0xFFB
 11608                           pclath	equ	0xFFA
 11609                           tblptru	equ	0xFF8
 11610                           tblptrh	equ	0xFF7
 11611                           tblptrl	equ	0xFF6
 11612                           tablat	equ	0xFF5
 11613                           prodh	equ	0xFF4
 11614                           prodl	equ	0xFF3
 11615                           intcon	equ	0xFF2
 11616                           postinc0	equ	0xFEE
 11617                           fsr0h	equ	0xFEA
 11618                           fsr0l	equ	0xFE9
 11619                           wreg	equ	0xFE8
 11620                           indf1	equ	0xFE7
 11621                           postinc1	equ	0xFE6
 11622                           postdec1	equ	0xFE5
 11623                           fsr1h	equ	0xFE2
 11624                           fsr1l	equ	0xFE1
 11625                           indf2	equ	0xFDF
 11626                           postinc2	equ	0xFDE
 11627                           postdec2	equ	0xFDD
 11628                           fsr2h	equ	0xFDA
 11629                           fsr2l	equ	0xFD9
 11630                           status	equ	0xFD8
 11631                           
 11632 ;; *************** function i2_SetCommsHigh *****************
 11633 ;; Defined at:
 11634 ;;		line 488 in file "boostercomms.c"
 11635 ;; Parameters:    Size  Location     Type
 11636 ;;		None
 11637 ;; Auto vars:     Size  Location     Type
 11638 ;;		None
 11639 ;; Return value:  Size  Location     Type
 11640 ;;                  1    wreg      void 
 11641 ;; Registers used:
 11642 ;;		None
 11643 ;; Tracked objects:
 11644 ;;		On entry : 0/0
 11645 ;;		On exit  : 0/0
 11646 ;;		Unchanged: 0/0
 11647 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 11648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11652 ;;Total ram usage:        0 bytes
 11653 ;; Hardware stack levels used:    1
 11654 ;; This function calls:
 11655 ;;		Nothing
 11656 ;; This function is called by:
 11657 ;;		_BoosterDataCommandComms
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text59
 11662  00B668                     __ptext59:
 11663                           	opt stack 0
 11664  00B668                     i2_SetCommsHigh:
 11665                           	opt stack 22
 11666                           
 11667                           ;boostercomms.c: 489: LATBbits.LATB2 = 0;
 11668                           
 11669                           ;incstack = 0
 11670  00B668  948A               	bcf	3978,2,c	;volatile
 11671                           
 11672                           ;boostercomms.c: 490: LATAbits.LATA2 = 1;
 11673  00B66A  8489               	bsf	3977,2,c	;volatile
 11674  00B66C  0012               	return		;funcret
 11675  00B66E                     __end_ofi2_SetCommsHigh:
 11676                           	opt stack 0
 11677                           pclatu	equ	0xFFB
 11678                           pclath	equ	0xFFA
 11679                           tblptru	equ	0xFF8
 11680                           tblptrh	equ	0xFF7
 11681                           tblptrl	equ	0xFF6
 11682                           tablat	equ	0xFF5
 11683                           prodh	equ	0xFF4
 11684                           prodl	equ	0xFF3
 11685                           intcon	equ	0xFF2
 11686                           postinc0	equ	0xFEE
 11687                           fsr0h	equ	0xFEA
 11688                           fsr0l	equ	0xFE9
 11689                           wreg	equ	0xFE8
 11690                           indf1	equ	0xFE7
 11691                           postinc1	equ	0xFE6
 11692                           postdec1	equ	0xFE5
 11693                           fsr1h	equ	0xFE2
 11694                           fsr1l	equ	0xFE1
 11695                           indf2	equ	0xFDF
 11696                           postinc2	equ	0xFDE
 11697                           postdec2	equ	0xFDD
 11698                           fsr2h	equ	0xFDA
 11699                           fsr2l	equ	0xFD9
 11700                           status	equ	0xFD8
 11701                           
 11702 ;; *************** function _SetCommsLow *****************
 11703 ;; Defined at:
 11704 ;;		line 483 in file "boostercomms.c"
 11705 ;; Parameters:    Size  Location     Type
 11706 ;;		None
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;		None
 11709 ;; Return value:  Size  Location     Type
 11710 ;;                  1    wreg      void 
 11711 ;; Registers used:
 11712 ;;		None
 11713 ;; Tracked objects:
 11714 ;;		On entry : 0/0
 11715 ;;		On exit  : 0/0
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 11718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11722 ;;Total ram usage:        0 bytes
 11723 ;; Hardware stack levels used:    1
 11724 ;; This function calls:
 11725 ;;		Nothing
 11726 ;; This function is called by:
 11727 ;;		_BoosterDataCommandComms
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           	psect	text60
 11732  00B66E                     __ptext60:
 11733                           	opt stack 0
 11734  00B66E                     _SetCommsLow:
 11735                           	opt stack 22
 11736                           
 11737                           ;boostercomms.c: 484: LATAbits.LATA2 = 0;
 11738                           
 11739                           ;incstack = 0
 11740  00B66E  9489               	bcf	3977,2,c	;volatile
 11741                           
 11742                           ;boostercomms.c: 485: LATBbits.LATB2 = 1;
 11743  00B670  848A               	bsf	3978,2,c	;volatile
 11744  00B672  0012               	return		;funcret
 11745  00B674                     __end_of_SetCommsLow:
 11746                           	opt stack 0
 11747                           pclatu	equ	0xFFB
 11748                           pclath	equ	0xFFA
 11749                           tblptru	equ	0xFF8
 11750                           tblptrh	equ	0xFF7
 11751                           tblptrl	equ	0xFF6
 11752                           tablat	equ	0xFF5
 11753                           prodh	equ	0xFF4
 11754                           prodl	equ	0xFF3
 11755                           intcon	equ	0xFF2
 11756                           postinc0	equ	0xFEE
 11757                           fsr0h	equ	0xFEA
 11758                           fsr0l	equ	0xFE9
 11759                           wreg	equ	0xFE8
 11760                           indf1	equ	0xFE7
 11761                           postinc1	equ	0xFE6
 11762                           postdec1	equ	0xFE5
 11763                           fsr1h	equ	0xFE2
 11764                           fsr1l	equ	0xFE1
 11765                           indf2	equ	0xFDF
 11766                           postinc2	equ	0xFDE
 11767                           postdec2	equ	0xFDD
 11768                           fsr2h	equ	0xFDA
 11769                           fsr2l	equ	0xFD9
 11770                           status	equ	0xFD8
 11771                           
 11772 ;; *************** function _ReadKeySwitch *****************
 11773 ;; Defined at:
 11774 ;;		line 95 in file "peripherals.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;		None
 11777 ;; Auto vars:     Size  Location     Type
 11778 ;;  keySwitchVal    2    3[COMRAM] unsigned short 
 11779 ;; Return value:  Size  Location     Type
 11780 ;;                  1    wreg      void 
 11781 ;; Registers used:
 11782 ;;		wreg, status,2, status,0, cstack
 11783 ;; Tracked objects:
 11784 ;;		On entry : 0/0
 11785 ;;		On exit  : 0/0
 11786 ;;		Unchanged: 0/0
 11787 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 11788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;Total ram usage:        2 bytes
 11793 ;; Hardware stack levels used:    1
 11794 ;; Hardware stack levels required when called:    1
 11795 ;; This function calls:
 11796 ;;		_ReadAnalogVoltage
 11797 ;; This function is called by:
 11798 ;;		_BoosterDataCommandComms
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802                           	psect	text61
 11803  00B2C8                     __ptext61:
 11804                           	opt stack 0
 11805  00B2C8                     _ReadKeySwitch:
 11806                           	opt stack 21
 11807                           
 11808                           ;peripherals.c: 96: unsigned short keySwitchValueUS;
 11809                           ;peripherals.c: 98: LATEbits.LATE0 = 1;
 11810                           
 11811                           ;incstack = 0
 11812  00B2C8  808D               	bsf	3981,0,c	;volatile
 11813                           
 11814                           ;peripherals.c: 99: keySwitchValueUS = ReadAnalogVoltage(0);
 11815  00B2CA  0E00               	movlw	0
 11816  00B2CC  EC3F  F058         	call	_ReadAnalogVoltage
 11817  00B2D0  C001  F004         	movff	?_ReadAnalogVoltage,ReadKeySwitch@keySwitchValueUS
 11818  00B2D4  C002  F005         	movff	?_ReadAnalogVoltage+1,ReadKeySwitch@keySwitchValueUS+1
 11819                           
 11820                           ;peripherals.c: 100: LATEbits.LATE0 = 0;
 11821  00B2D8  908D               	bcf	3981,0,c	;volatile
 11822                           
 11823                           ;peripherals.c: 102: __nop();
 11824  00B2DA  F000               	nop	
 11825                           
 11826                           ;peripherals.c: 104: if(keySwitchValueUS > 80){
 11827  00B2DC  5005               	movf	ReadKeySwitch@keySwitchValueUS+1,w,c
 11828  00B2DE  E104               	bnz	i2u468_40
 11829  00B2E0  0E51               	movlw	81
 11830  00B2E2  5C04               	subwf	ReadKeySwitch@keySwitchValueUS,w,c
 11831  00B2E4  A0D8               	btfss	status,0,c
 11832  00B2E6  D006               	goto	i2l5001
 11833  00B2E8                     i2u468_40:
 11834                           
 11835                           ;peripherals.c: 105: ISO_COUNTER = 0;
 11836  00B2E8  0E00               	movlw	0
 11837  00B2EA  0102               	movlb	2	; () banked
 11838  00B2EC  6FA1               	movwf	_ISO_COUNTER& (0+255),b
 11839                           
 11840                           ; BSR set to: 2
 11841                           ;peripherals.c: 106: statusFlagsUSLG &= ~0b000000000000000000100000;
 11842  00B2EE  0102               	movlb	2	; () banked
 11843  00B2F0  9B8A               	bcf	_statusFlagsUSLG& (0+255),5,b	;volatile
 11844                           
 11845                           ;peripherals.c: 107: }
 11846  00B2F2  0012               	return	
 11847  00B2F4                     i2l5001:
 11848                           
 11849                           ;peripherals.c: 108: else
 11850                           ;peripherals.c: 109: statusFlagsUSLG |= 0b000000000000000000100000;
 11851  00B2F4  0102               	movlb	2	; () banked
 11852  00B2F6  8B8A               	bsf	_statusFlagsUSLG& (0+255),5,b	;volatile
 11853  00B2F8  0012               	return	
 11854  00B2FA                     __end_of_ReadKeySwitch:
 11855                           	opt stack 0
 11856                           pclatu	equ	0xFFB
 11857                           pclath	equ	0xFFA
 11858                           tblptru	equ	0xFF8
 11859                           tblptrh	equ	0xFF7
 11860                           tblptrl	equ	0xFF6
 11861                           tablat	equ	0xFF5
 11862                           prodh	equ	0xFF4
 11863                           prodl	equ	0xFF3
 11864                           intcon	equ	0xFF2
 11865                           postinc0	equ	0xFEE
 11866                           fsr0h	equ	0xFEA
 11867                           fsr0l	equ	0xFE9
 11868                           wreg	equ	0xFE8
 11869                           indf1	equ	0xFE7
 11870                           postinc1	equ	0xFE6
 11871                           postdec1	equ	0xFE5
 11872                           fsr1h	equ	0xFE2
 11873                           fsr1l	equ	0xFE1
 11874                           indf2	equ	0xFDF
 11875                           postinc2	equ	0xFDE
 11876                           postdec2	equ	0xFDD
 11877                           fsr2h	equ	0xFDA
 11878                           fsr2l	equ	0xFD9
 11879                           status	equ	0xFD8
 11880                           
 11881 ;; *************** function _ReadEarthLeakage *****************
 11882 ;; Defined at:
 11883 ;;		line 73 in file "peripherals.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;		None
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;  earthLeakage    2    3[COMRAM] unsigned short 
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  1    wreg      void 
 11890 ;; Registers used:
 11891 ;;		wreg, status,2, status,0, cstack
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 11897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;Total ram usage:        2 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; Hardware stack levels required when called:    1
 11904 ;; This function calls:
 11905 ;;		_ReadAnalogVoltage
 11906 ;; This function is called by:
 11907 ;;		_BoosterDataCommandComms
 11908 ;; This function uses a non-reentrant model
 11909 ;;
 11910                           
 11911                           	psect	text62
 11912  00AD68                     __ptext62:
 11913                           	opt stack 0
 11914  00AD68                     _ReadEarthLeakage:
 11915                           	opt stack 21
 11916                           
 11917                           ;peripherals.c: 74: unsigned short earthLeakageValueUS;
 11918                           ;peripherals.c: 76: counterELTTests++;
 11919                           
 11920                           ; BSR set to: 2
 11921                           ;incstack = 0
 11922  00AD68  0103               	movlb	3	; () banked
 11923  00AD6A  4B47               	infsnz	_counterELTTests& (0+255),f,b
 11924  00AD6C  2B48               	incf	(_counterELTTests+1)& (0+255),f,b
 11925                           
 11926                           ; BSR set to: 3
 11927                           ;peripherals.c: 77: earthLeakageValueUS = ReadAnalogVoltage(1);
 11928  00AD6E  0E01               	movlw	1
 11929  00AD70  EC3F  F058         	call	_ReadAnalogVoltage
 11930  00AD74  C001  F004         	movff	?_ReadAnalogVoltage,ReadEarthLeakage@earthLeakageValueUS
 11931  00AD78  C002  F005         	movff	?_ReadAnalogVoltage+1,ReadEarthLeakage@earthLeakageValueUS+1
 11932                           
 11933                           ;peripherals.c: 79: if(earthLeakageValueUS > 620)
 11934  00AD7C  0E6D               	movlw	109
 11935  00AD7E  5C04               	subwf	ReadEarthLeakage@earthLeakageValueUS,w,c
 11936  00AD80  0E02               	movlw	2
 11937  00AD82  5805               	subwfb	ReadEarthLeakage@earthLeakageValueUS+1,w,c
 11938  00AD84  A0D8               	btfss	status,0,c
 11939  00AD86  D003               	goto	i2l4923
 11940                           
 11941                           ;peripherals.c: 80: counterELTFailures++;
 11942  00AD88  0103               	movlb	3	; () banked
 11943  00AD8A  4B45               	infsnz	_counterELTFailures& (0+255),f,b
 11944  00AD8C  2B46               	incf	(_counterELTFailures+1)& (0+255),f,b
 11945  00AD8E                     i2l4923:
 11946                           
 11947                           ;peripherals.c: 84: if(counterELTTests == 5){
 11948  00AD8E  0E05               	movlw	5
 11949  00AD90  0103               	movlb	3	; () banked
 11950  00AD92  1947               	xorwf	_counterELTTests& (0+255),w,b
 11951  00AD94  0103               	movlb	3	; () banked
 11952  00AD96  1148               	iorwf	(_counterELTTests+1)& (0+255),w,b
 11953  00AD98  A4D8               	btfss	status,2,c
 11954  00AD9A  0012               	return	
 11955                           
 11956                           ; BSR set to: 3
 11957                           ;peripherals.c: 85: LATCbits.LATC4 = 0;
 11958  00AD9C  988B               	bcf	3979,4,c	;volatile
 11959                           
 11960                           ;peripherals.c: 86: LATDbits.LATD1 = 1;
 11961  00AD9E  828C               	bsf	3980,1,c	;volatile
 11962                           
 11963                           ; BSR set to: 3
 11964                           ;peripherals.c: 88: if(counterELTFailures == counterELTTests)
 11965  00ADA0  0103               	movlb	3	; () banked
 11966  00ADA2  5147               	movf	_counterELTTests& (0+255),w,b
 11967  00ADA4  0103               	movlb	3	; () banked
 11968  00ADA6  1945               	xorwf	_counterELTFailures& (0+255),w,b
 11969  00ADA8  E109               	bnz	i2l4931
 11970  00ADAA  0103               	movlb	3	; () banked
 11971  00ADAC  5148               	movf	(_counterELTTests+1)& (0+255),w,b
 11972  00ADAE  0103               	movlb	3	; () banked
 11973  00ADB0  1946               	xorwf	(_counterELTFailures+1)& (0+255),w,b
 11974  00ADB2  A4D8               	btfss	status,2,c
 11975  00ADB4  D003               	goto	i2l4931
 11976                           
 11977                           ; BSR set to: 3
 11978                           ;peripherals.c: 89: statusFlagsUSLG |= 0b000000000000000000010000;
 11979  00ADB6  0102               	movlb	2	; () banked
 11980  00ADB8  898A               	bsf	_statusFlagsUSLG& (0+255),4,b	;volatile
 11981  00ADBA  0012               	return	
 11982  00ADBC                     i2l4931:
 11983                           
 11984                           ;peripherals.c: 90: else
 11985                           ;peripherals.c: 91: statusFlagsUSLG &= ~0b000000000000000000010000;
 11986  00ADBC  0102               	movlb	2	; () banked
 11987  00ADBE  998A               	bcf	_statusFlagsUSLG& (0+255),4,b	;volatile
 11988                           
 11989                           ; BSR set to: 2
 11990  00ADC0  0012               	return	
 11991  00ADC2                     __end_of_ReadEarthLeakage:
 11992                           	opt stack 0
 11993                           pclatu	equ	0xFFB
 11994                           pclath	equ	0xFFA
 11995                           tblptru	equ	0xFF8
 11996                           tblptrh	equ	0xFF7
 11997                           tblptrl	equ	0xFF6
 11998                           tablat	equ	0xFF5
 11999                           prodh	equ	0xFF4
 12000                           prodl	equ	0xFF3
 12001                           intcon	equ	0xFF2
 12002                           postinc0	equ	0xFEE
 12003                           fsr0h	equ	0xFEA
 12004                           fsr0l	equ	0xFE9
 12005                           wreg	equ	0xFE8
 12006                           indf1	equ	0xFE7
 12007                           postinc1	equ	0xFE6
 12008                           postdec1	equ	0xFE5
 12009                           fsr1h	equ	0xFE2
 12010                           fsr1l	equ	0xFE1
 12011                           indf2	equ	0xFDF
 12012                           postinc2	equ	0xFDE
 12013                           postdec2	equ	0xFDD
 12014                           fsr2h	equ	0xFDA
 12015                           fsr2l	equ	0xFD9
 12016                           status	equ	0xFD8
 12017                           
 12018 ;; *************** function _ProcessRXFrame *****************
 12019 ;; Defined at:
 12020 ;;		line 509 in file "boostercomms.c"
 12021 ;; Parameters:    Size  Location     Type
 12022 ;;  recvFrameUS     2    6[COMRAM] unsigned short 
 12023 ;;  frameNumUC      1    8[COMRAM] unsigned char 
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;  parityCheckU    1   16[COMRAM] unsigned char 
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1    wreg      void 
 12028 ;; Registers used:
 12029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/0
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 12035 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;Total ram usage:       11 bytes
 12040 ;; Hardware stack levels used:    1
 12041 ;; Hardware stack levels required when called:    1
 12042 ;; This function calls:
 12043 ;;		_CheckBoosterRXParity
 12044 ;;		i2_ClearPastValue
 12045 ;;		i2_ResetSingleBoosterState
 12046 ;; This function is called by:
 12047 ;;		_BoosterDataCommandComms
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text63
 12052  008E02                     __ptext63:
 12053                           	opt stack 0
 12054  008E02                     _ProcessRXFrame:
 12055                           	opt stack 21
 12056                           
 12057                           ;boostercomms.c: 510: unsigned char parityCheckUC;
 12058                           ;boostercomms.c: 512: if(statusFlagsUSLG & 0b000000000000000000000100){
 12059                           
 12060                           ;incstack = 0
 12061  008E02  0102               	movlb	2	; () banked
 12062  008E04  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
 12063  008E06  D1C0               	goto	i2l456
 12064                           
 12065                           ; BSR set to: 2
 12066                           ;boostercomms.c: 513: if(statusFlagsUSLG & 0b000000000000000010000000)
 12067  008E08  0102               	movlb	2	; () banked
 12068  008E0A  AF8A               	btfss	_statusFlagsUSLG& (0+255),7,b	;volatile
 12069  008E0C  D002               	goto	i2l4833
 12070                           
 12071                           ; BSR set to: 2
 12072                           ;boostercomms.c: 514: frameNumUC += 15;
 12073  008E0E  0E0F               	movlw	15
 12074  008E10  2609               	addwf	ProcessRXFrame@frameNumUC,f,c
 12075  008E12                     i2l4833:
 12076                           
 12077                           ; BSR set to: 2
 12078                           ;boostercomms.c: 516: boosterCommsData[6][frameNumUC-1] = 0b00000000;
 12079  008E12  0EFF               	movlw	255
 12080  008E14  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12081  008E16  0EFF               	movlw	255
 12082  008E18  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12083  008E1A  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12084  008E1C  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12085  008E1E  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12086  008E20  500A               	movf	??_ProcessRXFrame,w,c
 12087  008E22  260C               	addwf	??_ProcessRXFrame+2,f,c
 12088  008E24  500B               	movf	??_ProcessRXFrame+1,w,c
 12089  008E26  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12090  008E28  0EB4               	movlw	low (_boosterCommsData+180)
 12091  008E2A  240C               	addwf	??_ProcessRXFrame+2,w,c
 12092  008E2C  6ED9               	movwf	fsr2l,c
 12093  008E2E  0E04               	movlw	high (_boosterCommsData+180)
 12094  008E30  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12095  008E32  6EDA               	movwf	fsr2h,c
 12096  008E34  0E00               	movlw	0
 12097  008E36  6EDF               	movwf	indf2,c
 12098                           
 12099                           ; BSR set to: 2
 12100                           ;boostercomms.c: 517: if(statusFlagsUSLG & 0b000000000000001000000000)
 12101  008E38  0102               	movlb	2	; () banked
 12102  008E3A  A38B               	btfss	(_statusFlagsUSLG+1)& (0+255),1,b	;volatile
 12103  008E3C  D013               	goto	i2l4839
 12104                           
 12105                           ; BSR set to: 2
 12106                           ;boostercomms.c: 518: boosterCommsData[6][frameNumUC-1] |= 0b00000001;
 12107  008E3E  0EFF               	movlw	255
 12108  008E40  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12109  008E42  0EFF               	movlw	255
 12110  008E44  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12111  008E46  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12112  008E48  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12113  008E4A  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12114  008E4C  500A               	movf	??_ProcessRXFrame,w,c
 12115  008E4E  260C               	addwf	??_ProcessRXFrame+2,f,c
 12116  008E50  500B               	movf	??_ProcessRXFrame+1,w,c
 12117  008E52  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12118  008E54  0EB4               	movlw	low (_boosterCommsData+180)
 12119  008E56  240C               	addwf	??_ProcessRXFrame+2,w,c
 12120  008E58  6ED9               	movwf	fsr2l,c
 12121  008E5A  0E04               	movlw	high (_boosterCommsData+180)
 12122  008E5C  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12123  008E5E  6EDA               	movwf	fsr2h,c
 12124  008E60  0E00               	movlw	0
 12125  008E62  80DB               	bsf	plusw2,0,c
 12126  008E64                     i2l4839:
 12127                           
 12128                           ; BSR set to: 2
 12129                           ;boostercomms.c: 519: if(!(parityCheckUC = CheckBoosterRXParity(recvFrameUS)))
 12130  008E64  C007  F001         	movff	ProcessRXFrame@recvFrameUS,CheckBoosterRXParity@recvFrameUS
 12131  008E68  C008  F002         	movff	ProcessRXFrame@recvFrameUS+1,CheckBoosterRXParity@recvFrameUS+1
 12132  008E6C  EC7D  F059         	call	_CheckBoosterRXParity	;wreg free
 12133  008E70  6E11               	movwf	ProcessRXFrame@parityCheckUC,c
 12134  008E72  5011               	movf	ProcessRXFrame@parityCheckUC,w,c
 12135  008E74  A4D8               	btfss	status,2,c
 12136  008E76  D013               	goto	i2l4843
 12137                           
 12138                           ;boostercomms.c: 520: boosterCommsData[6][frameNumUC-1] |= 0b00000010;
 12139  008E78  0EFF               	movlw	255
 12140  008E7A  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12141  008E7C  0EFF               	movlw	255
 12142  008E7E  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12143  008E80  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12144  008E82  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12145  008E84  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12146  008E86  500A               	movf	??_ProcessRXFrame,w,c
 12147  008E88  260C               	addwf	??_ProcessRXFrame+2,f,c
 12148  008E8A  500B               	movf	??_ProcessRXFrame+1,w,c
 12149  008E8C  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12150  008E8E  0EB4               	movlw	low (_boosterCommsData+180)
 12151  008E90  240C               	addwf	??_ProcessRXFrame+2,w,c
 12152  008E92  6ED9               	movwf	fsr2l,c
 12153  008E94  0E04               	movlw	high (_boosterCommsData+180)
 12154  008E96  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12155  008E98  6EDA               	movwf	fsr2h,c
 12156  008E9A  0E00               	movlw	0
 12157  008E9C  82DB               	bsf	plusw2,1,c
 12158  008E9E                     i2l4843:
 12159                           
 12160                           ;boostercomms.c: 521: if(statusFlagsUSLG & 0b000000000000000100000000)
 12161  008E9E  0102               	movlb	2	; () banked
 12162  008EA0  A18B               	btfss	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 12163  008EA2  D013               	goto	i2l4847
 12164                           
 12165                           ; BSR set to: 2
 12166                           ;boostercomms.c: 522: boosterCommsData[6][frameNumUC-1] |= 0b00000100;
 12167  008EA4  0EFF               	movlw	255
 12168  008EA6  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12169  008EA8  0EFF               	movlw	255
 12170  008EAA  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12171  008EAC  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12172  008EAE  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12173  008EB0  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12174  008EB2  500A               	movf	??_ProcessRXFrame,w,c
 12175  008EB4  260C               	addwf	??_ProcessRXFrame+2,f,c
 12176  008EB6  500B               	movf	??_ProcessRXFrame+1,w,c
 12177  008EB8  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12178  008EBA  0EB4               	movlw	low (_boosterCommsData+180)
 12179  008EBC  240C               	addwf	??_ProcessRXFrame+2,w,c
 12180  008EBE  6ED9               	movwf	fsr2l,c
 12181  008EC0  0E04               	movlw	high (_boosterCommsData+180)
 12182  008EC2  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12183  008EC4  6EDA               	movwf	fsr2h,c
 12184  008EC6  0E00               	movlw	0
 12185  008EC8  84DB               	bsf	plusw2,2,c
 12186  008ECA                     i2l4847:
 12187                           
 12188                           ; BSR set to: 2
 12189                           ;boostercomms.c: 523: if(statusFlagsUSLG & 0b000000000000010000000000)
 12190  008ECA  0102               	movlb	2	; () banked
 12191  008ECC  A58B               	btfss	(_statusFlagsUSLG+1)& (0+255),2,b	;volatile
 12192  008ECE  D013               	goto	i2l4851
 12193                           
 12194                           ; BSR set to: 2
 12195                           ;boostercomms.c: 524: boosterCommsData[6][frameNumUC-1] |= 0b00001000;
 12196  008ED0  0EFF               	movlw	255
 12197  008ED2  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12198  008ED4  0EFF               	movlw	255
 12199  008ED6  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12200  008ED8  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12201  008EDA  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12202  008EDC  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12203  008EDE  500A               	movf	??_ProcessRXFrame,w,c
 12204  008EE0  260C               	addwf	??_ProcessRXFrame+2,f,c
 12205  008EE2  500B               	movf	??_ProcessRXFrame+1,w,c
 12206  008EE4  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12207  008EE6  0EB4               	movlw	low (_boosterCommsData+180)
 12208  008EE8  240C               	addwf	??_ProcessRXFrame+2,w,c
 12209  008EEA  6ED9               	movwf	fsr2l,c
 12210  008EEC  0E04               	movlw	high (_boosterCommsData+180)
 12211  008EEE  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12212  008EF0  6EDA               	movwf	fsr2h,c
 12213  008EF2  0E00               	movlw	0
 12214  008EF4  86DB               	bsf	plusw2,3,c
 12215  008EF6                     i2l4851:
 12216                           
 12217                           ; BSR set to: 2
 12218                           ;boostercomms.c: 526: if(!(statusFlagsUSLG & 0b000000000000001000000000)){
 12219  008EF6  0102               	movlb	2	; () banked
 12220  008EF8  B38B               	btfsc	(_statusFlagsUSLG+1)& (0+255),1,b	;volatile
 12221  008EFA  D048               	goto	i2l4867
 12222                           
 12223                           ; BSR set to: 2
 12224                           ;boostercomms.c: 527: if(boosterCommsDataSerial[frameNumUC-1]){
 12225  008EFC  0EFE               	movlw	254
 12226  008EFE  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12227  008F00  0EFF               	movlw	255
 12228  008F02  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12229  008F04  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12230  008F06  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12231  008F08  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12232  008F0A  90D8               	bcf	status,0,c
 12233  008F0C  360C               	rlcf	??_ProcessRXFrame+2,f,c
 12234  008F0E  360D               	rlcf	??_ProcessRXFrame+3,f,c
 12235  008F10  500A               	movf	??_ProcessRXFrame,w,c
 12236  008F12  260C               	addwf	??_ProcessRXFrame+2,f,c
 12237  008F14  500B               	movf	??_ProcessRXFrame+1,w,c
 12238  008F16  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12239  008F18  0E00               	movlw	low _boosterCommsDataSerial
 12240  008F1A  240C               	addwf	??_ProcessRXFrame+2,w,c
 12241  008F1C  6ED9               	movwf	fsr2l,c
 12242  008F1E  0E03               	movlw	high _boosterCommsDataSerial
 12243  008F20  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12244  008F22  6EDA               	movwf	fsr2h,c
 12245  008F24  50DE               	movf	postinc2,w,c
 12246  008F26  10DE               	iorwf	postinc2,w,c
 12247  008F28  B4D8               	btfsc	status,2,c
 12248  008F2A  0012               	return	
 12249                           
 12250                           ; BSR set to: 2
 12251                           ;boostercomms.c: 528: boosterCommsData[4][frameNumUC-1]++;
 12252  008F2C  0EFF               	movlw	255
 12253  008F2E  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12254  008F30  0EFF               	movlw	255
 12255  008F32  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12256  008F34  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12257  008F36  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12258  008F38  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12259  008F3A  500A               	movf	??_ProcessRXFrame,w,c
 12260  008F3C  260C               	addwf	??_ProcessRXFrame+2,f,c
 12261  008F3E  500B               	movf	??_ProcessRXFrame+1,w,c
 12262  008F40  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12263  008F42  0E78               	movlw	low (_boosterCommsData+120)
 12264  008F44  240C               	addwf	??_ProcessRXFrame+2,w,c
 12265  008F46  6ED9               	movwf	fsr2l,c
 12266  008F48  0E04               	movlw	high (_boosterCommsData+120)
 12267  008F4A  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12268  008F4C  6EDA               	movwf	fsr2h,c
 12269  008F4E  2ADF               	incf	indf2,f,c
 12270                           
 12271                           ;boostercomms.c: 529: if(boosterCommsData[4][frameNumUC-1] == 10){
 12272  008F50  0EFF               	movlw	255
 12273  008F52  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12274  008F54  0EFF               	movlw	255
 12275  008F56  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12276  008F58  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12277  008F5A  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12278  008F5C  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12279  008F5E  500A               	movf	??_ProcessRXFrame,w,c
 12280  008F60  260C               	addwf	??_ProcessRXFrame+2,f,c
 12281  008F62  500B               	movf	??_ProcessRXFrame+1,w,c
 12282  008F64  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12283  008F66  0E78               	movlw	low (_boosterCommsData+120)
 12284  008F68  240C               	addwf	??_ProcessRXFrame+2,w,c
 12285  008F6A  6ED9               	movwf	fsr2l,c
 12286  008F6C  0E04               	movlw	high (_boosterCommsData+120)
 12287  008F6E  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12288  008F70  6EDA               	movwf	fsr2h,c
 12289  008F72  0E0A               	movlw	10
 12290  008F74  18DE               	xorwf	postinc2,w,c
 12291  008F76  A4D8               	btfss	status,2,c
 12292  008F78  0012               	return	
 12293                           
 12294                           ; BSR set to: 2
 12295                           ;boostercomms.c: 530: ResetSingleBoosterState(frameNumUC-1);
 12296  008F7A  0409               	decf	ProcessRXFrame@frameNumUC,w,c
 12297  008F7C  EC80  F052         	call	i2_ResetSingleBoosterState
 12298                           
 12299                           ;boostercomms.c: 531: statusFlagsUSLG |= 0b000001000000000000000000;
 12300  008F80  0102               	movlb	2	; () banked
 12301  008F82  858C               	bsf	(_statusFlagsUSLG+2)& (0+255),2,b	;volatile
 12302                           
 12303                           ; BSR set to: 2
 12304                           ;boostercomms.c: 532: ClearPastValue(frameNumUC);
 12305  008F84  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12306  008F86  EC51  F056         	call	i2_ClearPastValue
 12307                           
 12308                           ;boostercomms.c: 533: }
 12309                           ;boostercomms.c: 534: }
 12310                           ;boostercomms.c: 535: return;
 12311  008F8A  0012               	return	
 12312  008F8C                     i2l4867:
 12313                           
 12314                           ;boostercomms.c: 537: parityCheckUC ||
 12315                           ;boostercomms.c: 538: (statusFlagsUSLG & 0b000000000000000100000000)){
 12316  008F8C  C007  F00A         	movff	ProcessRXFrame@recvFrameUS,??_ProcessRXFrame
 12317  008F90  C008  F00B         	movff	ProcessRXFrame@recvFrameUS+1,??_ProcessRXFrame+1
 12318  008F94  0E09               	movlw	9
 12319  008F96  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12320  008F98                     i2u445_45:
 12321  008F98  90D8               	bcf	status,0,c
 12322  008F9A  320B               	rrcf	??_ProcessRXFrame+1,f,c
 12323  008F9C  320A               	rrcf	??_ProcessRXFrame,f,c
 12324  008F9E  2E0C               	decfsz	(??_ProcessRXFrame+2)& (0+255),f,c
 12325  008FA0  D7FB               	goto	i2u445_45
 12326  008FA2  0E1F               	movlw	31
 12327  008FA4  160A               	andwf	??_ProcessRXFrame,f,c
 12328  008FA6  0E00               	movlw	0
 12329  008FA8  160B               	andwf	??_ProcessRXFrame+1,f,c
 12330  008FAA  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12331  008FAC  6E0D               	movwf	(??_ProcessRXFrame+3)& (0+255),c
 12332  008FAE  6A0E               	clrf	(??_ProcessRXFrame+4)& (0+255),c
 12333  008FB0  500A               	movf	??_ProcessRXFrame,w,c
 12334  008FB2  180D               	xorwf	??_ProcessRXFrame+3,w,c
 12335  008FB4  E10A               	bnz	i2l4873
 12336  008FB6  500B               	movf	??_ProcessRXFrame+1,w,c
 12337  008FB8  180E               	xorwf	??_ProcessRXFrame+4,w,c
 12338  008FBA  A4D8               	btfss	status,2,c
 12339  008FBC  D006               	goto	i2l4873
 12340  008FBE  5011               	movf	ProcessRXFrame@parityCheckUC,w,c
 12341  008FC0  A4D8               	btfss	status,2,c
 12342  008FC2  D003               	goto	i2l4873
 12343  008FC4  0102               	movlb	2	; () banked
 12344  008FC6  A18B               	btfss	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 12345  008FC8  D03A               	goto	i2l4879
 12346  008FCA                     i2l4873:
 12347                           
 12348                           ;boostercomms.c: 539: if(boosterCommsData[5][frameNumUC-1] < 10)
 12349  008FCA  0EFF               	movlw	255
 12350  008FCC  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12351  008FCE  0EFF               	movlw	255
 12352  008FD0  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12353  008FD2  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12354  008FD4  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12355  008FD6  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12356  008FD8  500A               	movf	??_ProcessRXFrame,w,c
 12357  008FDA  260C               	addwf	??_ProcessRXFrame+2,f,c
 12358  008FDC  500B               	movf	??_ProcessRXFrame+1,w,c
 12359  008FDE  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12360  008FE0  0E96               	movlw	low (_boosterCommsData+150)
 12361  008FE2  240C               	addwf	??_ProcessRXFrame+2,w,c
 12362  008FE4  6ED9               	movwf	fsr2l,c
 12363  008FE6  0E04               	movlw	high (_boosterCommsData+150)
 12364  008FE8  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12365  008FEA  6EDA               	movwf	fsr2h,c
 12366  008FEC  0E0A               	movlw	10
 12367  008FEE  60DF               	cpfslt	indf2,c
 12368  008FF0  D012               	goto	i2l470
 12369                           
 12370                           ;boostercomms.c: 540: boosterCommsData[5][frameNumUC-1]++;
 12371  008FF2  0EFF               	movlw	255
 12372  008FF4  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12373  008FF6  0EFF               	movlw	255
 12374  008FF8  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12375  008FFA  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12376  008FFC  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12377  008FFE  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12378  009000  500A               	movf	??_ProcessRXFrame,w,c
 12379  009002  260C               	addwf	??_ProcessRXFrame+2,f,c
 12380  009004  500B               	movf	??_ProcessRXFrame+1,w,c
 12381  009006  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12382  009008  0E96               	movlw	low (_boosterCommsData+150)
 12383  00900A  240C               	addwf	??_ProcessRXFrame+2,w,c
 12384  00900C  6ED9               	movwf	fsr2l,c
 12385  00900E  0E04               	movlw	high (_boosterCommsData+150)
 12386  009010  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12387  009012  6EDA               	movwf	fsr2h,c
 12388  009014  2ADF               	incf	indf2,f,c
 12389  009016                     i2l470:
 12390                           
 12391                           ;boostercomms.c: 541: boosterCommsData[6][frameNumUC-1] |= 0b00000100;
 12392  009016  0EFF               	movlw	255
 12393  009018  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12394  00901A  0EFF               	movlw	255
 12395  00901C  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12396  00901E  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12397  009020  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12398  009022  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12399  009024  500A               	movf	??_ProcessRXFrame,w,c
 12400  009026  260C               	addwf	??_ProcessRXFrame+2,f,c
 12401  009028  500B               	movf	??_ProcessRXFrame+1,w,c
 12402  00902A  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12403  00902C  0EB4               	movlw	low (_boosterCommsData+180)
 12404  00902E  240C               	addwf	??_ProcessRXFrame+2,w,c
 12405  009030  6ED9               	movwf	fsr2l,c
 12406  009032  0E04               	movlw	high (_boosterCommsData+180)
 12407  009034  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12408  009036  6EDA               	movwf	fsr2h,c
 12409  009038  0E00               	movlw	0
 12410  00903A  84DB               	bsf	plusw2,2,c
 12411                           
 12412                           ;boostercomms.c: 542: return;
 12413  00903C  0012               	return	
 12414  00903E                     i2l4879:
 12415                           
 12416                           ;boostercomms.c: 543: }
 12417                           ;boostercomms.c: 545: boosterCommsData[5][frameNumUC-1] = 0;
 12418  00903E  0EFF               	movlw	255
 12419  009040  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12420  009042  0EFF               	movlw	255
 12421  009044  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12422  009046  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12423  009048  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12424  00904A  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12425  00904C  500A               	movf	??_ProcessRXFrame,w,c
 12426  00904E  260C               	addwf	??_ProcessRXFrame+2,f,c
 12427  009050  500B               	movf	??_ProcessRXFrame+1,w,c
 12428  009052  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12429  009054  0E96               	movlw	low (_boosterCommsData+150)
 12430  009056  240C               	addwf	??_ProcessRXFrame+2,w,c
 12431  009058  6ED9               	movwf	fsr2l,c
 12432  00905A  0E04               	movlw	high (_boosterCommsData+150)
 12433  00905C  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12434  00905E  6EDA               	movwf	fsr2h,c
 12435  009060  0E00               	movlw	0
 12436  009062  6EDF               	movwf	indf2,c
 12437                           
 12438                           ;boostercomms.c: 546: boosterCommsData[4][frameNumUC-1] = 0;
 12439  009064  0EFF               	movlw	255
 12440  009066  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12441  009068  0EFF               	movlw	255
 12442  00906A  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12443  00906C  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12444  00906E  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12445  009070  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12446  009072  500A               	movf	??_ProcessRXFrame,w,c
 12447  009074  260C               	addwf	??_ProcessRXFrame+2,f,c
 12448  009076  500B               	movf	??_ProcessRXFrame+1,w,c
 12449  009078  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12450  00907A  0E78               	movlw	low (_boosterCommsData+120)
 12451  00907C  240C               	addwf	??_ProcessRXFrame+2,w,c
 12452  00907E  6ED9               	movwf	fsr2l,c
 12453  009080  0E04               	movlw	high (_boosterCommsData+120)
 12454  009082  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12455  009084  6EDA               	movwf	fsr2h,c
 12456  009086  0E00               	movlw	0
 12457  009088  6EDF               	movwf	indf2,c
 12458                           
 12459                           ;boostercomms.c: 548: boosterCommsData[7][frameNumUC-1] = (recvFrameUS & 0b1100000000000
      +                          000) >> 14;
 12460  00908A  0EFF               	movlw	255
 12461  00908C  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12462  00908E  0EFF               	movlw	255
 12463  009090  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12464  009092  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12465  009094  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12466  009096  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12467  009098  500A               	movf	??_ProcessRXFrame,w,c
 12468  00909A  260C               	addwf	??_ProcessRXFrame+2,f,c
 12469  00909C  500B               	movf	??_ProcessRXFrame+1,w,c
 12470  00909E  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12471  0090A0  0ED2               	movlw	low (_boosterCommsData+210)
 12472  0090A2  240C               	addwf	??_ProcessRXFrame+2,w,c
 12473  0090A4  6ED9               	movwf	fsr2l,c
 12474  0090A6  0E04               	movlw	high (_boosterCommsData+210)
 12475  0090A8  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12476  0090AA  6EDA               	movwf	fsr2h,c
 12477  0090AC  C007  F00E         	movff	ProcessRXFrame@recvFrameUS,??_ProcessRXFrame+4
 12478  0090B0  C008  F00F         	movff	ProcessRXFrame@recvFrameUS+1,??_ProcessRXFrame+5
 12479  0090B4  0E0E               	movlw	14
 12480  0090B6  6E10               	movwf	(??_ProcessRXFrame+6)& (0+255),c
 12481  0090B8                     i2u450_45:
 12482  0090B8  90D8               	bcf	status,0,c
 12483  0090BA  320F               	rrcf	??_ProcessRXFrame+5,f,c
 12484  0090BC  320E               	rrcf	??_ProcessRXFrame+4,f,c
 12485  0090BE  2E10               	decfsz	(??_ProcessRXFrame+6)& (0+255),f,c
 12486  0090C0  D7FB               	goto	i2u450_45
 12487  0090C2  500E               	movf	??_ProcessRXFrame+4,w,c
 12488  0090C4  0B03               	andlw	3
 12489  0090C6  6EDF               	movwf	indf2,c
 12490                           
 12491                           ;boostercomms.c: 549: switch(commsDataModeUCG){
 12492  0090C8  D050               	goto	i2l4891
 12493  0090CA                     i2l4881:
 12494                           
 12495                           ;boostercomms.c: 551: boosterCommsData[0][frameNumUC-1] = (recvFrameUS & 0b0000000011111
      +                          111);
 12496  0090CA  0EFF               	movlw	255
 12497  0090CC  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12498  0090CE  0EFF               	movlw	255
 12499  0090D0  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12500  0090D2  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12501  0090D4  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12502  0090D6  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12503  0090D8  500A               	movf	??_ProcessRXFrame,w,c
 12504  0090DA  260C               	addwf	??_ProcessRXFrame+2,f,c
 12505  0090DC  500B               	movf	??_ProcessRXFrame+1,w,c
 12506  0090DE  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12507  0090E0  0E00               	movlw	low _boosterCommsData
 12508  0090E2  240C               	addwf	??_ProcessRXFrame+2,w,c
 12509  0090E4  6ED9               	movwf	fsr2l,c
 12510  0090E6  0E04               	movlw	high _boosterCommsData
 12511  0090E8  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12512  0090EA  6EDA               	movwf	fsr2h,c
 12513  0090EC  C007  FFDF         	movff	ProcessRXFrame@recvFrameUS,indf2
 12514                           
 12515                           ;boostercomms.c: 552: break;
 12516  0090F0  0012               	return	
 12517  0090F2                     i2l4883:
 12518                           
 12519                           ;boostercomms.c: 554: boosterCommsData[1][frameNumUC-1] = (recvFrameUS & 0b0000000011111
      +                          111);
 12520  0090F2  0EFF               	movlw	255
 12521  0090F4  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12522  0090F6  0EFF               	movlw	255
 12523  0090F8  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12524  0090FA  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12525  0090FC  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12526  0090FE  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12527  009100  500A               	movf	??_ProcessRXFrame,w,c
 12528  009102  260C               	addwf	??_ProcessRXFrame+2,f,c
 12529  009104  500B               	movf	??_ProcessRXFrame+1,w,c
 12530  009106  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12531  009108  0E1E               	movlw	low (_boosterCommsData+30)
 12532  00910A  240C               	addwf	??_ProcessRXFrame+2,w,c
 12533  00910C  6ED9               	movwf	fsr2l,c
 12534  00910E  0E04               	movlw	high (_boosterCommsData+30)
 12535  009110  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12536  009112  6EDA               	movwf	fsr2h,c
 12537  009114  C007  FFDF         	movff	ProcessRXFrame@recvFrameUS,indf2
 12538                           
 12539                           ;boostercomms.c: 555: break;
 12540  009118  0012               	return	
 12541  00911A                     i2l4885:
 12542                           
 12543                           ;boostercomms.c: 557: boosterCommsData[2][frameNumUC-1] = (recvFrameUS & 0b0000000011111
      +                          111);
 12544  00911A  0EFF               	movlw	255
 12545  00911C  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12546  00911E  0EFF               	movlw	255
 12547  009120  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12548  009122  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12549  009124  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12550  009126  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12551  009128  500A               	movf	??_ProcessRXFrame,w,c
 12552  00912A  260C               	addwf	??_ProcessRXFrame+2,f,c
 12553  00912C  500B               	movf	??_ProcessRXFrame+1,w,c
 12554  00912E  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12555  009130  0E3C               	movlw	low (_boosterCommsData+60)
 12556  009132  240C               	addwf	??_ProcessRXFrame+2,w,c
 12557  009134  6ED9               	movwf	fsr2l,c
 12558  009136  0E04               	movlw	high (_boosterCommsData+60)
 12559  009138  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12560  00913A  6EDA               	movwf	fsr2h,c
 12561  00913C  C007  FFDF         	movff	ProcessRXFrame@recvFrameUS,indf2
 12562                           
 12563                           ;boostercomms.c: 558: break;
 12564  009140  0012               	return	
 12565  009142                     i2l4887:
 12566                           
 12567                           ;boostercomms.c: 560: boosterCommsData[3][frameNumUC-1] = (recvFrameUS & 0b0000000011111
      +                          111);
 12568  009142  0EFF               	movlw	255
 12569  009144  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12570  009146  0EFF               	movlw	255
 12571  009148  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12572  00914A  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12573  00914C  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12574  00914E  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12575  009150  500A               	movf	??_ProcessRXFrame,w,c
 12576  009152  260C               	addwf	??_ProcessRXFrame+2,f,c
 12577  009154  500B               	movf	??_ProcessRXFrame+1,w,c
 12578  009156  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12579  009158  0E5A               	movlw	low (_boosterCommsData+90)
 12580  00915A  240C               	addwf	??_ProcessRXFrame+2,w,c
 12581  00915C  6ED9               	movwf	fsr2l,c
 12582  00915E  0E04               	movlw	high (_boosterCommsData+90)
 12583  009160  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12584  009162  6EDA               	movwf	fsr2h,c
 12585  009164  C007  FFDF         	movff	ProcessRXFrame@recvFrameUS,indf2
 12586                           
 12587                           ;boostercomms.c: 562: }
 12588                           
 12589                           ;boostercomms.c: 561: break;
 12590  009168  0012               	return	
 12591  00916A                     i2l4891:
 12592  00916A  0102               	movlb	2	; () banked
 12593  00916C  51A2               	movf	_commsDataModeUCG& (0+255),w,b
 12594                           
 12595                           ; Switch size 1, requested type "space"
 12596                           ; Number of cases is 4, Range of values is 0 to 3
 12597                           ; switch strategies available:
 12598                           ; Name         Instructions Cycles
 12599                           ; simple_byte           13     7 (average)
 12600                           ;	Chosen strategy is simple_byte
 12601  00916E  0A00               	xorlw	0	; case 0
 12602  009170  B4D8               	btfsc	status,2,c
 12603  009172  D7AB               	goto	i2l4881
 12604  009174  0A01               	xorlw	1	; case 1
 12605  009176  B4D8               	btfsc	status,2,c
 12606  009178  D7BC               	goto	i2l4883
 12607  00917A  0A03               	xorlw	3	; case 2
 12608  00917C  B4D8               	btfsc	status,2,c
 12609  00917E  D7CD               	goto	i2l4885
 12610  009180  0A01               	xorlw	1	; case 3
 12611  009182  A4D8               	btfss	status,2,c
 12612                           
 12613                           ; BSR set to: 2
 12614                           ;boostercomms.c: 563: }else{
 12615  009184  0012               	return	
 12616  009186  D7DD               	goto	i2l4887
 12617  009188                     i2l456:
 12618                           
 12619                           ; BSR set to: 2
 12620                           ;boostercomms.c: 564: statusFlagsUSLG &= ~(0b000000000000100000000000 | 0b00000000000100
      +                          0000000000 | 0b000000000010000000000000 | 0b000000000100000000000000);
 12621  009188  0EFF               	movlw	255
 12622  00918A  0102               	movlb	2	; () banked
 12623  00918C  178A               	andwf	_statusFlagsUSLG& (0+255),f,b	;volatile
 12624  00918E  0E87               	movlw	135
 12625  009190  0102               	movlb	2	; () banked
 12626  009192  178B               	andwf	(_statusFlagsUSLG+1)& (0+255),f,b	;volatile
 12627  009194  0EFF               	movlw	255
 12628  009196  0102               	movlb	2	; () banked
 12629  009198  178C               	andwf	(_statusFlagsUSLG+2)& (0+255),f,b	;volatile
 12630                           
 12631                           ;boostercomms.c: 565: if(statusFlagsUSLG & 0b000000000000001000000000)
 12632  00919A  0102               	movlb	2	; () banked
 12633  00919C  A38B               	btfss	(_statusFlagsUSLG+1)& (0+255),1,b	;volatile
 12634  00919E  D002               	goto	i2l4895
 12635                           
 12636                           ; BSR set to: 2
 12637                           ;boostercomms.c: 566: statusFlagsUSLG |= 0b000000000000100000000000;
 12638  0091A0  0102               	movlb	2	; () banked
 12639  0091A2  878B               	bsf	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 12640  0091A4                     i2l4895:
 12641                           
 12642                           ; BSR set to: 2
 12643                           ;boostercomms.c: 567: if(!CheckBoosterRXParity(recvFrameUS))
 12644  0091A4  C007  F001         	movff	ProcessRXFrame@recvFrameUS,CheckBoosterRXParity@recvFrameUS
 12645  0091A8  C008  F002         	movff	ProcessRXFrame@recvFrameUS+1,CheckBoosterRXParity@recvFrameUS+1
 12646  0091AC  EC7D  F059         	call	_CheckBoosterRXParity	;wreg free
 12647  0091B0  0900               	iorlw	0
 12648  0091B2  A4D8               	btfss	status,2,c
 12649  0091B4  D002               	goto	i2l4899
 12650                           
 12651                           ;boostercomms.c: 568: statusFlagsUSLG |= 0b000000000001000000000000;
 12652  0091B6  0102               	movlb	2	; () banked
 12653  0091B8  898B               	bsf	(_statusFlagsUSLG+1)& (0+255),4,b	;volatile
 12654  0091BA                     i2l4899:
 12655                           
 12656                           ;boostercomms.c: 569: if(statusFlagsUSLG & 0b000000000000000100000000)
 12657  0091BA  0102               	movlb	2	; () banked
 12658  0091BC  A18B               	btfss	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 12659  0091BE  D002               	goto	i2l4903
 12660                           
 12661                           ; BSR set to: 2
 12662                           ;boostercomms.c: 570: statusFlagsUSLG |= 0b000000000010000000000000;
 12663  0091C0  0102               	movlb	2	; () banked
 12664  0091C2  8B8B               	bsf	(_statusFlagsUSLG+1)& (0+255),5,b	;volatile
 12665  0091C4                     i2l4903:
 12666                           
 12667                           ; BSR set to: 2
 12668                           ;boostercomms.c: 571: if(statusFlagsUSLG & 0b000000000000010000000000)
 12669  0091C4  0102               	movlb	2	; () banked
 12670  0091C6  A58B               	btfss	(_statusFlagsUSLG+1)& (0+255),2,b	;volatile
 12671  0091C8  D002               	goto	i2l4907
 12672                           
 12673                           ; BSR set to: 2
 12674                           ;boostercomms.c: 572: statusFlagsUSLG |= 0b000000000100000000000000;
 12675  0091CA  0102               	movlb	2	; () banked
 12676  0091CC  8D8B               	bsf	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 12677  0091CE                     i2l4907:
 12678                           
 12679                           ; BSR set to: 2
 12680                           ;boostercomms.c: 573: commandResponseUS = recvFrameUS;
 12681  0091CE  C007  F3E6         	movff	ProcessRXFrame@recvFrameUS,_commandResponseUS
 12682  0091D2  C008  F3E7         	movff	ProcessRXFrame@recvFrameUS+1,_commandResponseUS+1
 12683  0091D6  0012               	return	
 12684  0091D8                     __end_of_ProcessRXFrame:
 12685                           	opt stack 0
 12686                           pclatu	equ	0xFFB
 12687                           pclath	equ	0xFFA
 12688                           tblptru	equ	0xFF8
 12689                           tblptrh	equ	0xFF7
 12690                           tblptrl	equ	0xFF6
 12691                           tablat	equ	0xFF5
 12692                           prodh	equ	0xFF4
 12693                           prodl	equ	0xFF3
 12694                           intcon	equ	0xFF2
 12695                           postinc0	equ	0xFEE
 12696                           fsr0h	equ	0xFEA
 12697                           fsr0l	equ	0xFE9
 12698                           wreg	equ	0xFE8
 12699                           indf1	equ	0xFE7
 12700                           postinc1	equ	0xFE6
 12701                           postdec1	equ	0xFE5
 12702                           fsr1h	equ	0xFE2
 12703                           fsr1l	equ	0xFE1
 12704                           indf2	equ	0xFDF
 12705                           postinc2	equ	0xFDE
 12706                           postdec2	equ	0xFDD
 12707                           plusw2	equ	0xFDB
 12708                           fsr2h	equ	0xFDA
 12709                           fsr2l	equ	0xFD9
 12710                           status	equ	0xFD8
 12711                           
 12712 ;; *************** function _InitEarthLeakage *****************
 12713 ;; Defined at:
 12714 ;;		line 66 in file "peripherals.c"
 12715 ;; Parameters:    Size  Location     Type
 12716 ;;		None
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;		None
 12719 ;; Return value:  Size  Location     Type
 12720 ;;                  1    wreg      void 
 12721 ;; Registers used:
 12722 ;;		wreg, status,2
 12723 ;; Tracked objects:
 12724 ;;		On entry : 0/0
 12725 ;;		On exit  : 0/0
 12726 ;;		Unchanged: 0/0
 12727 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 12728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12732 ;;Total ram usage:        0 bytes
 12733 ;; Hardware stack levels used:    1
 12734 ;; This function calls:
 12735 ;;		Nothing
 12736 ;; This function is called by:
 12737 ;;		_BoosterDataCommandComms
 12738 ;; This function uses a non-reentrant model
 12739 ;;
 12740                           
 12741                           	psect	text64
 12742  00B552                     __ptext64:
 12743                           	opt stack 0
 12744  00B552                     _InitEarthLeakage:
 12745                           	opt stack 22
 12746                           
 12747                           ;peripherals.c: 67: counterELTFailures =0;
 12748                           
 12749                           ;incstack = 0
 12750  00B552  0E00               	movlw	0
 12751  00B554  0103               	movlb	3	; () banked
 12752  00B556  6F46               	movwf	(_counterELTFailures+1)& (0+255),b
 12753  00B558  0E00               	movlw	0
 12754  00B55A  6F45               	movwf	_counterELTFailures& (0+255),b
 12755                           
 12756                           ;peripherals.c: 68: counterELTTests=0;
 12757  00B55C  0E00               	movlw	0
 12758  00B55E  0103               	movlb	3	; () banked
 12759  00B560  6F48               	movwf	(_counterELTTests+1)& (0+255),b
 12760  00B562  0E00               	movlw	0
 12761  00B564  6F47               	movwf	_counterELTTests& (0+255),b
 12762                           
 12763                           ; BSR set to: 3
 12764                           ;peripherals.c: 69: LATDbits.LATD1 = 0;
 12765  00B566  928C               	bcf	3980,1,c	;volatile
 12766                           
 12767                           ; BSR set to: 3
 12768                           ;peripherals.c: 70: LATCbits.LATC4 = 1;
 12769  00B568  888B               	bsf	3979,4,c	;volatile
 12770                           
 12771                           ; BSR set to: 3
 12772  00B56A  0012               	return		;funcret
 12773  00B56C                     __end_of_InitEarthLeakage:
 12774                           	opt stack 0
 12775                           pclatu	equ	0xFFB
 12776                           pclath	equ	0xFFA
 12777                           tblptru	equ	0xFF8
 12778                           tblptrh	equ	0xFF7
 12779                           tblptrl	equ	0xFF6
 12780                           tablat	equ	0xFF5
 12781                           prodh	equ	0xFF4
 12782                           prodl	equ	0xFF3
 12783                           intcon	equ	0xFF2
 12784                           postinc0	equ	0xFEE
 12785                           fsr0h	equ	0xFEA
 12786                           fsr0l	equ	0xFE9
 12787                           wreg	equ	0xFE8
 12788                           indf1	equ	0xFE7
 12789                           postinc1	equ	0xFE6
 12790                           postdec1	equ	0xFE5
 12791                           fsr1h	equ	0xFE2
 12792                           fsr1l	equ	0xFE1
 12793                           indf2	equ	0xFDF
 12794                           postinc2	equ	0xFDE
 12795                           postdec2	equ	0xFDD
 12796                           plusw2	equ	0xFDB
 12797                           fsr2h	equ	0xFDA
 12798                           fsr2l	equ	0xFD9
 12799                           status	equ	0xFD8
 12800                           
 12801 ;; *************** function _CheckLineFault *****************
 12802 ;; Defined at:
 12803 ;;		line 418 in file "boostercomms.c"
 12804 ;; Parameters:    Size  Location     Type
 12805 ;;		None
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;  i               2   12[COMRAM] int 
 12808 ;;  i               2   14[COMRAM] int 
 12809 ;;  lineVoltUS      2   10[COMRAM] unsigned short 
 12810 ;;  activeWindow    2    8[COMRAM] int 
 12811 ;; Return value:  Size  Location     Type
 12812 ;;                  1    wreg      void 
 12813 ;; Registers used:
 12814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12815 ;; Tracked objects:
 12816 ;;		On entry : 0/0
 12817 ;;		On exit  : 0/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 12820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12821 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12823 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12824 ;;Total ram usage:       10 bytes
 12825 ;; Hardware stack levels used:    1
 12826 ;; Hardware stack levels required when called:    1
 12827 ;; This function calls:
 12828 ;;		_ReadAnalogVoltage
 12829 ;;		___wmul
 12830 ;; This function is called by:
 12831 ;;		_BoosterDataCommandComms
 12832 ;; This function uses a non-reentrant model
 12833 ;;
 12834                           
 12835                           	psect	text65
 12836  009C48                     __ptext65:
 12837                           	opt stack 0
 12838  009C48                     _CheckLineFault:
 12839                           	opt stack 21
 12840                           
 12841                           ;boostercomms.c: 419: unsigned short lineVoltUS;
 12842                           ;boostercomms.c: 421: lineVoltUS = ReadAnalogVoltage(2);
 12843                           
 12844                           ; BSR set to: 3
 12845                           ;incstack = 0
 12846  009C48  0E02               	movlw	2
 12847  009C4A  EC3F  F058         	call	_ReadAnalogVoltage
 12848  009C4E  C001  F00B         	movff	?_ReadAnalogVoltage,CheckLineFault@lineVoltUS
 12849  009C52  C002  F00C         	movff	?_ReadAnalogVoltage+1,CheckLineFault@lineVoltUS+1
 12850                           
 12851                           ;boostercomms.c: 423: commsOffsetADCValueUS = 0;
 12852  009C56  0E00               	movlw	0
 12853  009C58  0102               	movlb	2	; () banked
 12854  009C5A  6F90               	movwf	(_commsOffsetADCValueUS+1)& (0+255),b
 12855  009C5C  0E00               	movlw	0
 12856  009C5E  6F8F               	movwf	_commsOffsetADCValueUS& (0+255),b
 12857                           
 12858                           ; BSR set to: 2
 12859                           ;boostercomms.c: 424: for(int i = 100; i<=500; i=i+100){
 12860  009C60  0E00               	movlw	0
 12861  009C62  6E10               	movwf	CheckLineFault@i+1,c
 12862  009C64  0E64               	movlw	100
 12863  009C66  6E0F               	movwf	CheckLineFault@i,c
 12864  009C68                     i2l4939:
 12865                           
 12866                           ; BSR set to: 2
 12867  009C68  BE10               	btfsc	CheckLineFault@i+1,7,c
 12868  009C6A  D006               	goto	i2l4943
 12869  009C6C  0EF5               	movlw	245
 12870  009C6E  5C0F               	subwf	CheckLineFault@i,w,c
 12871  009C70  0E01               	movlw	1
 12872  009C72  5810               	subwfb	CheckLineFault@i+1,w,c
 12873  009C74  B0D8               	btfsc	status,0,c
 12874  009C76  D01C               	goto	i2l4953
 12875  009C78                     i2l4943:
 12876                           
 12877                           ;boostercomms.c: 425: if(lineVoltUS>=i){
 12878  009C78  500F               	movf	CheckLineFault@i,w,c
 12879  009C7A  5C0B               	subwf	CheckLineFault@lineVoltUS,w,c
 12880  009C7C  5010               	movf	CheckLineFault@i+1,w,c
 12881  009C7E  580C               	subwfb	CheckLineFault@lineVoltUS+1,w,c
 12882  009C80  A0D8               	btfss	status,0,c
 12883  009C82  D00B               	goto	i2l4947
 12884                           
 12885                           ;boostercomms.c: 426: commsOffsetADCValueUS=commsOffsetADCValueUS+60;
 12886  009C84  0E3C               	movlw	60
 12887  009C86  0102               	movlb	2	; () banked
 12888  009C88  258F               	addwf	_commsOffsetADCValueUS& (0+255),w,b
 12889  009C8A  0102               	movlb	2	; () banked
 12890  009C8C  6F8F               	movwf	_commsOffsetADCValueUS& (0+255),b
 12891  009C8E  0E00               	movlw	0
 12892  009C90  0102               	movlb	2	; () banked
 12893  009C92  2190               	addwfc	(_commsOffsetADCValueUS+1)& (0+255),w,b
 12894  009C94  0102               	movlb	2	; () banked
 12895  009C96  6F90               	movwf	(_commsOffsetADCValueUS+1)& (0+255),b
 12896                           
 12897                           ;boostercomms.c: 427: }
 12898  009C98  D004               	goto	i2l4949
 12899  009C9A                     i2l4947:
 12900                           
 12901                           ;boostercomms.c: 428: else{
 12902                           ;boostercomms.c: 429: i=600;
 12903  009C9A  0E02               	movlw	2
 12904  009C9C  6E10               	movwf	CheckLineFault@i+1,c
 12905  009C9E  0E58               	movlw	88
 12906  009CA0  6E0F               	movwf	CheckLineFault@i,c
 12907  009CA2                     i2l4949:
 12908  009CA2  0E64               	movlw	100
 12909  009CA4  240F               	addwf	CheckLineFault@i,w,c
 12910  009CA6  6E0F               	movwf	CheckLineFault@i,c
 12911  009CA8  0E00               	movlw	0
 12912  009CAA  2010               	addwfc	CheckLineFault@i+1,w,c
 12913  009CAC  6E10               	movwf	CheckLineFault@i+1,c
 12914  009CAE  D7DC               	goto	i2l4939
 12915  009CB0                     i2l4953:
 12916                           
 12917                           ;boostercomms.c: 430: }
 12918                           ;boostercomms.c: 431: }
 12919                           ;boostercomms.c: 432: int activeWindowCounter=0;
 12920  009CB0  0E00               	movlw	0
 12921  009CB2  6E0A               	movwf	CheckLineFault@activeWindowCounter+1,c
 12922  009CB4  0E00               	movlw	0
 12923  009CB6  6E09               	movwf	CheckLineFault@activeWindowCounter,c
 12924                           
 12925                           ;boostercomms.c: 434: for(int i = 0; i < 30; i++){
 12926  009CB8  0E00               	movlw	0
 12927  009CBA  6E0E               	movwf	CheckLineFault@i_1334+1,c
 12928  009CBC  0E00               	movlw	0
 12929  009CBE  6E0D               	movwf	CheckLineFault@i_1334,c
 12930  009CC0                     i2l4955:
 12931  009CC0  BE0E               	btfsc	CheckLineFault@i_1334+1,7,c
 12932  009CC2  D006               	goto	i2l4959
 12933  009CC4  500E               	movf	CheckLineFault@i_1334+1,w,c
 12934  009CC6  E113               	bnz	i2l4965
 12935  009CC8  0E1E               	movlw	30
 12936  009CCA  5C0D               	subwf	CheckLineFault@i_1334,w,c
 12937  009CCC  B0D8               	btfsc	status,0,c
 12938  009CCE  D00F               	goto	i2l4965
 12939  009CD0                     i2l4959:
 12940                           
 12941                           ;boostercomms.c: 435: if(!(boosterCommsData[4][i] == 10))
 12942  009CD0  0E78               	movlw	low (_boosterCommsData+120)
 12943  009CD2  240D               	addwf	CheckLineFault@i_1334,w,c
 12944  009CD4  6ED9               	movwf	fsr2l,c
 12945  009CD6  0E04               	movlw	high (_boosterCommsData+120)
 12946  009CD8  200E               	addwfc	CheckLineFault@i_1334+1,w,c
 12947  009CDA  6EDA               	movwf	fsr2h,c
 12948  009CDC  0E0A               	movlw	10
 12949  009CDE  18DE               	xorwf	postinc2,w,c
 12950  009CE0  B4D8               	btfsc	status,2,c
 12951  009CE2  D002               	goto	i2l416
 12952                           
 12953                           ;boostercomms.c: 436: activeWindowCounter++;
 12954  009CE4  4A09               	infsnz	CheckLineFault@activeWindowCounter,f,c
 12955  009CE6  2A0A               	incf	CheckLineFault@activeWindowCounter+1,f,c
 12956  009CE8                     i2l416:
 12957  009CE8  4A0D               	infsnz	CheckLineFault@i_1334,f,c
 12958  009CEA  2A0E               	incf	CheckLineFault@i_1334+1,f,c
 12959  009CEC  D7E9               	goto	i2l4955
 12960  009CEE                     i2l4965:
 12961                           
 12962                           ;boostercomms.c: 437: }
 12963                           ;boostercomms.c: 439: if(lineVoltUS > (74+(activeWindowCounter*11))){
 12964  009CEE  C009  F001         	movff	CheckLineFault@activeWindowCounter,___wmul@multiplier
 12965  009CF2  C00A  F002         	movff	CheckLineFault@activeWindowCounter+1,___wmul@multiplier+1
 12966  009CF6  0E00               	movlw	0
 12967  009CF8  6E04               	movwf	___wmul@multiplicand+1,c
 12968  009CFA  0E0B               	movlw	11
 12969  009CFC  6E03               	movwf	___wmul@multiplicand,c
 12970  009CFE  EC1C  F05A         	call	___wmul	;wreg free
 12971  009D02  0E4A               	movlw	74
 12972  009D04  2601               	addwf	?___wmul,f,c
 12973  009D06  0E00               	movlw	0
 12974  009D08  2202               	addwfc	?___wmul+1,f,c
 12975  009D0A  500B               	movf	CheckLineFault@lineVoltUS,w,c
 12976  009D0C  5C01               	subwf	?___wmul,w,c
 12977  009D0E  500C               	movf	CheckLineFault@lineVoltUS+1,w,c
 12978  009D10  5802               	subwfb	?___wmul+1,w,c
 12979  009D12  B0D8               	btfsc	status,0,c
 12980  009D14  D02B               	goto	i2l4981
 12981                           
 12982                           ;boostercomms.c: 440: if(cableFaultCounter<3)
 12983  009D16  0E03               	movlw	3
 12984  009D18  0102               	movlb	2	; () banked
 12985  009D1A  61A0               	cpfslt	_cableFaultCounter& (0+255),b
 12986  009D1C  D002               	goto	i2l4971
 12987                           
 12988                           ; BSR set to: 2
 12989                           ;boostercomms.c: 441: cableFaultCounter++;
 12990  009D1E  0102               	movlb	2	; () banked
 12991  009D20  2BA0               	incf	_cableFaultCounter& (0+255),f,b
 12992  009D22                     i2l4971:
 12993                           
 12994                           ; BSR set to: 2
 12995                           ;boostercomms.c: 442: if(cableFaultCounter==3){
 12996  009D22  0E03               	movlw	3
 12997  009D24  0102               	movlb	2	; () banked
 12998  009D26  19A0               	xorwf	_cableFaultCounter& (0+255),w,b
 12999  009D28  A4D8               	btfss	status,2,c
 13000  009D2A  0012               	return	
 13001                           
 13002                           ; BSR set to: 2
 13003                           ;boostercomms.c: 443: statusFlagsUSLG |= 0b000000000000000001000000;
 13004  009D2C  0102               	movlb	2	; () banked
 13005  009D2E  8D8A               	bsf	_statusFlagsUSLG& (0+255),6,b	;volatile
 13006                           
 13007                           ; BSR set to: 2
 13008                           ;boostercomms.c: 444: if(lineVoltUS > (369+(activeWindowCounter*11)))
 13009  009D30  0E71               	movlw	113
 13010  009D32  6E07               	movwf	??_CheckLineFault& (0+255),c
 13011  009D34  0E01               	movlw	1
 13012  009D36  6E08               	movwf	(??_CheckLineFault+1)& (0+255),c
 13013  009D38  C009  F001         	movff	CheckLineFault@activeWindowCounter,___wmul@multiplier
 13014  009D3C  C00A  F002         	movff	CheckLineFault@activeWindowCounter+1,___wmul@multiplier+1
 13015  009D40  0E00               	movlw	0
 13016  009D42  6E04               	movwf	___wmul@multiplicand+1,c
 13017  009D44  0E0B               	movlw	11
 13018  009D46  6E03               	movwf	___wmul@multiplicand,c
 13019  009D48  EC1C  F05A         	call	___wmul	;wreg free
 13020  009D4C  5007               	movf	??_CheckLineFault,w,c
 13021  009D4E  2601               	addwf	?___wmul,f,c
 13022  009D50  5008               	movf	??_CheckLineFault+1,w,c
 13023  009D52  2202               	addwfc	?___wmul+1,f,c
 13024  009D54  500B               	movf	CheckLineFault@lineVoltUS,w,c
 13025  009D56  5C01               	subwf	?___wmul,w,c
 13026  009D58  500C               	movf	CheckLineFault@lineVoltUS+1,w,c
 13027  009D5A  5802               	subwfb	?___wmul+1,w,c
 13028  009D5C  B0D8               	btfsc	status,0,c
 13029  009D5E  D003               	goto	i2l4979
 13030                           
 13031                           ;boostercomms.c: 445: statusFlagsUSLG |= 0b010000000000000000000000;
 13032  009D60  0102               	movlb	2	; () banked
 13033  009D62  8D8C               	bsf	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
 13034  009D64  0012               	return	
 13035  009D66                     i2l4979:
 13036                           
 13037                           ;boostercomms.c: 446: else
 13038                           ;boostercomms.c: 447: statusFlagsUSLG &= ~0b010000000000000000000000;
 13039  009D66  0102               	movlb	2	; () banked
 13040  009D68  9D8C               	bcf	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
 13041                           
 13042                           ; BSR set to: 2
 13043                           ;boostercomms.c: 449: }
 13044                           ;boostercomms.c: 450: }
 13045                           
 13046                           ; BSR set to: 2
 13047  009D6A  0012               	return	
 13048  009D6C                     i2l4981:
 13049                           
 13050                           ;boostercomms.c: 451: else{
 13051                           ;boostercomms.c: 452: cableFaultCounter=0;
 13052  009D6C  0E00               	movlw	0
 13053  009D6E  0102               	movlb	2	; () banked
 13054  009D70  6FA0               	movwf	_cableFaultCounter& (0+255),b
 13055                           
 13056                           ; BSR set to: 2
 13057                           ;boostercomms.c: 453: statusFlagsUSLG &= ~0b000000000000000001000000;
 13058  009D72  0102               	movlb	2	; () banked
 13059  009D74  9D8A               	bcf	_statusFlagsUSLG& (0+255),6,b	;volatile
 13060                           
 13061                           ; BSR set to: 2
 13062                           ;boostercomms.c: 454: statusFlagsUSLG &= ~0b010000000000000000000000;
 13063  009D76  0102               	movlb	2	; () banked
 13064  009D78  9D8C               	bcf	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
 13065  009D7A  0012               	return	
 13066  009D7C                     __end_of_CheckLineFault:
 13067                           	opt stack 0
 13068                           pclatu	equ	0xFFB
 13069                           pclath	equ	0xFFA
 13070                           tblptru	equ	0xFF8
 13071                           tblptrh	equ	0xFF7
 13072                           tblptrl	equ	0xFF6
 13073                           tablat	equ	0xFF5
 13074                           prodh	equ	0xFF4
 13075                           prodl	equ	0xFF3
 13076                           intcon	equ	0xFF2
 13077                           postinc0	equ	0xFEE
 13078                           fsr0h	equ	0xFEA
 13079                           fsr0l	equ	0xFE9
 13080                           wreg	equ	0xFE8
 13081                           indf1	equ	0xFE7
 13082                           postinc1	equ	0xFE6
 13083                           postdec1	equ	0xFE5
 13084                           fsr1h	equ	0xFE2
 13085                           fsr1l	equ	0xFE1
 13086                           indf2	equ	0xFDF
 13087                           postinc2	equ	0xFDE
 13088                           postdec2	equ	0xFDD
 13089                           plusw2	equ	0xFDB
 13090                           fsr2h	equ	0xFDA
 13091                           fsr2l	equ	0xFD9
 13092                           status	equ	0xFD8
 13093                           
 13094 ;; *************** function ___wmul *****************
 13095 ;; Defined at:
 13096 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;  multiplier      2    0[COMRAM] unsigned int 
 13099 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;  product         2    4[COMRAM] unsigned int 
 13102 ;; Return value:  Size  Location     Type
 13103 ;;                  2    0[COMRAM] unsigned int 
 13104 ;; Registers used:
 13105 ;;		wreg, status,2, status,0, prodl, prodh
 13106 ;; Tracked objects:
 13107 ;;		On entry : 0/0
 13108 ;;		On exit  : 0/0
 13109 ;;		Unchanged: 0/0
 13110 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 13111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13114 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13115 ;;Total ram usage:        6 bytes
 13116 ;; Hardware stack levels used:    1
 13117 ;; This function calls:
 13118 ;;		Nothing
 13119 ;; This function is called by:
 13120 ;;		_CheckLineFault
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           	psect	text66
 13125  00B438                     __ptext66:
 13126                           	opt stack 0
 13127  00B438                     ___wmul:
 13128                           	opt stack 21
 13129                           
 13130                           ; BSR set to: 2
 13131                           ;incstack = 0
 13132  00B438  5001               	movf	___wmul@multiplier,w,c
 13133  00B43A  0203               	mulwf	___wmul@multiplicand,c
 13134  00B43C  CFF3 F005          	movff	prodl,___wmul@product
 13135  00B440  CFF4 F006          	movff	prodh,___wmul@product+1
 13136  00B444  5001               	movf	___wmul@multiplier,w,c
 13137  00B446  0204               	mulwf	___wmul@multiplicand+1,c
 13138  00B448  50F3               	movf	prodl,w,c
 13139  00B44A  2606               	addwf	___wmul@product+1,f,c
 13140  00B44C  5002               	movf	___wmul@multiplier+1,w,c
 13141  00B44E  0203               	mulwf	___wmul@multiplicand,c
 13142  00B450  50F3               	movf	prodl,w,c
 13143  00B452  2606               	addwf	___wmul@product+1,f,c
 13144  00B454  C005  F001         	movff	___wmul@product,?___wmul
 13145  00B458  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13146  00B45C  0012               	return	
 13147  00B45E                     __end_of___wmul:
 13148                           	opt stack 0
 13149                           pclatu	equ	0xFFB
 13150                           pclath	equ	0xFFA
 13151                           tblptru	equ	0xFF8
 13152                           tblptrh	equ	0xFF7
 13153                           tblptrl	equ	0xFF6
 13154                           tablat	equ	0xFF5
 13155                           prodh	equ	0xFF4
 13156                           prodl	equ	0xFF3
 13157                           intcon	equ	0xFF2
 13158                           postinc0	equ	0xFEE
 13159                           fsr0h	equ	0xFEA
 13160                           fsr0l	equ	0xFE9
 13161                           wreg	equ	0xFE8
 13162                           indf1	equ	0xFE7
 13163                           postinc1	equ	0xFE6
 13164                           postdec1	equ	0xFE5
 13165                           fsr1h	equ	0xFE2
 13166                           fsr1l	equ	0xFE1
 13167                           indf2	equ	0xFDF
 13168                           postinc2	equ	0xFDE
 13169                           postdec2	equ	0xFDD
 13170                           plusw2	equ	0xFDB
 13171                           fsr2h	equ	0xFDA
 13172                           fsr2l	equ	0xFD9
 13173                           status	equ	0xFD8
 13174                           
 13175 ;; *************** function _ReadAnalogVoltage *****************
 13176 ;; Defined at:
 13177 ;;		line 46 in file "peripherals.c"
 13178 ;; Parameters:    Size  Location     Type
 13179 ;;  channelC        1    wreg     unsigned char 
 13180 ;; Auto vars:     Size  Location     Type
 13181 ;;  channelC        1    2[COMRAM] unsigned char 
 13182 ;; Return value:  Size  Location     Type
 13183 ;;                  2    0[COMRAM] unsigned short 
 13184 ;; Registers used:
 13185 ;;		wreg, status,2, status,0
 13186 ;; Tracked objects:
 13187 ;;		On entry : 0/0
 13188 ;;		On exit  : 0/0
 13189 ;;		Unchanged: 0/0
 13190 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 13191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13195 ;;Total ram usage:        3 bytes
 13196 ;; Hardware stack levels used:    1
 13197 ;; This function calls:
 13198 ;;		Nothing
 13199 ;; This function is called by:
 13200 ;;		_BoosterDataCommandComms
 13201 ;;		_CheckLineFault
 13202 ;;		_ReadEarthLeakage
 13203 ;;		_ReadKeySwitch
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           	psect	text67
 13208  00B07E                     __ptext67:
 13209                           	opt stack 0
 13210  00B07E                     _ReadAnalogVoltage:
 13211                           	opt stack 21
 13212                           
 13213                           ;incstack = 0
 13214                           ;ReadAnalogVoltage@channelC stored from wreg
 13215  00B07E  6E03               	movwf	ReadAnalogVoltage@channelC,c
 13216                           
 13217                           ;peripherals.c: 48: switch(channelC){
 13218  00B080  D00D               	goto	i2l4563
 13219  00B082                     i2l4555:
 13220                           
 13221                           ;peripherals.c: 50: ADCON0bits.CHS = 0b0110;
 13222  00B082  50C2               	movf	4034,w,c	;volatile
 13223  00B084  0BC3               	andlw	-61
 13224  00B086  0918               	iorlw	24
 13225  00B088  D007               	goto	L7
 13226  00B08A                     i2l4557:
 13227                           
 13228                           ;peripherals.c: 53: ADCON0bits.CHS = 0b1010;
 13229  00B08A  50C2               	movf	4034,w,c	;volatile
 13230  00B08C  0BC3               	andlw	-61
 13231  00B08E  0928               	iorlw	40
 13232  00B090  D003               	goto	L7
 13233  00B092                     i2l4559:
 13234                           
 13235                           ;peripherals.c: 56: ADCON0bits.CHS = 0b0001;
 13236  00B092  50C2               	movf	4034,w,c	;volatile
 13237  00B094  0BC3               	andlw	-61
 13238  00B096  0904               	iorlw	4
 13239  00B098                     L7:
 13240  00B098  6EC2               	movwf	4034,c	;volatile
 13241                           
 13242                           ;peripherals.c: 58: }
 13243                           
 13244                           ;peripherals.c: 57: break;
 13245  00B09A  D00A               	goto	i2l1026
 13246  00B09C                     i2l4563:
 13247  00B09C  5003               	movf	ReadAnalogVoltage@channelC,w,c
 13248                           
 13249                           ; Switch size 1, requested type "space"
 13250                           ; Number of cases is 3, Range of values is 0 to 2
 13251                           ; switch strategies available:
 13252                           ; Name         Instructions Cycles
 13253                           ; simple_byte           10     6 (average)
 13254                           ;	Chosen strategy is simple_byte
 13255  00B09E  0A00               	xorlw	0	; case 0
 13256  00B0A0  B4D8               	btfsc	status,2,c
 13257  00B0A2  D7EF               	goto	i2l4555
 13258  00B0A4  0A01               	xorlw	1	; case 1
 13259  00B0A6  B4D8               	btfsc	status,2,c
 13260  00B0A8  D7F0               	goto	i2l4557
 13261  00B0AA  0A03               	xorlw	3	; case 2
 13262  00B0AC  B4D8               	btfsc	status,2,c
 13263  00B0AE  D7F1               	goto	i2l4559
 13264  00B0B0                     i2l1026:
 13265                           
 13266                           ;peripherals.c: 60: ADCON0bits.GO_nDONE = 1;
 13267  00B0B0  82C2               	bsf	4034,1,c	;volatile
 13268  00B0B2                     i2l1029:
 13269  00B0B2  B2C2               	btfsc	4034,1,c	;volatile
 13270  00B0B4  D7FE               	goto	i2l1029
 13271                           
 13272                           ;peripherals.c: 63: return ADRES;
 13273  00B0B6  CFC3 F001          	movff	4035,?_ReadAnalogVoltage	;volatile
 13274  00B0BA  CFC4 F002          	movff	4036,?_ReadAnalogVoltage+1	;volatile
 13275  00B0BE  0012               	return		;funcret
 13276  00B0C0                     __end_of_ReadAnalogVoltage:
 13277                           	opt stack 0
 13278                           pclatu	equ	0xFFB
 13279                           pclath	equ	0xFFA
 13280                           tblptru	equ	0xFF8
 13281                           tblptrh	equ	0xFF7
 13282                           tblptrl	equ	0xFF6
 13283                           tablat	equ	0xFF5
 13284                           prodh	equ	0xFF4
 13285                           prodl	equ	0xFF3
 13286                           intcon	equ	0xFF2
 13287                           postinc0	equ	0xFEE
 13288                           fsr0h	equ	0xFEA
 13289                           fsr0l	equ	0xFE9
 13290                           wreg	equ	0xFE8
 13291                           indf1	equ	0xFE7
 13292                           postinc1	equ	0xFE6
 13293                           postdec1	equ	0xFE5
 13294                           fsr1h	equ	0xFE2
 13295                           fsr1l	equ	0xFE1
 13296                           indf2	equ	0xFDF
 13297                           postinc2	equ	0xFDE
 13298                           postdec2	equ	0xFDD
 13299                           plusw2	equ	0xFDB
 13300                           fsr2h	equ	0xFDA
 13301                           fsr2l	equ	0xFD9
 13302                           status	equ	0xFD8
 13303                           
 13304 ;; *************** function _BoosterCommsDispatcher *****************
 13305 ;; Defined at:
 13306 ;;		line 805 in file "boostercomms.c"
 13307 ;; Parameters:    Size  Location     Type
 13308 ;;		None
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;		None
 13311 ;; Return value:  Size  Location     Type
 13312 ;;                  1    wreg      void 
 13313 ;; Registers used:
 13314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13315 ;; Tracked objects:
 13316 ;;		On entry : 0/0
 13317 ;;		On exit  : 0/0
 13318 ;;		Unchanged: 0/0
 13319 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 13320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13323 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;Total ram usage:        1 bytes
 13325 ;; Hardware stack levels used:    1
 13326 ;; Hardware stack levels required when called:    5
 13327 ;; This function calls:
 13328 ;;		_BoosterCommsActive
 13329 ;;		_BoosterQueryStart
 13330 ;;		_CheckDataCollision
 13331 ;;		_LowestMissingSerial
 13332 ;;		_NewBoosterAdded
 13333 ;;		_QueryWinSerial
 13334 ;;		_SetWindowID
 13335 ;;		i2_ClearPastValues
 13336 ;; This function is called by:
 13337 ;;		_isr
 13338 ;; This function uses a non-reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text68
 13342  00A27A                     __ptext68:
 13343                           	opt stack 0
 13344  00A27A                     _BoosterCommsDispatcher:
 13345                           	opt stack 18
 13346                           
 13347                           ;boostercomms.c: 808: if(BoosterCommsActive() || !(statusFlagsUSLG & 0b00000000100000000
      +                          0000000))
 13348                           
 13349                           ;incstack = 0
 13350  00A27A  ECF4  F05A         	call	_BoosterCommsActive	;wreg free
 13351  00A27E  0900               	iorlw	0
 13352  00A280  A4D8               	btfss	status,2,c
 13353  00A282  0012               	return	
 13354  00A284  0102               	movlb	2	; () banked
 13355  00A286  AF8B               	btfss	(_statusFlagsUSLG+1)& (0+255),7,b	;volatile
 13356  00A288  0012               	return	
 13357                           
 13358                           ; BSR set to: 2
 13359                           ;boostercomms.c: 811: __nop();
 13360                           
 13361                           ; BSR set to: 2
 13362                           ;boostercomms.c: 809: return;
 13363  00A28A  F000               	nop	
 13364                           
 13365                           ;boostercomms.c: 813: if((dispStatusUCS == 4) || CheckDataCollision() || NewBoosterAdded
      +                          ()){
 13366  00A28C  0E04               	movlw	4
 13367  00A28E  0102               	movlb	2	; () banked
 13368  00A290  199C               	xorwf	_dispStatusUCS& (0+255),w,b
 13369  00A292  B4D8               	btfsc	status,2,c
 13370  00A294  D00A               	goto	i2l5959
 13371                           
 13372                           ; BSR set to: 2
 13373  00A296  ECDC  F059         	call	_CheckDataCollision	;wreg free
 13374  00A29A  0900               	iorlw	0
 13375  00A29C  A4D8               	btfss	status,2,c
 13376  00A29E  D005               	goto	i2l5959
 13377  00A2A0  EC7F  F05A         	call	_NewBoosterAdded	;wreg free
 13378  00A2A4  0900               	iorlw	0
 13379  00A2A6  B4D8               	btfsc	status,2,c
 13380  00A2A8  D013               	goto	i2l5973
 13381  00A2AA                     i2l5959:
 13382                           
 13383                           ;boostercomms.c: 814: if(SetWindowID()){
 13384  00A2AA  ECEC  F048         	call	_SetWindowID	;wreg free
 13385  00A2AE  0900               	iorlw	0
 13386  00A2B0  B4D8               	btfsc	status,2,c
 13387  00A2B2  D00A               	goto	i2l5969
 13388                           
 13389                           ;boostercomms.c: 815: dispStatusUCS = 0;
 13390  00A2B4  0E00               	movlw	0
 13391  00A2B6  0102               	movlb	2	; () banked
 13392  00A2B8  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13393                           
 13394                           ; BSR set to: 2
 13395                           ;boostercomms.c: 816: statusFlagsUSLG |= 0b000001000000000000000000;
 13396  00A2BA  0102               	movlb	2	; () banked
 13397  00A2BC  858C               	bsf	(_statusFlagsUSLG+2)& (0+255),2,b	;volatile
 13398                           
 13399                           ; BSR set to: 2
 13400                           ;boostercomms.c: 817: statusFlagsUSLG &= ~0b000000100000000000000000;
 13401  00A2BE  0102               	movlb	2	; () banked
 13402  00A2C0  938C               	bcf	(_statusFlagsUSLG+2)& (0+255),1,b	;volatile
 13403                           
 13404                           ; BSR set to: 2
 13405                           ;boostercomms.c: 818: ClearPastValues();
 13406  00A2C2  ECC2  F05A         	call	i2_ClearPastValues	;wreg free
 13407                           
 13408                           ;boostercomms.c: 819: }else{
 13409  00A2C6  D004               	goto	i2l5973
 13410  00A2C8                     i2l5969:
 13411                           
 13412                           ;boostercomms.c: 820: dispStatusUCS = 4;
 13413  00A2C8  0E04               	movlw	4
 13414  00A2CA  0102               	movlb	2	; () banked
 13415  00A2CC  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13416                           
 13417                           ; BSR set to: 2
 13418                           ;boostercomms.c: 821: return;
 13419  00A2CE  0012               	return	
 13420  00A2D0                     i2l5973:
 13421                           
 13422                           ;boostercomms.c: 822: }
 13423                           ;boostercomms.c: 823: }
 13424                           ;boostercomms.c: 825: if((dispStatusUCS == 5) || (LowestMissingSerial() < 30)){
 13425  00A2D0  0E05               	movlw	5
 13426  00A2D2  0102               	movlb	2	; () banked
 13427  00A2D4  199C               	xorwf	_dispStatusUCS& (0+255),w,b
 13428  00A2D6  B4D8               	btfsc	status,2,c
 13429  00A2D8  D008               	goto	i2l5977
 13430                           
 13431                           ; BSR set to: 2
 13432  00A2DA  EC39  F057         	call	_LowestMissingSerial	;wreg free
 13433  00A2DE  0102               	movlb	2	; () banked
 13434  00A2E0  6F0B               	movwf	??_BoosterCommsDispatcher& (0+255),b
 13435  00A2E2  0E1E               	movlw	30
 13436  00A2E4  0102               	movlb	2	; () banked
 13437  00A2E6  610B               	cpfslt	??_BoosterCommsDispatcher& (0+255),b
 13438  00A2E8  D02D               	goto	i2l6007
 13439  00A2EA                     i2l5977:
 13440                           
 13441                           ; BSR set to: 2
 13442                           ;boostercomms.c: 826: if(QueryWinSerial()){
 13443  00A2EA  EC13  F04C         	call	_QueryWinSerial	;wreg free
 13444  00A2EE  0900               	iorlw	0
 13445  00A2F0  B4D8               	btfsc	status,2,c
 13446  00A2F2  D008               	goto	i2l5985
 13447                           
 13448                           ;boostercomms.c: 827: dispStatusUCS = 0;
 13449  00A2F4  0E00               	movlw	0
 13450  00A2F6  0102               	movlb	2	; () banked
 13451  00A2F8  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13452                           
 13453                           ; BSR set to: 2
 13454                           ;boostercomms.c: 828: statusFlagsUSLG |= 0b000001000000000000000000;
 13455  00A2FA  0102               	movlb	2	; () banked
 13456  00A2FC  858C               	bsf	(_statusFlagsUSLG+2)& (0+255),2,b	;volatile
 13457                           
 13458                           ; BSR set to: 2
 13459                           ;boostercomms.c: 829: statusFlagsUSLG &= ~0b000000100000000000000000;
 13460  00A2FE  0102               	movlb	2	; () banked
 13461  00A300  938C               	bcf	(_statusFlagsUSLG+2)& (0+255),1,b	;volatile
 13462                           
 13463                           ;boostercomms.c: 830: }else{
 13464  00A302  D020               	goto	i2l6007
 13465  00A304                     i2l5985:
 13466                           
 13467                           ;boostercomms.c: 831: dispStatusUCS = 5;
 13468  00A304  0E05               	movlw	5
 13469  00A306  0102               	movlb	2	; () banked
 13470  00A308  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13471                           
 13472                           ; BSR set to: 2
 13473                           ;boostercomms.c: 832: return;
 13474  00A30A  0012               	return	
 13475  00A30C                     i2l5989:
 13476                           
 13477                           ; BSR set to: 2
 13478                           ;boostercomms.c: 838: BoosterQueryStart(0b000);
 13479  00A30C  0E00               	movlw	0
 13480  00A30E  EC2F  F05A         	call	_BoosterQueryStart
 13481                           
 13482                           ;boostercomms.c: 839: dispStatusUCS = 2;
 13483  00A312  0E02               	movlw	2
 13484  00A314  0102               	movlb	2	; () banked
 13485  00A316  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13486                           
 13487                           ;boostercomms.c: 840: break;
 13488  00A318  0012               	return	
 13489  00A31A                     i2l5993:
 13490                           
 13491                           ; BSR set to: 2
 13492                           ;boostercomms.c: 842: BoosterQueryStart(0b010);
 13493  00A31A  0E02               	movlw	2
 13494  00A31C  EC2F  F05A         	call	_BoosterQueryStart
 13495                           
 13496                           ;boostercomms.c: 843: dispStatusUCS = 3;
 13497  00A320  0E03               	movlw	3
 13498  00A322  0102               	movlb	2	; () banked
 13499  00A324  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13500                           
 13501                           ;boostercomms.c: 844: break;
 13502  00A326  0012               	return	
 13503  00A328                     i2l5997:
 13504                           
 13505                           ; BSR set to: 2
 13506                           ;boostercomms.c: 846: BoosterQueryStart(0b011);
 13507  00A328  0E03               	movlw	3
 13508  00A32A  EC2F  F05A         	call	_BoosterQueryStart
 13509                           
 13510                           ;boostercomms.c: 847: dispStatusUCS = 1;
 13511  00A32E  0E01               	movlw	1
 13512  00A330  0102               	movlb	2	; () banked
 13513  00A332  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13514                           
 13515                           ;boostercomms.c: 848: break;
 13516  00A334  0012               	return	
 13517  00A336                     i2l6001:
 13518                           
 13519                           ; BSR set to: 2
 13520                           ;boostercomms.c: 850: BoosterQueryStart(0b001);
 13521  00A336  0E01               	movlw	1
 13522  00A338  EC2F  F05A         	call	_BoosterQueryStart
 13523                           
 13524                           ;boostercomms.c: 851: dispStatusUCS = 0;
 13525  00A33C  0E00               	movlw	0
 13526  00A33E  0102               	movlb	2	; () banked
 13527  00A340  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13528                           
 13529                           ; BSR set to: 2
 13530                           ;boostercomms.c: 853: }
 13531                           
 13532                           ;boostercomms.c: 852: break;
 13533  00A342  0012               	return	
 13534  00A344                     i2l6007:
 13535                           
 13536                           ; BSR set to: 2
 13537  00A344  0102               	movlb	2	; () banked
 13538  00A346  519C               	movf	_dispStatusUCS& (0+255),w,b
 13539                           
 13540                           ; Switch size 1, requested type "space"
 13541                           ; Number of cases is 4, Range of values is 0 to 3
 13542                           ; switch strategies available:
 13543                           ; Name         Instructions Cycles
 13544                           ; simple_byte           13     7 (average)
 13545                           ;	Chosen strategy is simple_byte
 13546  00A348  0A00               	xorlw	0	; case 0
 13547  00A34A  B4D8               	btfsc	status,2,c
 13548  00A34C  D7DF               	goto	i2l5989
 13549  00A34E  0A01               	xorlw	1	; case 1
 13550  00A350  B4D8               	btfsc	status,2,c
 13551  00A352  D7F1               	goto	i2l6001
 13552  00A354  0A03               	xorlw	3	; case 2
 13553  00A356  B4D8               	btfsc	status,2,c
 13554  00A358  D7E0               	goto	i2l5993
 13555  00A35A  0A01               	xorlw	1	; case 3
 13556  00A35C  A4D8               	btfss	status,2,c
 13557  00A35E  0012               	return	
 13558  00A360  D7E3               	goto	i2l5997
 13559  00A362                     __end_of_BoosterCommsDispatcher:
 13560                           	opt stack 0
 13561                           pclatu	equ	0xFFB
 13562                           pclath	equ	0xFFA
 13563                           tblptru	equ	0xFF8
 13564                           tblptrh	equ	0xFF7
 13565                           tblptrl	equ	0xFF6
 13566                           tablat	equ	0xFF5
 13567                           prodh	equ	0xFF4
 13568                           prodl	equ	0xFF3
 13569                           intcon	equ	0xFF2
 13570                           postinc0	equ	0xFEE
 13571                           fsr0h	equ	0xFEA
 13572                           fsr0l	equ	0xFE9
 13573                           wreg	equ	0xFE8
 13574                           indf1	equ	0xFE7
 13575                           postinc1	equ	0xFE6
 13576                           postdec1	equ	0xFE5
 13577                           fsr1h	equ	0xFE2
 13578                           fsr1l	equ	0xFE1
 13579                           indf2	equ	0xFDF
 13580                           postinc2	equ	0xFDE
 13581                           postdec2	equ	0xFDD
 13582                           plusw2	equ	0xFDB
 13583                           fsr2h	equ	0xFDA
 13584                           fsr2l	equ	0xFD9
 13585                           status	equ	0xFD8
 13586                           
 13587 ;; *************** function i2_ClearPastValues *****************
 13588 ;; Defined at:
 13589 ;;		line 279 in file "mastercomms.c"
 13590 ;; Parameters:    Size  Location     Type
 13591 ;;		None
 13592 ;; Auto vars:     Size  Location     Type
 13593 ;;  ClearPastVal    1    1[COMRAM] unsigned char 
 13594 ;; Return value:  Size  Location     Type
 13595 ;;                  1    wreg      void 
 13596 ;; Registers used:
 13597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13598 ;; Tracked objects:
 13599 ;;		On entry : 0/0
 13600 ;;		On exit  : 0/0
 13601 ;;		Unchanged: 0/0
 13602 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 13603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13607 ;;Total ram usage:        1 bytes
 13608 ;; Hardware stack levels used:    1
 13609 ;; Hardware stack levels required when called:    1
 13610 ;; This function calls:
 13611 ;;		i2_ClearPastValue
 13612 ;; This function is called by:
 13613 ;;		_BoosterCommsDispatcher
 13614 ;;		i2_ForceFiringMode
 13615 ;; This function uses a non-reentrant model
 13616 ;;
 13617                           
 13618                           	psect	text69
 13619  00B584                     __ptext69:
 13620                           	opt stack 0
 13621  00B584                     i2_ClearPastValues:
 13622                           	opt stack 21
 13623                           
 13624                           ;mastercomms.c: 280: unsigned char boosterCountUC;
 13625                           ;mastercomms.c: 282: for(boosterCountUC = 0; boosterCountUC < 31; boosterCountUC++)
 13626                           
 13627                           ;incstack = 0
 13628  00B584  0E00               	movlw	0
 13629  00B586  6E02               	movwf	i2ClearPastValues@boosterCountUC,c
 13630  00B588                     i2l5481:
 13631  00B588  0E1E               	movlw	30
 13632  00B58A  6402               	cpfsgt	i2ClearPastValues@boosterCountUC,c
 13633  00B58C  D001               	goto	i2l5485
 13634  00B58E  0012               	return	
 13635  00B590                     i2l5485:
 13636                           
 13637                           ;mastercomms.c: 283: ClearPastValue(boosterCountUC);
 13638  00B590  5002               	movf	i2ClearPastValues@boosterCountUC,w,c
 13639  00B592  EC51  F056         	call	i2_ClearPastValue
 13640  00B596  2A02               	incf	i2ClearPastValues@boosterCountUC,f,c
 13641  00B598  D7F7               	goto	i2l5481
 13642  00B59A                     __end_ofi2_ClearPastValues:
 13643                           	opt stack 0
 13644                           pclatu	equ	0xFFB
 13645                           pclath	equ	0xFFA
 13646                           tblptru	equ	0xFF8
 13647                           tblptrh	equ	0xFF7
 13648                           tblptrl	equ	0xFF6
 13649                           tablat	equ	0xFF5
 13650                           prodh	equ	0xFF4
 13651                           prodl	equ	0xFF3
 13652                           intcon	equ	0xFF2
 13653                           postinc0	equ	0xFEE
 13654                           fsr0h	equ	0xFEA
 13655                           fsr0l	equ	0xFE9
 13656                           wreg	equ	0xFE8
 13657                           indf1	equ	0xFE7
 13658                           postinc1	equ	0xFE6
 13659                           postdec1	equ	0xFE5
 13660                           fsr1h	equ	0xFE2
 13661                           fsr1l	equ	0xFE1
 13662                           indf2	equ	0xFDF
 13663                           postinc2	equ	0xFDE
 13664                           postdec2	equ	0xFDD
 13665                           plusw2	equ	0xFDB
 13666                           fsr2h	equ	0xFDA
 13667                           fsr2l	equ	0xFD9
 13668                           status	equ	0xFD8
 13669                           
 13670 ;; *************** function _SetWindowID *****************
 13671 ;; Defined at:
 13672 ;;		line 665 in file "boostercomms.c"
 13673 ;; Parameters:    Size  Location     Type
 13674 ;;		None
 13675 ;; Auto vars:     Size  Location     Type
 13676 ;;		None
 13677 ;; Return value:  Size  Location     Type
 13678 ;;                  1    wreg      unsigned char 
 13679 ;; Registers used:
 13680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13681 ;; Tracked objects:
 13682 ;;		On entry : 0/0
 13683 ;;		On exit  : 0/0
 13684 ;;		Unchanged: 0/0
 13685 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 13686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13688 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13689 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;Total ram usage:        3 bytes
 13691 ;; Hardware stack levels used:    1
 13692 ;; Hardware stack levels required when called:    4
 13693 ;; This function calls:
 13694 ;;		_AssignSerialNumber
 13695 ;;		_AssignWindowID
 13696 ;;		_BoosterCommandStart
 13697 ;;		_WindowIDBacktrack
 13698 ;;		i2_ResetBoosterStates
 13699 ;; This function is called by:
 13700 ;;		_BoosterCommsDispatcher
 13701 ;; This function uses a non-reentrant model
 13702 ;;
 13703                           
 13704                           	psect	text70
 13705  0091D8                     __ptext70:
 13706                           	opt stack 0
 13707  0091D8                     _SetWindowID:
 13708                           	opt stack 18
 13709                           
 13710                           ;boostercomms.c: 666: static unsigned char statusSetIDUCS;
 13711                           ;boostercomms.c: 667: static unsigned char currentBitUCS;
 13712                           ;boostercomms.c: 668: static unsigned short currentSerialUSS;
 13713                           ;boostercomms.c: 685: if(statusSetIDUCS == 4){
 13714                           
 13715                           ;incstack = 0
 13716  0091D8  0E04               	movlw	4
 13717  0091DA  0102               	movlb	2	; () banked
 13718  0091DC  19AE               	xorwf	SetWindowID@statusSetIDUCS& (0+255),w,b
 13719  0091DE  A4D8               	btfss	status,2,c
 13720  0091E0  D08F               	goto	i2l5093
 13721                           
 13722                           ; BSR set to: 2
 13723                           ;boostercomms.c: 686: __nop();
 13724  0091E2  F000               	nop	
 13725                           
 13726                           ;boostercomms.c: 687: if((statusFlagsUSLG & 0b000000000000100000000000) &&
 13727                           ;boostercomms.c: 688: !(statusFlagsUSLG & 0b000000000100000000000000) &&
 13728                           ;boostercomms.c: 689: ((statusFlagsUSLG & 0b000000000010000000000000) ||!(statusFlagsUSL
      +                          G & 0b000000000001000000000000))){
 13729  0091E4  0102               	movlb	2	; () banked
 13730  0091E6  A78B               	btfss	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 13731  0091E8  D015               	goto	i2l534
 13732                           
 13733                           ; BSR set to: 2
 13734  0091EA  0102               	movlb	2	; () banked
 13735  0091EC  BD8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 13736  0091EE  D012               	goto	i2l534
 13737                           
 13738                           ; BSR set to: 2
 13739  0091F0  0102               	movlb	2	; () banked
 13740  0091F2  BB8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),5,b	;volatile
 13741  0091F4  D003               	goto	i2l5057
 13742                           
 13743                           ; BSR set to: 2
 13744  0091F6  0102               	movlb	2	; () banked
 13745  0091F8  B98B               	btfsc	(_statusFlagsUSLG+1)& (0+255),4,b	;volatile
 13746  0091FA  D00C               	goto	i2l534
 13747  0091FC                     i2l5057:
 13748                           
 13749                           ; BSR set to: 2
 13750                           ;boostercomms.c: 690: BoosterCommandStart(currentSerialUSS, 0b000, currentBitUCS);
 13751  0091FC  C2AB  F007         	movff	SetWindowID@currentSerialUSS,BoosterCommandStart@destSerialUS
 13752  009200  C2AC  F008         	movff	SetWindowID@currentSerialUSS+1,BoosterCommandStart@destSerialUS+1
 13753  009204  0E00               	movlw	0
 13754  009206  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 13755  009208  C2AD  F00A         	movff	SetWindowID@currentBitUCS,BoosterCommandStart@destPayloadUC
 13756  00920C  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 13757                           
 13758                           ;boostercomms.c: 691: return 0;
 13759  009210  0E00               	movlw	0
 13760  009212  0012               	return	
 13761  009214                     i2l534:
 13762                           
 13763                           ; BSR set to: 2
 13764                           ;boostercomms.c: 692: }
 13765                           ;boostercomms.c: 693: if(!(statusFlagsUSLG & 0b000000000000100000000000)){
 13766  009214  0102               	movlb	2	; () banked
 13767  009216  B78B               	btfsc	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 13768  009218  D055               	goto	i2l538
 13769                           
 13770                           ; BSR set to: 2
 13771                           ;boostercomms.c: 694: if(!(currentSerialUSS & (1 << currentBitUCS))){
 13772  00921A  C2AD  F208         	movff	SetWindowID@currentBitUCS,??_SetWindowID
 13773  00921E  0E01               	movlw	1
 13774  009220  0102               	movlb	2	; () banked
 13775  009222  6F09               	movwf	(??_SetWindowID+1)& (0+255),b
 13776  009224  0E00               	movlw	0
 13777  009226  0102               	movlb	2	; () banked
 13778  009228  6F0A               	movwf	(??_SetWindowID+2)& (0+255),b
 13779  00922A  0102               	movlb	2	; () banked
 13780  00922C  2B08               	incf	??_SetWindowID& (0+255),f,b
 13781  00922E  D004               	goto	i2u481_44
 13782  009230                     i2u481_45:
 13783  009230  90D8               	bcf	status,0,c
 13784  009232  0102               	movlb	2	; () banked
 13785  009234  3709               	rlcf	(??_SetWindowID+1)& (0+255),f,b
 13786  009236  370A               	rlcf	(??_SetWindowID+2)& (0+255),f,b
 13787  009238                     i2u481_44:
 13788  009238  0102               	movlb	2	; () banked
 13789  00923A  2F08               	decfsz	??_SetWindowID& (0+255),f,b
 13790  00923C  D7F9               	goto	i2u481_45
 13791  00923E  0102               	movlb	2	; () banked
 13792  009240  51AB               	movf	SetWindowID@currentSerialUSS& (0+255),w,b
 13793  009242  0102               	movlb	2	; () banked
 13794  009244  1709               	andwf	(??_SetWindowID+1)& (0+255),f,b
 13795  009246  0102               	movlb	2	; () banked
 13796  009248  51AC               	movf	(SetWindowID@currentSerialUSS+1)& (0+255),w,b
 13797  00924A  0102               	movlb	2	; () banked
 13798  00924C  170A               	andwf	(??_SetWindowID+2)& (0+255),f,b
 13799  00924E  0102               	movlb	2	; () banked
 13800  009250  5109               	movf	(??_SetWindowID+1)& (0+255),w,b
 13801  009252  0102               	movlb	2	; () banked
 13802  009254  110A               	iorwf	(??_SetWindowID+2)& (0+255),w,b
 13803  009256  A4D8               	btfss	status,2,c
 13804  009258  D026               	goto	i2l5075
 13805                           
 13806                           ; BSR set to: 2
 13807                           ;boostercomms.c: 695: currentSerialUSS |= (1 << currentBitUCS);
 13808  00925A  C2AD  F208         	movff	SetWindowID@currentBitUCS,??_SetWindowID
 13809  00925E  0E01               	movlw	1
 13810  009260  0102               	movlb	2	; () banked
 13811  009262  6F09               	movwf	(??_SetWindowID+1)& (0+255),b
 13812  009264  0E00               	movlw	0
 13813  009266  0102               	movlb	2	; () banked
 13814  009268  6F0A               	movwf	(??_SetWindowID+2)& (0+255),b
 13815  00926A  0102               	movlb	2	; () banked
 13816  00926C  2B08               	incf	??_SetWindowID& (0+255),f,b
 13817  00926E  D004               	goto	i2u483_44
 13818  009270                     i2u483_45:
 13819  009270  90D8               	bcf	status,0,c
 13820  009272  0102               	movlb	2	; () banked
 13821  009274  3709               	rlcf	(??_SetWindowID+1)& (0+255),f,b
 13822  009276  370A               	rlcf	(??_SetWindowID+2)& (0+255),f,b
 13823  009278                     i2u483_44:
 13824  009278  0102               	movlb	2	; () banked
 13825  00927A  2F08               	decfsz	??_SetWindowID& (0+255),f,b
 13826  00927C  D7F9               	goto	i2u483_45
 13827  00927E  0102               	movlb	2	; () banked
 13828  009280  5109               	movf	(??_SetWindowID+1)& (0+255),w,b
 13829  009282  0102               	movlb	2	; () banked
 13830  009284  13AB               	iorwf	SetWindowID@currentSerialUSS& (0+255),f,b
 13831  009286  0102               	movlb	2	; () banked
 13832  009288  510A               	movf	(??_SetWindowID+2)& (0+255),w,b
 13833  00928A  0102               	movlb	2	; () banked
 13834  00928C  13AC               	iorwf	(SetWindowID@currentSerialUSS+1)& (0+255),f,b
 13835                           
 13836                           ; BSR set to: 2
 13837                           ;boostercomms.c: 696: BoosterCommandStart(currentSerialUSS, 0b000, currentBitUCS);
 13838  00928E  C2AB  F007         	movff	SetWindowID@currentSerialUSS,BoosterCommandStart@destSerialUS
 13839  009292  C2AC  F008         	movff	SetWindowID@currentSerialUSS+1,BoosterCommandStart@destSerialUS+1
 13840  009296  0E00               	movlw	0
 13841  009298  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 13842  00929A  C2AD  F00A         	movff	SetWindowID@currentBitUCS,BoosterCommandStart@destPayloadUC
 13843  00929E  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 13844  0092A2                     i2l5069:
 13845                           
 13846                           ;boostercomms.c: 697: return 0;
 13847  0092A2  0E00               	movlw	0
 13848  0092A4  0012               	return	
 13849  0092A6                     i2l5075:
 13850                           
 13851                           ;boostercomms.c: 699: return WindowIDBacktrack(&currentBitUCS, &currentSerialUSS, &statu
      +                          sSetIDUCS);
 13852  0092A6  0EAD               	movlw	low SetWindowID@currentBitUCS
 13853  0092A8  6E16               	movwf	WindowIDBacktrack@currentBitUC,c
 13854  0092AA  0E02               	movlw	high SetWindowID@currentBitUCS
 13855  0092AC  6E17               	movwf	WindowIDBacktrack@currentBitUC+1,c
 13856  0092AE  0EAB               	movlw	low SetWindowID@currentSerialUSS
 13857  0092B0  6E18               	movwf	WindowIDBacktrack@currentSerialUS,c
 13858  0092B2  0E02               	movlw	high SetWindowID@currentSerialUSS
 13859  0092B4  6E19               	movwf	WindowIDBacktrack@currentSerialUS+1,c
 13860  0092B6  0EAE               	movlw	low SetWindowID@statusSetIDUCS
 13861  0092B8  6E1A               	movwf	WindowIDBacktrack@statusSetIDUC,c
 13862  0092BA  0E02               	movlw	high SetWindowID@statusSetIDUCS
 13863  0092BC  6E1B               	movwf	WindowIDBacktrack@statusSetIDUC+1,c
 13864  0092BE  EC31  F04B         	call	_WindowIDBacktrack	;wreg free
 13865  0092C2  0012               	return	
 13866  0092C4                     i2l538:
 13867                           
 13868                           ; BSR set to: 2
 13869  0092C4  0102               	movlb	2	; () banked
 13870  0092C6  BD8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 13871  0092C8  D004               	goto	i2l5083
 13872                           
 13873                           ; BSR set to: 2
 13874                           ;boostercomms.c: 701: AssignWindowID();
 13875  0092CA  EC0D  F057         	call	_AssignWindowID	;wreg free
 13876                           
 13877                           ;boostercomms.c: 702: statusSetIDUCS = 5;
 13878  0092CE  0E05               	movlw	5
 13879  0092D0  D0A8               	goto	L8
 13880  0092D2                     i2l5083:
 13881                           
 13882                           ; BSR set to: 2
 13883                           ;boostercomms.c: 704: if(++currentBitUCS == 14){
 13884  0092D2  0102               	movlb	2	; () banked
 13885  0092D4  2BAD               	incf	SetWindowID@currentBitUCS& (0+255),f,b
 13886  0092D6  0E0E               	movlw	14
 13887  0092D8  0102               	movlb	2	; () banked
 13888  0092DA  19AD               	xorwf	SetWindowID@currentBitUCS& (0+255),w,b
 13889  0092DC  A4D8               	btfss	status,2,c
 13890  0092DE  D005               	goto	i2l5091
 13891                           
 13892                           ; BSR set to: 2
 13893                           ;boostercomms.c: 705: statusSetIDUCS = 0;
 13894  0092E0  0E00               	movlw	0
 13895  0092E2  0102               	movlb	2	; () banked
 13896  0092E4  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 13897                           
 13898                           ; BSR set to: 2
 13899                           ;boostercomms.c: 706: return 1;
 13900  0092E6  0E01               	movlw	1
 13901                           
 13902                           ; BSR set to: 2
 13903  0092E8  0012               	return	
 13904  0092EA                     i2l5091:
 13905                           
 13906                           ; BSR set to: 2
 13907                           ;boostercomms.c: 707: }
 13908                           ;boostercomms.c: 708: BoosterCommandStart(currentSerialUSS, 0b000, currentBitUCS);
 13909  0092EA  C2AB  F007         	movff	SetWindowID@currentSerialUSS,BoosterCommandStart@destSerialUS
 13910  0092EE  C2AC  F008         	movff	SetWindowID@currentSerialUSS+1,BoosterCommandStart@destSerialUS+1
 13911  0092F2  0E00               	movlw	0
 13912  0092F4  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 13913  0092F6  C2AD  F00A         	movff	SetWindowID@currentBitUCS,BoosterCommandStart@destPayloadUC
 13914  0092FA  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 13915                           
 13916                           ;boostercomms.c: 709: }
 13917                           ;boostercomms.c: 710: }else if(statusSetIDUCS == 5){
 13918  0092FE  D0A1               	goto	i2l5147
 13919  009300                     i2l5093:
 13920  009300  0E05               	movlw	5
 13921  009302  0102               	movlb	2	; () banked
 13922  009304  19AE               	xorwf	SetWindowID@statusSetIDUCS& (0+255),w,b
 13923  009306  A4D8               	btfss	status,2,c
 13924  009308  D057               	goto	i2l5113
 13925                           
 13926                           ; BSR set to: 2
 13927                           ;boostercomms.c: 711: statusSetIDUCS = 4;
 13928  00930A  0E04               	movlw	4
 13929  00930C  0102               	movlb	2	; () banked
 13930  00930E  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 13931                           
 13932                           ; BSR set to: 2
 13933                           ;boostercomms.c: 712: if(!(currentSerialUSS & (1 << currentBitUCS))){
 13934  009310  C2AD  F208         	movff	SetWindowID@currentBitUCS,??_SetWindowID
 13935  009314  0E01               	movlw	1
 13936  009316  0102               	movlb	2	; () banked
 13937  009318  6F09               	movwf	(??_SetWindowID+1)& (0+255),b
 13938  00931A  0E00               	movlw	0
 13939  00931C  0102               	movlb	2	; () banked
 13940  00931E  6F0A               	movwf	(??_SetWindowID+2)& (0+255),b
 13941  009320  0102               	movlb	2	; () banked
 13942  009322  2B08               	incf	??_SetWindowID& (0+255),f,b
 13943  009324  D004               	goto	i2u487_44
 13944  009326                     i2u487_45:
 13945  009326  90D8               	bcf	status,0,c
 13946  009328  0102               	movlb	2	; () banked
 13947  00932A  3709               	rlcf	(??_SetWindowID+1)& (0+255),f,b
 13948  00932C  370A               	rlcf	(??_SetWindowID+2)& (0+255),f,b
 13949  00932E                     i2u487_44:
 13950  00932E  0102               	movlb	2	; () banked
 13951  009330  2F08               	decfsz	??_SetWindowID& (0+255),f,b
 13952  009332  D7F9               	goto	i2u487_45
 13953  009334  0102               	movlb	2	; () banked
 13954  009336  51AB               	movf	SetWindowID@currentSerialUSS& (0+255),w,b
 13955  009338  0102               	movlb	2	; () banked
 13956  00933A  1709               	andwf	(??_SetWindowID+1)& (0+255),f,b
 13957  00933C  0102               	movlb	2	; () banked
 13958  00933E  51AC               	movf	(SetWindowID@currentSerialUSS+1)& (0+255),w,b
 13959  009340  0102               	movlb	2	; () banked
 13960  009342  170A               	andwf	(??_SetWindowID+2)& (0+255),f,b
 13961  009344  0102               	movlb	2	; () banked
 13962  009346  5109               	movf	(??_SetWindowID+1)& (0+255),w,b
 13963  009348  0102               	movlb	2	; () banked
 13964  00934A  110A               	iorwf	(??_SetWindowID+2)& (0+255),w,b
 13965  00934C  A4D8               	btfss	status,2,c
 13966  00934E  D025               	goto	i2l5109
 13967                           
 13968                           ; BSR set to: 2
 13969                           ;boostercomms.c: 713: currentSerialUSS |= (1 << currentBitUCS);
 13970  009350  C2AD  F208         	movff	SetWindowID@currentBitUCS,??_SetWindowID
 13971  009354  0E01               	movlw	1
 13972  009356  0102               	movlb	2	; () banked
 13973  009358  6F09               	movwf	(??_SetWindowID+1)& (0+255),b
 13974  00935A  0E00               	movlw	0
 13975  00935C  0102               	movlb	2	; () banked
 13976  00935E  6F0A               	movwf	(??_SetWindowID+2)& (0+255),b
 13977  009360  0102               	movlb	2	; () banked
 13978  009362  2B08               	incf	??_SetWindowID& (0+255),f,b
 13979  009364  D004               	goto	i2u489_44
 13980  009366                     i2u489_45:
 13981  009366  90D8               	bcf	status,0,c
 13982  009368  0102               	movlb	2	; () banked
 13983  00936A  3709               	rlcf	(??_SetWindowID+1)& (0+255),f,b
 13984  00936C  370A               	rlcf	(??_SetWindowID+2)& (0+255),f,b
 13985  00936E                     i2u489_44:
 13986  00936E  0102               	movlb	2	; () banked
 13987  009370  2F08               	decfsz	??_SetWindowID& (0+255),f,b
 13988  009372  D7F9               	goto	i2u489_45
 13989  009374  0102               	movlb	2	; () banked
 13990  009376  5109               	movf	(??_SetWindowID+1)& (0+255),w,b
 13991  009378  0102               	movlb	2	; () banked
 13992  00937A  13AB               	iorwf	SetWindowID@currentSerialUSS& (0+255),f,b
 13993  00937C  0102               	movlb	2	; () banked
 13994  00937E  510A               	movf	(??_SetWindowID+2)& (0+255),w,b
 13995  009380  0102               	movlb	2	; () banked
 13996  009382  13AC               	iorwf	(SetWindowID@currentSerialUSS+1)& (0+255),f,b
 13997                           
 13998                           ; BSR set to: 2
 13999                           ;boostercomms.c: 714: BoosterCommandStart(currentSerialUSS, 0b000, currentBitUCS);
 14000  009384  C2AB  F007         	movff	SetWindowID@currentSerialUSS,BoosterCommandStart@destSerialUS
 14001  009388  C2AC  F008         	movff	SetWindowID@currentSerialUSS+1,BoosterCommandStart@destSerialUS+1
 14002  00938C  0E00               	movlw	0
 14003  00938E  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 14004  009390  C2AD  F00A         	movff	SetWindowID@currentBitUCS,BoosterCommandStart@destPayloadUC
 14005  009394  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 14006  009398  D784               	goto	i2l5069
 14007  00939A                     i2l5109:
 14008                           
 14009                           ;boostercomms.c: 717: return WindowIDBacktrack(&currentBitUCS, &currentSerialUSS, &statu
      +                          sSetIDUCS);
 14010  00939A  0EAD               	movlw	low SetWindowID@currentBitUCS
 14011  00939C  6E16               	movwf	WindowIDBacktrack@currentBitUC,c
 14012  00939E  0E02               	movlw	high SetWindowID@currentBitUCS
 14013  0093A0  6E17               	movwf	WindowIDBacktrack@currentBitUC+1,c
 14014  0093A2  0EAB               	movlw	low SetWindowID@currentSerialUSS
 14015  0093A4  6E18               	movwf	WindowIDBacktrack@currentSerialUS,c
 14016  0093A6  0E02               	movlw	high SetWindowID@currentSerialUSS
 14017  0093A8  6E19               	movwf	WindowIDBacktrack@currentSerialUS+1,c
 14018  0093AA  0EAE               	movlw	low SetWindowID@statusSetIDUCS
 14019  0093AC  6E1A               	movwf	WindowIDBacktrack@statusSetIDUC,c
 14020  0093AE  0E02               	movlw	high SetWindowID@statusSetIDUCS
 14021  0093B0  6E1B               	movwf	WindowIDBacktrack@statusSetIDUC+1,c
 14022  0093B2  EC31  F04B         	call	_WindowIDBacktrack	;wreg free
 14023  0093B6  0012               	return	
 14024  0093B8                     i2l5113:
 14025  0093B8  0E03               	movlw	3
 14026  0093BA  0102               	movlb	2	; () banked
 14027  0093BC  19AE               	xorwf	SetWindowID@statusSetIDUCS& (0+255),w,b
 14028  0093BE  A4D8               	btfss	status,2,c
 14029  0093C0  D01A               	goto	i2l5127
 14030                           
 14031                           ; BSR set to: 2
 14032                           ;boostercomms.c: 719: ResetBoosterStates();
 14033  0093C2  ECCD  F05A         	call	i2_ResetBoosterStates	;wreg free
 14034                           
 14035                           ;boostercomms.c: 720: statusFlagsUSLG |= 0b000000100000000000000000;
 14036  0093C6  0102               	movlb	2	; () banked
 14037  0093C8  838C               	bsf	(_statusFlagsUSLG+2)& (0+255),1,b	;volatile
 14038                           
 14039                           ; BSR set to: 2
 14040                           ;boostercomms.c: 721: currentBitUCS = 0;
 14041  0093CA  0E00               	movlw	0
 14042  0093CC  0102               	movlb	2	; () banked
 14043  0093CE  6FAD               	movwf	SetWindowID@currentBitUCS& (0+255),b
 14044                           
 14045                           ; BSR set to: 2
 14046                           ;boostercomms.c: 722: currentSerialUSS = 0;
 14047  0093D0  0E00               	movlw	0
 14048  0093D2  0102               	movlb	2	; () banked
 14049  0093D4  6FAC               	movwf	(SetWindowID@currentSerialUSS+1)& (0+255),b
 14050  0093D6  0E00               	movlw	0
 14051  0093D8  6FAB               	movwf	SetWindowID@currentSerialUSS& (0+255),b
 14052                           
 14053                           ; BSR set to: 2
 14054                           ;boostercomms.c: 723: statusSetIDUCS = 4;
 14055  0093DA  0E04               	movlw	4
 14056  0093DC  0102               	movlb	2	; () banked
 14057  0093DE  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 14058                           
 14059                           ; BSR set to: 2
 14060                           ;boostercomms.c: 724: BoosterCommandStart(0, 0b000, 0);
 14061  0093E0  0E00               	movlw	0
 14062  0093E2  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 14063  0093E4  0E00               	movlw	0
 14064  0093E6  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 14065  0093E8  0E00               	movlw	0
 14066  0093EA  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 14067  0093EC  0E00               	movlw	0
 14068  0093EE  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 14069  0093F0  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 14070                           
 14071                           ;boostercomms.c: 725: }else if(statusSetIDUCS == 1){
 14072  0093F4  D026               	goto	i2l5147
 14073  0093F6                     i2l5127:
 14074  0093F6  0102               	movlb	2	; () banked
 14075  0093F8  05AE               	decf	SetWindowID@statusSetIDUCS& (0+255),w,b
 14076  0093FA  A4D8               	btfss	status,2,c
 14077  0093FC  D015               	goto	i2l5143
 14078                           
 14079                           ; BSR set to: 2
 14080                           ;boostercomms.c: 726: if((statusFlagsUSLG & 0b000000000000100000000000) && !(statusFlags
      +                          USLG & 0b000000000100000000000000))
 14081  0093FE  0102               	movlb	2	; () banked
 14082  009400  A78B               	btfss	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 14083  009402  D006               	goto	i2l553
 14084                           
 14085                           ; BSR set to: 2
 14086  009404  0102               	movlb	2	; () banked
 14087  009406  BD8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 14088  009408  D003               	goto	i2l553
 14089                           
 14090                           ; BSR set to: 2
 14091                           ;boostercomms.c: 727: AssignSerialNumber();
 14092  00940A  EC42  F05A         	call	_AssignSerialNumber	;wreg free
 14093  00940E  D008               	goto	i2l5141
 14094  009410                     i2l553:
 14095                           
 14096                           ; BSR set to: 2
 14097                           ;boostercomms.c: 728: else if(statusFlagsUSLG & 0b000000000100000000000000){
 14098  009410  0102               	movlb	2	; () banked
 14099  009412  AD8B               	btfss	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 14100  009414  D005               	goto	i2l5141
 14101                           
 14102                           ; BSR set to: 2
 14103                           ;boostercomms.c: 729: statusSetIDUCS = 0;
 14104  009416  0E00               	movlw	0
 14105  009418  0102               	movlb	2	; () banked
 14106  00941A  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 14107                           
 14108                           ; BSR set to: 2
 14109                           ;boostercomms.c: 730: return 1;
 14110  00941C  0E01               	movlw	1
 14111                           
 14112                           ; BSR set to: 2
 14113  00941E  0012               	return	
 14114  009420                     i2l5141:
 14115                           
 14116                           ;boostercomms.c: 731: }
 14117                           ;boostercomms.c: 732: statusSetIDUCS = 3;
 14118  009420  0E03               	movlw	3
 14119  009422                     L8:
 14120  009422  0102               	movlb	2	; () banked
 14121  009424  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 14122                           
 14123                           ;boostercomms.c: 733: }else{
 14124  009426  D00D               	goto	i2l5147
 14125  009428                     i2l5143:
 14126                           
 14127                           ; BSR set to: 2
 14128                           ;boostercomms.c: 734: statusSetIDUCS = 1;
 14129  009428  0E01               	movlw	1
 14130  00942A  0102               	movlb	2	; () banked
 14131  00942C  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 14132                           
 14133                           ; BSR set to: 2
 14134                           ;boostercomms.c: 735: BoosterCommandStart(0x3FFE, 0b000, 13);
 14135  00942E  0E3F               	movlw	63
 14136  009430  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 14137  009432  0EFE               	movlw	254
 14138  009434  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 14139  009436  0E00               	movlw	0
 14140  009438  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 14141  00943A  0E0D               	movlw	13
 14142  00943C  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 14143  00943E  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 14144  009442                     i2l5147:
 14145                           
 14146                           ;boostercomms.c: 736: }
 14147                           ;boostercomms.c: 738: return 0;
 14148  009442  0E00               	movlw	0
 14149  009444  0012               	return	
 14150  009446                     __end_of_SetWindowID:
 14151                           	opt stack 0
 14152                           pclatu	equ	0xFFB
 14153                           pclath	equ	0xFFA
 14154                           tblptru	equ	0xFF8
 14155                           tblptrh	equ	0xFF7
 14156                           tblptrl	equ	0xFF6
 14157                           tablat	equ	0xFF5
 14158                           prodh	equ	0xFF4
 14159                           prodl	equ	0xFF3
 14160                           intcon	equ	0xFF2
 14161                           postinc0	equ	0xFEE
 14162                           fsr0h	equ	0xFEA
 14163                           fsr0l	equ	0xFE9
 14164                           wreg	equ	0xFE8
 14165                           indf1	equ	0xFE7
 14166                           postinc1	equ	0xFE6
 14167                           postdec1	equ	0xFE5
 14168                           fsr1h	equ	0xFE2
 14169                           fsr1l	equ	0xFE1
 14170                           indf2	equ	0xFDF
 14171                           postinc2	equ	0xFDE
 14172                           postdec2	equ	0xFDD
 14173                           plusw2	equ	0xFDB
 14174                           fsr2h	equ	0xFDA
 14175                           fsr2l	equ	0xFD9
 14176                           status	equ	0xFD8
 14177                           
 14178 ;; *************** function i2_ResetBoosterStates *****************
 14179 ;; Defined at:
 14180 ;;		line 589 in file "boostercomms.c"
 14181 ;; Parameters:    Size  Location     Type
 14182 ;;		None
 14183 ;; Auto vars:     Size  Location     Type
 14184 ;;  ResetBooster    1    1[COMRAM] unsigned char 
 14185 ;; Return value:  Size  Location     Type
 14186 ;;                  1    wreg      void 
 14187 ;; Registers used:
 14188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14189 ;; Tracked objects:
 14190 ;;		On entry : 0/0
 14191 ;;		On exit  : 0/0
 14192 ;;		Unchanged: 0/0
 14193 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14197 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14198 ;;Total ram usage:        1 bytes
 14199 ;; Hardware stack levels used:    1
 14200 ;; Hardware stack levels required when called:    1
 14201 ;; This function calls:
 14202 ;;		i2_ResetSingleBoosterState
 14203 ;; This function is called by:
 14204 ;;		_SetWindowID
 14205 ;;		i2_ForceFiringMode
 14206 ;; This function uses a non-reentrant model
 14207 ;;
 14208                           
 14209                           	psect	text71
 14210  00B59A                     __ptext71:
 14211                           	opt stack 0
 14212  00B59A                     i2_ResetBoosterStates:
 14213                           	opt stack 21
 14214                           
 14215                           ;boostercomms.c: 590: unsigned char boosterCountUC;
 14216                           ;boostercomms.c: 592: for(boosterCountUC = 0; boosterCountUC < 30; boosterCountUC++)
 14217                           
 14218                           ;incstack = 0
 14219  00B59A  0E00               	movlw	0
 14220  00B59C  6E02               	movwf	i2ResetBoosterStates@boosterCountUC,c
 14221  00B59E                     i2l4751:
 14222  00B59E  0E1D               	movlw	29
 14223  00B5A0  6402               	cpfsgt	i2ResetBoosterStates@boosterCountUC,c
 14224  00B5A2  D001               	goto	i2l4755
 14225  00B5A4  0012               	return	
 14226  00B5A6                     i2l4755:
 14227                           
 14228                           ;boostercomms.c: 593: ResetSingleBoosterState(boosterCountUC);
 14229  00B5A6  5002               	movf	i2ResetBoosterStates@boosterCountUC,w,c
 14230  00B5A8  EC80  F052         	call	i2_ResetSingleBoosterState
 14231  00B5AC  2A02               	incf	i2ResetBoosterStates@boosterCountUC,f,c
 14232  00B5AE  D7F7               	goto	i2l4751
 14233  00B5B0                     __end_ofi2_ResetBoosterStates:
 14234                           	opt stack 0
 14235                           pclatu	equ	0xFFB
 14236                           pclath	equ	0xFFA
 14237                           tblptru	equ	0xFF8
 14238                           tblptrh	equ	0xFF7
 14239                           tblptrl	equ	0xFF6
 14240                           tablat	equ	0xFF5
 14241                           prodh	equ	0xFF4
 14242                           prodl	equ	0xFF3
 14243                           intcon	equ	0xFF2
 14244                           postinc0	equ	0xFEE
 14245                           fsr0h	equ	0xFEA
 14246                           fsr0l	equ	0xFE9
 14247                           wreg	equ	0xFE8
 14248                           indf1	equ	0xFE7
 14249                           postinc1	equ	0xFE6
 14250                           postdec1	equ	0xFE5
 14251                           fsr1h	equ	0xFE2
 14252                           fsr1l	equ	0xFE1
 14253                           indf2	equ	0xFDF
 14254                           postinc2	equ	0xFDE
 14255                           postdec2	equ	0xFDD
 14256                           plusw2	equ	0xFDB
 14257                           fsr2h	equ	0xFDA
 14258                           fsr2l	equ	0xFD9
 14259                           status	equ	0xFD8
 14260                           
 14261 ;; *************** function _WindowIDBacktrack *****************
 14262 ;; Defined at:
 14263 ;;		line 624 in file "boostercomms.c"
 14264 ;; Parameters:    Size  Location     Type
 14265 ;;  currentBitUC    2   21[COMRAM] PTR unsigned char 
 14266 ;;		 -> SetWindowID@currentBitUCS(1), 
 14267 ;;  currentSeria    2   23[COMRAM] PTR unsigned short 
 14268 ;;		 -> SetWindowID@currentSerialUSS(2), 
 14269 ;;  statusSetIDU    2   25[COMRAM] PTR unsigned char 
 14270 ;;		 -> SetWindowID@statusSetIDUCS(1), 
 14271 ;; Auto vars:     Size  Location     Type
 14272 ;;		None
 14273 ;; Return value:  Size  Location     Type
 14274 ;;                  1    wreg      unsigned char 
 14275 ;; Registers used:
 14276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14277 ;; Tracked objects:
 14278 ;;		On entry : 0/0
 14279 ;;		On exit  : 0/0
 14280 ;;		Unchanged: 0/0
 14281 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14282 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14284 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14285 ;;      Totals:         6       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14286 ;;Total ram usage:       13 bytes
 14287 ;; Hardware stack levels used:    1
 14288 ;; Hardware stack levels required when called:    2
 14289 ;; This function calls:
 14290 ;;		_BoosterCommandStart
 14291 ;; This function is called by:
 14292 ;;		_SetWindowID
 14293 ;; This function uses a non-reentrant model
 14294 ;;
 14295                           
 14296                           	psect	text72
 14297  009662                     __ptext72:
 14298                           	opt stack 0
 14299  009662                     _WindowIDBacktrack:
 14300                           	opt stack 19
 14301                           
 14302                           ;boostercomms.c: 626: while(*currentBitUC && (*currentSerialUS & (1 << *currentBitUC))){
 14303                           
 14304                           ;incstack = 0
 14305  009662  D03D               	goto	i2l4583
 14306  009664                     i2l4579:
 14307                           
 14308                           ;boostercomms.c: 627: *currentSerialUS &= ~(*currentSerialUS & (1 << *currentBitUC));
 14309  009664  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14310  009668  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14311  00966C  CFDE F201          	movff	postinc2,??_WindowIDBacktrack
 14312  009670  CFDD F202          	movff	postdec2,??_WindowIDBacktrack+1
 14313  009674  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14314  009678  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14315  00967C  50DF               	movf	indf2,w,c
 14316  00967E  0102               	movlb	2	; () banked
 14317  009680  6F03               	movwf	(??_WindowIDBacktrack+2)& (0+255),b
 14318  009682  0E01               	movlw	1
 14319  009684  0102               	movlb	2	; () banked
 14320  009686  6F04               	movwf	(??_WindowIDBacktrack+3)& (0+255),b
 14321  009688  0E00               	movlw	0
 14322  00968A  0102               	movlb	2	; () banked
 14323  00968C  6F05               	movwf	(??_WindowIDBacktrack+4)& (0+255),b
 14324  00968E  0102               	movlb	2	; () banked
 14325  009690  2B03               	incf	(??_WindowIDBacktrack+2)& (0+255),f,b
 14326  009692  D004               	goto	i2u405_44
 14327  009694                     i2u405_45:
 14328  009694  90D8               	bcf	status,0,c
 14329  009696  0102               	movlb	2	; () banked
 14330  009698  3704               	rlcf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14331  00969A  3705               	rlcf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14332  00969C                     i2u405_44:
 14333  00969C  0102               	movlb	2	; () banked
 14334  00969E  2F03               	decfsz	(??_WindowIDBacktrack+2)& (0+255),f,b
 14335  0096A0  D7F9               	goto	i2u405_45
 14336  0096A2  0102               	movlb	2	; () banked
 14337  0096A4  5101               	movf	??_WindowIDBacktrack& (0+255),w,b
 14338  0096A6  0102               	movlb	2	; () banked
 14339  0096A8  1704               	andwf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14340  0096AA  0102               	movlb	2	; () banked
 14341  0096AC  5102               	movf	(??_WindowIDBacktrack+1)& (0+255),w,b
 14342  0096AE  0102               	movlb	2	; () banked
 14343  0096B0  1705               	andwf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14344  0096B2  0102               	movlb	2	; () banked
 14345  0096B4  1D04               	comf	(??_WindowIDBacktrack+3)& (0+255),w,b
 14346  0096B6  0102               	movlb	2	; () banked
 14347  0096B8  6F06               	movwf	(??_WindowIDBacktrack+5)& (0+255),b
 14348  0096BA  0102               	movlb	2	; () banked
 14349  0096BC  1D05               	comf	(??_WindowIDBacktrack+4)& (0+255),w,b
 14350  0096BE  0102               	movlb	2	; () banked
 14351  0096C0  6F07               	movwf	(??_WindowIDBacktrack+6)& (0+255),b
 14352  0096C2  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14353  0096C6  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14354  0096CA  0102               	movlb	2	; () banked
 14355  0096CC  5106               	movf	(??_WindowIDBacktrack+5)& (0+255),w,b
 14356  0096CE  16DE               	andwf	postinc2,f,c
 14357  0096D0  5107               	movf	(??_WindowIDBacktrack+6)& (0+255),w,b
 14358  0096D2  16DD               	andwf	postdec2,f,c
 14359                           
 14360                           ; BSR set to: 2
 14361                           ;boostercomms.c: 628: (*currentBitUC)--;
 14362  0096D4  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14363  0096D8  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14364  0096DC  06DF               	decf	indf2,f,c
 14365  0096DE                     i2l4583:
 14366  0096DE  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14367  0096E2  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14368  0096E6  50DF               	movf	indf2,w,c
 14369  0096E8  B4D8               	btfsc	status,2,c
 14370  0096EA  D02D               	goto	i2l4587
 14371  0096EC  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14372  0096F0  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14373  0096F4  CFDE F201          	movff	postinc2,??_WindowIDBacktrack
 14374  0096F8  CFDD F202          	movff	postdec2,??_WindowIDBacktrack+1
 14375  0096FC  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14376  009700  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14377  009704  50DF               	movf	indf2,w,c
 14378  009706  0102               	movlb	2	; () banked
 14379  009708  6F03               	movwf	(??_WindowIDBacktrack+2)& (0+255),b
 14380  00970A  0E01               	movlw	1
 14381  00970C  0102               	movlb	2	; () banked
 14382  00970E  6F04               	movwf	(??_WindowIDBacktrack+3)& (0+255),b
 14383  009710  0E00               	movlw	0
 14384  009712  0102               	movlb	2	; () banked
 14385  009714  6F05               	movwf	(??_WindowIDBacktrack+4)& (0+255),b
 14386  009716  0102               	movlb	2	; () banked
 14387  009718  2B03               	incf	(??_WindowIDBacktrack+2)& (0+255),f,b
 14388  00971A  D004               	goto	i2u407_44
 14389  00971C                     i2u407_45:
 14390  00971C  90D8               	bcf	status,0,c
 14391  00971E  0102               	movlb	2	; () banked
 14392  009720  3704               	rlcf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14393  009722  3705               	rlcf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14394  009724                     i2u407_44:
 14395  009724  0102               	movlb	2	; () banked
 14396  009726  2F03               	decfsz	(??_WindowIDBacktrack+2)& (0+255),f,b
 14397  009728  D7F9               	goto	i2u407_45
 14398  00972A  0102               	movlb	2	; () banked
 14399  00972C  5101               	movf	??_WindowIDBacktrack& (0+255),w,b
 14400  00972E  0102               	movlb	2	; () banked
 14401  009730  1704               	andwf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14402  009732  0102               	movlb	2	; () banked
 14403  009734  5102               	movf	(??_WindowIDBacktrack+1)& (0+255),w,b
 14404  009736  0102               	movlb	2	; () banked
 14405  009738  1705               	andwf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14406  00973A  0102               	movlb	2	; () banked
 14407  00973C  5104               	movf	(??_WindowIDBacktrack+3)& (0+255),w,b
 14408  00973E  0102               	movlb	2	; () banked
 14409  009740  1105               	iorwf	(??_WindowIDBacktrack+4)& (0+255),w,b
 14410  009742  A4D8               	btfss	status,2,c
 14411  009744  D78F               	goto	i2l4579
 14412  009746                     i2l4587:
 14413                           
 14414                           ;boostercomms.c: 629: }
 14415                           ;boostercomms.c: 630: if(!(*currentBitUC) && (*currentSerialUS & (1 << *currentBitUC))){
 14416  009746  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14417  00974A  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14418  00974E  50DF               	movf	indf2,w,c
 14419  009750  A4D8               	btfss	status,2,c
 14420  009752  D035               	goto	i2l4599
 14421  009754  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14422  009758  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14423  00975C  CFDE F201          	movff	postinc2,??_WindowIDBacktrack
 14424  009760  CFDD F202          	movff	postdec2,??_WindowIDBacktrack+1
 14425  009764  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14426  009768  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14427  00976C  50DF               	movf	indf2,w,c
 14428  00976E  0102               	movlb	2	; () banked
 14429  009770  6F03               	movwf	(??_WindowIDBacktrack+2)& (0+255),b
 14430  009772  0E01               	movlw	1
 14431  009774  0102               	movlb	2	; () banked
 14432  009776  6F04               	movwf	(??_WindowIDBacktrack+3)& (0+255),b
 14433  009778  0E00               	movlw	0
 14434  00977A  0102               	movlb	2	; () banked
 14435  00977C  6F05               	movwf	(??_WindowIDBacktrack+4)& (0+255),b
 14436  00977E  0102               	movlb	2	; () banked
 14437  009780  2B03               	incf	(??_WindowIDBacktrack+2)& (0+255),f,b
 14438  009782  D004               	goto	i2u410_44
 14439  009784                     i2u410_45:
 14440  009784  90D8               	bcf	status,0,c
 14441  009786  0102               	movlb	2	; () banked
 14442  009788  3704               	rlcf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14443  00978A  3705               	rlcf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14444  00978C                     i2u410_44:
 14445  00978C  0102               	movlb	2	; () banked
 14446  00978E  2F03               	decfsz	(??_WindowIDBacktrack+2)& (0+255),f,b
 14447  009790  D7F9               	goto	i2u410_45
 14448  009792  0102               	movlb	2	; () banked
 14449  009794  5101               	movf	??_WindowIDBacktrack& (0+255),w,b
 14450  009796  0102               	movlb	2	; () banked
 14451  009798  1704               	andwf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14452  00979A  0102               	movlb	2	; () banked
 14453  00979C  5102               	movf	(??_WindowIDBacktrack+1)& (0+255),w,b
 14454  00979E  0102               	movlb	2	; () banked
 14455  0097A0  1705               	andwf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14456  0097A2  0102               	movlb	2	; () banked
 14457  0097A4  5104               	movf	(??_WindowIDBacktrack+3)& (0+255),w,b
 14458  0097A6  0102               	movlb	2	; () banked
 14459  0097A8  1105               	iorwf	(??_WindowIDBacktrack+4)& (0+255),w,b
 14460  0097AA  B4D8               	btfsc	status,2,c
 14461  0097AC  D008               	goto	i2l4599
 14462                           
 14463                           ; BSR set to: 2
 14464                           ;boostercomms.c: 631: *statusSetIDUC = 0;
 14465  0097AE  C01A  FFD9         	movff	WindowIDBacktrack@statusSetIDUC,fsr2l
 14466  0097B2  C01B  FFDA         	movff	WindowIDBacktrack@statusSetIDUC+1,fsr2h
 14467  0097B6  0E00               	movlw	0
 14468  0097B8  6EDF               	movwf	indf2,c
 14469                           
 14470                           ; BSR set to: 2
 14471                           ;boostercomms.c: 632: return 1;
 14472  0097BA  0E01               	movlw	1
 14473                           
 14474                           ; BSR set to: 2
 14475                           ;boostercomms.c: 633: }else{
 14476                           
 14477                           ; BSR set to: 2
 14478  0097BC  0012               	return	
 14479  0097BE                     i2l4599:
 14480                           
 14481                           ;boostercomms.c: 634: *currentSerialUS |= (1 << *currentBitUC);
 14482  0097BE  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14483  0097C2  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14484  0097C6  50DF               	movf	indf2,w,c
 14485  0097C8  0102               	movlb	2	; () banked
 14486  0097CA  6F01               	movwf	??_WindowIDBacktrack& (0+255),b
 14487  0097CC  0E01               	movlw	1
 14488  0097CE  0102               	movlb	2	; () banked
 14489  0097D0  6F02               	movwf	(??_WindowIDBacktrack+1)& (0+255),b
 14490  0097D2  0E00               	movlw	0
 14491  0097D4  0102               	movlb	2	; () banked
 14492  0097D6  6F03               	movwf	(??_WindowIDBacktrack+2)& (0+255),b
 14493  0097D8  0102               	movlb	2	; () banked
 14494  0097DA  2B01               	incf	??_WindowIDBacktrack& (0+255),f,b
 14495  0097DC  D004               	goto	i2u412_44
 14496  0097DE                     i2u412_45:
 14497  0097DE  90D8               	bcf	status,0,c
 14498  0097E0  0102               	movlb	2	; () banked
 14499  0097E2  3702               	rlcf	(??_WindowIDBacktrack+1)& (0+255),f,b
 14500  0097E4  3703               	rlcf	(??_WindowIDBacktrack+2)& (0+255),f,b
 14501  0097E6                     i2u412_44:
 14502  0097E6  0102               	movlb	2	; () banked
 14503  0097E8  2F01               	decfsz	??_WindowIDBacktrack& (0+255),f,b
 14504  0097EA  D7F9               	goto	i2u412_45
 14505  0097EC  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14506  0097F0  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14507  0097F4  0102               	movlb	2	; () banked
 14508  0097F6  5102               	movf	(??_WindowIDBacktrack+1)& (0+255),w,b
 14509  0097F8  12DE               	iorwf	postinc2,f,c
 14510  0097FA  5103               	movf	(??_WindowIDBacktrack+2)& (0+255),w,b
 14511  0097FC  12DD               	iorwf	postdec2,f,c
 14512                           
 14513                           ; BSR set to: 2
 14514                           ;boostercomms.c: 635: BoosterCommandStart(*currentSerialUS, 0b000, *currentBitUC);
 14515  0097FE  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14516  009802  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14517  009806  CFDE F007          	movff	postinc2,BoosterCommandStart@destSerialUS
 14518  00980A  CFDD F008          	movff	postdec2,BoosterCommandStart@destSerialUS+1
 14519  00980E  0E00               	movlw	0
 14520  009810  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 14521  009812  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14522  009816  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14523  00981A  50DF               	movf	indf2,w,c
 14524  00981C  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 14525  00981E  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 14526                           
 14527                           ;boostercomms.c: 636: return 0;
 14528  009822  0E00               	movlw	0
 14529  009824  0012               	return	
 14530  009826                     __end_of_WindowIDBacktrack:
 14531                           	opt stack 0
 14532                           pclatu	equ	0xFFB
 14533                           pclath	equ	0xFFA
 14534                           tblptru	equ	0xFF8
 14535                           tblptrh	equ	0xFF7
 14536                           tblptrl	equ	0xFF6
 14537                           tablat	equ	0xFF5
 14538                           prodh	equ	0xFF4
 14539                           prodl	equ	0xFF3
 14540                           intcon	equ	0xFF2
 14541                           postinc0	equ	0xFEE
 14542                           fsr0h	equ	0xFEA
 14543                           fsr0l	equ	0xFE9
 14544                           wreg	equ	0xFE8
 14545                           indf1	equ	0xFE7
 14546                           postinc1	equ	0xFE6
 14547                           postdec1	equ	0xFE5
 14548                           fsr1h	equ	0xFE2
 14549                           fsr1l	equ	0xFE1
 14550                           indf2	equ	0xFDF
 14551                           postinc2	equ	0xFDE
 14552                           postdec2	equ	0xFDD
 14553                           plusw2	equ	0xFDB
 14554                           fsr2h	equ	0xFDA
 14555                           fsr2l	equ	0xFD9
 14556                           status	equ	0xFD8
 14557                           
 14558 ;; *************** function _AssignWindowID *****************
 14559 ;; Defined at:
 14560 ;;		line 640 in file "boostercomms.c"
 14561 ;; Parameters:    Size  Location     Type
 14562 ;;		None
 14563 ;; Auto vars:     Size  Location     Type
 14564 ;;  serialNumber    2   21[COMRAM] unsigned short 
 14565 ;;  newWindowUC     1   23[COMRAM] unsigned char 
 14566 ;; Return value:  Size  Location     Type
 14567 ;;                  1    wreg      void 
 14568 ;; Registers used:
 14569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14570 ;; Tracked objects:
 14571 ;;		On entry : 0/0
 14572 ;;		On exit  : 0/0
 14573 ;;		Unchanged: 0/0
 14574 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14576 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14578 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14579 ;;Total ram usage:        3 bytes
 14580 ;; Hardware stack levels used:    1
 14581 ;; Hardware stack levels required when called:    2
 14582 ;; This function calls:
 14583 ;;		_BoosterCommandStart
 14584 ;;		_LowestIdleWindow
 14585 ;; This function is called by:
 14586 ;;		_SetWindowID
 14587 ;; This function uses a non-reentrant model
 14588 ;;
 14589                           
 14590                           	psect	text73
 14591  00AE1A                     __ptext73:
 14592                           	opt stack 0
 14593  00AE1A                     _AssignWindowID:
 14594                           	opt stack 19
 14595                           
 14596                           ;boostercomms.c: 641: unsigned char newWindowUC;
 14597                           ;boostercomms.c: 642: unsigned short serialNumberUS;
 14598                           ;boostercomms.c: 644: newWindowUC = LowestIdleWindow();
 14599                           
 14600                           ;incstack = 0
 14601  00AE1A  EC96  F059         	call	_LowestIdleWindow	;wreg free
 14602  00AE1E  6E18               	movwf	AssignWindowID@newWindowUC,c
 14603                           
 14604                           ;boostercomms.c: 645: serialNumberUS = (commandResponseUS & ~0b1000000000000000);
 14605  00AE20  0EFF               	movlw	255
 14606  00AE22  0103               	movlb	3	; () banked
 14607  00AE24  15E6               	andwf	_commandResponseUS& (0+255),w,b
 14608  00AE26  6E16               	movwf	AssignWindowID@serialNumberUS,c
 14609  00AE28  0E7F               	movlw	127
 14610  00AE2A  0103               	movlb	3	; () banked
 14611  00AE2C  15E7               	andwf	(_commandResponseUS+1)& (0+255),w,b
 14612  00AE2E  6E17               	movwf	AssignWindowID@serialNumberUS+1,c
 14613                           
 14614                           ; BSR set to: 3
 14615                           ;boostercomms.c: 646: boosterCommsDataSerial[newWindowUC] = serialNumberUS;
 14616  00AE30  5018               	movf	AssignWindowID@newWindowUC,w,c
 14617  00AE32  0D02               	mullw	2
 14618  00AE34  0E00               	movlw	low _boosterCommsDataSerial
 14619  00AE36  24F3               	addwf	prodl,w,c
 14620  00AE38  6ED9               	movwf	fsr2l,c
 14621  00AE3A  0E03               	movlw	high _boosterCommsDataSerial
 14622  00AE3C  20F4               	addwfc	prodh,w,c
 14623  00AE3E  6EDA               	movwf	fsr2h,c
 14624  00AE40  C016  FFDE         	movff	AssignWindowID@serialNumberUS,postinc2
 14625  00AE44  C017  FFDD         	movff	AssignWindowID@serialNumberUS+1,postdec2
 14626                           
 14627                           ; BSR set to: 3
 14628                           ;boostercomms.c: 647: boosterCommsData[4][newWindowUC] = 0;
 14629  00AE48  5018               	movf	AssignWindowID@newWindowUC,w,c
 14630  00AE4A  0D01               	mullw	1
 14631  00AE4C  0E78               	movlw	low (_boosterCommsData+120)
 14632  00AE4E  24F3               	addwf	prodl,w,c
 14633  00AE50  6ED9               	movwf	fsr2l,c
 14634  00AE52  0E04               	movlw	high (_boosterCommsData+120)
 14635  00AE54  20F4               	addwfc	prodh,w,c
 14636  00AE56  6EDA               	movwf	fsr2h,c
 14637  00AE58  0E00               	movlw	0
 14638  00AE5A  6EDF               	movwf	indf2,c
 14639                           
 14640                           ; BSR set to: 3
 14641                           ;boostercomms.c: 649: BoosterCommandStart(serialNumberUS, 0b010, newWindowUC+1);
 14642  00AE5C  C016  F007         	movff	AssignWindowID@serialNumberUS,BoosterCommandStart@destSerialUS
 14643  00AE60  C017  F008         	movff	AssignWindowID@serialNumberUS+1,BoosterCommandStart@destSerialUS+1
 14644  00AE64  0E02               	movlw	2
 14645  00AE66  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 14646  00AE68  2818               	incf	AssignWindowID@newWindowUC,w,c
 14647  00AE6A  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 14648  00AE6C  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 14649  00AE70  0012               	return		;funcret
 14650  00AE72                     __end_of_AssignWindowID:
 14651                           	opt stack 0
 14652                           pclatu	equ	0xFFB
 14653                           pclath	equ	0xFFA
 14654                           tblptru	equ	0xFF8
 14655                           tblptrh	equ	0xFF7
 14656                           tblptrl	equ	0xFF6
 14657                           tablat	equ	0xFF5
 14658                           prodh	equ	0xFF4
 14659                           prodl	equ	0xFF3
 14660                           intcon	equ	0xFF2
 14661                           postinc0	equ	0xFEE
 14662                           fsr0h	equ	0xFEA
 14663                           fsr0l	equ	0xFE9
 14664                           wreg	equ	0xFE8
 14665                           indf1	equ	0xFE7
 14666                           postinc1	equ	0xFE6
 14667                           postdec1	equ	0xFE5
 14668                           fsr1h	equ	0xFE2
 14669                           fsr1l	equ	0xFE1
 14670                           indf2	equ	0xFDF
 14671                           postinc2	equ	0xFDE
 14672                           postdec2	equ	0xFDD
 14673                           plusw2	equ	0xFDB
 14674                           fsr2h	equ	0xFDA
 14675                           fsr2l	equ	0xFD9
 14676                           status	equ	0xFD8
 14677                           
 14678 ;; *************** function _AssignSerialNumber *****************
 14679 ;; Defined at:
 14680 ;;		line 652 in file "boostercomms.c"
 14681 ;; Parameters:    Size  Location     Type
 14682 ;;		None
 14683 ;; Auto vars:     Size  Location     Type
 14684 ;;		None
 14685 ;; Return value:  Size  Location     Type
 14686 ;;                  1    wreg      void 
 14687 ;; Registers used:
 14688 ;;		wreg, status,2, status,0, cstack
 14689 ;; Tracked objects:
 14690 ;;		On entry : 0/0
 14691 ;;		On exit  : 0/0
 14692 ;;		Unchanged: 0/0
 14693 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14698 ;;Total ram usage:        0 bytes
 14699 ;; Hardware stack levels used:    1
 14700 ;; Hardware stack levels required when called:    3
 14701 ;; This function calls:
 14702 ;;		_BoosterCommandStart
 14703 ;;		i2_WriteFlashValues
 14704 ;; This function is called by:
 14705 ;;		_SetWindowID
 14706 ;; This function uses a non-reentrant model
 14707 ;;
 14708                           
 14709                           	psect	text74
 14710  00B484                     __ptext74:
 14711                           	opt stack 0
 14712  00B484                     _AssignSerialNumber:
 14713                           	opt stack 18
 14714                           
 14715                           ;boostercomms.c: 653: BoosterCommandStart(nextSerialUSG++, 0b001, 0);
 14716                           
 14717                           ;incstack = 0
 14718  00B484  C291  F007         	movff	_nextSerialUSG,BoosterCommandStart@destSerialUS
 14719  00B488  C292  F008         	movff	_nextSerialUSG+1,BoosterCommandStart@destSerialUS+1
 14720  00B48C  0E01               	movlw	1
 14721  00B48E  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 14722  00B490  0E00               	movlw	0
 14723  00B492  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 14724  00B494  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 14725  00B498  0102               	movlb	2	; () banked
 14726  00B49A  4B91               	infsnz	_nextSerialUSG& (0+255),f,b
 14727  00B49C  2B92               	incf	(_nextSerialUSG+1)& (0+255),f,b
 14728                           
 14729                           ; BSR set to: 2
 14730                           ;boostercomms.c: 654: WriteFlashValues();
 14731  00B49E  ECDC  F058         	call	i2_WriteFlashValues	;wreg free
 14732  00B4A2  0012               	return		;funcret
 14733  00B4A4                     __end_of_AssignSerialNumber:
 14734                           	opt stack 0
 14735                           pclatu	equ	0xFFB
 14736                           pclath	equ	0xFFA
 14737                           tblptru	equ	0xFF8
 14738                           tblptrh	equ	0xFF7
 14739                           tblptrl	equ	0xFF6
 14740                           tablat	equ	0xFF5
 14741                           prodh	equ	0xFF4
 14742                           prodl	equ	0xFF3
 14743                           intcon	equ	0xFF2
 14744                           postinc0	equ	0xFEE
 14745                           fsr0h	equ	0xFEA
 14746                           fsr0l	equ	0xFE9
 14747                           wreg	equ	0xFE8
 14748                           indf1	equ	0xFE7
 14749                           postinc1	equ	0xFE6
 14750                           postdec1	equ	0xFE5
 14751                           fsr1h	equ	0xFE2
 14752                           fsr1l	equ	0xFE1
 14753                           indf2	equ	0xFDF
 14754                           postinc2	equ	0xFDE
 14755                           postdec2	equ	0xFDD
 14756                           plusw2	equ	0xFDB
 14757                           fsr2h	equ	0xFDA
 14758                           fsr2l	equ	0xFD9
 14759                           status	equ	0xFD8
 14760                           
 14761 ;; *************** function i2_WriteFlashValues *****************
 14762 ;; Defined at:
 14763 ;;		line 221 in file "peripherals.c"
 14764 ;; Parameters:    Size  Location     Type
 14765 ;;		None
 14766 ;; Auto vars:     Size  Location     Type
 14767 ;;		None
 14768 ;; Return value:  Size  Location     Type
 14769 ;;                  1    wreg      void 
 14770 ;; Registers used:
 14771 ;;		wreg, status,2, status,0, cstack
 14772 ;; Tracked objects:
 14773 ;;		On entry : 0/0
 14774 ;;		On exit  : 0/0
 14775 ;;		Unchanged: 0/0
 14776 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;Total ram usage:        0 bytes
 14782 ;; Hardware stack levels used:    1
 14783 ;; Hardware stack levels required when called:    2
 14784 ;; This function calls:
 14785 ;;		i2_FlashEraseBlock
 14786 ;;		i2_FlashWriteWord
 14787 ;; This function is called by:
 14788 ;;		_AssignSerialNumber
 14789 ;; This function uses a non-reentrant model
 14790 ;;
 14791                           
 14792                           	psect	text75
 14793  00B1B8                     __ptext75:
 14794                           	opt stack 0
 14795  00B1B8                     i2_WriteFlashValues:
 14796                           	opt stack 18
 14797                           
 14798                           ;peripherals.c: 222: FlashEraseBlock(0xFBFE);
 14799                           
 14800                           ;incstack = 0
 14801  00B1B8  0EFB               	movlw	251
 14802  00B1BA  6E02               	movwf	i2FlashEraseBlock@flashAddressUS+1,c
 14803  00B1BC  0EFE               	movlw	254
 14804  00B1BE  6E01               	movwf	i2FlashEraseBlock@flashAddressUS,c
 14805  00B1C0  ECF3  F059         	call	i2_FlashEraseBlock	;wreg free
 14806                           
 14807                           ;peripherals.c: 223: FlashWriteWord(0xFBFE, nextSerialUSG, nextSerialUSG >> 8);
 14808  00B1C4  0EFB               	movlw	251
 14809  00B1C6  6E02               	movwf	i2FlashWriteWord@flashAddressUS+1,c
 14810  00B1C8  0EFE               	movlw	254
 14811  00B1CA  6E01               	movwf	i2FlashWriteWord@flashAddressUS,c
 14812  00B1CC  C291  F003         	movff	_nextSerialUSG,i2FlashWriteWord@lsbUC
 14813  00B1D0  0102               	movlb	2	; () banked
 14814  00B1D2  5192               	movf	(_nextSerialUSG+1)& (0+255),w,b
 14815  00B1D4  6E04               	movwf	i2FlashWriteWord@msbUC,c
 14816  00B1D6  EC15  F059         	call	i2_FlashWriteWord	;wreg free
 14817                           
 14818                           ;peripherals.c: 224: FlashWriteWord(0xFBFD, iscSerialUSG, iscSerialUSG >> 8);
 14819  00B1DA  0EFB               	movlw	251
 14820  00B1DC  6E02               	movwf	i2FlashWriteWord@flashAddressUS+1,c
 14821  00B1DE  0EFD               	movlw	253
 14822  00B1E0  6E01               	movwf	i2FlashWriteWord@flashAddressUS,c
 14823  00B1E2  C2A9  F003         	movff	_iscSerialUSG,i2FlashWriteWord@lsbUC
 14824  00B1E6  0102               	movlb	2	; () banked
 14825  00B1E8  51AA               	movf	(_iscSerialUSG+1)& (0+255),w,b
 14826  00B1EA  6E04               	movwf	i2FlashWriteWord@msbUC,c
 14827  00B1EC  EC15  F059         	call	i2_FlashWriteWord	;wreg free
 14828  00B1F0  0012               	return		;funcret
 14829  00B1F2                     __end_ofi2_WriteFlashValues:
 14830                           	opt stack 0
 14831                           pclatu	equ	0xFFB
 14832                           pclath	equ	0xFFA
 14833                           tblptru	equ	0xFF8
 14834                           tblptrh	equ	0xFF7
 14835                           tblptrl	equ	0xFF6
 14836                           tablat	equ	0xFF5
 14837                           prodh	equ	0xFF4
 14838                           prodl	equ	0xFF3
 14839                           intcon	equ	0xFF2
 14840                           postinc0	equ	0xFEE
 14841                           fsr0h	equ	0xFEA
 14842                           fsr0l	equ	0xFE9
 14843                           wreg	equ	0xFE8
 14844                           indf1	equ	0xFE7
 14845                           postinc1	equ	0xFE6
 14846                           postdec1	equ	0xFE5
 14847                           fsr1h	equ	0xFE2
 14848                           fsr1l	equ	0xFE1
 14849                           indf2	equ	0xFDF
 14850                           postinc2	equ	0xFDE
 14851                           postdec2	equ	0xFDD
 14852                           plusw2	equ	0xFDB
 14853                           fsr2h	equ	0xFDA
 14854                           fsr2l	equ	0xFD9
 14855                           status	equ	0xFD8
 14856                           
 14857 ;; *************** function i2_FlashWriteWord *****************
 14858 ;; Defined at:
 14859 ;;		line 189 in file "peripherals.c"
 14860 ;; Parameters:    Size  Location     Type
 14861 ;;  flashAddress    2    0[COMRAM] unsigned short 
 14862 ;;  lsbUC           1    2[COMRAM] unsigned char 
 14863 ;;  msbUC           1    3[COMRAM] unsigned char 
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;  FlashWriteWo    1    4[COMRAM] unsigned char 
 14866 ;; Return value:  Size  Location     Type
 14867 ;;                  1    wreg      void 
 14868 ;; Registers used:
 14869 ;;		wreg, status,2, cstack
 14870 ;; Tracked objects:
 14871 ;;		On entry : 0/0
 14872 ;;		On exit  : 0/0
 14873 ;;		Unchanged: 0/0
 14874 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14878 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14879 ;;Total ram usage:        5 bytes
 14880 ;; Hardware stack levels used:    1
 14881 ;; Hardware stack levels required when called:    1
 14882 ;; This function calls:
 14883 ;;		i2_FlashUnlockSequence
 14884 ;; This function is called by:
 14885 ;;		i2_WriteFlashValues
 14886 ;; This function uses a non-reentrant model
 14887 ;;
 14888                           
 14889                           	psect	text76
 14890  00B22A                     __ptext76:
 14891                           	opt stack 0
 14892  00B22A                     i2_FlashWriteWord:
 14893                           	opt stack 18
 14894                           
 14895                           ;peripherals.c: 190: unsigned char intStatusUC;
 14896                           ;peripherals.c: 192: intStatusUC = INTCONbits.GIE;
 14897                           
 14898                           ;incstack = 0
 14899  00B22A  0E00               	movlw	0
 14900  00B22C  BEF2               	btfsc	intcon,7,c	;volatile
 14901  00B22E  0E01               	movlw	1
 14902  00B230  6E05               	movwf	i2FlashWriteWord@intStatusUC,c
 14903                           
 14904                           ;peripherals.c: 193: INTCONbits.GIE = 0;
 14905  00B232  9EF2               	bcf	intcon,7,c	;volatile
 14906                           
 14907                           ;peripherals.c: 195: TBLPTRU = 0;
 14908  00B234  0E00               	movlw	0
 14909  00B236  6EF8               	movwf	tblptru,c	;volatile
 14910                           
 14911                           ;peripherals.c: 196: TBLPTRH = flashAddressUS >> 8;
 14912  00B238  5002               	movf	i2FlashWriteWord@flashAddressUS+1,w,c
 14913  00B23A  6EF7               	movwf	tblptrh,c	;volatile
 14914                           
 14915                           ;peripherals.c: 197: TBLPTRL = flashAddressUS;
 14916  00B23C  C001  FFF6         	movff	i2FlashWriteWord@flashAddressUS,tblptrl	;volatile
 14917                           
 14918                           ;peripherals.c: 199: TABLAT = lsbUC;
 14919  00B240  C003  FFF5         	movff	i2FlashWriteWord@lsbUC,tablat	;volatile
 14920  00B244  000D               	tblwt		*+	;# 
 14921                           
 14922                           ;peripherals.c: 205: TABLAT = msbUC;
 14923  00B246  C004  FFF5         	movff	i2FlashWriteWord@msbUC,tablat	;volatile
 14924  00B24A  000C               	tblwt		*	;# 
 14925                           
 14926                           ;peripherals.c: 211: EECON1bits.WPROG = 1;
 14927  00B24C  8AA6               	bsf	4006,5,c	;volatile
 14928                           
 14929                           ;peripherals.c: 212: EECON1bits.WREN = 1;
 14930  00B24E  84A6               	bsf	4006,2,c	;volatile
 14931                           
 14932                           ;peripherals.c: 213: FlashUnlockSequence();
 14933  00B250  EC23  F05B         	call	i2_FlashUnlockSequence	;wreg free
 14934                           
 14935                           ;peripherals.c: 214: EECON1bits.WPROG = 0;
 14936  00B254  9AA6               	bcf	4006,5,c	;volatile
 14937                           
 14938                           ;peripherals.c: 215: EECON1bits.WREN = 0;
 14939  00B256  94A6               	bcf	4006,2,c	;volatile
 14940                           
 14941                           ;peripherals.c: 217: if(intStatusUC)
 14942  00B258  5005               	movf	i2FlashWriteWord@intStatusUC,w,c
 14943  00B25A  B4D8               	btfsc	status,2,c
 14944  00B25C  0012               	return	
 14945                           
 14946                           ;peripherals.c: 218: INTCONbits.GIE = 1;
 14947  00B25E  8EF2               	bsf	intcon,7,c	;volatile
 14948  00B260  0012               	return	
 14949  00B262                     __end_ofi2_FlashWriteWord:
 14950                           	opt stack 0
 14951                           pclatu	equ	0xFFB
 14952                           pclath	equ	0xFFA
 14953                           tblptru	equ	0xFF8
 14954                           tblptrh	equ	0xFF7
 14955                           tblptrl	equ	0xFF6
 14956                           tablat	equ	0xFF5
 14957                           prodh	equ	0xFF4
 14958                           prodl	equ	0xFF3
 14959                           intcon	equ	0xFF2
 14960                           postinc0	equ	0xFEE
 14961                           fsr0h	equ	0xFEA
 14962                           fsr0l	equ	0xFE9
 14963                           wreg	equ	0xFE8
 14964                           indf1	equ	0xFE7
 14965                           postinc1	equ	0xFE6
 14966                           postdec1	equ	0xFE5
 14967                           fsr1h	equ	0xFE2
 14968                           fsr1l	equ	0xFE1
 14969                           indf2	equ	0xFDF
 14970                           postinc2	equ	0xFDE
 14971                           postdec2	equ	0xFDD
 14972                           plusw2	equ	0xFDB
 14973                           fsr2h	equ	0xFDA
 14974                           fsr2l	equ	0xFD9
 14975                           status	equ	0xFD8
 14976                           
 14977 ;; *************** function i2_FlashEraseBlock *****************
 14978 ;; Defined at:
 14979 ;;		line 164 in file "peripherals.c"
 14980 ;; Parameters:    Size  Location     Type
 14981 ;;  flashAddress    2    0[COMRAM] unsigned short 
 14982 ;; Auto vars:     Size  Location     Type
 14983 ;;  FlashEraseBl    1    2[COMRAM] unsigned char 
 14984 ;; Return value:  Size  Location     Type
 14985 ;;                  1    wreg      void 
 14986 ;; Registers used:
 14987 ;;		wreg, status,2, status,0, cstack
 14988 ;; Tracked objects:
 14989 ;;		On entry : 0/0
 14990 ;;		On exit  : 0/0
 14991 ;;		Unchanged: 0/0
 14992 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14996 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14997 ;;Total ram usage:        3 bytes
 14998 ;; Hardware stack levels used:    1
 14999 ;; Hardware stack levels required when called:    1
 15000 ;; This function calls:
 15001 ;;		i2_FlashUnlockSequence
 15002 ;; This function is called by:
 15003 ;;		i2_WriteFlashValues
 15004 ;; This function uses a non-reentrant model
 15005 ;;
 15006                           
 15007                           	psect	text77
 15008  00B3E6                     __ptext77:
 15009                           	opt stack 0
 15010  00B3E6                     i2_FlashEraseBlock:
 15011                           	opt stack 18
 15012                           
 15013                           ;peripherals.c: 165: unsigned char intStatusUC;
 15014                           ;peripherals.c: 167: intStatusUC = INTCONbits.GIE;
 15015                           
 15016                           ;incstack = 0
 15017  00B3E6  0E00               	movlw	0
 15018  00B3E8  BEF2               	btfsc	intcon,7,c	;volatile
 15019  00B3EA  0E01               	movlw	1
 15020  00B3EC  6E03               	movwf	i2FlashEraseBlock@intStatusUC,c
 15021                           
 15022                           ;peripherals.c: 168: INTCONbits.GIE = 0;
 15023  00B3EE  9EF2               	bcf	intcon,7,c	;volatile
 15024                           
 15025                           ;peripherals.c: 170: TBLPTRU = 0;
 15026  00B3F0  0E00               	movlw	0
 15027  00B3F2  6EF8               	movwf	tblptru,c	;volatile
 15028                           
 15029                           ;peripherals.c: 171: TBLPTRH = (flashAddressUS >> 8) & ~0b11;
 15030  00B3F4  5002               	movf	i2FlashEraseBlock@flashAddressUS+1,w,c
 15031  00B3F6  0BFC               	andlw	252
 15032  00B3F8  6EF7               	movwf	tblptrh,c	;volatile
 15033                           
 15034                           ;peripherals.c: 172: TBLPTRU = 0;
 15035  00B3FA  0E00               	movlw	0
 15036  00B3FC  6EF8               	movwf	tblptru,c	;volatile
 15037                           
 15038                           ;peripherals.c: 174: EECON1bits.WREN = 1;
 15039  00B3FE  84A6               	bsf	4006,2,c	;volatile
 15040                           
 15041                           ;peripherals.c: 175: EECON1bits.FREE = 1;
 15042  00B400  88A6               	bsf	4006,4,c	;volatile
 15043                           
 15044                           ;peripherals.c: 176: FlashUnlockSequence();
 15045  00B402  EC23  F05B         	call	i2_FlashUnlockSequence	;wreg free
 15046                           
 15047                           ;peripherals.c: 177: EECON1bits.WREN = 0;
 15048  00B406  94A6               	bcf	4006,2,c	;volatile
 15049                           
 15050                           ;peripherals.c: 179: if(intStatusUC)
 15051  00B408  5003               	movf	i2FlashEraseBlock@intStatusUC,w,c
 15052  00B40A  B4D8               	btfsc	status,2,c
 15053  00B40C  0012               	return	
 15054                           
 15055                           ;peripherals.c: 180: INTCONbits.GIE = 1;
 15056  00B40E  8EF2               	bsf	intcon,7,c	;volatile
 15057  00B410  0012               	return	
 15058  00B412                     __end_ofi2_FlashEraseBlock:
 15059                           	opt stack 0
 15060                           pclatu	equ	0xFFB
 15061                           pclath	equ	0xFFA
 15062                           tblptru	equ	0xFF8
 15063                           tblptrh	equ	0xFF7
 15064                           tblptrl	equ	0xFF6
 15065                           tablat	equ	0xFF5
 15066                           prodh	equ	0xFF4
 15067                           prodl	equ	0xFF3
 15068                           intcon	equ	0xFF2
 15069                           postinc0	equ	0xFEE
 15070                           fsr0h	equ	0xFEA
 15071                           fsr0l	equ	0xFE9
 15072                           wreg	equ	0xFE8
 15073                           indf1	equ	0xFE7
 15074                           postinc1	equ	0xFE6
 15075                           postdec1	equ	0xFE5
 15076                           fsr1h	equ	0xFE2
 15077                           fsr1l	equ	0xFE1
 15078                           indf2	equ	0xFDF
 15079                           postinc2	equ	0xFDE
 15080                           postdec2	equ	0xFDD
 15081                           plusw2	equ	0xFDB
 15082                           fsr2h	equ	0xFDA
 15083                           fsr2l	equ	0xFD9
 15084                           status	equ	0xFD8
 15085                           
 15086 ;; *************** function i2_FlashUnlockSequence *****************
 15087 ;; Defined at:
 15088 ;;		line 183 in file "peripherals.c"
 15089 ;; Parameters:    Size  Location     Type
 15090 ;;		None
 15091 ;; Auto vars:     Size  Location     Type
 15092 ;;		None
 15093 ;; Return value:  Size  Location     Type
 15094 ;;                  1    wreg      void 
 15095 ;; Registers used:
 15096 ;;		wreg, status,2
 15097 ;; Tracked objects:
 15098 ;;		On entry : 0/0
 15099 ;;		On exit  : 0/0
 15100 ;;		Unchanged: 0/0
 15101 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 15102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15106 ;;Total ram usage:        0 bytes
 15107 ;; Hardware stack levels used:    1
 15108 ;; This function calls:
 15109 ;;		Nothing
 15110 ;; This function is called by:
 15111 ;;		i2_FlashEraseBlock
 15112 ;;		i2_FlashWriteWord
 15113 ;; This function uses a non-reentrant model
 15114 ;;
 15115                           
 15116                           	psect	text78
 15117  00B646                     __ptext78:
 15118                           	opt stack 0
 15119  00B646                     i2_FlashUnlockSequence:
 15120                           	opt stack 18
 15121                           
 15122                           ;peripherals.c: 184: EECON2 = 0x55;
 15123                           
 15124                           ;incstack = 0
 15125  00B646  0E55               	movlw	85
 15126  00B648  6EA7               	movwf	4007,c	;volatile
 15127                           
 15128                           ;peripherals.c: 185: EECON2 = 0xAA;
 15129  00B64A  0EAA               	movlw	170
 15130  00B64C  6EA7               	movwf	4007,c	;volatile
 15131                           
 15132                           ;peripherals.c: 186: EECON1bits.WR = 1;
 15133  00B64E  82A6               	bsf	4006,1,c	;volatile
 15134  00B650  0012               	return		;funcret
 15135  00B652                     __end_ofi2_FlashUnlockSequence:
 15136                           	opt stack 0
 15137                           pclatu	equ	0xFFB
 15138                           pclath	equ	0xFFA
 15139                           tblptru	equ	0xFF8
 15140                           tblptrh	equ	0xFF7
 15141                           tblptrl	equ	0xFF6
 15142                           tablat	equ	0xFF5
 15143                           prodh	equ	0xFF4
 15144                           prodl	equ	0xFF3
 15145                           intcon	equ	0xFF2
 15146                           postinc0	equ	0xFEE
 15147                           fsr0h	equ	0xFEA
 15148                           fsr0l	equ	0xFE9
 15149                           wreg	equ	0xFE8
 15150                           indf1	equ	0xFE7
 15151                           postinc1	equ	0xFE6
 15152                           postdec1	equ	0xFE5
 15153                           fsr1h	equ	0xFE2
 15154                           fsr1l	equ	0xFE1
 15155                           indf2	equ	0xFDF
 15156                           postinc2	equ	0xFDE
 15157                           postdec2	equ	0xFDD
 15158                           plusw2	equ	0xFDB
 15159                           fsr2h	equ	0xFDA
 15160                           fsr2l	equ	0xFD9
 15161                           status	equ	0xFD8
 15162                           
 15163 ;; *************** function _QueryWinSerial *****************
 15164 ;; Defined at:
 15165 ;;		line 751 in file "boostercomms.c"
 15166 ;; Parameters:    Size  Location     Type
 15167 ;;		None
 15168 ;; Auto vars:     Size  Location     Type
 15169 ;;  j               1   27[COMRAM] unsigned char 
 15170 ;;  i               1   28[COMRAM] unsigned char 
 15171 ;;  serialNumber    2   25[COMRAM] unsigned short 
 15172 ;; Return value:  Size  Location     Type
 15173 ;;                  1    wreg      unsigned char 
 15174 ;; Registers used:
 15175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15176 ;; Tracked objects:
 15177 ;;		On entry : 0/0
 15178 ;;		On exit  : 0/0
 15179 ;;		Unchanged: 0/0
 15180 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 15181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15182 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15183 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15184 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15185 ;;Total ram usage:        8 bytes
 15186 ;; Hardware stack levels used:    1
 15187 ;; Hardware stack levels required when called:    2
 15188 ;; This function calls:
 15189 ;;		_BoosterCommandStart
 15190 ;;		_LowestMissingSerial
 15191 ;;		i2_ClearPastValue
 15192 ;;		i2_ResetSingleBoosterState
 15193 ;; This function is called by:
 15194 ;;		_BoosterCommsDispatcher
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198                           	psect	text79
 15199  009826                     __ptext79:
 15200                           	opt stack 0
 15201  009826                     _QueryWinSerial:
 15202                           	opt stack 20
 15203                           
 15204                           ;boostercomms.c: 754: unsigned short serialNumberUS;
 15205                           ;boostercomms.c: 757: if(statusGetSerialUCS == 1){
 15206                           
 15207                           ;incstack = 0
 15208  009826  0102               	movlb	2	; () banked
 15209  009828  059D               	decf	_statusGetSerialUCS& (0+255),w,b
 15210  00982A  A4D8               	btfss	status,2,c
 15211  00982C  D0A8               	goto	i2l5237
 15212                           
 15213                           ; BSR set to: 2
 15214                           ;boostercomms.c: 758: __nop();
 15215  00982E  F000               	nop	
 15216                           
 15217                           ;boostercomms.c: 759: if(!(statusFlagsUSLG & 0b000000000000100000000000) ||
 15218                           ;boostercomms.c: 760: (statusFlagsUSLG & 0b000000000100000000000000) ||
 15219                           ;boostercomms.c: 761: (statusFlagsUSLG & 0b000000000010000000000000) ||!(statusFlagsUSLG
      +                           & 0b000000000001000000000000)){
 15220  009830  0102               	movlb	2	; () banked
 15221  009832  A78B               	btfss	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 15222  009834  D009               	goto	i2l5161
 15223                           
 15224                           ; BSR set to: 2
 15225  009836  0102               	movlb	2	; () banked
 15226  009838  BD8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 15227  00983A  D006               	goto	i2l5161
 15228                           
 15229                           ; BSR set to: 2
 15230  00983C  0102               	movlb	2	; () banked
 15231  00983E  BB8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),5,b	;volatile
 15232  009840  D003               	goto	i2l5161
 15233                           
 15234                           ; BSR set to: 2
 15235  009842  0102               	movlb	2	; () banked
 15236  009844  B98B               	btfsc	(_statusFlagsUSLG+1)& (0+255),4,b	;volatile
 15237  009846  D018               	goto	i2l566
 15238  009848                     i2l5161:
 15239                           
 15240                           ; BSR set to: 2
 15241                           ;boostercomms.c: 763: if(QueryFailureCounter>10){
 15242  009848  0E0A               	movlw	10
 15243  00984A  0102               	movlb	2	; () banked
 15244  00984C  659F               	cpfsgt	_QueryFailureCounter& (0+255),b
 15245  00984E  D005               	goto	i2l5169
 15246                           
 15247                           ; BSR set to: 2
 15248                           ;boostercomms.c: 764: statusGetSerialUCS = 0;
 15249  009850  0E00               	movlw	0
 15250  009852  0102               	movlb	2	; () banked
 15251  009854  6F9D               	movwf	_statusGetSerialUCS& (0+255),b
 15252                           
 15253                           ; BSR set to: 2
 15254                           ;boostercomms.c: 765: return 1;
 15255  009856  0E01               	movlw	1
 15256                           
 15257                           ; BSR set to: 2
 15258  009858  0012               	return	
 15259  00985A                     i2l5169:
 15260                           
 15261                           ; BSR set to: 2
 15262                           ;boostercomms.c: 766: }
 15263                           ;boostercomms.c: 767: QueryFailureCounter++;
 15264  00985A  0102               	movlb	2	; () banked
 15265  00985C  2B9F               	incf	_QueryFailureCounter& (0+255),f,b
 15266                           
 15267                           ; BSR set to: 2
 15268                           ;boostercomms.c: 768: BoosterCommandStart(0, 0b101, missingSerialWinUCS+1);
 15269  00985E  0E00               	movlw	0
 15270  009860  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 15271  009862  0E00               	movlw	0
 15272  009864  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 15273  009866  0E05               	movlw	5
 15274  009868  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 15275  00986A  0102               	movlb	2	; () banked
 15276  00986C  299E               	incf	_missingSerialWinUCS& (0+255),w,b
 15277  00986E  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 15278  009870  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 15279  009874                     i2l5173:
 15280                           
 15281                           ;boostercomms.c: 769: return 0;
 15282  009874  0E00               	movlw	0
 15283  009876  0012               	return	
 15284  009878                     i2l566:
 15285                           
 15286                           ; BSR set to: 2
 15287  009878  0102               	movlb	2	; () banked
 15288  00987A  A78B               	btfss	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 15289  00987C  D036               	goto	i2l5199
 15290                           
 15291                           ; BSR set to: 2
 15292  00987E  0102               	movlb	2	; () banked
 15293  009880  A98B               	btfss	(_statusFlagsUSLG+1)& (0+255),4,b	;volatile
 15294  009882  D033               	goto	i2l5199
 15295                           
 15296                           ; BSR set to: 2
 15297  009884  0102               	movlb	2	; () banked
 15298  009886  BB8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),5,b	;volatile
 15299  009888  D030               	goto	i2l5199
 15300                           
 15301                           ; BSR set to: 2
 15302                           ;boostercomms.c: 771: QueryFailureCounter=0;
 15303  00988A  0E00               	movlw	0
 15304  00988C  0102               	movlb	2	; () banked
 15305  00988E  6F9F               	movwf	_QueryFailureCounter& (0+255),b
 15306                           
 15307                           ; BSR set to: 2
 15308                           ;boostercomms.c: 772: serialNumberUS = (commandResponseUS & ~0b1000000000000000);
 15309  009890  0EFF               	movlw	255
 15310  009892  0103               	movlb	3	; () banked
 15311  009894  15E6               	andwf	_commandResponseUS& (0+255),w,b
 15312  009896  6E1A               	movwf	QueryWinSerial@serialNumberUS,c
 15313  009898  0E7F               	movlw	127
 15314  00989A  0103               	movlb	3	; () banked
 15315  00989C  15E7               	andwf	(_commandResponseUS+1)& (0+255),w,b
 15316  00989E  6E1B               	movwf	QueryWinSerial@serialNumberUS+1,c
 15317                           
 15318                           ; BSR set to: 3
 15319                           ;boostercomms.c: 773: boosterCommsDataSerial[missingSerialWinUCS] = serialNumberUS;
 15320  0098A0  0102               	movlb	2	; () banked
 15321  0098A2  519E               	movf	_missingSerialWinUCS& (0+255),w,b
 15322  0098A4  0D02               	mullw	2
 15323  0098A6  0E00               	movlw	low _boosterCommsDataSerial
 15324  0098A8  24F3               	addwf	prodl,w,c
 15325  0098AA  6ED9               	movwf	fsr2l,c
 15326  0098AC  0E03               	movlw	high _boosterCommsDataSerial
 15327  0098AE  20F4               	addwfc	prodh,w,c
 15328  0098B0  6EDA               	movwf	fsr2h,c
 15329  0098B2  C01A  FFDE         	movff	QueryWinSerial@serialNumberUS,postinc2
 15330  0098B6  C01B  FFDD         	movff	QueryWinSerial@serialNumberUS+1,postdec2
 15331                           
 15332                           ; BSR set to: 2
 15333                           ;boostercomms.c: 774: ClearPastValue(missingSerialWinUCS);
 15334  0098BA  0102               	movlb	2	; () banked
 15335  0098BC  519E               	movf	_missingSerialWinUCS& (0+255),w,b
 15336  0098BE  EC51  F056         	call	i2_ClearPastValue
 15337                           
 15338                           ;boostercomms.c: 775: if((missingSerialWinUCS = LowestMissingSerial()) < 30){
 15339  0098C2  EC39  F057         	call	_LowestMissingSerial	;wreg free
 15340  0098C6  0102               	movlb	2	; () banked
 15341  0098C8  6F9E               	movwf	_missingSerialWinUCS& (0+255),b
 15342  0098CA  0E1E               	movlw	30
 15343  0098CC  0102               	movlb	2	; () banked
 15344  0098CE  619E               	cpfslt	_missingSerialWinUCS& (0+255),b
 15345  0098D0  D00C               	goto	i2l5199
 15346                           
 15347                           ; BSR set to: 2
 15348                           ;boostercomms.c: 776: BoosterCommandStart(0, 0b101, missingSerialWinUCS+1);
 15349  0098D2  0E00               	movlw	0
 15350  0098D4  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 15351  0098D6  0E00               	movlw	0
 15352  0098D8  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 15353  0098DA  0E05               	movlw	5
 15354  0098DC  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 15355  0098DE  0102               	movlb	2	; () banked
 15356  0098E0  299E               	incf	_missingSerialWinUCS& (0+255),w,b
 15357  0098E2  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 15358  0098E4  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 15359  0098E8  D7C5               	goto	i2l5173
 15360  0098EA                     i2l5199:
 15361                           
 15362                           ;boostercomms.c: 778: }
 15363                           ;boostercomms.c: 779: }
 15364                           ;boostercomms.c: 780: for(char i=1;i<29;i++){
 15365  0098EA  0E01               	movlw	1
 15366  0098EC  6E1D               	movwf	QueryWinSerial@i,c
 15367  0098EE                     i2l5201:
 15368  0098EE  0E1C               	movlw	28
 15369  0098F0  641D               	cpfsgt	QueryWinSerial@i,c
 15370  0098F2  D001               	goto	i2l5205
 15371  0098F4  D03F               	goto	i2l5229
 15372  0098F6                     i2l5205:
 15373                           
 15374                           ;boostercomms.c: 781: for(char j=i+1;j<29;j++){
 15375  0098F6  281D               	incf	QueryWinSerial@i,w,c
 15376  0098F8  6E1C               	movwf	QueryWinSerial@j,c
 15377  0098FA  0E1C               	movlw	28
 15378  0098FC  641C               	cpfsgt	QueryWinSerial@j,c
 15379  0098FE  D001               	goto	i2l5209
 15380  009900  D037               	goto	i2l5225
 15381  009902                     i2l5209:
 15382                           
 15383                           ;boostercomms.c: 782: if((boosterCommsDataSerial[i]==boosterCommsDataSerial[j])&&!(boost
      +                          erCommsDataSerial[i]==0)){
 15384  009902  501C               	movf	QueryWinSerial@j,w,c
 15385  009904  0D02               	mullw	2
 15386  009906  0E00               	movlw	low _boosterCommsDataSerial
 15387  009908  24F3               	addwf	prodl,w,c
 15388  00990A  6ED9               	movwf	fsr2l,c
 15389  00990C  0E03               	movlw	high _boosterCommsDataSerial
 15390  00990E  20F4               	addwfc	prodh,w,c
 15391  009910  6EDA               	movwf	fsr2h,c
 15392  009912  501D               	movf	QueryWinSerial@i,w,c
 15393  009914  0D02               	mullw	2
 15394  009916  0E00               	movlw	low _boosterCommsDataSerial
 15395  009918  24F3               	addwf	prodl,w,c
 15396  00991A  6EE1               	movwf	fsr1l,c
 15397  00991C  0E03               	movlw	high _boosterCommsDataSerial
 15398  00991E  20F4               	addwfc	prodh,w,c
 15399  009920  6EE2               	movwf	fsr1h,c
 15400  009922  50DE               	movf	postinc2,w,c
 15401  009924  18E6               	xorwf	postinc1,w,c
 15402  009926  E122               	bnz	i2l5221
 15403  009928  50DE               	movf	postinc2,w,c
 15404  00992A  18E6               	xorwf	postinc1,w,c
 15405  00992C  A4D8               	btfss	status,2,c
 15406  00992E  D01E               	goto	i2l5221
 15407  009930  501D               	movf	QueryWinSerial@i,w,c
 15408  009932  0D02               	mullw	2
 15409  009934  0E00               	movlw	low _boosterCommsDataSerial
 15410  009936  24F3               	addwf	prodl,w,c
 15411  009938  6ED9               	movwf	fsr2l,c
 15412  00993A  0E03               	movlw	high _boosterCommsDataSerial
 15413  00993C  20F4               	addwfc	prodh,w,c
 15414  00993E  6EDA               	movwf	fsr2h,c
 15415  009940  50DE               	movf	postinc2,w,c
 15416  009942  10DE               	iorwf	postinc2,w,c
 15417  009944  B4D8               	btfsc	status,2,c
 15418  009946  D012               	goto	i2l5221
 15419                           
 15420                           ;boostercomms.c: 783: ResetSingleBoosterState(i);
 15421  009948  501D               	movf	QueryWinSerial@i,w,c
 15422  00994A  EC80  F052         	call	i2_ResetSingleBoosterState
 15423                           
 15424                           ;boostercomms.c: 784: ResetSingleBoosterState(j);
 15425  00994E  501C               	movf	QueryWinSerial@j,w,c
 15426  009950  EC80  F052         	call	i2_ResetSingleBoosterState
 15427                           
 15428                           ;boostercomms.c: 785: BoosterCommandStart(0, 0b101, i+1);
 15429  009954  0E00               	movlw	0
 15430  009956  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 15431  009958  0E00               	movlw	0
 15432  00995A  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 15433  00995C  0E05               	movlw	5
 15434  00995E  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 15435  009960  281D               	incf	QueryWinSerial@i,w,c
 15436  009962  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 15437  009964  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 15438                           
 15439                           ;boostercomms.c: 786: return 0;
 15440  009968  0E00               	movlw	0
 15441  00996A  0012               	return	
 15442  00996C                     i2l5221:
 15443  00996C  2A1C               	incf	QueryWinSerial@j,f,c
 15444  00996E  D7C5               	goto	L9
 15445  009970                     i2l5225:
 15446  009970  2A1D               	incf	QueryWinSerial@i,f,c
 15447  009972  D7BD               	goto	i2l5201
 15448  009974                     i2l5229:
 15449                           
 15450                           ;boostercomms.c: 787: }
 15451                           ;boostercomms.c: 788: }
 15452                           ;boostercomms.c: 789: }
 15453                           ;boostercomms.c: 791: statusGetSerialUCS = 0;
 15454  009974  0E00               	movlw	0
 15455  009976  0102               	movlb	2	; () banked
 15456  009978  6F9D               	movwf	_statusGetSerialUCS& (0+255),b
 15457                           
 15458                           ; BSR set to: 2
 15459                           ;boostercomms.c: 792: return 1;
 15460  00997A  0E01               	movlw	1
 15461                           
 15462                           ; BSR set to: 2
 15463                           ;boostercomms.c: 793: }else{
 15464                           
 15465                           ; BSR set to: 2
 15466  00997C  0012               	return	
 15467  00997E                     i2l5237:
 15468                           
 15469                           ; BSR set to: 2
 15470                           ;boostercomms.c: 794: statusFlagsUSLG |= 0b000000100000000000000000;
 15471  00997E  0102               	movlb	2	; () banked
 15472  009980  838C               	bsf	(_statusFlagsUSLG+2)& (0+255),1,b	;volatile
 15473                           
 15474                           ; BSR set to: 2
 15475                           ;boostercomms.c: 795: statusGetSerialUCS = 1;
 15476  009982  0E01               	movlw	1
 15477  009984  0102               	movlb	2	; () banked
 15478  009986  6F9D               	movwf	_statusGetSerialUCS& (0+255),b
 15479                           
 15480                           ; BSR set to: 2
 15481                           ;boostercomms.c: 796: if((missingSerialWinUCS = LowestMissingSerial()) < 30){
 15482  009988  EC39  F057         	call	_LowestMissingSerial	;wreg free
 15483  00998C  0102               	movlb	2	; () banked
 15484  00998E  6F9E               	movwf	_missingSerialWinUCS& (0+255),b
 15485  009990  0E1E               	movlw	30
 15486  009992  0102               	movlb	2	; () banked
 15487  009994  619E               	cpfslt	_missingSerialWinUCS& (0+255),b
 15488  009996  D010               	goto	i2l5251
 15489                           
 15490                           ; BSR set to: 2
 15491                           ;boostercomms.c: 797: QueryFailureCounter=0;
 15492  009998  0E00               	movlw	0
 15493  00999A  0102               	movlb	2	; () banked
 15494  00999C  6F9F               	movwf	_QueryFailureCounter& (0+255),b
 15495                           
 15496                           ; BSR set to: 2
 15497                           ;boostercomms.c: 798: BoosterCommandStart(0, 0b101, missingSerialWinUCS+1);
 15498  00999E  0E00               	movlw	0
 15499  0099A0  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 15500  0099A2  0E00               	movlw	0
 15501  0099A4  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 15502  0099A6  0E05               	movlw	5
 15503  0099A8  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 15504  0099AA  0102               	movlb	2	; () banked
 15505  0099AC  299E               	incf	_missingSerialWinUCS& (0+255),w,b
 15506  0099AE  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 15507  0099B0  ECE4  F053         	call	_BoosterCommandStart	;wreg free
 15508                           
 15509                           ;boostercomms.c: 799: return 0;
 15510  0099B4  0E00               	movlw	0
 15511  0099B6  0012               	return	
 15512  0099B8                     i2l5251:
 15513                           
 15514                           ;boostercomms.c: 800: }
 15515                           ;boostercomms.c: 801: return 1;
 15516  0099B8  0E01               	movlw	1
 15517  0099BA  0012               	return	
 15518  0099BC                     __end_of_QueryWinSerial:
 15519                           	opt stack 0
 15520                           pclatu	equ	0xFFB
 15521                           pclath	equ	0xFFA
 15522                           tblptru	equ	0xFF8
 15523                           tblptrh	equ	0xFF7
 15524                           tblptrl	equ	0xFF6
 15525                           tablat	equ	0xFF5
 15526                           prodh	equ	0xFF4
 15527                           prodl	equ	0xFF3
 15528                           intcon	equ	0xFF2
 15529                           postinc0	equ	0xFEE
 15530                           fsr0h	equ	0xFEA
 15531                           fsr0l	equ	0xFE9
 15532                           wreg	equ	0xFE8
 15533                           indf1	equ	0xFE7
 15534                           postinc1	equ	0xFE6
 15535                           postdec1	equ	0xFE5
 15536                           fsr1h	equ	0xFE2
 15537                           fsr1l	equ	0xFE1
 15538                           indf2	equ	0xFDF
 15539                           postinc2	equ	0xFDE
 15540                           postdec2	equ	0xFDD
 15541                           plusw2	equ	0xFDB
 15542                           fsr2h	equ	0xFDA
 15543                           fsr2l	equ	0xFD9
 15544                           status	equ	0xFD8
 15545                           
 15546 ;; *************** function i2_ResetSingleBoosterState *****************
 15547 ;; Defined at:
 15548 ;;		line 577 in file "boostercomms.c"
 15549 ;; Parameters:    Size  Location     Type
 15550 ;;  boosterNumbe    1    wreg     unsigned char 
 15551 ;; Auto vars:     Size  Location     Type
 15552 ;;  boosterNumbe    1    0[COMRAM] unsigned char 
 15553 ;; Return value:  Size  Location     Type
 15554 ;;                  1    wreg      void 
 15555 ;; Registers used:
 15556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15557 ;; Tracked objects:
 15558 ;;		On entry : 0/0
 15559 ;;		On exit  : 0/0
 15560 ;;		Unchanged: 0/0
 15561 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 15562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15566 ;;Total ram usage:        1 bytes
 15567 ;; Hardware stack levels used:    1
 15568 ;; This function calls:
 15569 ;;		Nothing
 15570 ;; This function is called by:
 15571 ;;		_ProcessRXFrame
 15572 ;;		_QueryWinSerial
 15573 ;;		i2_ResetBoosterStates
 15574 ;; This function uses a non-reentrant model
 15575 ;;
 15576                           
 15577                           	psect	text80
 15578  00A500                     __ptext80:
 15579                           	opt stack 0
 15580  00A500                     i2_ResetSingleBoosterState:
 15581                           	opt stack 21
 15582                           
 15583                           ;incstack = 0
 15584                           ;i2ResetSingleBoosterState@boosterNumberUC stored from wreg
 15585  00A500  6E01               	movwf	i2ResetSingleBoosterState@boosterNumberUC,c
 15586                           
 15587                           ;boostercomms.c: 578: boosterCommsData[4][boosterNumberUC] = 10;
 15588  00A502  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15589  00A504  0D01               	mullw	1
 15590  00A506  0E78               	movlw	low (_boosterCommsData+120)
 15591  00A508  24F3               	addwf	prodl,w,c
 15592  00A50A  6ED9               	movwf	fsr2l,c
 15593  00A50C  0E04               	movlw	high (_boosterCommsData+120)
 15594  00A50E  20F4               	addwfc	prodh,w,c
 15595  00A510  6EDA               	movwf	fsr2h,c
 15596  00A512  0E0A               	movlw	10
 15597  00A514  6EDF               	movwf	indf2,c
 15598                           
 15599                           ;boostercomms.c: 579: boosterCommsData[5][boosterNumberUC] = 0;
 15600  00A516  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15601  00A518  0D01               	mullw	1
 15602  00A51A  0E96               	movlw	low (_boosterCommsData+150)
 15603  00A51C  24F3               	addwf	prodl,w,c
 15604  00A51E  6ED9               	movwf	fsr2l,c
 15605  00A520  0E04               	movlw	high (_boosterCommsData+150)
 15606  00A522  20F4               	addwfc	prodh,w,c
 15607  00A524  6EDA               	movwf	fsr2h,c
 15608  00A526  0E00               	movlw	0
 15609  00A528  6EDF               	movwf	indf2,c
 15610                           
 15611                           ;boostercomms.c: 580: boosterCommsData[6][boosterNumberUC] = 0;
 15612  00A52A  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15613  00A52C  0D01               	mullw	1
 15614  00A52E  0EB4               	movlw	low (_boosterCommsData+180)
 15615  00A530  24F3               	addwf	prodl,w,c
 15616  00A532  6ED9               	movwf	fsr2l,c
 15617  00A534  0E04               	movlw	high (_boosterCommsData+180)
 15618  00A536  20F4               	addwfc	prodh,w,c
 15619  00A538  6EDA               	movwf	fsr2h,c
 15620  00A53A  0E00               	movlw	0
 15621  00A53C  6EDF               	movwf	indf2,c
 15622                           
 15623                           ;boostercomms.c: 581: boosterCommsData[7][boosterNumberUC] = 0;
 15624  00A53E  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15625  00A540  0D01               	mullw	1
 15626  00A542  0ED2               	movlw	low (_boosterCommsData+210)
 15627  00A544  24F3               	addwf	prodl,w,c
 15628  00A546  6ED9               	movwf	fsr2l,c
 15629  00A548  0E04               	movlw	high (_boosterCommsData+210)
 15630  00A54A  20F4               	addwfc	prodh,w,c
 15631  00A54C  6EDA               	movwf	fsr2h,c
 15632  00A54E  0E00               	movlw	0
 15633  00A550  6EDF               	movwf	indf2,c
 15634                           
 15635                           ;boostercomms.c: 582: boosterCommsData[0][boosterNumberUC] = 0;
 15636  00A552  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15637  00A554  0D01               	mullw	1
 15638  00A556  0E00               	movlw	low _boosterCommsData
 15639  00A558  24F3               	addwf	prodl,w,c
 15640  00A55A  6ED9               	movwf	fsr2l,c
 15641  00A55C  0E04               	movlw	high _boosterCommsData
 15642  00A55E  20F4               	addwfc	prodh,w,c
 15643  00A560  6EDA               	movwf	fsr2h,c
 15644  00A562  0E00               	movlw	0
 15645  00A564  6EDF               	movwf	indf2,c
 15646                           
 15647                           ;boostercomms.c: 583: boosterCommsData[1][boosterNumberUC] = 0;
 15648  00A566  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15649  00A568  0D01               	mullw	1
 15650  00A56A  0E1E               	movlw	low (_boosterCommsData+30)
 15651  00A56C  24F3               	addwf	prodl,w,c
 15652  00A56E  6ED9               	movwf	fsr2l,c
 15653  00A570  0E04               	movlw	high (_boosterCommsData+30)
 15654  00A572  20F4               	addwfc	prodh,w,c
 15655  00A574  6EDA               	movwf	fsr2h,c
 15656  00A576  0E00               	movlw	0
 15657  00A578  6EDF               	movwf	indf2,c
 15658                           
 15659                           ;boostercomms.c: 584: boosterCommsData[2][boosterNumberUC] = 0;
 15660  00A57A  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15661  00A57C  0D01               	mullw	1
 15662  00A57E  0E3C               	movlw	low (_boosterCommsData+60)
 15663  00A580  24F3               	addwf	prodl,w,c
 15664  00A582  6ED9               	movwf	fsr2l,c
 15665  00A584  0E04               	movlw	high (_boosterCommsData+60)
 15666  00A586  20F4               	addwfc	prodh,w,c
 15667  00A588  6EDA               	movwf	fsr2h,c
 15668  00A58A  0E00               	movlw	0
 15669  00A58C  6EDF               	movwf	indf2,c
 15670                           
 15671                           ;boostercomms.c: 585: boosterCommsData[3][boosterNumberUC] = 0;
 15672  00A58E  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15673  00A590  0D01               	mullw	1
 15674  00A592  0E5A               	movlw	low (_boosterCommsData+90)
 15675  00A594  24F3               	addwf	prodl,w,c
 15676  00A596  6ED9               	movwf	fsr2l,c
 15677  00A598  0E04               	movlw	high (_boosterCommsData+90)
 15678  00A59A  20F4               	addwfc	prodh,w,c
 15679  00A59C  6EDA               	movwf	fsr2h,c
 15680  00A59E  0E00               	movlw	0
 15681  00A5A0  6EDF               	movwf	indf2,c
 15682                           
 15683                           ;boostercomms.c: 586: boosterCommsDataSerial[boosterNumberUC] = 0;
 15684  00A5A2  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15685  00A5A4  0D02               	mullw	2
 15686  00A5A6  0E00               	movlw	low _boosterCommsDataSerial
 15687  00A5A8  24F3               	addwf	prodl,w,c
 15688  00A5AA  6ED9               	movwf	fsr2l,c
 15689  00A5AC  0E03               	movlw	high _boosterCommsDataSerial
 15690  00A5AE  20F4               	addwfc	prodh,w,c
 15691  00A5B0  6EDA               	movwf	fsr2h,c
 15692  00A5B2  0E00               	movlw	0
 15693  00A5B4  6EDE               	movwf	postinc2,c
 15694  00A5B6  0E00               	movlw	0
 15695  00A5B8  6EDD               	movwf	postdec2,c
 15696  00A5BA  0012               	return		;funcret
 15697  00A5BC                     __end_ofi2_ResetSingleBoosterState:
 15698                           	opt stack 0
 15699                           pclatu	equ	0xFFB
 15700                           pclath	equ	0xFFA
 15701                           tblptru	equ	0xFF8
 15702                           tblptrh	equ	0xFF7
 15703                           tblptrl	equ	0xFF6
 15704                           tablat	equ	0xFF5
 15705                           prodh	equ	0xFF4
 15706                           prodl	equ	0xFF3
 15707                           intcon	equ	0xFF2
 15708                           postinc0	equ	0xFEE
 15709                           fsr0h	equ	0xFEA
 15710                           fsr0l	equ	0xFE9
 15711                           wreg	equ	0xFE8
 15712                           indf1	equ	0xFE7
 15713                           postinc1	equ	0xFE6
 15714                           postdec1	equ	0xFE5
 15715                           fsr1h	equ	0xFE2
 15716                           fsr1l	equ	0xFE1
 15717                           indf2	equ	0xFDF
 15718                           postinc2	equ	0xFDE
 15719                           postdec2	equ	0xFDD
 15720                           plusw2	equ	0xFDB
 15721                           fsr2h	equ	0xFDA
 15722                           fsr2l	equ	0xFD9
 15723                           status	equ	0xFD8
 15724                           
 15725 ;; *************** function i2_ClearPastValue *****************
 15726 ;; Defined at:
 15727 ;;		line 272 in file "mastercomms.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;  valuePosUC      1    wreg     unsigned char 
 15730 ;; Auto vars:     Size  Location     Type
 15731 ;;  valuePosUC      1    0[COMRAM] unsigned char 
 15732 ;; Return value:  Size  Location     Type
 15733 ;;                  1    wreg      void 
 15734 ;; Registers used:
 15735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15736 ;; Tracked objects:
 15737 ;;		On entry : 0/0
 15738 ;;		On exit  : 0/0
 15739 ;;		Unchanged: 0/0
 15740 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 15741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;Total ram usage:        1 bytes
 15746 ;; Hardware stack levels used:    1
 15747 ;; This function calls:
 15748 ;;		Nothing
 15749 ;; This function is called by:
 15750 ;;		_ProcessRXFrame
 15751 ;;		_QueryWinSerial
 15752 ;;		i2_ClearPastValues
 15753 ;; This function uses a non-reentrant model
 15754 ;;
 15755                           
 15756                           	psect	text81
 15757  00ACA2                     __ptext81:
 15758                           	opt stack 0
 15759  00ACA2                     i2_ClearPastValue:
 15760                           	opt stack 21
 15761                           
 15762                           ;incstack = 0
 15763                           ;i2ClearPastValue@valuePosUC stored from wreg
 15764  00ACA2  6E01               	movwf	i2ClearPastValue@valuePosUC,c
 15765                           
 15766                           ;mastercomms.c: 273: pastBoosterValuesUSAG[0][valuePosUC] = 0;
 15767  00ACA4  5001               	movf	i2ClearPastValue@valuePosUC,w,c
 15768  00ACA6  0D02               	mullw	2
 15769  00ACA8  0E00               	movlw	low _pastBoosterValuesUSAG
 15770  00ACAA  24F3               	addwf	prodl,w,c
 15771  00ACAC  6ED9               	movwf	fsr2l,c
 15772  00ACAE  0E06               	movlw	high _pastBoosterValuesUSAG
 15773  00ACB0  20F4               	addwfc	prodh,w,c
 15774  00ACB2  6EDA               	movwf	fsr2h,c
 15775  00ACB4  0E00               	movlw	0
 15776  00ACB6  6EDE               	movwf	postinc2,c
 15777  00ACB8  0E00               	movlw	0
 15778  00ACBA  6EDD               	movwf	postdec2,c
 15779                           
 15780                           ;mastercomms.c: 274: pastBoosterValuesUSAG[1][valuePosUC] = 0;
 15781  00ACBC  5001               	movf	i2ClearPastValue@valuePosUC,w,c
 15782  00ACBE  0D02               	mullw	2
 15783  00ACC0  0E3E               	movlw	low (_pastBoosterValuesUSAG+62)
 15784  00ACC2  24F3               	addwf	prodl,w,c
 15785  00ACC4  6ED9               	movwf	fsr2l,c
 15786  00ACC6  0E06               	movlw	high (_pastBoosterValuesUSAG+62)
 15787  00ACC8  20F4               	addwfc	prodh,w,c
 15788  00ACCA  6EDA               	movwf	fsr2h,c
 15789  00ACCC  0E00               	movlw	0
 15790  00ACCE  6EDE               	movwf	postinc2,c
 15791  00ACD0  0E00               	movlw	0
 15792  00ACD2  6EDD               	movwf	postdec2,c
 15793                           
 15794                           ;mastercomms.c: 275: pastBoosterValuesUSAG[2][valuePosUC] = 0;
 15795  00ACD4  5001               	movf	i2ClearPastValue@valuePosUC,w,c
 15796  00ACD6  0D02               	mullw	2
 15797  00ACD8  0E7C               	movlw	low (_pastBoosterValuesUSAG+124)
 15798  00ACDA  24F3               	addwf	prodl,w,c
 15799  00ACDC  6ED9               	movwf	fsr2l,c
 15800  00ACDE  0E06               	movlw	high (_pastBoosterValuesUSAG+124)
 15801  00ACE0  20F4               	addwfc	prodh,w,c
 15802  00ACE2  6EDA               	movwf	fsr2h,c
 15803  00ACE4  0E00               	movlw	0
 15804  00ACE6  6EDE               	movwf	postinc2,c
 15805  00ACE8  0E00               	movlw	0
 15806  00ACEA  6EDD               	movwf	postdec2,c
 15807                           
 15808                           ;mastercomms.c: 276: pastBoosterValuesUSAG[3][valuePosUC] = 0;
 15809  00ACEC  5001               	movf	i2ClearPastValue@valuePosUC,w,c
 15810  00ACEE  0D02               	mullw	2
 15811  00ACF0  0EBA               	movlw	low (_pastBoosterValuesUSAG+186)
 15812  00ACF2  24F3               	addwf	prodl,w,c
 15813  00ACF4  6ED9               	movwf	fsr2l,c
 15814  00ACF6  0E06               	movlw	high (_pastBoosterValuesUSAG+186)
 15815  00ACF8  20F4               	addwfc	prodh,w,c
 15816  00ACFA  6EDA               	movwf	fsr2h,c
 15817  00ACFC  0E00               	movlw	0
 15818  00ACFE  6EDE               	movwf	postinc2,c
 15819  00AD00  0E00               	movlw	0
 15820  00AD02  6EDD               	movwf	postdec2,c
 15821  00AD04  0012               	return		;funcret
 15822  00AD06                     __end_ofi2_ClearPastValue:
 15823                           	opt stack 0
 15824                           pclatu	equ	0xFFB
 15825                           pclath	equ	0xFFA
 15826                           tblptru	equ	0xFF8
 15827                           tblptrh	equ	0xFF7
 15828                           tblptrl	equ	0xFF6
 15829                           tablat	equ	0xFF5
 15830                           prodh	equ	0xFF4
 15831                           prodl	equ	0xFF3
 15832                           intcon	equ	0xFF2
 15833                           postinc0	equ	0xFEE
 15834                           fsr0h	equ	0xFEA
 15835                           fsr0l	equ	0xFE9
 15836                           wreg	equ	0xFE8
 15837                           indf1	equ	0xFE7
 15838                           postinc1	equ	0xFE6
 15839                           postdec1	equ	0xFE5
 15840                           fsr1h	equ	0xFE2
 15841                           fsr1l	equ	0xFE1
 15842                           indf2	equ	0xFDF
 15843                           postinc2	equ	0xFDE
 15844                           postdec2	equ	0xFDD
 15845                           plusw2	equ	0xFDB
 15846                           fsr2h	equ	0xFDA
 15847                           fsr2l	equ	0xFD9
 15848                           status	equ	0xFD8
 15849                           
 15850 ;; *************** function _LowestMissingSerial *****************
 15851 ;; Defined at:
 15852 ;;		line 741 in file "boostercomms.c"
 15853 ;; Parameters:    Size  Location     Type
 15854 ;;		None
 15855 ;; Auto vars:     Size  Location     Type
 15856 ;;		None
 15857 ;; Return value:  Size  Location     Type
 15858 ;;                  1    wreg      unsigned char 
 15859 ;; Registers used:
 15860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15861 ;; Tracked objects:
 15862 ;;		On entry : 0/0
 15863 ;;		On exit  : 0/0
 15864 ;;		Unchanged: 0/0
 15865 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 15866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15870 ;;Total ram usage:        2 bytes
 15871 ;; Hardware stack levels used:    1
 15872 ;; This function calls:
 15873 ;;		Nothing
 15874 ;; This function is called by:
 15875 ;;		_QueryWinSerial
 15876 ;;		_BoosterCommsDispatcher
 15877 ;; This function uses a non-reentrant model
 15878 ;;
 15879                           
 15880                           	psect	text82
 15881  00AE72                     __ptext82:
 15882                           	opt stack 0
 15883  00AE72                     _LowestMissingSerial:
 15884                           	opt stack 21
 15885                           
 15886                           ;boostercomms.c: 744: for(boosterCountUC = 1; boosterCountUC < 30; boosterCountUC++)
 15887                           
 15888                           ;incstack = 0
 15889  00AE72  0E01               	movlw	1
 15890  00AE74  0102               	movlb	2	; () banked
 15891  00AE76  6F9B               	movwf	_boosterCountUC& (0+255),b
 15892  00AE78                     i2l4631:
 15893                           
 15894                           ; BSR set to: 2
 15895  00AE78  0E1D               	movlw	29
 15896  00AE7A  0102               	movlb	2	; () banked
 15897  00AE7C  659B               	cpfsgt	_boosterCountUC& (0+255),b
 15898  00AE7E  D001               	goto	i2l4635
 15899  00AE80  D020               	goto	i2l4647
 15900  00AE82                     i2l4635:
 15901                           
 15902                           ; BSR set to: 2
 15903                           ;boostercomms.c: 745: if((boosterCommsData[4][boosterCountUC] != 10) &&
 15904                           ;boostercomms.c: 746: !boosterCommsDataSerial[boosterCountUC])
 15905  00AE82  0102               	movlb	2	; () banked
 15906  00AE84  519B               	movf	_boosterCountUC& (0+255),w,b
 15907  00AE86  0D01               	mullw	1
 15908  00AE88  0E78               	movlw	low (_boosterCommsData+120)
 15909  00AE8A  24F3               	addwf	prodl,w,c
 15910  00AE8C  6ED9               	movwf	fsr2l,c
 15911  00AE8E  0E04               	movlw	high (_boosterCommsData+120)
 15912  00AE90  20F4               	addwfc	prodh,w,c
 15913  00AE92  6EDA               	movwf	fsr2h,c
 15914  00AE94  0E0A               	movlw	10
 15915  00AE96  18DE               	xorwf	postinc2,w,c
 15916  00AE98  B4D8               	btfsc	status,2,c
 15917  00AE9A  D010               	goto	i2l4643
 15918                           
 15919                           ; BSR set to: 2
 15920  00AE9C  0102               	movlb	2	; () banked
 15921  00AE9E  519B               	movf	_boosterCountUC& (0+255),w,b
 15922  00AEA0  0D02               	mullw	2
 15923  00AEA2  0E00               	movlw	low _boosterCommsDataSerial
 15924  00AEA4  24F3               	addwf	prodl,w,c
 15925  00AEA6  6ED9               	movwf	fsr2l,c
 15926  00AEA8  0E03               	movlw	high _boosterCommsDataSerial
 15927  00AEAA  20F4               	addwfc	prodh,w,c
 15928  00AEAC  6EDA               	movwf	fsr2h,c
 15929  00AEAE  50DE               	movf	postinc2,w,c
 15930  00AEB0  10DE               	iorwf	postinc2,w,c
 15931  00AEB2  A4D8               	btfss	status,2,c
 15932  00AEB4  D003               	goto	i2l4643
 15933                           
 15934                           ; BSR set to: 2
 15935                           ;boostercomms.c: 747: return boosterCountUC;
 15936  00AEB6  0102               	movlb	2	; () banked
 15937  00AEB8  519B               	movf	_boosterCountUC& (0+255),w,b
 15938                           
 15939                           ; BSR set to: 2
 15940  00AEBA  0012               	return	
 15941  00AEBC                     i2l4643:
 15942                           
 15943                           ; BSR set to: 2
 15944  00AEBC  0102               	movlb	2	; () banked
 15945  00AEBE  2B9B               	incf	_boosterCountUC& (0+255),f,b
 15946  00AEC0  D7DB               	goto	i2l4631
 15947  00AEC2                     i2l4647:
 15948                           
 15949                           ; BSR set to: 2
 15950                           ;boostercomms.c: 748: return boosterCountUC;
 15951  00AEC2  0102               	movlb	2	; () banked
 15952  00AEC4  519B               	movf	_boosterCountUC& (0+255),w,b
 15953  00AEC6  0012               	return	
 15954  00AEC8                     __end_of_LowestMissingSerial:
 15955                           	opt stack 0
 15956                           pclatu	equ	0xFFB
 15957                           pclath	equ	0xFFA
 15958                           tblptru	equ	0xFF8
 15959                           tblptrh	equ	0xFF7
 15960                           tblptrl	equ	0xFF6
 15961                           tablat	equ	0xFF5
 15962                           prodh	equ	0xFF4
 15963                           prodl	equ	0xFF3
 15964                           intcon	equ	0xFF2
 15965                           postinc0	equ	0xFEE
 15966                           fsr0h	equ	0xFEA
 15967                           fsr0l	equ	0xFE9
 15968                           wreg	equ	0xFE8
 15969                           indf1	equ	0xFE7
 15970                           postinc1	equ	0xFE6
 15971                           postdec1	equ	0xFE5
 15972                           fsr1h	equ	0xFE2
 15973                           fsr1l	equ	0xFE1
 15974                           indf2	equ	0xFDF
 15975                           postinc2	equ	0xFDE
 15976                           postdec2	equ	0xFDD
 15977                           plusw2	equ	0xFDB
 15978                           fsr2h	equ	0xFDA
 15979                           fsr2l	equ	0xFD9
 15980                           status	equ	0xFD8
 15981                           
 15982 ;; *************** function _BoosterCommandStart *****************
 15983 ;; Defined at:
 15984 ;;		line 473 in file "boostercomms.c"
 15985 ;; Parameters:    Size  Location     Type
 15986 ;;  destSerialUS    2    6[COMRAM] unsigned short 
 15987 ;;  destCommandU    1    8[COMRAM] unsigned char 
 15988 ;;  destPayloadU    1    9[COMRAM] unsigned char 
 15989 ;; Auto vars:     Size  Location     Type
 15990 ;;		None
 15991 ;; Return value:  Size  Location     Type
 15992 ;;                  1    wreg      void 
 15993 ;; Registers used:
 15994 ;;		wreg, status,2, status,0, cstack
 15995 ;; Tracked objects:
 15996 ;;		On entry : 0/0
 15997 ;;		On exit  : 0/0
 15998 ;;		Unchanged: 0/0
 15999 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16002 ;;      Temps:         11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16003 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16004 ;;Total ram usage:       15 bytes
 16005 ;; Hardware stack levels used:    1
 16006 ;; Hardware stack levels required when called:    1
 16007 ;; This function calls:
 16008 ;;		_BoosterCommsActive
 16009 ;;		_CheckBoosterRXParity
 16010 ;; This function is called by:
 16011 ;;		_WindowIDBacktrack
 16012 ;;		_AssignWindowID
 16013 ;;		_AssignSerialNumber
 16014 ;;		_SetWindowID
 16015 ;;		_QueryWinSerial
 16016 ;;		_RunBLCalibration
 16017 ;; This function uses a non-reentrant model
 16018 ;;
 16019                           
 16020                           	psect	text83
 16021  00A7C8                     __ptext83:
 16022                           	opt stack 0
 16023  00A7C8                     _BoosterCommandStart:
 16024                           	opt stack 19
 16025                           
 16026                           ;boostercomms.c: 474: if(BoosterCommsActive())
 16027                           
 16028                           ; BSR set to: 2
 16029                           ;incstack = 0
 16030  00A7C8  ECF4  F05A         	call	_BoosterCommsActive	;wreg free
 16031  00A7CC  0900               	iorlw	0
 16032  00A7CE  A4D8               	btfss	status,2,c
 16033  00A7D0  0012               	return	
 16034                           
 16035                           ;boostercomms.c: 476: statusFlagsUSLG &= ~0b000000000000000000000100;
 16036                           
 16037                           ;boostercomms.c: 475: return;
 16038  00A7D2  0102               	movlb	2	; () banked
 16039  00A7D4  958A               	bcf	_statusFlagsUSLG& (0+255),2,b	;volatile
 16040                           
 16041                           ; BSR set to: 2
 16042                           ;boostercomms.c: 477: commsTXBitsUSLG = (((unsigned short long) destSerialUS) << 8) | (d
      +                          estCommandUC << 5) | destPayloadUC;
 16043  00A7D6  500A               	movf	BoosterCommandStart@destPayloadUC,w,c
 16044  00A7D8  6E0B               	movwf	??_BoosterCommandStart& (0+255),c
 16045  00A7DA  6A0C               	clrf	(??_BoosterCommandStart+1)& (0+255),c
 16046  00A7DC  6A0D               	clrf	(??_BoosterCommandStart+2)& (0+255),c
 16047  00A7DE  5009               	movf	BoosterCommandStart@destCommandUC,w,c
 16048  00A7E0  6E0E               	movwf	(??_BoosterCommandStart+3)& (0+255),c
 16049  00A7E2  6A0F               	clrf	(??_BoosterCommandStart+4)& (0+255),c
 16050  00A7E4  0E05               	movlw	5
 16051  00A7E6                     i2u382_45:
 16052  00A7E6  90D8               	bcf	status,0,c
 16053  00A7E8  360E               	rlcf	??_BoosterCommandStart+3,f,c
 16054  00A7EA  360F               	rlcf	??_BoosterCommandStart+4,f,c
 16055  00A7EC  2EE8               	decfsz	wreg,f,c
 16056  00A7EE  D7FB               	goto	i2u382_45
 16057  00A7F0  C007  F010         	movff	BoosterCommandStart@destSerialUS,??_BoosterCommandStart+5
 16058  00A7F4  C008  F011         	movff	BoosterCommandStart@destSerialUS+1,??_BoosterCommandStart+6
 16059  00A7F8  6A12               	clrf	(??_BoosterCommandStart+7)& (0+255),c
 16060  00A7FA  C011  F012         	movff	??_BoosterCommandStart+6,??_BoosterCommandStart+7
 16061  00A7FE  C010  F011         	movff	??_BoosterCommandStart+5,??_BoosterCommandStart+6
 16062  00A802  6A10               	clrf	??_BoosterCommandStart+5,c
 16063  00A804  500E               	movf	??_BoosterCommandStart+3,w,c
 16064  00A806  1010               	iorwf	??_BoosterCommandStart+5,w,c
 16065  00A808  6E13               	movwf	(??_BoosterCommandStart+8)& (0+255),c
 16066  00A80A  500F               	movf	??_BoosterCommandStart+4,w,c
 16067  00A80C  1011               	iorwf	??_BoosterCommandStart+6,w,c
 16068  00A80E  6E14               	movwf	(??_BoosterCommandStart+9)& (0+255),c
 16069  00A810  0E00               	movlw	0
 16070  00A812  BE0F               	btfsc	??_BoosterCommandStart+4,7,c
 16071  00A814  0EFF               	movlw	255
 16072  00A816  1012               	iorwf	??_BoosterCommandStart+7,w,c
 16073  00A818  6E15               	movwf	(??_BoosterCommandStart+10)& (0+255),c
 16074  00A81A  500B               	movf	??_BoosterCommandStart,w,c
 16075  00A81C  1013               	iorwf	??_BoosterCommandStart+8,w,c
 16076  00A81E  0103               	movlb	3	; () banked
 16077  00A820  6F3C               	movwf	_commsTXBitsUSLG& (0+255),b
 16078  00A822  500C               	movf	??_BoosterCommandStart+1,w,c
 16079  00A824  1014               	iorwf	??_BoosterCommandStart+9,w,c
 16080  00A826  0103               	movlb	3	; () banked
 16081  00A828  6F3D               	movwf	(_commsTXBitsUSLG+1)& (0+255),b
 16082  00A82A  500D               	movf	??_BoosterCommandStart+2,w,c
 16083  00A82C  1015               	iorwf	??_BoosterCommandStart+10,w,c
 16084  00A82E  0103               	movlb	3	; () banked
 16085  00A830  6F3E               	movwf	(_commsTXBitsUSLG+2)& (0+255),b
 16086                           
 16087                           ; BSR set to: 3
 16088                           ;boostercomms.c: 478: if(CheckBoosterRXParity(destSerialUS) ^ CheckBoosterRXParity(destC
      +                          ommandUC) ^ CheckBoosterRXParity(destPayloadUC))
 16089  00A832  C00A  F001         	movff	BoosterCommandStart@destPayloadUC,CheckBoosterRXParity@recvFrameUS
 16090  00A836  6A02               	clrf	CheckBoosterRXParity@recvFrameUS+1,c
 16091  00A838  EC7D  F059         	call	_CheckBoosterRXParity	;wreg free
 16092  00A83C  6E0B               	movwf	??_BoosterCommandStart& (0+255),c
 16093  00A83E  C009  F001         	movff	BoosterCommandStart@destCommandUC,CheckBoosterRXParity@recvFrameUS
 16094  00A842  6A02               	clrf	CheckBoosterRXParity@recvFrameUS+1,c
 16095  00A844  EC7D  F059         	call	_CheckBoosterRXParity	;wreg free
 16096  00A848  6E0C               	movwf	(??_BoosterCommandStart+1)& (0+255),c
 16097  00A84A  C007  F001         	movff	BoosterCommandStart@destSerialUS,CheckBoosterRXParity@recvFrameUS
 16098  00A84E  C008  F002         	movff	BoosterCommandStart@destSerialUS+1,CheckBoosterRXParity@recvFrameUS+1
 16099  00A852  EC7D  F059         	call	_CheckBoosterRXParity	;wreg free
 16100  00A856  180C               	xorwf	??_BoosterCommandStart+1,w,c
 16101  00A858  180B               	xorwf	??_BoosterCommandStart,w,c
 16102  00A85A  0900               	iorlw	0
 16103  00A85C  B4D8               	btfsc	status,2,c
 16104  00A85E  D002               	goto	i2l4339
 16105                           
 16106                           ;boostercomms.c: 479: commsTXBitsUSLG |= 0b100000000000000000000000;
 16107  00A860  0103               	movlb	3	; () banked
 16108  00A862  8F3E               	bsf	(_commsTXBitsUSLG+2)& (0+255),7,b
 16109  00A864                     i2l4339:
 16110                           
 16111                           ;boostercomms.c: 480: commsStatusUCG = 1;
 16112  00A864  0E01               	movlw	1
 16113  00A866  0102               	movlb	2	; () banked
 16114  00A868  6FA3               	movwf	_commsStatusUCG& (0+255),b
 16115  00A86A  0012               	return		;funcret
 16116  00A86C                     __end_of_BoosterCommandStart:
 16117                           	opt stack 0
 16118                           pclatu	equ	0xFFB
 16119                           pclath	equ	0xFFA
 16120                           tblptru	equ	0xFF8
 16121                           tblptrh	equ	0xFF7
 16122                           tblptrl	equ	0xFF6
 16123                           tablat	equ	0xFF5
 16124                           prodh	equ	0xFF4
 16125                           prodl	equ	0xFF3
 16126                           intcon	equ	0xFF2
 16127                           postinc0	equ	0xFEE
 16128                           fsr0h	equ	0xFEA
 16129                           fsr0l	equ	0xFE9
 16130                           wreg	equ	0xFE8
 16131                           indf1	equ	0xFE7
 16132                           postinc1	equ	0xFE6
 16133                           postdec1	equ	0xFE5
 16134                           fsr1h	equ	0xFE2
 16135                           fsr1l	equ	0xFE1
 16136                           indf2	equ	0xFDF
 16137                           postinc2	equ	0xFDE
 16138                           postdec2	equ	0xFDD
 16139                           plusw2	equ	0xFDB
 16140                           fsr2h	equ	0xFDA
 16141                           fsr2l	equ	0xFD9
 16142                           status	equ	0xFD8
 16143                           
 16144 ;; *************** function _CheckBoosterRXParity *****************
 16145 ;; Defined at:
 16146 ;;		line 493 in file "boostercomms.c"
 16147 ;; Parameters:    Size  Location     Type
 16148 ;;  recvFrameUS     2    0[COMRAM] unsigned short 
 16149 ;; Auto vars:     Size  Location     Type
 16150 ;;  tmpRecvFrame    2    2[COMRAM] unsigned short 
 16151 ;;  bitCountUC      1    5[COMRAM] unsigned char 
 16152 ;;  bitParityUC     1    4[COMRAM] unsigned char 
 16153 ;; Return value:  Size  Location     Type
 16154 ;;                  1    wreg      unsigned char 
 16155 ;; Registers used:
 16156 ;;		wreg, status,2, status,0
 16157 ;; Tracked objects:
 16158 ;;		On entry : 0/0
 16159 ;;		On exit  : 0/0
 16160 ;;		Unchanged: 0/0
 16161 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16163 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16165 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16166 ;;Total ram usage:        6 bytes
 16167 ;; Hardware stack levels used:    1
 16168 ;; This function calls:
 16169 ;;		Nothing
 16170 ;; This function is called by:
 16171 ;;		_BoosterCommandStart
 16172 ;;		_ProcessRXFrame
 16173 ;; This function uses a non-reentrant model
 16174 ;;
 16175                           
 16176                           	psect	text84
 16177  00B2FA                     __ptext84:
 16178                           	opt stack 0
 16179  00B2FA                     _CheckBoosterRXParity:
 16180                           	opt stack 21
 16181                           
 16182                           ;boostercomms.c: 494: unsigned char bitCountUC;
 16183                           ;boostercomms.c: 495: unsigned char bitParityUC;
 16184                           ;boostercomms.c: 496: unsigned short tmpRecvFrameUS = recvFrameUS;
 16185                           
 16186                           ;incstack = 0
 16187  00B2FA  C001  F003         	movff	CheckBoosterRXParity@recvFrameUS,CheckBoosterRXParity@tmpRecvFrameUS
 16188  00B2FE  C002  F004         	movff	CheckBoosterRXParity@recvFrameUS+1,CheckBoosterRXParity@tmpRecvFrameUS+1
 16189                           
 16190                           ;boostercomms.c: 498: for(bitCountUC = 0, bitParityUC = 0; bitCountUC < 16; bitCountUC++
      +                          ){
 16191  00B302  0E00               	movlw	0
 16192  00B304  6E06               	movwf	CheckBoosterRXParity@bitCountUC,c
 16193  00B306  0E00               	movlw	0
 16194  00B308  6E05               	movwf	CheckBoosterRXParity@bitParityUC,c
 16195  00B30A                     i2l4079:
 16196  00B30A  0E0F               	movlw	15
 16197  00B30C  6406               	cpfsgt	CheckBoosterRXParity@bitCountUC,c
 16198  00B30E  D001               	goto	i2l445
 16199  00B310  D007               	goto	i2l446
 16200  00B312                     i2l445:
 16201                           
 16202                           ;boostercomms.c: 499: (tmpRecvFrameUS & 1)?bitParityUC++:1;
 16203  00B312  B003               	btfsc	CheckBoosterRXParity@tmpRecvFrameUS,0,c
 16204  00B314  2A05               	incf	CheckBoosterRXParity@bitParityUC,f,c
 16205                           
 16206                           ;boostercomms.c: 500: tmpRecvFrameUS >>= 1;
 16207  00B316  90D8               	bcf	status,0,c
 16208  00B318  3204               	rrcf	CheckBoosterRXParity@tmpRecvFrameUS+1,f,c
 16209  00B31A  3203               	rrcf	CheckBoosterRXParity@tmpRecvFrameUS,f,c
 16210  00B31C  2A06               	incf	CheckBoosterRXParity@bitCountUC,f,c
 16211  00B31E  D7F5               	goto	i2l4079
 16212  00B320                     i2l446:
 16213                           
 16214                           ;boostercomms.c: 501: }
 16215                           ;boostercomms.c: 503: if(bitParityUC % 2)
 16216  00B320  A005               	btfss	CheckBoosterRXParity@bitParityUC,0,c
 16217  00B322  D002               	goto	i2l4095
 16218                           
 16219                           ;boostercomms.c: 504: return 1;
 16220  00B324  0E01               	movlw	1
 16221  00B326  0012               	return	
 16222  00B328                     i2l4095:
 16223                           
 16224                           ;boostercomms.c: 505: else
 16225                           ;boostercomms.c: 506: return 0;
 16226  00B328  0E00               	movlw	0
 16227  00B32A  0012               	return	
 16228  00B32C                     __end_of_CheckBoosterRXParity:
 16229                           	opt stack 0
 16230                           pclatu	equ	0xFFB
 16231                           pclath	equ	0xFFA
 16232                           tblptru	equ	0xFF8
 16233                           tblptrh	equ	0xFF7
 16234                           tblptrl	equ	0xFF6
 16235                           tablat	equ	0xFF5
 16236                           prodh	equ	0xFF4
 16237                           prodl	equ	0xFF3
 16238                           intcon	equ	0xFF2
 16239                           postinc0	equ	0xFEE
 16240                           fsr0h	equ	0xFEA
 16241                           fsr0l	equ	0xFE9
 16242                           wreg	equ	0xFE8
 16243                           indf1	equ	0xFE7
 16244                           postinc1	equ	0xFE6
 16245                           postdec1	equ	0xFE5
 16246                           fsr1h	equ	0xFE2
 16247                           fsr1l	equ	0xFE1
 16248                           indf2	equ	0xFDF
 16249                           postinc2	equ	0xFDE
 16250                           postdec2	equ	0xFDD
 16251                           plusw2	equ	0xFDB
 16252                           fsr2h	equ	0xFDA
 16253                           fsr2l	equ	0xFD9
 16254                           status	equ	0xFD8
 16255                           
 16256 ;; *************** function _NewBoosterAdded *****************
 16257 ;; Defined at:
 16258 ;;		line 617 in file "boostercomms.c"
 16259 ;; Parameters:    Size  Location     Type
 16260 ;;		None
 16261 ;; Auto vars:     Size  Location     Type
 16262 ;;		None
 16263 ;; Return value:  Size  Location     Type
 16264 ;;                  1    wreg      unsigned char 
 16265 ;; Registers used:
 16266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16267 ;; Tracked objects:
 16268 ;;		On entry : 0/0
 16269 ;;		On exit  : 0/0
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16276 ;;Total ram usage:        1 bytes
 16277 ;; Hardware stack levels used:    1
 16278 ;; Hardware stack levels required when called:    1
 16279 ;; This function calls:
 16280 ;;		_LowestIdleWindow
 16281 ;; This function is called by:
 16282 ;;		_BoosterCommsDispatcher
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286                           	psect	text85
 16287  00B4FE                     __ptext85:
 16288                           	opt stack 0
 16289  00B4FE                     _NewBoosterAdded:
 16290                           	opt stack 21
 16291                           
 16292                           ;boostercomms.c: 619: if((LowestIdleWindow() < 29) && (boosterCommsData[4][29] != 10))
 16293                           
 16294                           ;incstack = 0
 16295  00B4FE  EC96  F059         	call	_LowestIdleWindow	;wreg free
 16296  00B502  6E04               	movwf	??_NewBoosterAdded& (0+255),c
 16297  00B504  0E1D               	movlw	29
 16298  00B506  6004               	cpfslt	??_NewBoosterAdded,c
 16299  00B508  D007               	goto	i2l5043
 16300  00B50A  0E0A               	movlw	10
 16301  00B50C  0104               	movlb	4	; () banked
 16302  00B50E  1995               	xorwf	(_boosterCommsData+149)& (0+255),w,b
 16303  00B510  B4D8               	btfsc	status,2,c
 16304  00B512  D002               	goto	i2l5043
 16305                           
 16306                           ; BSR set to: 4
 16307                           ;boostercomms.c: 620: return 1;
 16308  00B514  0E01               	movlw	1
 16309                           
 16310                           ; BSR set to: 4
 16311  00B516  0012               	return	
 16312  00B518                     i2l5043:
 16313                           
 16314                           ;boostercomms.c: 621: return 0;
 16315  00B518  0E00               	movlw	0
 16316  00B51A  0012               	return	
 16317  00B51C                     __end_of_NewBoosterAdded:
 16318                           	opt stack 0
 16319                           pclatu	equ	0xFFB
 16320                           pclath	equ	0xFFA
 16321                           tblptru	equ	0xFF8
 16322                           tblptrh	equ	0xFF7
 16323                           tblptrl	equ	0xFF6
 16324                           tablat	equ	0xFF5
 16325                           prodh	equ	0xFF4
 16326                           prodl	equ	0xFF3
 16327                           intcon	equ	0xFF2
 16328                           postinc0	equ	0xFEE
 16329                           fsr0h	equ	0xFEA
 16330                           fsr0l	equ	0xFE9
 16331                           wreg	equ	0xFE8
 16332                           indf1	equ	0xFE7
 16333                           postinc1	equ	0xFE6
 16334                           postdec1	equ	0xFE5
 16335                           fsr1h	equ	0xFE2
 16336                           fsr1l	equ	0xFE1
 16337                           indf2	equ	0xFDF
 16338                           postinc2	equ	0xFDE
 16339                           postdec2	equ	0xFDD
 16340                           plusw2	equ	0xFDB
 16341                           fsr2h	equ	0xFDA
 16342                           fsr2l	equ	0xFD9
 16343                           status	equ	0xFD8
 16344                           
 16345 ;; *************** function _LowestIdleWindow *****************
 16346 ;; Defined at:
 16347 ;;		line 607 in file "boostercomms.c"
 16348 ;; Parameters:    Size  Location     Type
 16349 ;;		None
 16350 ;; Auto vars:     Size  Location     Type
 16351 ;;  boosterCount    1    2[COMRAM] unsigned char 
 16352 ;; Return value:  Size  Location     Type
 16353 ;;                  1    wreg      unsigned char 
 16354 ;; Registers used:
 16355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16356 ;; Tracked objects:
 16357 ;;		On entry : 0/0
 16358 ;;		On exit  : 0/0
 16359 ;;		Unchanged: 0/0
 16360 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16364 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16365 ;;Total ram usage:        3 bytes
 16366 ;; Hardware stack levels used:    1
 16367 ;; This function calls:
 16368 ;;		Nothing
 16369 ;; This function is called by:
 16370 ;;		_NewBoosterAdded
 16371 ;;		_AssignWindowID
 16372 ;; This function uses a non-reentrant model
 16373 ;;
 16374                           
 16375                           	psect	text86
 16376  00B32C                     __ptext86:
 16377                           	opt stack 0
 16378  00B32C                     _LowestIdleWindow:
 16379                           	opt stack 20
 16380                           
 16381                           ;boostercomms.c: 608: unsigned char boosterCountUC;
 16382                           ;boostercomms.c: 610: for(boosterCountUC = 1; boosterCountUC < 30; boosterCountUC++)
 16383                           
 16384                           ;incstack = 0
 16385  00B32C  0E01               	movlw	1
 16386  00B32E  6E03               	movwf	LowestIdleWindow@boosterCountUC,c
 16387  00B330                     i2l4347:
 16388  00B330  0E1D               	movlw	29
 16389  00B332  6403               	cpfsgt	LowestIdleWindow@boosterCountUC,c
 16390  00B334  D001               	goto	i2l4351
 16391  00B336  D010               	goto	i2l4361
 16392  00B338                     i2l4351:
 16393                           
 16394                           ;boostercomms.c: 611: if(!(boosterCommsDataSerial[boosterCountUC]))
 16395  00B338  5003               	movf	LowestIdleWindow@boosterCountUC,w,c
 16396  00B33A  0D02               	mullw	2
 16397  00B33C  0E00               	movlw	low _boosterCommsDataSerial
 16398  00B33E  24F3               	addwf	prodl,w,c
 16399  00B340  6ED9               	movwf	fsr2l,c
 16400  00B342  0E03               	movlw	high _boosterCommsDataSerial
 16401  00B344  20F4               	addwfc	prodh,w,c
 16402  00B346  6EDA               	movwf	fsr2h,c
 16403  00B348  50DE               	movf	postinc2,w,c
 16404  00B34A  10DE               	iorwf	postinc2,w,c
 16405  00B34C  A4D8               	btfss	status,2,c
 16406  00B34E  D002               	goto	i2l4357
 16407                           
 16408                           ;boostercomms.c: 612: return boosterCountUC;
 16409  00B350  5003               	movf	LowestIdleWindow@boosterCountUC,w,c
 16410  00B352  0012               	return	
 16411  00B354                     i2l4357:
 16412  00B354  2A03               	incf	LowestIdleWindow@boosterCountUC,f,c
 16413  00B356  D7EC               	goto	i2l4347
 16414  00B358                     i2l4361:
 16415                           
 16416                           ;boostercomms.c: 614: return boosterCountUC;
 16417  00B358  5003               	movf	LowestIdleWindow@boosterCountUC,w,c
 16418  00B35A  0012               	return	
 16419  00B35C                     __end_of_LowestIdleWindow:
 16420                           	opt stack 0
 16421                           pclatu	equ	0xFFB
 16422                           pclath	equ	0xFFA
 16423                           tblptru	equ	0xFF8
 16424                           tblptrh	equ	0xFF7
 16425                           tblptrl	equ	0xFF6
 16426                           tablat	equ	0xFF5
 16427                           prodh	equ	0xFF4
 16428                           prodl	equ	0xFF3
 16429                           intcon	equ	0xFF2
 16430                           postinc0	equ	0xFEE
 16431                           fsr0h	equ	0xFEA
 16432                           fsr0l	equ	0xFE9
 16433                           wreg	equ	0xFE8
 16434                           indf1	equ	0xFE7
 16435                           postinc1	equ	0xFE6
 16436                           postdec1	equ	0xFE5
 16437                           fsr1h	equ	0xFE2
 16438                           fsr1l	equ	0xFE1
 16439                           indf2	equ	0xFDF
 16440                           postinc2	equ	0xFDE
 16441                           postdec2	equ	0xFDD
 16442                           plusw2	equ	0xFDB
 16443                           fsr2h	equ	0xFDA
 16444                           fsr2l	equ	0xFD9
 16445                           status	equ	0xFD8
 16446                           
 16447 ;; *************** function _CheckDataCollision *****************
 16448 ;; Defined at:
 16449 ;;		line 596 in file "boostercomms.c"
 16450 ;; Parameters:    Size  Location     Type
 16451 ;;		None
 16452 ;; Auto vars:     Size  Location     Type
 16453 ;;  boosterCount    1    0[COMRAM] unsigned char 
 16454 ;; Return value:  Size  Location     Type
 16455 ;;                  1    wreg      unsigned char 
 16456 ;; Registers used:
 16457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16458 ;; Tracked objects:
 16459 ;;		On entry : 0/0
 16460 ;;		On exit  : 0/0
 16461 ;;		Unchanged: 0/0
 16462 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16466 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16467 ;;Total ram usage:        1 bytes
 16468 ;; Hardware stack levels used:    1
 16469 ;; This function calls:
 16470 ;;		Nothing
 16471 ;; This function is called by:
 16472 ;;		_BoosterCommsDispatcher
 16473 ;; This function uses a non-reentrant model
 16474 ;;
 16475                           
 16476                           	psect	text87
 16477  00B3B8                     __ptext87:
 16478                           	opt stack 0
 16479  00B3B8                     _CheckDataCollision:
 16480                           	opt stack 22
 16481                           
 16482                           ;boostercomms.c: 597: unsigned char boosterCountUC;
 16483                           ;boostercomms.c: 599: for(boosterCountUC = 0; boosterCountUC < 28; boosterCountUC++){
 16484                           
 16485                           ;incstack = 0
 16486  00B3B8  0E00               	movlw	0
 16487  00B3BA  6E01               	movwf	CheckDataCollision@boosterCountUC,c
 16488  00B3BC                     i2l5017:
 16489  00B3BC  0E1B               	movlw	27
 16490  00B3BE  6401               	cpfsgt	CheckDataCollision@boosterCountUC,c
 16491  00B3C0  D001               	goto	i2l5021
 16492  00B3C2  D00F               	goto	i2l5031
 16493  00B3C4                     i2l5021:
 16494                           
 16495                           ;boostercomms.c: 600: if(boosterCommsData[6][boosterCountUC] & 0b00001000)
 16496  00B3C4  5001               	movf	CheckDataCollision@boosterCountUC,w,c
 16497  00B3C6  0D01               	mullw	1
 16498  00B3C8  0EB4               	movlw	low (_boosterCommsData+180)
 16499  00B3CA  24F3               	addwf	prodl,w,c
 16500  00B3CC  6ED9               	movwf	fsr2l,c
 16501  00B3CE  0E04               	movlw	high (_boosterCommsData+180)
 16502  00B3D0  20F4               	addwfc	prodh,w,c
 16503  00B3D2  6EDA               	movwf	fsr2h,c
 16504  00B3D4  0104               	movlb	4	; () banked
 16505  00B3D6  A6DF               	btfss	indf2,3,c
 16506  00B3D8  D002               	goto	i2l5027
 16507                           
 16508                           ; BSR set to: 4
 16509                           ;boostercomms.c: 601: return 1;
 16510  00B3DA  0E01               	movlw	1
 16511                           
 16512                           ; BSR set to: 4
 16513  00B3DC  0012               	return	
 16514  00B3DE                     i2l5027:
 16515                           
 16516                           ; BSR set to: 4
 16517  00B3DE  2A01               	incf	CheckDataCollision@boosterCountUC,f,c
 16518  00B3E0  D7ED               	goto	i2l5017
 16519  00B3E2                     i2l5031:
 16520                           
 16521                           ;boostercomms.c: 602: }
 16522                           ;boostercomms.c: 604: return 0;
 16523  00B3E2  0E00               	movlw	0
 16524  00B3E4  0012               	return	
 16525  00B3E6                     __end_of_CheckDataCollision:
 16526                           	opt stack 0
 16527                           pclatu	equ	0xFFB
 16528                           pclath	equ	0xFFA
 16529                           tblptru	equ	0xFF8
 16530                           tblptrh	equ	0xFF7
 16531                           tblptrl	equ	0xFF6
 16532                           tablat	equ	0xFF5
 16533                           prodh	equ	0xFF4
 16534                           prodl	equ	0xFF3
 16535                           intcon	equ	0xFF2
 16536                           postinc0	equ	0xFEE
 16537                           fsr0h	equ	0xFEA
 16538                           fsr0l	equ	0xFE9
 16539                           wreg	equ	0xFE8
 16540                           indf1	equ	0xFE7
 16541                           postinc1	equ	0xFE6
 16542                           postdec1	equ	0xFE5
 16543                           fsr1h	equ	0xFE2
 16544                           fsr1l	equ	0xFE1
 16545                           indf2	equ	0xFDF
 16546                           postinc2	equ	0xFDE
 16547                           postdec2	equ	0xFDD
 16548                           plusw2	equ	0xFDB
 16549                           fsr2h	equ	0xFDA
 16550                           fsr2l	equ	0xFD9
 16551                           status	equ	0xFD8
 16552                           
 16553 ;; *************** function _BoosterQueryStart *****************
 16554 ;; Defined at:
 16555 ;;		line 464 in file "boostercomms.c"
 16556 ;; Parameters:    Size  Location     Type
 16557 ;;  queryValUC      1    wreg     unsigned char 
 16558 ;; Auto vars:     Size  Location     Type
 16559 ;;  queryValUC      1    0[COMRAM] unsigned char 
 16560 ;; Return value:  Size  Location     Type
 16561 ;;                  1    wreg      void 
 16562 ;; Registers used:
 16563 ;;		wreg, status,2, status,0, cstack
 16564 ;; Tracked objects:
 16565 ;;		On entry : 0/0
 16566 ;;		On exit  : 0/0
 16567 ;;		Unchanged: 0/0
 16568 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16573 ;;Total ram usage:        1 bytes
 16574 ;; Hardware stack levels used:    1
 16575 ;; Hardware stack levels required when called:    1
 16576 ;; This function calls:
 16577 ;;		_BoosterCommsActive
 16578 ;; This function is called by:
 16579 ;;		_BoosterCommsDispatcher
 16580 ;; This function uses a non-reentrant model
 16581 ;;
 16582                           
 16583                           	psect	text88
 16584  00B45E                     __ptext88:
 16585                           	opt stack 0
 16586  00B45E                     _BoosterQueryStart:
 16587                           	opt stack 21
 16588                           
 16589                           ;incstack = 0
 16590                           ;BoosterQueryStart@queryValUC stored from wreg
 16591  00B45E  6E01               	movwf	BoosterQueryStart@queryValUC,c
 16592                           
 16593                           ;boostercomms.c: 465: if(BoosterCommsActive())
 16594  00B460  ECF4  F05A         	call	_BoosterCommsActive	;wreg free
 16595  00B464  0900               	iorlw	0
 16596  00B466  A4D8               	btfss	status,2,c
 16597  00B468  0012               	return	
 16598                           
 16599                           ;boostercomms.c: 467: statusFlagsUSLG |= 0b000000000000000000000100;
 16600                           
 16601                           ;boostercomms.c: 466: return;
 16602  00B46A  0102               	movlb	2	; () banked
 16603  00B46C  858A               	bsf	_statusFlagsUSLG& (0+255),2,b	;volatile
 16604                           
 16605                           ; BSR set to: 2
 16606                           ;boostercomms.c: 468: commsTXBitsUSLG = queryValUC;
 16607  00B46E  5001               	movf	BoosterQueryStart@queryValUC,w,c
 16608  00B470  0103               	movlb	3	; () banked
 16609  00B472  6F3C               	movwf	_commsTXBitsUSLG& (0+255),b
 16610  00B474  6B3D               	clrf	(_commsTXBitsUSLG+1)& (0+255),b
 16611  00B476  6B3E               	clrf	(_commsTXBitsUSLG+2)& (0+255),b
 16612                           
 16613                           ; BSR set to: 3
 16614                           ;boostercomms.c: 469: commsDataModeUCG = queryValUC;
 16615  00B478  C001  F2A2         	movff	BoosterQueryStart@queryValUC,_commsDataModeUCG
 16616                           
 16617                           ; BSR set to: 3
 16618                           ;boostercomms.c: 470: commsStatusUCG = 1;
 16619  00B47C  0E01               	movlw	1
 16620  00B47E  0102               	movlb	2	; () banked
 16621  00B480  6FA3               	movwf	_commsStatusUCG& (0+255),b
 16622  00B482  0012               	return		;funcret
 16623  00B484                     __end_of_BoosterQueryStart:
 16624                           	opt stack 0
 16625                           pclatu	equ	0xFFB
 16626                           pclath	equ	0xFFA
 16627                           tblptru	equ	0xFF8
 16628                           tblptrh	equ	0xFF7
 16629                           tblptrl	equ	0xFF6
 16630                           tablat	equ	0xFF5
 16631                           prodh	equ	0xFF4
 16632                           prodl	equ	0xFF3
 16633                           intcon	equ	0xFF2
 16634                           postinc0	equ	0xFEE
 16635                           fsr0h	equ	0xFEA
 16636                           fsr0l	equ	0xFE9
 16637                           wreg	equ	0xFE8
 16638                           indf1	equ	0xFE7
 16639                           postinc1	equ	0xFE6
 16640                           postdec1	equ	0xFE5
 16641                           fsr1h	equ	0xFE2
 16642                           fsr1l	equ	0xFE1
 16643                           indf2	equ	0xFDF
 16644                           postinc2	equ	0xFDE
 16645                           postdec2	equ	0xFDD
 16646                           plusw2	equ	0xFDB
 16647                           fsr2h	equ	0xFDA
 16648                           fsr2l	equ	0xFD9
 16649                           status	equ	0xFD8
 16650                           
 16651 ;; *************** function _BoosterCommsActive *****************
 16652 ;; Defined at:
 16653 ;;		line 458 in file "boostercomms.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;		None
 16656 ;; Auto vars:     Size  Location     Type
 16657 ;;		None
 16658 ;; Return value:  Size  Location     Type
 16659 ;;                  1    wreg      unsigned char 
 16660 ;; Registers used:
 16661 ;;		wreg, status,2
 16662 ;; Tracked objects:
 16663 ;;		On entry : 0/0
 16664 ;;		On exit  : 0/0
 16665 ;;		Unchanged: 0/0
 16666 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16671 ;;Total ram usage:        0 bytes
 16672 ;; Hardware stack levels used:    1
 16673 ;; This function calls:
 16674 ;;		Nothing
 16675 ;; This function is called by:
 16676 ;;		_BoosterQueryStart
 16677 ;;		_BoosterCommandStart
 16678 ;;		_BoosterCommsDispatcher
 16679 ;; This function uses a non-reentrant model
 16680 ;;
 16681                           
 16682                           	psect	text89
 16683  00B5E8                     __ptext89:
 16684                           	opt stack 0
 16685  00B5E8                     _BoosterCommsActive:
 16686                           	opt stack 19
 16687                           
 16688                           ;boostercomms.c: 459: if(commsStatusUCG != 0)
 16689                           
 16690                           ;incstack = 0
 16691  00B5E8  0102               	movlb	2	; () banked
 16692  00B5EA  51A3               	movf	_commsStatusUCG& (0+255),w,b
 16693  00B5EC  B4D8               	btfsc	status,2,c
 16694  00B5EE  D002               	goto	i2l4071
 16695                           
 16696                           ; BSR set to: 2
 16697                           ;boostercomms.c: 460: return 1;
 16698  00B5F0  0E01               	movlw	1
 16699                           
 16700                           ; BSR set to: 2
 16701  00B5F2  0012               	return	
 16702  00B5F4                     i2l4071:
 16703                           
 16704                           ; BSR set to: 2
 16705                           ;boostercomms.c: 461: return 0;
 16706  00B5F4  0E00               	movlw	0
 16707  00B5F6  0012               	return	
 16708  00B5F8                     __end_of_BoosterCommsActive:
 16709                           	opt stack 0
 16710  0000                     pclatu	equ	0xFFB
 16711                           pclath	equ	0xFFA
 16712                           tblptru	equ	0xFF8
 16713                           tblptrh	equ	0xFF7
 16714                           tblptrl	equ	0xFF6
 16715                           tablat	equ	0xFF5
 16716                           prodh	equ	0xFF4
 16717                           prodl	equ	0xFF3
 16718                           intcon	equ	0xFF2
 16719                           postinc0	equ	0xFEE
 16720                           fsr0h	equ	0xFEA
 16721                           fsr0l	equ	0xFE9
 16722                           wreg	equ	0xFE8
 16723                           indf1	equ	0xFE7
 16724                           postinc1	equ	0xFE6
 16725                           postdec1	equ	0xFE5
 16726                           fsr1h	equ	0xFE2
 16727                           fsr1l	equ	0xFE1
 16728                           indf2	equ	0xFDF
 16729                           postinc2	equ	0xFDE
 16730                           postdec2	equ	0xFDD
 16731                           plusw2	equ	0xFDB
 16732                           fsr2h	equ	0xFDA
 16733                           fsr2l	equ	0xFD9
 16734                           status	equ	0xFD8
 16735                           pclatu	equ	0xFFB
 16736                           pclath	equ	0xFFA
 16737                           tblptru	equ	0xFF8
 16738                           tblptrh	equ	0xFF7
 16739                           tblptrl	equ	0xFF6
 16740                           tablat	equ	0xFF5
 16741                           prodh	equ	0xFF4
 16742                           prodl	equ	0xFF3
 16743                           intcon	equ	0xFF2
 16744                           postinc0	equ	0xFEE
 16745                           fsr0h	equ	0xFEA
 16746                           fsr0l	equ	0xFE9
 16747                           wreg	equ	0xFE8
 16748                           indf1	equ	0xFE7
 16749                           postinc1	equ	0xFE6
 16750                           postdec1	equ	0xFE5
 16751                           fsr1h	equ	0xFE2
 16752                           fsr1l	equ	0xFE1
 16753                           indf2	equ	0xFDF
 16754                           postinc2	equ	0xFDE
 16755                           postdec2	equ	0xFDD
 16756                           plusw2	equ	0xFDB
 16757                           fsr2h	equ	0xFDA
 16758                           fsr2l	equ	0xFD9
 16759                           status	equ	0xFD8
 16760                           
 16761                           	psect	rparam
 16762  0000                     pclatu	equ	0xFFB
 16763                           pclath	equ	0xFFA
 16764                           tblptru	equ	0xFF8
 16765                           tblptrh	equ	0xFF7
 16766                           tblptrl	equ	0xFF6
 16767                           tablat	equ	0xFF5
 16768                           prodh	equ	0xFF4
 16769                           prodl	equ	0xFF3
 16770                           intcon	equ	0xFF2
 16771                           postinc0	equ	0xFEE
 16772                           fsr0h	equ	0xFEA
 16773                           fsr0l	equ	0xFE9
 16774                           wreg	equ	0xFE8
 16775                           indf1	equ	0xFE7
 16776                           postinc1	equ	0xFE6
 16777                           postdec1	equ	0xFE5
 16778                           fsr1h	equ	0xFE2
 16779                           fsr1l	equ	0xFE1
 16780                           indf2	equ	0xFDF
 16781                           postinc2	equ	0xFDE
 16782                           postdec2	equ	0xFDD
 16783                           plusw2	equ	0xFDB
 16784                           fsr2h	equ	0xFDA
 16785                           fsr2l	equ	0xFD9
 16786                           status	equ	0xFD8
 16787                           
 16788                           	psect	temp
 16789  00001E                     btemp:
 16790                           	opt stack 0
 16791  00001E                     	ds	1
 16792  0000                     int$flags	set	btemp
 16793                           pclatu	equ	0xFFB
 16794                           pclath	equ	0xFFA
 16795                           tblptru	equ	0xFF8
 16796                           tblptrh	equ	0xFF7
 16797                           tblptrl	equ	0xFF6
 16798                           tablat	equ	0xFF5
 16799                           prodh	equ	0xFF4
 16800                           prodl	equ	0xFF3
 16801                           intcon	equ	0xFF2
 16802                           postinc0	equ	0xFEE
 16803                           fsr0h	equ	0xFEA
 16804                           fsr0l	equ	0xFE9
 16805                           wreg	equ	0xFE8
 16806                           indf1	equ	0xFE7
 16807                           postinc1	equ	0xFE6
 16808                           postdec1	equ	0xFE5
 16809                           fsr1h	equ	0xFE2
 16810                           fsr1l	equ	0xFE1
 16811                           indf2	equ	0xFDF
 16812                           postinc2	equ	0xFDE
 16813                           postdec2	equ	0xFDD
 16814                           plusw2	equ	0xFDB
 16815                           fsr2h	equ	0xFDA
 16816                           fsr2l	equ	0xFD9
 16817                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         881
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           29     29      29
    BANK2           255    137     174
    BANK3           256      0     232
    BANK4           256      0     240
    BANK5           256    132     256
    BANK6           256      0     248
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    readRegisterFromProgram@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> getSerialFromMemory@state(BANK2[64]), 

    writeRegisterToProgram@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> writeBootloaderState@buffer(BANK2[64]), 

    CreateAndSend@dataBuf	PTR unsigned char  size(2) Largest target is 62
		 -> ProcessSerialCMD@serialListUSA(BANK2[60]), ReturnBoosterData@partRespUSA(BANK5[62]), ReturnBoosterData@allRespUSA(BANK5[62]), NULL(NULL[0]), 
		 -> iscSerialUSG(BANK2[2]), 

    SetSerialNumber@dataBufUSP	PTR unsigned short  size(2) Largest target is 75
		 -> bufferRXST7540UCAG(BANK3[75]), 

    CRC16@data_p	PTR unsigned char  size(2) Largest target is 79
		 -> bufferRXST7540UCAG(BANK3[75]), bufferTXST7540UCAG(BANK3[79]), 

    WindowIDBacktrack@statusSetIDUC	PTR unsigned char  size(2) Largest target is 1
		 -> SetWindowID@statusSetIDUCS(BANK2[1]), 

    WindowIDBacktrack@currentBitUC	PTR unsigned char  size(2) Largest target is 1
		 -> SetWindowID@currentBitUCS(BANK2[1]), 

    WindowIDBacktrack@currentSerialUS	PTR unsigned short  size(2) Largest target is 2
		 -> SetWindowID@currentSerialUSS(BANK2[2]), 

    CreateMessageST7540@dataBuf	PTR unsigned char  size(2) Largest target is 75
		 -> ProcessSerialCMD@serialListUSA(BANK2[60]), ReturnBoosterData@partRespUSA(BANK5[62]), ReturnBoosterData@allRespUSA(BANK5[62]), NULL(NULL[0]), 
		 -> iscSerialUSG(BANK2[2]), bufferRXST7540UCAG(BANK3[75]), 

    sp__PacketDataST7540	PTR unsigned char  size(2) Largest target is 75
		 -> bufferRXST7540UCAG(BANK3[75]), 

    RetransmitMessageSt7540@dataBuf	PTR unsigned char  size(2) Largest target is 75
		 -> bufferRXST7540UCAG(BANK3[75]), 

    ReadConfigST7540@configDataUS	PTR unsigned um size(2) Largest target is 3
		 -> InitST7540@configDataRXUS(BANK2[3]), 

    ReadConfigST7540@frameDataUS	PTR unsigned um size(2) Largest target is 3
		 -> InitST7540@frameDataRXUS(BANK2[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    i2_ForceFiringMode->i2_ClearPastValues
    i2_ForceFiringMode->i2_ResetBoosterStates
    _BoosterDataCommandComms->_ProcessRXFrame
    _ReadKeySwitch->_ReadAnalogVoltage
    _ReadEarthLeakage->_ReadAnalogVoltage
    _ProcessRXFrame->_CheckBoosterRXParity
    _CheckLineFault->___wmul
    _BoosterCommsDispatcher->_QueryWinSerial
    i2_ClearPastValues->i2_ClearPastValue
    _SetWindowID->_WindowIDBacktrack
    i2_ResetBoosterStates->i2_ResetSingleBoosterState
    _WindowIDBacktrack->_BoosterCommandStart
    _AssignWindowID->_BoosterCommandStart
    _AssignSerialNumber->_BoosterCommandStart
    i2_WriteFlashValues->i2_FlashWriteWord
    _QueryWinSerial->_BoosterCommandStart
    _BoosterCommandStart->_CheckBoosterRXParity
    _NewBoosterAdded->_LowestIdleWindow

Critical Paths under _main in BANK2

    _main->_ProcessMasterComms
    _ProcessMasterComms->_ProcessSerialCMD
    _writeBootloaderState->_writeRegisterToProgram
    _UpdatePacketNumber->_SavePacketNumber
    _SetSerialNumber->_CreateAndSend
    _ReturnBoosterData->_CreateAndSend
    _RetransmitMessageSt7540->_PacketReadParamST7540
    _ProcessSerialCMD->_CreateAndSend
    _ProcessPingCMD->_CreateAndSend
    _CreateAndSend->_PacketReadParamST7540
    _SavePacketNumber->_GetPacketSlot
    _PacketReadParamST7540->_CheckCRCST7540
    _CheckCRCST7540->_CRC16
    _CreateMessageST7540->_CRC16
    _CollisionCheck->_MangleSerial
    _ForceFiringMode->_ClearPastValues
    _ForceFiringMode->_ResetBoosterStates
    _ClearPastValues->_ClearPastValue
    _InitStates->_ReadFlashValues
    _ResetBoosterStates->_ResetSingleBoosterState
    _ReadFlashValues->_getSerialFromMemory
    _getSerialFromMemory->_readRegisterFromProgram
    _WriteFlashValues->_FlashWriteWord
    _InitST7540Wrapper->_InitST7540
    _InitST7540->_WriteConfigST7540
    _WriteConfigST7540->_WaitTickCount

Critical Paths under _isr in BANK2

    _isr->_BoosterCommsDispatcher
    _BoosterCommsDispatcher->_SetWindowID
    _SetWindowID->_WindowIDBacktrack

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    _ProcessMasterComms->_ReturnBoosterData

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69715
                  _InitST7540Wrapper
                         _InitStates
                         _InitSystem
                 _ProcessMasterComms
                       _SetCommsHigh
 ---------------------------------------------------------------------------------
 (1) _SetCommsHigh                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessMasterComms                                   9     9      0   66006
                                            130 BANK2      7     7      0
                     _CollisionCheck
                      _CreateAndSend
                    _DataReadyST7540
                    _ForceFiringMode
              _PacketReadParamST7540
                     _ProcessPingCMD
                   _ProcessSerialCMD
               _ReceiveNewDataST7540
            _RetransmitMessageSt7540
                  _ReturnBoosterData
                  _SetIsolationRelay
                    _SetSerialNumber
                 _UpdatePacketNumber
               _writeBootloaderState
 ---------------------------------------------------------------------------------
 (2) _writeBootloaderState                                66    66      0     425
                                             32 BANK2     66    66      0
             _writeRegisterToProgram
 ---------------------------------------------------------------------------------
 (3) _writeRegisterToProgram                               6     2      4     309
                                             26 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (2) _UpdatePacketNumber                                  11     7      4    1896
                                             37 BANK2     11     7      4
                _GetLastPacketNumber
                   _SavePacketNumber
 ---------------------------------------------------------------------------------
 (3) _GetLastPacketNumber                                  5     3      2     188
                                             26 BANK2      5     3      2
 ---------------------------------------------------------------------------------
 (2) _SetSerialNumber                                      8     6      2   11839
                                             64 BANK2      8     6      2
                      _CreateAndSend
                   _PacketDataST7540
                   _WriteFlashValues
 ---------------------------------------------------------------------------------
 (2) _SetIsolationRelay                                    1     1      0      44
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReturnBoosterData                                  143   141      2   12404
                                             64 BANK2     11     9      2
                                              0 BANK5    132   132      0
                      _CreateAndSend
 ---------------------------------------------------------------------------------
 (2) _RetransmitMessageSt7540                              9     9      0    3581
                                             54 BANK2      9     9      0
                _CreateMessageST7540
                     _LineIdleST7540
                   _PacketDataST7540
              _PacketReadParamST7540
                _StartTransmitST7540
                 _TransmitBusyST7540
 ---------------------------------------------------------------------------------
 (3) _PacketDataST7540                                     2     0      2       0
                                             26 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ReceiveNewDataST7540                                 1     1      0       1
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ProcessSerialCMD                                    66    64      2   11096
                                             64 BANK2     66    64      2
                      _CreateAndSend
 ---------------------------------------------------------------------------------
 (2) _ProcessPingCMD                                       2     0      2   10796
                                             64 BANK2      2     0      2
                      _CreateAndSend
 ---------------------------------------------------------------------------------
 (3) _CreateAndSend                                       10     2      8   10675
                                             54 BANK2     10     2      8
                     _CollisionCheck
                _CreateMessageST7540
                     _LineIdleST7540
              _PacketReadParamST7540
                   _SavePacketNumber
                _StartTransmitST7540
                 _TransmitBusyST7540
 ---------------------------------------------------------------------------------
 (4) _TransmitBusyST7540                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _StartTransmitST7540                                  1     1      0       3
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SavePacketNumber                                     6     3      3    1097
                                             31 BANK2      6     3      3
                 _ClearPacketNumbers
                      _GetPacketSlot
                     _IdlePacketSlot
 ---------------------------------------------------------------------------------
 (4) _IdlePacketSlot                                       3     3      0     130
                                             26 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (4) _GetPacketSlot                                        5     3      2     251
                                             26 BANK2      5     3      2
 ---------------------------------------------------------------------------------
 (4) _PacketReadParamST7540                                7     5      2    1105
                                             47 BANK2      7     5      2
                     _CheckCRCST7540
 ---------------------------------------------------------------------------------
 (5) _CheckCRCST7540                                       8     8      0     997
                                             39 BANK2      8     8      0
                              _CRC16
 ---------------------------------------------------------------------------------
 (4) _CreateMessageST7540                                 13     5      8    2269
                                             39 BANK2     13     5      8
                              _CRC16
 ---------------------------------------------------------------------------------
 (6) _CRC16                                               13     9      4     827
                                             26 BANK2     13     9      4
 ---------------------------------------------------------------------------------
 (4) _CollisionCheck                                       2     2      0    1028
                                             41 BANK2      2     2      0
                     _LineIdleST7540
                       _MangleSerial
                      _WaitTickCount
 ---------------------------------------------------------------------------------
 (5) _MangleSerial                                        15    13      2     783
                                             26 BANK2     15    13      2
 ---------------------------------------------------------------------------------
 (4) _LineIdleST7540                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ForceFiringMode                                      1     1      0     444
                                             28 BANK2      1     1      0
                    _ClearPastValues
                 _ResetBoosterStates
 ---------------------------------------------------------------------------------
 (3) _ClearPastValues                                      1     1      0     156
                                             27 BANK2      1     1      0
                     _ClearPastValue
 ---------------------------------------------------------------------------------
 (4) _ClearPastValue                                       1     1      0      88
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DataReadyST7540                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSystem                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitStates                                           0     0      0    2015
                 _ClearPacketNumbers
                    _ReadFlashValues
                 _ResetBoosterStates
 ---------------------------------------------------------------------------------
 (3) _ResetBoosterStates                                   1     1      0     266
                                             27 BANK2      1     1      0
            _ResetSingleBoosterState
 ---------------------------------------------------------------------------------
 (4) _ResetSingleBoosterState                              1     1      0     198
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadFlashValues                                      3     3      0    1619
                                             96 BANK2      3     3      0
                   _FlashReadAddress
                   _WriteFlashValues
                _getSerialFromMemory
 ---------------------------------------------------------------------------------
 (3) _getSerialFromMemory                                 64    64      0     355
                                             32 BANK2     64    64      0
            _readRegisterFromProgram
 ---------------------------------------------------------------------------------
 (4) _readRegisterFromProgram                              6     2      4     286
                                             26 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (3) _WriteFlashValues                                     0     0      0     916
                    _FlashEraseBlock
                     _FlashWriteWord
 ---------------------------------------------------------------------------------
 (4) _FlashWriteWord                                       5     1      4     795
                                             26 BANK2      5     1      4
                _FlashUnlockSequence
 ---------------------------------------------------------------------------------
 (4) _FlashEraseBlock                                      3     1      2     121
                                             26 BANK2      3     1      2
                _FlashUnlockSequence
 ---------------------------------------------------------------------------------
 (5) _FlashUnlockSequence                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FlashReadAddress                                     2     0      2     348
                                             26 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ClearPacketNumbers                                   1     1      0     130
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitST7540Wrapper                                    1     1      0    1694
                                             51 BANK2      1     1      0
                         _InitST7540
 ---------------------------------------------------------------------------------
 (2) _InitST7540                                          12    12      0    1626
                                             39 BANK2     12    12      0
                     _InitST7540Pins
                   _ReadConfigST7540
                  _WriteConfigST7540
 ---------------------------------------------------------------------------------
 (3) _WriteConfigST7540                                   11     5      6     859
                                             28 BANK2     11     5      6
                      _WaitTickCount
 ---------------------------------------------------------------------------------
 (5) _WaitTickCount                                        2     0      2     211
                                             26 BANK2      2     0      2
                        _WaitNewTick
 ---------------------------------------------------------------------------------
 (6) _WaitNewTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ReadConfigST7540                                     9     5      4     397
                                             26 BANK2      9     5      4
 ---------------------------------------------------------------------------------
 (3) _InitST7540Pins                                       0     0      0       0
                        _PPSLockFunc
                      _PPSUnlockFunc
 ---------------------------------------------------------------------------------
 (4) _PPSUnlockFunc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PPSLockFunc                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 15    15      0   24737
                                             11 BANK2     15    15      0
             _BoosterCommsDispatcher
            _BoosterDataCommandComms
            _RXReadyISRHandlerST7540
                _SPIISRHandlerST7540
                  i2_ForceFiringMode
 ---------------------------------------------------------------------------------
 (8) i2_ForceFiringMode                                    1     1      0     444
                                              2 COMRAM     1     1      0
                  i2_ClearPastValues
               i2_ResetBoosterStates
 ---------------------------------------------------------------------------------
 (8) _SPIISRHandlerST7540                                  1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RXReadyISRHandlerST7540                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _BoosterDataCommandComms                              4     4      0    2620
                                             17 COMRAM     4     4      0
                     _CheckLineFault
                   _InitEarthLeakage
                     _ProcessRXFrame
                  _ReadAnalogVoltage
                   _ReadEarthLeakage
                      _ReadKeySwitch
                        _SetCommsLow
                     i2_SetCommsHigh
 ---------------------------------------------------------------------------------
 (9) i2_SetCommsHigh                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _SetCommsLow                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadKeySwitch                                        2     2      0      45
                                              3 COMRAM     2     2      0
                  _ReadAnalogVoltage
 ---------------------------------------------------------------------------------
 (9) _ReadEarthLeakage                                     2     2      0      45
                                              3 COMRAM     2     2      0
                  _ReadAnalogVoltage
 ---------------------------------------------------------------------------------
 (9) _ProcessRXFrame                                      11     8      3    1618
                                              6 COMRAM    11     8      3
               _CheckBoosterRXParity
                   i2_ClearPastValue
          i2_ResetSingleBoosterState
 ---------------------------------------------------------------------------------
 (9) _InitEarthLeakage                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CheckLineFault                                      10    10      0     757
                                              6 COMRAM    10    10      0
                  _ReadAnalogVoltage
                             ___wmul
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _ReadAnalogVoltage                                   3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _BoosterCommsDispatcher                               1     1      0   21649
                                             10 BANK2      1     1      0
                 _BoosterCommsActive
                  _BoosterQueryStart
                 _CheckDataCollision
                _LowestMissingSerial
                    _NewBoosterAdded
                     _QueryWinSerial
                        _SetWindowID
                  i2_ClearPastValues
 ---------------------------------------------------------------------------------
 (9) i2_ClearPastValues                                    1     1      0     156
                                              1 COMRAM     1     1      0
                   i2_ClearPastValue
 ---------------------------------------------------------------------------------
 (9) _SetWindowID                                          3     3      0   16894
                                              7 BANK2      3     3      0
                 _AssignSerialNumber
                     _AssignWindowID
                _BoosterCommandStart
                  _WindowIDBacktrack
               i2_ResetBoosterStates
 ---------------------------------------------------------------------------------
 (9) i2_ResetBoosterStates                                 1     1      0     266
                                              1 COMRAM     1     1      0
          i2_ResetSingleBoosterState
 ---------------------------------------------------------------------------------
 (10) _WindowIDBacktrack                                  13     7      6    4606
                                             21 COMRAM     6     0      6
                                              0 BANK2      7     7      0
                _BoosterCommandStart
 ---------------------------------------------------------------------------------
 (10) _AssignWindowID                                      3     3      0    4044
                                             21 COMRAM     3     3      0
                _BoosterCommandStart
                   _LowestIdleWindow
 ---------------------------------------------------------------------------------
 (10) _AssignSerialNumber                                  0     0      0    4158
                _BoosterCommandStart
                 i2_WriteFlashValues
 ---------------------------------------------------------------------------------
 (11) i2_WriteFlashValues                                  0     0      0     338
                  i2_FlashEraseBlock
                   i2_FlashWriteWord
 ---------------------------------------------------------------------------------
 (12) i2_FlashWriteWord                                    5     1      4     267
                                              0 COMRAM     5     1      4
              i2_FlashUnlockSequence
 ---------------------------------------------------------------------------------
 (12) i2_FlashEraseBlock                                   3     1      2      71
                                              0 COMRAM     3     1      2
              i2_FlashUnlockSequence
 ---------------------------------------------------------------------------------
 (13) i2_FlashUnlockSequence                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _QueryWinSerial                                       8     8      0    4375
                                             21 COMRAM     8     8      0
                _BoosterCommandStart
                _LowestMissingSerial
                   i2_ClearPastValue
          i2_ResetSingleBoosterState
 ---------------------------------------------------------------------------------
 (10) i2_ResetSingleBoosterState                           1     1      0     198
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_ClearPastValue                                    1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _LowestMissingSerial                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _BoosterCommandStart                                15    11      4    3820
                                              6 COMRAM    15    11      4
                 _BoosterCommsActive
               _CheckBoosterRXParity
 ---------------------------------------------------------------------------------
 (10) _CheckBoosterRXParity                                6     4      2     496
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) _NewBoosterAdded                                      1     1      0     112
                                              3 COMRAM     1     1      0
                   _LowestIdleWindow
 ---------------------------------------------------------------------------------
 (11) _LowestIdleWindow                                    3     3      0     112
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _CheckDataCollision                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _BoosterQueryStart                                    1     1      0      44
                                              0 COMRAM     1     1      0
                 _BoosterCommsActive
 ---------------------------------------------------------------------------------
 (12) _BoosterCommsActive                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitST7540Wrapper
     _InitST7540
       _InitST7540Pins
         _PPSLockFunc
         _PPSUnlockFunc
       _ReadConfigST7540
       _WriteConfigST7540
         _WaitTickCount
           _WaitNewTick
   _InitStates
     _ClearPacketNumbers
     _ReadFlashValues
       _FlashReadAddress
       _WriteFlashValues
         _FlashEraseBlock
           _FlashUnlockSequence
         _FlashWriteWord
           _FlashUnlockSequence
       _getSerialFromMemory
         _readRegisterFromProgram
     _ResetBoosterStates
       _ResetSingleBoosterState
   _InitSystem
   _ProcessMasterComms
     _CollisionCheck
       _LineIdleST7540
       _MangleSerial
       _WaitTickCount
         _WaitNewTick
     _CreateAndSend
       _CollisionCheck
         _LineIdleST7540
         _MangleSerial
         _WaitTickCount
           _WaitNewTick
       _CreateMessageST7540
         _CRC16
       _LineIdleST7540
       _PacketReadParamST7540
         _CheckCRCST7540
           _CRC16
       _SavePacketNumber
         _ClearPacketNumbers
         _GetPacketSlot
         _IdlePacketSlot
       _StartTransmitST7540
       _TransmitBusyST7540
     _DataReadyST7540
     _ForceFiringMode
       _ClearPastValues
         _ClearPastValue
       _ResetBoosterStates
         _ResetSingleBoosterState
     _PacketReadParamST7540
       _CheckCRCST7540
         _CRC16
     _ProcessPingCMD
       _CreateAndSend
         _CollisionCheck
           _LineIdleST7540
           _MangleSerial
           _WaitTickCount
             _WaitNewTick
         _CreateMessageST7540
           _CRC16
         _LineIdleST7540
         _PacketReadParamST7540
           _CheckCRCST7540
             _CRC16
         _SavePacketNumber
           _ClearPacketNumbers
           _GetPacketSlot
           _IdlePacketSlot
         _StartTransmitST7540
         _TransmitBusyST7540
     _ProcessSerialCMD
       _CreateAndSend
         _CollisionCheck
           _LineIdleST7540
           _MangleSerial
           _WaitTickCount
             _WaitNewTick
         _CreateMessageST7540
           _CRC16
         _LineIdleST7540
         _PacketReadParamST7540
           _CheckCRCST7540
             _CRC16
         _SavePacketNumber
           _ClearPacketNumbers
           _GetPacketSlot
           _IdlePacketSlot
         _StartTransmitST7540
         _TransmitBusyST7540
     _ReceiveNewDataST7540
     _RetransmitMessageSt7540
       _CreateMessageST7540
         _CRC16
       _LineIdleST7540
       _PacketDataST7540
       _PacketReadParamST7540
         _CheckCRCST7540
           _CRC16
       _StartTransmitST7540
       _TransmitBusyST7540
     _ReturnBoosterData
       _CreateAndSend
         _CollisionCheck
           _LineIdleST7540
           _MangleSerial
           _WaitTickCount
             _WaitNewTick
         _CreateMessageST7540
           _CRC16
         _LineIdleST7540
         _PacketReadParamST7540
           _CheckCRCST7540
             _CRC16
         _SavePacketNumber
           _ClearPacketNumbers
           _GetPacketSlot
           _IdlePacketSlot
         _StartTransmitST7540
         _TransmitBusyST7540
     _SetIsolationRelay
     _SetSerialNumber
       _CreateAndSend
         _CollisionCheck
           _LineIdleST7540
           _MangleSerial
           _WaitTickCount
             _WaitNewTick
         _CreateMessageST7540
           _CRC16
         _LineIdleST7540
         _PacketReadParamST7540
           _CheckCRCST7540
             _CRC16
         _SavePacketNumber
           _ClearPacketNumbers
           _GetPacketSlot
           _IdlePacketSlot
         _StartTransmitST7540
         _TransmitBusyST7540
       _PacketDataST7540
       _WriteFlashValues
         _FlashEraseBlock
           _FlashUnlockSequence
         _FlashWriteWord
           _FlashUnlockSequence
     _UpdatePacketNumber
       _GetLastPacketNumber
       _SavePacketNumber
         _ClearPacketNumbers
         _GetPacketSlot
         _IdlePacketSlot
     _writeBootloaderState
       _writeRegisterToProgram
   _SetCommsHigh

 _isr (ROOT)
   _BoosterCommsDispatcher
     _BoosterCommsActive
     _BoosterQueryStart
       _BoosterCommsActive
     _CheckDataCollision
     _LowestMissingSerial
     _NewBoosterAdded
       _LowestIdleWindow
     _QueryWinSerial
       _BoosterCommandStart
         _BoosterCommsActive
         _CheckBoosterRXParity
       _LowestMissingSerial
       i2_ClearPastValue
       i2_ResetSingleBoosterState
     _SetWindowID
       _AssignSerialNumber
         _BoosterCommandStart
           _BoosterCommsActive
           _CheckBoosterRXParity
         i2_WriteFlashValues
           i2_FlashEraseBlock
             i2_FlashUnlockSequence
           i2_FlashWriteWord
             i2_FlashUnlockSequence
       _AssignWindowID
         _BoosterCommandStart
           _BoosterCommsActive
           _CheckBoosterRXParity
         _LowestIdleWindow
       _BoosterCommandStart
         _BoosterCommsActive
         _CheckBoosterRXParity
       _WindowIDBacktrack
         _BoosterCommandStart
           _BoosterCommsActive
           _CheckBoosterRXParity
       i2_ResetBoosterStates
         i2_ResetSingleBoosterState
     i2_ClearPastValues
       i2_ClearPastValue
   _BoosterDataCommandComms
     _CheckLineFault
       _ReadAnalogVoltage
       ___wmul
     _InitEarthLeakage
     _ProcessRXFrame
       _CheckBoosterRXParity
       i2_ClearPastValue
       i2_ResetSingleBoosterState
     _ReadAnalogVoltage
     _ReadEarthLeakage
       _ReadAnalogVoltage
     _ReadKeySwitch
       _ReadAnalogVoltage
     _SetCommsLow
     i2_SetCommsHigh
   _RXReadyISRHandlerST7540
   _SPIISRHandlerST7540
   i2_ForceFiringMode
     i2_ClearPastValues
       i2_ClearPastValue
     i2_ResetBoosterStates
       i2_ResetSingleBoosterState

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           CAF      0       0      31        0.0%
BITBANK13          100      0       0      26        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      14        0.0%
BANK7              100      0       0      15        0.0%
BITBANK6           100      0       0      12        0.0%
BANK6              100      0      F8      13       96.9%
BITBANK5           100      0       0      10        0.0%
BANK5              100     84     100      11      100.0%
BITBANK4           100      0       0       8        0.0%
BANK4              100      0      F0       9       93.8%
BITBANK3           100      0       0       6        0.0%
BANK3              100      0      E8       7       90.6%
BITBANK2            FF      0       0       4        0.0%
BANK2               FF     89      AE       5       68.2%
BITBANK14           B0      0       0      28        0.0%
BANK14              B0      0       0      29        0.0%
BIGRAM              1E      0       0      32        0.0%
BITCOMRAM           1D      0       0       0        0.0%
COMRAM              1D     1D      1D       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     49B      30        0.0%
DATA                 0      0     49B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Oct 16 10:51:52 2017

                           _statusGetSerialUCS 029D                                ?_InitST7540Pins 0001  
               ProcessMasterComms@destSerialUS 0285                               ?_FlashEraseBlock 021B  
                                           l81 A188                                             l90 A7A8  
                                           l85 A778                                             l96 99C0  
                                           l88 A78E                                             l89 A7B2  
                              ?i2_SetCommsHigh 0001                            ___wmul@multiplicand 0003  
                                ?_MangleSerial 021B                  WindowIDBacktrack@currentBitUC 0016  
                      ?_writeRegisterToProgram 021B                                   __CFG_CP0$OFF 000000  
                            ??_ReadFlashValues 0261                                            l100 9A02  
                                          l101 99DE                                            l137 B522  
                                          l154 A20E                                            l155 A218  
                                          l157 A236                                            l611 9BDA  
                                          l821 95CA                                            l920 8BE0  
                                          l835 B036                                            l924 8C30  
                                          l837 B034                                            l848 9E7C  
                                          l857 B212                                 _LineIdleST7540 B622  
                                          _PR2 000FCB                              ?_ReadConfigST7540 021B  
                                          _isr 8108                              _InitST7540Wrapper B412  
                                          prod 000FF3                                            wreg 000FE8  
                                _PPSUnlockFunc B5C4                                   __CFG_IESO$ON 000000  
                           ??_ReadConfigST7540 021F                   __size_of_LowestMissingSerial 0056  
                   ProcessPingCMD@respSerialUS 0241                             ?_InitST7540Wrapper 0001  
                         CheckLineFault@i_1334 000D                                           l1006 B63A  
                                         l1060 AAB4                                           l1061 AAC2  
                                         l1091 AEF6                                           l1093 AF18  
                                         l1085 A722                                           l6301 B4E6  
                                         l4437 AEE0                                           l4701 AD5C  
                                         l4527 99D4                                           l5263 B014  
                                         l5409 B2B2                                           l4721 AA86  
                                         l4571 B4D2                                           l6403 AFF0  
                                         l6333 AF74                                           l4653 B4AA  
                                         l6309 B62A                                           l6413 A1B6  
                                         l4567 B4C8                                           l6343 9D84  
                                         l6263 9B38                                           l6431 A240  
                                         l6329 AF6A                                           l4657 B4B4  
                                         l6281 9BE8                                           l6273 9B66  
                                         l6425 A222                                           l6409 A1A2  
                                         l5465 ADCC                                           l6363 9E76  
                                         l6355 9E2C                                           l6347 9D8E  
                                         l6419 A1E2                                           l4691 AD16  
                                         l6611 A8F4                                           l5475 ADFE  
                                         l6277 9BD2                                           l6269 9B5C  
                                         l6461 A022                                           l6701 8C3E  
                                         l5469 ADE2                                           l6519 A784  
                                         l6383 B178                                           l6535 AB56  
                                         l6711 8D60                                           l6631 8A46  
                                         l4687 AD0C                                           l6457 9FE0  
                                         l6369 B146                                           l6545 ABA2  
                                         l6721 8DF4                                           l6705 8D2C  
                                         l6633 8A4A                                           l6641 8A5A  
                                         l4697 AD56                                           l6617 A908  
                                         l6299 B4E2                                           l6379 B172  
                                         l6547 ABA6                                           l6731 A470  
                                         l6715 8D9A                                           l6635 8A4E  
                                         l6643 8A76                                           ?_isr 0001  
                                         l6389 AFB4                                           l6741 A4C4  
                                         l6717 8DA2                                           l6709 8D5C  
                                         l6661 8ADE                                           l6645 8A7C  
                                         l6637 8A52                                           l6399 AFEA  
                                         l6735 A47A                                           l6727 A464  
                                         l6655 8AC0                                           l6831 94FA  
                                         l6823 94C8                                           l6745 A4CA  
                                         l6673 8AFC                                           l6665 8AE8  
                                         l6649 8A86                                           l6841 9568  
                                         l6499 ABF4                                           l6595 A986  
                                         l6683 8B1A                                           l6675 8B04  
                                         l6763 9F32                                           l6843 959C  
                                         l6835 9524                                           l6827 94D8  
                                         l6819 94BA                                           l6669 8AF2  
                                         l6845 95AA                                           l6837 9536  
                                         l6861 95E2                                           l6783 B422  
                                         l6679 8B10                                           l6767 9F64  
                                         l6847 95B8                                           l6863 962A  
                                         l6697 8C1C                                           l6689 8BDA  
                                         l6857 95DA                                           l6881 B54C  
                                         l6787 B432                                           l6779 B418  
                                         l6795 9450                                ?_ClearPastValue 0001  
                                         u4280 AAB4                                           u7210 A164  
                                         u7220 A184                                           u7601 94F8  
                                         u6900 9DC8                                           u6910 9DCA  
                                         u6920 9DD8                                           u6840 9D98  
                                         u6930 9DDA                                           u6850 9D9A  
                                         u6940 9DE8                                           u6860 9DA8  
                                         u6950 9DEA                                           u6870 9DAA  
                                         u6790 A66E                                           u6960 9DF8  
                                         u6880 9DB8                                           u6970 9DFA  
                                         u6890 9DBA                               _SavePacketNumber ABC0  
                  ProcessRXFrame@parityCheckUC 0011                                  __CFG_FCMEN$ON 000000  
            CreateMessageST7540@packetSourceUS 0228                                           _main B538  
                          ??_InitST7540Wrapper 0234                     i2ClearPastValue@valuePosUC 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
             __size_of_RetransmitMessageSt7540 0098                                           btemp 001E  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 81D6                                 _boosterCountUC 029B  
                __size_ofi2_ResetBoosterStates 0016                                   ___param_bank 000000  
                             ?_SetSerialNumber 0241                              ??_NewBoosterAdded 0004  
               GetLastPacketNumber@srcSerialUS 021B                        __size_of_IdlePacketSlot 003C  
                                        ??_isr 020C                        _BoosterDataCommandComms 81DA  
               __end_of_writeRegisterToProgram AACC                                 ??_MangleSerial 021D  
                            ?_FlashReadAddress 021B                                  __CFG_PLLDIV$2 000000  
                       __end_of_LineIdleST7540 B62E                              _commandResponseUS 03E6  
                           ??_FlashReadAddress 021D                                          ?_main 0001  
                                        _ADRES 000FC3                                          _CRC16 9B14  
                                _ReadKeySwitch B2C8                      __end_of_InitST7540Wrapper B438  
                  CreateAndSend@packetSourceUS 0237                              _ReturnBoosterData 89FC  
          ReadEarthLeakage@earthLeakageValueUS 0004                               ?_ClearPastValues 0001  
                                        i2l111 AA38                                          i2l107 A9AC  
                                        i2l109 A9EE                                          i2l340 8664  
                                        i2l317 84BC                                          i2l342 8660  
                                        i2l270 81E8                                          i2l327 85D2  
                                        i2l271 8202                                          i2l416 9CE8  
                                        i2l352 86CC                                          i2l362 8702  
                                        i2l346 8670                                          i2l338 8654  
                                        i2l356 86F8                                          i2l445 B312  
                                        i2l277 8216                                          i2l269 89FA  
                                        i2l446 B320                                          i2l534 9214  
                                        i2l470 9016                                          i2l358 86EE  
                                        i2l391 88C0                                          i2l279 8244  
                                        i2l456 9188                                          i2l553 9410  
                                        i2l289 82D6                                          i2l538 92C4  
                                        i2l566 9878                                          i2l835 B13C  
                                        i2l837 B13A                                          i2l699 819A  
                 __size_of_SPIISRHandlerST7540 0098                                 ?_PPSUnlockFunc 0001  
                 FlashWriteWord@flashAddressUS 021B                   i2FlashEraseBlock@intStatusUC 0003  
                   __size_of_SetIsolationRelay 0032                             ?_ReturnBoosterData 0241  
      BoosterDataCommandComms@commsBitsSentUCS 029A                   ReadConfigST7540@configDataUS 021D  
                        __end_of_GetPacketSlot AFF4                      __size_ofi2_FlashWriteWord 0038  
                  __size_ofi2_WriteFlashValues 003A                               ??_AssignWindowID 0016  
                          ??_ReturnBoosterData 0243                           _CheckBoosterRXParity B2FA  
                                        pclath 000FFA                                          tablat 000FF5  
                        __end_of_WaitTickCount B4FE                                          plusw2 000FDB  
                                   _InitST7540 A096                                          status 000FD8  
                         CreateAndSend@dataBuf 023D                    __end_of_getSerialFromMemory B3B8  
                          _QueryFailureCounter 029F                         ??_writeBootloaderState 0221  
                   __size_of_BoosterQueryStart 0026                        __CFG_DSWDTOSC$INTOSCREF 000000  
                              __initialization AF1A                             _ResetBoosterStates B4C2  
                          _CreateMessageST7540 9F92                     __end_of_ClearPacketNumbers AFAE  
                                ??_SetCommsLow 0001                       ?_ResetSingleBoosterState 0001  
                                 __end_of_main B552                                     _InitStates B606  
                                   _InitSystem AACC                    __end_of_StartTransmitST7540 B538  
                    __end_of_ReturnBoosterData 8E02                                         CRC16@i 0223  
                   ReturnBoosterData@dataValUC 0582                                ?_LineIdleST7540 0001  
                          ?_ResetBoosterStates 0001                                 ?_ReadKeySwitch 0001  
                GetLastPacketNumber@iscCountUC 021F                                         ??_main 028A  
                                       ?_CRC16 021B                                  __activetblptr 000002  
            CheckLineFault@activeWindowCounter 0009                PacketReadParamST7540@retValueUS 0235  
           BoosterDataCommandComms@bitsReadUCS 0297       BoosterDataCommandComms@cableFaultModeUCS 0295  
                         ?_CreateMessageST7540 0228        ProcessMasterComms@currentPacketNumberUS 0283  
                   FlashEraseBlock@intStatusUC 021D                               _InitEarthLeakage B552  
                                ??_SetWindowID 0208               WindowIDBacktrack@currentSerialUS 0018  
                        _masterCommsTimeoutUSG 033F                                         _EECON2 000FA7  
                        ?_CheckBoosterRXParity 0001                               ??_QueryWinSerial 0016  
                    __size_of_WriteFlashValues 0044                                      CRC16@data 0224  
                                       i2l1026 B0B0                                         i2l1029 B0B2  
                                       i2l5001 B2F4                                         i2l5021 B3C4  
                               __CFG_WDTEN$OFF 000000                                         i2l4071 B5F4  
                                       i2l5031 B3E2                                         i2l5017 B3BC  
                                       i2l5201 98EE                                         i2l5113 93B8  
                                       i2l6001 A336                                         i2l5027 B3DE  
                                       i2l5043 B518                                         i2l5221 996C  
                                       i2l5205 98F6                                         i2l5141 9420  
                                       i2l5109 939A                                         i2l4351 B338  
                                       i2l4095 B328                                         i2l4079 B30A  
                                       i2l5143 9428                                         i2l5127 93F6  
                                       i2l6007 A344                                         i2l4361 B358  
                                       i2l5225 9970                                         i2l5209 9902  
                                       i2l5161 9848                                         i2l5057 91FC  
                                       i2l6201 B11A                                         i2l4347 B330  
                                       i2l4339 A864                                         i2l5251 99B8  
                                       i2l5091 92EA                                         i2l5083 92D2  
                                       i2l5147 9442                                         i2l5075 92A6  
                                       i2l4357 B354                                         i2l5229 9974  
                                       i2l5173 9874                                         i2l5237 997E  
                                       i2l5069 92A2                                         i2l5093 9300  
                                       i2l4631 AE78                                         i2l5511 A9D2  
                                       i2l6223 8174                                         i2l5169 985A  
                                       i2l4643 AEBC                                         i2l4635 AE82  
                                       i2l4555 B082                                         i2l4563 B09C  
                                       i2l5603 82FC                                         i2l4557 B08A  
                                       i2l5613 8338                                         i2l5605 8308  
                                       i2l5525 AA2A                                         i2l6229 8180  
                                       i2l4647 AEC2                                         i2l5199 98EA  
                                       i2l4583 96DE                                         i2l4751 B59E  
                                       i2l4559 B092                                         i2l4903 91C4  
                                       i2l5703 8578                                         i2l5631 83A0  
                                       i2l5607 8318                                         i2l5481 B588  
                                       i2l4833 8E12                                         i2l5641 83F6  
                                       i2l5617 8348                                         i2l5721 85A8  
                                       i2l5553 822A                                         i2l4587 9746  
                                       i2l4579 9664                                         i2l4755 B5A6  
                                       i2l4907 91CE                                         i2l4851 8EF6  
                                       i2l4843 8E9E                                         i2l4931 ADBC  
                                       i2l4923 AD8E                                         i2l5803 873A  
                                       i2l5707 8582                                         i2l5651 841A  
                                       i2l5635 83C8                                         i2l5627 8388  
                                       i2l5485 B590                                         i2l5901 8900  
                                       i2l5821 878C                                         i2l5741 8616  
                                       i2l5653 8442                                         i2l4599 97BE  
                                       i2l4943 9C78                                         i2l4847 8ECA  
                                       i2l4839 8E64                                         i2l5743 8624  
                                       i2l5727 85E4                                         i2l5575 8286  
                                       i2l5567 8264                                         i2l4953 9CB0  
                                       i2l4881 90CA                                         i2l4873 8FCA  
                                       i2l5913 893A                                         i2l5841 87F4  
                                       i2l5833 87CE                                         i2l5817 8772  
                                       i2l5761 8674                                         i2l5681 84F6  
                                       i2l5673 84A8                                         i2l5665 8490  
                                       i2l5657 846A                                         i2l5569 826C  
                                       i2l4971 9D22                                         i2l4955 9CC0  
                                       i2l4947 9C9A                                         i2l4939 9C68  
                                       i2l4883 90F2                                         i2l4891 916A  
                                       i2l4867 8F8C                                         i2l5923 8962  
                                       i2l5907 8914                                         i2l5827 87A8  
                                       i2l5819 877A                                         i2l5739 8608  
                                       i2l5579 829A                                         i2l4981 9D6C  
                                       i2l4965 9CEE                                         i2l4949 9CA2  
                                       i2l4885 911A                                         i2l5941 89A0  
                                       i2l5837 87E8                                         i2l5773 86A6  
                                       i2l5693 853E                                         i2l5677 84CE  
                                       i2l5669 849C                                         _TABLAT 000FF5  
                                       i2l4959 9CD0                                         i2l4895 91A4  
                                       i2l4887 9142                                         i2l4879 903E  
                                       i2l5863 8842                                         i2l5791 86FE  
                                       i2l5695 8546                                         i2l5687 8524  
                                       i2l5929 8976                                         i2l5865 8872  
                                       i2l5849 8814                                         i2l5793 8704  
                                       i2l5945 89B8                                         i2l4979 9D66  
                                       i2l4899 91BA                                         i2l5891 88D8  
                                       i2l5875 889A                                         i2l5867 887A  
                                       i2l5859 883A                                         i2l5973 A2D0  
                                       i2l5893 88E0                                         i2l5797 8714  
                                       i2l5959 A2AA                                         i2l5993 A31A  
                                       i2l5985 A304                                         i2l5977 A2EA  
                                       i2l5969 A2C8                                         i2l5997 A328  
                                       i2l5989 A30C                           ??_ResetBoosterStates 021C  
                          FlashWriteWord@lsbUC 021D                            FlashWriteWord@msbUC 021E  
                __size_of_ReceiveNewDataST7540 0018                                         _RPOR21 000ED5  
                               __CFG_WPCFG$OFF 000000                                  ??_WaitNewTick 021B  
                          _BoosterCommandStart A7C8                       ?_RXReadyISRHandlerST7540 0001  
                               __CFG_WPDIS$OFF 000000                              MangleSerial@b10UC 0225  
                            MangleSerial@b12UC 0226                          _commsOffsetADCValueUS 028F  
                ProcessSerialCMD@serialListUSA 0245                                 __CFG_XINST$OFF 000000  
                    ??_BoosterDataCommandComms 0012                          __end_of_CreateAndSend ABC0  
                 __size_of_FlashUnlockSequence 000C                                         ___wmul B438  
                               __CFG_STVREN$ON 000000                     __end_of_TransmitBusyST7540 B65A  
                     __end_of_PacketDataST7540 B606                                  ?_SetCommsHigh 0001  
           __size_ofi2_ResetSingleBoosterState 00BC                                         clear_0 AF20  
                                       clear_1 AF2C                                         clear_2 AF38  
                                       clear_3 AF44                                         clear_4 AF50  
                              __CFG_CLKOEC$OFF 000000                        ??_PacketReadParamST7540 0232  
                              ??_PPSUnlockFunc 021B                     __size_of_InitST7540Wrapper 0026  
                         ?_BoosterCommandStart 0007                            __end_of_SetCommsLow B674  
                     ?_readRegisterFromProgram 021B                                _DataReadyST7540 B65A  
                     __end_of_ProcessSerialCMD A500                          ??_CreateMessageST7540 0230  
                             _boosterCommsData 0400                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                        i2_FlashUnlockSequence B646                      __size_of_ReadEarthLeakage 005A  
                    __size_of_LowestIdleWindow 0030                                __CFG_DSBOREN$ON 000000  
          BoosterDataCommandComms@recvFrameUSS 0341                                   ?_PPSLockFunc 0001  
                         __end_of_MangleSerial 9E88                        _RetransmitMessageSt7540 A90C  
                                  ?_InitST7540 0001                                     __accesstop 0060  
                      __end_of__initialization AF56                             _UpdatePacketNumber A86C  
                 __size_of_GetLastPacketNumber 0062                               ??_InitST7540Pins 021B  
                          __end_of_SetWindowID 9446                        __size_of_CheckCRCST7540 00B6  
                                __end_of_CRC16 9C48                __end_of_ResetSingleBoosterState A432  
                                ___rparam_used 000001                              ?i2_ClearPastValue 0001  
                              _ReadFlashValues A672                           __CFG_WPEND$PAGE_WPFP 000000  
                        _pastBoosterValuesUSAG 0600                               ??i2_SetCommsHigh 0001  
                          _LowestMissingSerial AE72                     writeBootloaderState@buffer 0221  
                           ??i2_ClearPastValue 0001                            ?_UpdatePacketNumber 0226  
                               __pcstackCOMRAM 0001                        __size_of_FlashWriteWord 0040  
                                  ?_InitStates 0001                    __size_of_ProcessMasterComms 021C  
                               _IdlePacketSlot B140                                 ??_SetCommsHigh 021B  
                          __end_of_WaitNewTick B646                                    ?_InitSystem 0001  
                  ReadConfigST7540@frameDataUS 021B                                ??_ReadKeySwitch 0004  
                              __CFG_DSWDTEN$ON 000000                     __size_of_ReturnBoosterData 0406  
                              QueryWinSerial@i 001D                                QueryWinSerial@j 001C  
                     __end_of_SavePacketNumber AC34                                __CFG_DSWDTPS$G2 000000  
                      IdlePacketSlot@iscCountC 021D                        __size_of_ProcessRXFrame 03D6  
                        ??_BoosterCommandStart 000B                     __end_of_AssignSerialNumber B4A4  
                                      ??_CRC16 021F                        __size_of_ProcessPingCMD 002E  
                             ??_ClearPastValue 021B                      ReadAnalogVoltage@channelC 0003  
                         ?_LowestMissingSerial 0001                           ??_UpdatePacketNumber 022A  
                   __end_of_BoosterCommsActive B5F8                  SPIISRHandlerST7540@dataReadUC 0001  
                       ??_CheckBoosterRXParity 0003                               i2_FlashWriteWord B22A  
              __end_of_RXReadyISRHandlerST7540 B622                                     __pbssBANK2 028A  
                                   __pbssBANK3 0300                                     __pbssBANK4 0400  
                                   __pbssBANK5 0584                                     __pbssBANK6 0600  
                              _NewBoosterAdded B4FE                       SetWindowID@currentBitUCS 02AD  
                    __size_of_ReadConfigST7540 0158                       ClearPastValue@valuePosUC 021B  
                     ??_BoosterCommsDispatcher 020B                            _SPIISRHandlerST7540 A9A4  
                       __end_of_IdlePacketSlot B17C                   StartTransmitST7540@discardUC 021B  
                            __CFG_PLLSEL$PLL96 000000                       __size_of_ForceFiringMode 0046  
                  __size_of_CheckDataCollision 002E                  SetIsolationRelay@relayStateUC 021B  
                                      ?___wmul 0001                                    _SetCommsLow B66E  
                      __end_of_DataReadyST7540 B662                                   isr@discardUC 021A  
           BoosterDataCommandComms@lvlCountUCS 0296                   i2ForceFiringMode@forceModeUC 0003  
              CreateMessageST7540@packetDestUS 022A                      FlashWriteWord@intStatusUC 021F  
                          __size_of_InitST7540 00FC                       WaitTickCount@tickCountUS 021B  
                         ?_SPIISRHandlerST7540 0001                             __CFG_OSC$INTOSCPLL 000000  
                 __end_ofi2_ResetBoosterStates B5B0                          ??_LowestMissingSerial 0001  
                     __size_of_FlashEraseBlock 0034                              _WindowIDBacktrack 9662  
                       ?i2_FlashUnlockSequence 0001                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                      _RPINR21 000EFC                                        _RPINR22 000EFD  
                                      _SSP2BUF 000F75                             ?_WindowIDBacktrack 0016  
                    ??_RetransmitMessageSt7540 0237                i2FlashEraseBlock@flashAddressUS 0001  
                FlashEraseBlock@flashAddressUS 021B                                    _SetWindowID 91D8  
                    __size_of_FlashReadAddress 0014                 CreateMessageST7540@packetCRCUS 0232  
                          __size_of_InitStates 000E                i2ClearPastValues@boosterCountUC 0002  
                ClearPastValues@boosterCountUC 021C                               _WriteFlashValues B03A  
                          __size_of_InitSystem 0080                        __end_of_ReadFlashValues A724  
                writeRegisterToProgram@address 021B                            ??_WindowIDBacktrack 0201  
               i2FlashWriteWord@flashAddressUS 0001                                    _WaitNewTick B63A  
                                      __Hparam 0000                                        __Lparam 0000  
                              ?_IdlePacketSlot 0001                               ??_LineIdleST7540 021B  
                     __end_of_InitEarthLeakage B56C                              i2_ForceFiringMode B100  
                      __size_of_CheckLineFault 0134                                __size_of___wmul 0026  
                           ?i2_ForceFiringMode 0001                          __CFG_RTCOSC$INTOSCREF 000000  
                                      __pcinit AF1A                      SetSerialNumber@dataBufUSP 0247  
                                      __ramtop 0F00                                        __ptext0 B538  
                                      __ptext1 B662                                        __ptext2 9446  
                                      __ptext3 ADC2                                        __ptext4 AA3C  
                                      __ptext5 A86C                                        __ptext6 AD06  
                                      __ptext7 9E88                                        __ptext8 B296  
                                      __ptext9 89FC                          ??_SPIISRHandlerST7540 0001  
                    __end_of_WindowIDBacktrack 9826                              _MangleSerial$2317 0227  
                   ForceFiringMode@forceModeUC 021D                        __size_of_CollisionCheck 0038  
                     __size_of_SetSerialNumber 010A                                      _T2CONbits 000FCA  
                                 __size_of_isr 00CE                             _ClearPacketNumbers AF64  
                          ??i2_ForceFiringMode 0003               __size_of_ResetSingleBoosterState 00D0  
                            i2_FlashEraseBlock B3E6                        __end_of_NewBoosterAdded B51C  
                        __size_of_MangleSerial 010C                     __end_ofi2_WriteFlashValues B1F2  
                    AssignWindowID@newWindowUC 0018                    CheckCRCST7540@expectedCRCUS 022B  
                          _FlashUnlockSequence B62E                               _ReadEarthLeakage AD68  
                             _LowestIdleWindow B32C                             _commandBLCalibFlag 0349  
                           ?i2_FlashEraseBlock 0001                       __size_of_ClearPastValues 001E  
                         end_of_initialization AF56                           __end_of_SetCommsHigh B668  
                          ?_ClearPacketNumbers 0001                  ReadKeySwitch@keySwitchValueUS 0004  
                                __Lmediumconst 0000                       ProcessRXFrame@frameNumUC 0009  
                               _CheckCRCST7540 A5BC                           __size_of_PPSLockFunc 0012  
                          ??i2_FlashEraseBlock 0003                __size_of_BoosterCommsDispatcher 00E8  
                    __end_ofi2_ForceFiringMode B140                 ProcessMasterComms@respSerialUS 0287  
                               _FlashWriteWord B0C0               RetransmitMessageSt7540@commandUC 023D  
                __size_of_writeBootloaderState 0058                           ?_FlashUnlockSequence 0001  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                           ??_ClearPacketNumbers 021B  
                 __size_of_getSerialFromMemory 002E                         __size_of_GetPacketSlot 0046  
                             ?_DataReadyST7540 0001                 LowestIdleWindow@boosterCountUC 0003  
              BoosterCommandStart@destSerialUS 0007                              ?_PacketDataST7540 021B  
                 __end_of_ReceiveNewDataST7540 B584                                 _ProcessRXFrame 8E02  
                                 _MangleSerial 9D7C                    CheckCRCST7540@receivedCRCUS 022D  
                            ??_ForceFiringMode 021D                                      _PORTBbits 000F81  
                                    _PORTCbits 000F82               __size_of_RXReadyISRHandlerST7540 000E  
                                    _PORTDbits 000F83                         __size_of_WaitTickCount 001E  
                           ??_PacketDataST7540 021D                            _GetLastPacketNumber AD06  
                       CreateAndSend@dataLenUC 023C                 __size_of_PacketReadParamST7540 00E8  
                    __end_ofi2_FlashEraseBlock B412                  __end_of_PacketReadParamST7540 A27A  
                               _ProcessPingCMD B35C                   __size_of_StartTransmitST7540 001C  
                                    _TRISAbits 000F92                                _statusFlagsUSLG 028A  
                                    _TRISBbits 000F93                                      _TRISCbits 000F94  
                            ?_ProcessSerialCMD 0241                                      _TRISDbits 000F95  
                                    _TRISEbits 000F96               BoosterCommandStart@destCommandUC 0009  
                              CheckLineFault@i 000F                             _TransmitBusyST7540 B652  
                             _commsDataModeUCG 02A2             CheckBoosterRXParity@tmpRecvFrameUS 0003  
                           ??_ProcessSerialCMD 0243                              __CFG_SOSCSEL$HIGH 000000  
                            i2_ClearPastValues B584                         __end_of_CheckCRCST7540 A672  
                            ??_FlashEraseBlock 021D                               ?_ReadFlashValues 0001  
                                 ??_InitST7540 0228                    __size_of_ResetBoosterStates 001E  
                          ?_TransmitBusyST7540 0001               __size_of_readRegisterFromProgram 0052  
                       CreateAndSend@commandUC 023B                           ?_GetLastPacketNumber 021B  
                           ?i2_ClearPastValues 0001                               _ReadConfigST7540 99BC  
                            __CFG_WPFP$PAGE_63 000000                               __CFG_IOL1WAY$OFF 000000  
           BoosterDataCommandComms@syncModeUCS 0298                         __end_of_FlashWriteWord B100  
                     ??_writeRegisterToProgram 021F                           i2_ResetBoosterStates B59A  
                          __CFG_MSSP7B_EN$MSK7 000000                   InitST7540Wrapper@initCountUC 0234  
                        ??_FlashUnlockSequence 021B                              _cableFaultCounter 02A0  
                          ??i2_ClearPastValues 0002                                   ??_InitStates 0264  
                      __size_of_AssignWindowID 0058                                  _nextSerialUSG 0291  
                 ReturnBoosterData@iscStatusUC 057E                       __end_ofi2_FlashWriteWord B262  
             CheckDataCollision@boosterCountUC 0001                         __end_of_ProcessRXFrame 91D8  
             BoosterCommandStart@destPayloadUC 000A                                   ??_InitSystem 021B  
                 QueryWinSerial@serialNumberUS 001A                       getSerialFromMemory@state 0221  
                               __end_of___wmul B45E                             _counterELTFailures 0345  
                ReturnBoosterData@commandValUC 0580                    __end_of_CreateMessageST7540 A096  
              ReturnBoosterData@boosterCountUC 0583                           ??_TransmitBusyST7540 021B  
                            ?_SavePacketNumber 0220                         __end_of_ProcessPingCMD B38A  
                   __size_of_WindowIDBacktrack 01C4                         _BoosterCommsDispatcher A27A  
                    __size_ofi2_ClearPastValue 0064                             __end_of_InitST7540 A192  
                           ??_SavePacketNumber 0223          RetransmitMessageSt7540@packetSourceUS 0237  
                        __end_of_PPSUnlockFunc B5D6                            start_initialization AF1A  
                                 _iscSerialUSG 02A9                CreateAndSend@nextPacketNumberUS 023F  
                    SavePacketNumber@saveSlotC 0225                               ?_NewBoosterAdded 0001  
                                  __end_of_isr 81D6                  readRegisterFromProgram@buffer 021D  
                    __end_ofi2_ClearPastValues B59A                                _counterELTTests 0347  
                             _FlashReadAddress B5B0                                  _GetPacketSlot AFAE  
                       __size_of_CreateAndSend 0074                              ??_SetSerialNumber 0243  
                           __end_of_InitStates B614                             _AssignSerialNumber B484  
               SavePacketNumber@packetNumberUC 0222                                ?_CheckCRCST7540 0001  
                  SetWindowID@currentSerialUSS 02AB                             __end_of_InitSystem AB4C  
                        ??_GetLastPacketNumber 021D                                  _WaitTickCount B4E0  
                      InitST7540@frameDataRXUS 022E                        InitST7540@frameDataTXUS 0228  
                 ClearPacketNumbers@iscCountUC 021B                                  _flagST7540UCG 02A8  
                     ?_BoosterDataCommandComms 0001               UpdatePacketNumber@serialNumberUS 0226  
                                     CRC16@crc 0226                                ?_FlashWriteWord 021B  
                            ??_ClearPastValues 021C                             _BoosterCommsActive B5E8  
                          ?_AssignSerialNumber 0001                     __end_of_ProcessMasterComms 9662  
                   __size_ofi2_ForceFiringMode 0040                          ?i2_ResetBoosterStates 0001  
                             MangleSerial@b0UC 0220                               MangleSerial@b1UC 0221  
                             MangleSerial@b2UC 0222                               MangleSerial@b4UC 0223  
                             MangleSerial@b6UC 0224                 ProcessSerialCMD@boosterCountUC 0282  
               ProcessSerialCMD@boosterIndexUC 0281                   ReturnBoosterData@partRespUSA 0500  
       RetransmitMessageSt7540@packetDataLenUC 023F                      ProcessRXFrame@recvFrameUS 0007  
                           _bufferRXST7540UCAG 039B                        __size_of_QueryWinSerial 0196  
                  __end_of_BoosterCommandStart A86C                                 _CheckLineFault 9C48  
                                 ?_SetCommsLow 0001                                       ??___wmul 0005  
                      writeRegisterToProgram@i 021F                                ?_ProcessRXFrame 0007  
                              _bufferRXNextUCG 02A5                 RetransmitMessageSt7540@dataBuf 023B  
                            __CFG_ADCSEL$BIT10 000000                            ?_BoosterCommsActive 0001  
                     __end_of_WriteFlashValues B07E                                _bufferTXNextUCG 02A6  
                        __end_of_ReadKeySwitch B2FA                                 _masterFlagsUCG 0293  
                              ?_ProcessPingCMD 0241                        ??i2_FlashUnlockSequence 0001  
                               _CollisionCheck B1F2                     CollisionCheck@delayValueUS 022A  
                   __size_ofi2_FlashEraseBlock 002C                     ?i2_ResetSingleBoosterState 0001  
                      _ResetSingleBoosterState A362                           ??_AssignSerialNumber 0016  
                        __size_of_SetCommsHigh 0006                                  __pcstackBANK2 0201  
                                __pcstackBANK5 0500                    __size_of_UpdatePacketNumber 00A0  
                               ?_GetPacketSlot 021B                                   ?_SetWindowID 0001  
                      MangleSerial@xorOutputUC 021F                           ??_BoosterCommsActive 0001  
                __size_of_CheckBoosterRXParity 0032                CheckBoosterRXParity@bitParityUC 0005  
                               ?_WaitTickCount 021B                       MangleSerial@cycleCountUC 0229  
                             ??_IdlePacketSlot 021B                           _ReceiveNewDataST7540 B56C  
                 ReturnBoosterData@respCountUC 057F            BoosterDataCommandComms@cableTestUCS 0294  
                                 ?_WaitNewTick 0001                     __end_of_CheckDataCollision B3E6  
                    CheckCRCST7540@packetLenUC 022F                      ReadConfigST7540@discardUC 0222  
              __size_of_writeRegisterToProgram 0090                         __end_of_CheckLineFault 9D7C  
                                    __pintcode 8108                             _bufferTXST7540UCAG 034C  
                            ?_InitEarthLeakage 0001                       __end_of_ReadEarthLeakage ADC2  
                                _CreateAndSend AB4C                       __end_of_LowestIdleWindow B35C  
                  BoosterQueryStart@queryValUC 0001                                   _SetCommsHigh B662  
                       __end_of_CollisionCheck B22A                        __size_of_InitST7540Pins 003C  
                      _RXReadyISRHandlerST7540 B614                             ??_InitEarthLeakage 0001  
                  __end_of_LowestMissingSerial AEC8                                 __size_of_CRC16 0134  
                      __size_ofi2_SetCommsHigh 0006                   writeRegisterToProgram@buffer 021D  
            __end_ofi2_ResetSingleBoosterState A5BC                     __size_ofi2_ClearPastValues 0016  
              __end_of_BoosterDataCommandComms 89FC                            _getSerialFromMemory B38A  
                      _readRegisterFromProgram AEC8                          ?_ReceiveNewDataST7540 0001  
                                  CRC16@data_p 021B                                 ___wmul@product 0005  
                                     _LATAbits 000F89                                       _LATBbits 000F8A  
                                     _LATCbits 000F8B                                       _LATDbits 000F8C  
                      __size_of_ClearPastValue 006E                                       _LATEbits 000F8D  
               readRegisterFromProgram@address 021B                         ??i2_ResetBoosterStates 0002  
                                  CRC16@length 021D                                       _PIE1bits 000F9D  
                                     _PIE3bits 000FA3                             i2_WriteFlashValues B1B8  
                              _ForceFiringMode AFF4                  WriteConfigST7540@configDataUS 0220  
                                     i2u410_44 978C                                       i2u410_45 9784  
                                     i2u412_44 97E6                                       i2u412_45 97DE  
                              ?_CheckLineFault 0001                                       i2u405_44 969C  
                                     i2u405_45 9694                                       i2u407_44 9724  
                                     i2u407_45 971C                 ReadConfigST7540@bitsReceivedUC 0223  
                          _StartTransmitST7540 B51C                                       _PIR1bits 000F9E  
                                     i2u610_41 86B4                                       i2u450_45 90B8  
                                     i2u620_41 8748                                       _PIR3bits 000FA4  
                                     i2u445_45 8F98                                       i2u622_41 879C  
                                     i2u382_45 A7E6                                       i2u623_41 87B8  
                                     i2u624_41 87DE                                       i2u608_41 8682  
                                     i2u625_41 8804                                       i2u481_44 9238  
                                     i2u481_45 9230                                       i2u618_40 8724  
                                     i2u626_41 8824                                       i2u635_41 8924  
                                     i2u483_44 9278                                       i2u483_45 9270  
                                     i2u468_40 B2E8                                       i2u628_41 888A  
                                     i2u565_45 8258                                       i2u574_40 8328  
                                     i2u487_44 932E                                       i2u487_45 9326  
                                     i2u593_41 8556                                       i2u489_44 936E  
                                     i2u489_45 9366                                       i2u578_40 8398  
                               _AssignWindowID AE1A                               __CFG_WDTPS$32768 000000  
                               ?_CreateAndSend 0237                    __end_of_SPIISRHandlerST7540 AA3C  
               FlashReadAddress@flashAddressUS 021B                           ?_getSerialFromMemory 0001  
                          ?i2_WriteFlashValues 0001                                _packetNumberUCG 02A4  
                              ?_CollisionCheck 0001                            _missingSerialWinUCS 029E  
                    ??_ResetSingleBoosterState 021B                              _WriteConfigST7540 A724  
                                   _ADCON0bits 000FC2                                     _ADCON1bits 000FC1  
                            ___wmul@multiplier 0001             i2ResetBoosterStates@boosterCountUC 0002  
             ResetBoosterStates@boosterCountUC 021C                       __end_of_ReadConfigST7540 9B14  
                             i2_ClearPastValue ACA2                                _FlashEraseBlock B262  
       BoosterDataCommandComms@commsADCValueUS 0014                             ?_WriteConfigST7540 021D  
                     ?_RetransmitMessageSt7540 0001                         _writeRegisterToProgram AA3C  
                         ?_StartTransmitST7540 0001                                ??_GetPacketSlot 021D  
                            __CFG_CFGPLLEN$OFF 000000                   __end_of_writeBootloaderState AE1A  
               PacketReadParamST7540@paramName 0234                                _commsTXBitsUSLG 033C  
                  ProcessMasterComms@recvCmdUC 0289                                ??_WaitTickCount 021D  
                            _ReadAnalogVoltage B07E                           ??i2_WriteFlashValues 0006  
                          ??_WriteConfigST7540 0223                      __size_of_PacketDataST7540 000E  
                                ??_PPSLockFunc 021B                             ?_ReadAnalogVoltage 0001  
                 ProcessSerialCMD@respSerialUS 0241                                     _EECON1bits 000FA6  
 BoosterDataCommandComms@counterCommsStatusUSS 028D                         __end_of_AssignWindowID AE72  
                                   _ANCON0bits 000F48                                     _ANCON1bits 000F49  
                 ReturnBoosterData@wordCountUC 0581                      __size_of_ProcessSerialCMD 00CE  
                                     __Hrparam 0000                            ??_ReadAnalogVoltage 0003  
                               _bufferRXLenUCG 034B                                 _QueryWinSerial 9826  
                                     __Lrparam 0000                                 _bufferTXLenUCG 02A7  
                    ??_RXReadyISRHandlerST7540 0001                          ??_getSerialFromMemory 0221  
                     __end_of_FlashReadAddress B5C4                              ?i2_FlashWriteWord 0001  
                    __end_of_WriteConfigST7540 A7C8                    __size_of_ClearPacketNumbers 004A  
                      ?_BoosterCommsDispatcher 0001                           __size_of_SetCommsLow 0006  
                           ??i2_FlashWriteWord 0005                 CheckBoosterRXParity@bitCountUC 0006  
                  i2FlashWriteWord@intStatusUC 0005                                _SetSerialNumber 9E88  
BoosterDataCommandComms@framesReceivedPhaseUCS 0299                        __size_of_LineIdleST7540 000C  
                        ??_StartTransmitST7540 021B                       __size_of_DataReadyST7540 0008  
                             ??_CheckCRCST7540 0228                      __end_of_ReadAnalogVoltage B0C0  
          RetransmitMessageSt7540@packetDestUS 0239                          _PacketReadParamST7540 A192  
                    ??_readRegisterFromProgram 021F                                       __ptext10 A90C  
                                     __ptext11 B5F8                                       __ptext20 AFAE  
                                     __ptext12 B56C                                       __ptext21 A192  
                                     __ptext13 A432                                       __ptext30 AC34  
                                     __ptext22 A5BC                                       __ptext14 B35C  
                                     __ptext31 B65A                                       __ptext23 9F92  
                                     __ptext15 AB4C                                       __ptext40 B0C0  
                                     __ptext32 AACC                                       __ptext24 9B14  
                                     __ptext16 B652                                       __ptext41 B262  
                                     __ptext33 B606                                       __ptext25 B1F2  
                                     __ptext17 B51C                                       __ptext50 99BC  
                                     __ptext42 B62E                                       __ptext34 B4C2  
                                     __ptext26 9D7C                                       __ptext18 ABC0  
                                     __ptext51 B17C                                       __ptext43 B5B0  
                                     __ptext35 A362                                       __ptext27 B622  
                                     __ptext19 B140                                       __ptext60 B66E  
                                     __ptext52 B5C4                                       __ptext44 AF64  
                                     __ptext36 A672                                       __ptext28 AFF4  
                                     __ptext61 B2C8                                       __ptext53 B5D6  
                                     __ptext45 B412                                       __ptext37 B38A  
                                     __ptext29 B4A4                                       __ptext70 91D8  
                                     __ptext62 AD68                                       __ptext46 A096  
                                     __ptext38 AEC8                                       __ptext71 B59A  
                                     __ptext63 8E02                                       __ptext55 B100  
                                     __ptext47 A724                                       __ptext39 B03A  
                                     __ptext80 A500                                       __ptext72 9662  
                                     __ptext64 B552                                       __ptext56 A9A4  
                                     __ptext48 B4E0                                       __ptext81 ACA2  
                                     __ptext73 AE1A                                       __ptext65 9C48  
                                     __ptext57 B614                                       __ptext49 B63A  
                                     __ptext82 AE72                                       __ptext74 B484  
                                     __ptext66 B438                                       __ptext58 81DA  
                                     __ptext83 A7C8                                       __ptext75 B1B8  
                                     __ptext67 B07E                                       __ptext59 B668  
                                     __ptext84 B2FA                                       __ptext76 B22A  
                                     __ptext68 A27A                                       __ptext85 B4FE  
                                     __ptext77 B3E6                                       __ptext69 B584  
                                     __ptext86 B32C                                       __ptext78 B646  
                                     __ptext87 B3B8                                       __ptext79 9826  
                                     __ptext88 B45E                                       __ptext89 B5E8  
                              _ClearPastValues B4A4                     __end_of_ResetBoosterStates B4E0  
                                 _SSP2CON1bits 000F72                         ??_ReceiveNewDataST7540 021B  
                             ??_FlashWriteWord 021F                                    _ISO_COUNTER 02A1  
                      __end_of_ForceFiringMode B03A                      __size_of_SavePacketNumber 0074  
                         __size_of_SetWindowID 026E                                  __size_of_main 001A  
                  __end_of_FlashUnlockSequence B63A                   CreateMessageST7540@dataLenUC 022D  
                       __end_of_QueryWinSerial 99BC                               ??_ProcessRXFrame 000A  
              CheckBoosterRXParity@recvFrameUS 0001                                ?_AssignWindowID 0001  
                    CreateAndSend@packetDestUS 0239                                ??_CreateAndSend 023F  
                          __end_of_PPSLockFunc B5E8                         _boosterCommsDataSerial 0300  
                         __size_of_WaitNewTick 000C                       __size_of_ReadFlashValues 00B2  
               WindowIDBacktrack@statusSetIDUC 001A                               ??_ProcessPingCMD 0243  
               __end_of_BoosterCommsDispatcher A362                                       int$flags 001E  
                      __end_of_FlashEraseBlock B296    BoosterDataCommandComms@counterSyncStatusUSS 0343  
                               _InitST7540Pins B17C                __end_of_RetransmitMessageSt7540 A9A4  
                            ?_WriteFlashValues 0001               __size_of_BoosterDataCommandComms 0822  
                                 _SSP2STATbits 000F73                    __size_of_TransmitBusyST7540 0008  
                 WriteConfigST7540@frameDataUS 021D                    SetSerialNumber@respSerialUS 0241  
                  ReturnBoosterData@allRespUSA 053E                   CreateMessageST7540@commandUC 022C  
                               i2_SetCommsHigh B668                             _ProcessMasterComms 9446  
                           ??_WriteFlashValues 0220                       GetPacketSlot@srcSerialUS 021B  
                        writeBootloaderState@i 0261                 __size_ofi2_FlashUnlockSequence 000C  
                                  _OSCTUNEbits 000F9B                                     _INTCONbits 000FF2  
                  ??i2_ResetSingleBoosterState 0001                  __end_ofi2_FlashUnlockSequence B652  
                 __size_of_CreateMessageST7540 0104                      SetWindowID@statusSetIDUCS 02AE  
                  SavePacketNumber@srcSerialUS 0220                    __end_of_GetLastPacketNumber AD68  
                                _dispStatusUCS 029C                              _SetIsolationRelay B296  
                          ?_ProcessMasterComms 0001                             ?_SetIsolationRelay 0001  
                                     intlevel2 0000                    WriteConfigST7540@bitsSentUC 0227  
                               _ClearPastValue AC34                     CreateMessageST7540@dataBuf 022E  
                     __size_of_NewBoosterAdded 001E                  ReturnBoosterData@respSerialUS 0241  
                              ?_QueryWinSerial 0001                            ??_SetIsolationRelay 021B  
     RetransmitMessageSt7540@oldPacketNumberUC 023E                                     _OSCCONbits 000FD3  
                       __size_of_PPSUnlockFunc 0012                __end_of_readRegisterFromProgram AF1A  
                       __end_of_InitST7540Pins B1B8                           ??_ProcessMasterComms 0283  
                      __end_of_SetSerialNumber 9F92                           _writeBootloaderState ADC2  
                            _BoosterQueryStart B45E                   __end_of_CheckBoosterRXParity B32C  
                     CheckLineFault@lineVoltUS 000B               ReturnBoosterData@windowCompareUS 057C  
                   __size_of_WriteConfigST7540 00A4                              ?_ReadEarthLeakage 0001  
                            ?_LowestIdleWindow 0001                             ?_BoosterQueryStart 0001  
                       __end_ofi2_SetCommsHigh B66E                             ??_ReadEarthLeakage 0004  
                           ??_LowestIdleWindow 0001                             _CheckDataCollision B3B8  
                      __end_of_ClearPastValues B4C2                   __size_of_BoosterCommandStart 00A4  
              UpdatePacketNumber@packetNumberS 0228                     __end_of_UpdatePacketNumber A90C  
                                   _PPSCONbits 000EBF                         GetPacketSlot@saveSlotC 021F  
                    __end_of_SetIsolationRelay B2C8                     WriteConfigST7540@discardUC 0226  
                          ??_BoosterQueryStart 0001                         ?_PacketReadParamST7540 0230  
                  __size_of_AssignSerialNumber 0020                      MangleSerial@mangleValueUS 021B  
                   __size_of_ReadAnalogVoltage 0042                            ?_CheckDataCollision 0001  
                    __size_of_InitEarthLeakage 001A                   AssignWindowID@serialNumberUS 0016  
                             _PacketDataST7540 B5F8                       readRegisterFromProgram@i 021F  
                       __end_of_ClearPastValue ACA2                    __size_of_BoosterCommsActive 0010  
                               _commsStatusUCG 02A3       i2ResetSingleBoosterState@boosterNumberUC 0001  
       ResetSingleBoosterState@boosterNumberUC 021B            UpdatePacketNumber@pastPacketNumberS 022F  
                            ??_DataReadyST7540 021B                               ?_ForceFiringMode 0001  
                                  _PPSLockFunc B5D6                          i2FlashWriteWord@lsbUC 0003  
                        i2FlashWriteWord@msbUC 0004                               ??_CheckLineFault 0007  
              CreateMessageST7540@dataBufLocUC 0234                              _packetNumbersUSAG 0584  
                       __size_of_ReadKeySwitch 0032                       __end_ofi2_ClearPastValue AD06  
                ReceiveNewDataST7540@discardUC 021B                      i2_ResetSingleBoosterState A500  
                             _ProcessSerialCMD A432                      __end_of_BoosterQueryStart B484  
                     InitST7540@configDataRXUS 0231                       InitST7540@configDataTXUS 022B  
                             ??_CollisionCheck 022A                           ??_CheckDataCollision 0001  
                        ?_writeBootloaderState 0001  
