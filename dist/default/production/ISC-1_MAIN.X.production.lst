

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Oct 16 13:13:53 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,inline
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107  0000                     
   108                           ; Version 1.42
   109                           ; Generated 13/04/2017 GMT
   110                           ; 
   111                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18F46J13 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     _PPSCONbits	set	3775
   143  0000                     _RPOR21	set	3797
   144  0000                     _RPINR22	set	3837
   145  0000                     _RPINR21	set	3836
   146  0000                     _ANCON0bits	set	3912
   147  0000                     _ANCON1bits	set	3913
   148  0000                     _ADRES	set	4035
   149  0000                     _EECON1bits	set	4006
   150  0000                     _TABLAT	set	4085
   151  0000                     _TBLPTRL	set	4086
   152  0000                     _TBLPTRH	set	4087
   153  0000                     _TBLPTRU	set	4088
   154  0000                     _EECON2	set	4007
   155  0000                     _LATEbits	set	3981
   156  0000                     _TRISEbits	set	3990
   157  0000                     _TRISAbits	set	3986
   158  0000                     _ADCON0bits	set	4034
   159  0000                     _ADCON1bits	set	4033
   160  0000                     _PIE1bits	set	3997
   161  0000                     _T2CONbits	set	4042
   162  0000                     _PR2	set	4043
   163  0000                     _OSCCONbits	set	4051
   164  0000                     _OSCTUNEbits	set	3995
   165  0000                     _PIR1bits	set	3998
   166  0000                     _LATBbits	set	3978
   167  0000                     _LATAbits	set	3977
   168  0000                     _TRISCbits	set	3988
   169  0000                     _TRISBbits	set	3987
   170  0000                     _TRISDbits	set	3989
   171  0000                     _PORTCbits	set	3970
   172  0000                     _PORTBbits	set	3969
   173  0000                     _SSP2BUF	set	3957
   174  0000                     _PORTDbits	set	3971
   175  0000                     _LATCbits	set	3979
   176  0000                     _LATDbits	set	3980
   177  0000                     _INTCONbits	set	4082
   178  0000                     _PIE3bits	set	4003
   179  0000                     _PIR3bits	set	4004
   180  0000                     _SSP2CON1bits	set	3954
   181  0000                     _SSP2STATbits	set	3955
   182                           
   183                           ; #config settings
   184  0000                     
   185                           	psect	cinit
   186  00AF16                     __pcinit:
   187                           	opt stack 0
   188  00AF16                     start_initialization:
   189                           	opt stack 0
   190  00AF16                     __initialization:
   191                           	opt stack 0
   192                           
   193                           ; Clear objects allocated to BANK6 (248 bytes)
   194  00AF16  EE06  F000         	lfsr	0,__pbssBANK6
   195  00AF1A  0EF8               	movlw	248
   196  00AF1C                     clear_0:
   197  00AF1C  6AEE               	clrf	postinc0,c
   198  00AF1E  06E8               	decf	wreg,f,c
   199  00AF20  E1FD               	bnz	clear_0
   200                           
   201                           ; Clear objects allocated to BANK5 (124 bytes)
   202  00AF22  EE05  F084         	lfsr	0,__pbssBANK5
   203  00AF26  0E7C               	movlw	124
   204  00AF28                     clear_1:
   205  00AF28  6AEE               	clrf	postinc0,c
   206  00AF2A  06E8               	decf	wreg,f,c
   207  00AF2C  E1FD               	bnz	clear_1
   208                           
   209                           ; Clear objects allocated to BANK4 (240 bytes)
   210  00AF2E  EE04  F000         	lfsr	0,__pbssBANK4
   211  00AF32  0EF0               	movlw	240
   212  00AF34                     clear_2:
   213  00AF34  6AEE               	clrf	postinc0,c
   214  00AF36  06E8               	decf	wreg,f,c
   215  00AF38  E1FD               	bnz	clear_2
   216                           
   217                           ; Clear objects allocated to BANK3 (232 bytes)
   218  00AF3A  EE03  F000         	lfsr	0,__pbssBANK3
   219  00AF3E  0EE8               	movlw	232
   220  00AF40                     clear_3:
   221  00AF40  6AEE               	clrf	postinc0,c
   222  00AF42  06E8               	decf	wreg,f,c
   223  00AF44  E1FD               	bnz	clear_3
   224                           
   225                           ; Clear objects allocated to BANK2 (37 bytes)
   226  00AF46  EE02  F08A         	lfsr	0,__pbssBANK2
   227  00AF4A  0E25               	movlw	37
   228  00AF4C                     clear_4:
   229  00AF4C  6AEE               	clrf	postinc0,c
   230  00AF4E  06E8               	decf	wreg,f,c
   231  00AF50  E1FD               	bnz	clear_4
   232  00AF52                     end_of_initialization:
   233                           	opt stack 0
   234  00AF52                     __end_of__initialization:
   235                           	opt stack 0
   236  00AF52  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   237  00AF54  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   238  00AF56  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239  00AF58  6EF8               	movwf	tblptru,c
   240  00AF5A  0100               	movlb	0
   241  00AF5C  EF50  F05A         	goto	_main	;jump to C main() function
   242                           tblptru	equ	0xFF8
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           
   246                           	psect	bssBANK2
   247  00028A                     __pbssBANK2:
   248                           	opt stack 0
   249  00028A                     _statusFlagsUSLG:
   250                           	opt stack 0
   251  00028A                     	ds	3
   252  00028D                     BoosterDataCommandComms@counterCommsStatusUSS:
   253                           	opt stack 0
   254  00028D                     	ds	2
   255  00028F                     _commsOffsetADCValueUS:
   256                           	opt stack 0
   257  00028F                     	ds	2
   258  000291                     _nextSerialUSG:
   259                           	opt stack 0
   260  000291                     	ds	2
   261  000293                     _masterFlagsUCG:
   262                           	opt stack 0
   263  000293                     	ds	1
   264  000294                     BoosterDataCommandComms@cableTestUCS:
   265                           	opt stack 0
   266  000294                     	ds	1
   267  000295                     BoosterDataCommandComms@cableFaultModeUCS:
   268                           	opt stack 0
   269  000295                     	ds	1
   270  000296                     BoosterDataCommandComms@lvlCountUCS:
   271                           	opt stack 0
   272  000296                     	ds	1
   273  000297                     BoosterDataCommandComms@bitsReadUCS:
   274                           	opt stack 0
   275  000297                     	ds	1
   276  000298                     BoosterDataCommandComms@syncModeUCS:
   277                           	opt stack 0
   278  000298                     	ds	1
   279  000299                     BoosterDataCommandComms@framesReceivedPhaseUCS:
   280                           	opt stack 0
   281  000299                     	ds	1
   282  00029A                     BoosterDataCommandComms@commsBitsSentUCS:
   283                           	opt stack 0
   284  00029A                     	ds	1
   285  00029B                     _boosterCountUC:
   286                           	opt stack 0
   287  00029B                     	ds	1
   288  00029C                     _dispStatusUCS:
   289                           	opt stack 0
   290  00029C                     	ds	1
   291  00029D                     _statusGetSerialUCS:
   292                           	opt stack 0
   293  00029D                     	ds	1
   294  00029E                     _missingSerialWinUCS:
   295                           	opt stack 0
   296  00029E                     	ds	1
   297  00029F                     _QueryFailureCounter:
   298                           	opt stack 0
   299  00029F                     	ds	1
   300  0002A0                     _cableFaultCounter:
   301                           	opt stack 0
   302  0002A0                     	ds	1
   303  0002A1                     _ISO_COUNTER:
   304                           	opt stack 0
   305  0002A1                     	ds	1
   306  0002A2                     _commsDataModeUCG:
   307                           	opt stack 0
   308  0002A2                     	ds	1
   309  0002A3                     _commsStatusUCG:
   310                           	opt stack 0
   311  0002A3                     	ds	1
   312  0002A4                     _packetNumberUCG:
   313                           	opt stack 0
   314  0002A4                     	ds	1
   315  0002A5                     _bufferRXNextUCG:
   316                           	opt stack 0
   317  0002A5                     	ds	1
   318  0002A6                     _bufferTXNextUCG:
   319                           	opt stack 0
   320  0002A6                     	ds	1
   321  0002A7                     _bufferTXLenUCG:
   322                           	opt stack 0
   323  0002A7                     	ds	1
   324  0002A8                     _flagST7540UCG:
   325                           	opt stack 0
   326  0002A8                     	ds	1
   327  0002A9                     _iscSerialUSG:
   328                           	opt stack 0
   329  0002A9                     	ds	2
   330  0002AB                     SetWindowID@currentSerialUSS:
   331                           	opt stack 0
   332  0002AB                     	ds	2
   333  0002AD                     SetWindowID@currentBitUCS:
   334                           	opt stack 0
   335  0002AD                     	ds	1
   336  0002AE                     SetWindowID@statusSetIDUCS:
   337                           	opt stack 0
   338  0002AE                     	ds	1
   339                           tblptru	equ	0xFF8
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           
   343                           	psect	bssBANK3
   344  000300                     __pbssBANK3:
   345                           	opt stack 0
   346  000300                     _boosterCommsDataSerial:
   347                           	opt stack 0
   348  000300                     	ds	60
   349  00033C                     _commsTXBitsUSLG:
   350                           	opt stack 0
   351  00033C                     	ds	3
   352  00033F                     _masterCommsTimeoutUSG:
   353                           	opt stack 0
   354  00033F                     	ds	2
   355  000341                     BoosterDataCommandComms@recvFrameUSS:
   356                           	opt stack 0
   357  000341                     	ds	2
   358  000343                     BoosterDataCommandComms@counterSyncStatusUSS:
   359                           	opt stack 0
   360  000343                     	ds	2
   361  000345                     _counterELTFailures:
   362                           	opt stack 0
   363  000345                     	ds	2
   364  000347                     _counterELTTests:
   365                           	opt stack 0
   366  000347                     	ds	2
   367  000349                     _commandBLCalibFlag:
   368                           	opt stack 0
   369  000349                     	ds	2
   370  00034B                     _bufferRXLenUCG:
   371                           	opt stack 0
   372  00034B                     	ds	1
   373  00034C                     _bufferTXST7540UCAG:
   374                           	opt stack 0
   375  00034C                     	ds	79
   376  00039B                     _bufferRXST7540UCAG:
   377                           	opt stack 0
   378  00039B                     	ds	75
   379  0003E6                     _commandResponseUS:
   380                           	opt stack 0
   381  0003E6                     	ds	2
   382                           tblptru	equ	0xFF8
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           
   386                           	psect	bssBANK4
   387  000400                     __pbssBANK4:
   388                           	opt stack 0
   389  000400                     _boosterCommsData:
   390                           	opt stack 0
   391  000400                     	ds	240
   392                           tblptru	equ	0xFF8
   393                           postinc0	equ	0xFEE
   394                           wreg	equ	0xFE8
   395                           
   396                           	psect	bssBANK5
   397  000584                     __pbssBANK5:
   398                           	opt stack 0
   399  000584                     _packetNumbersUSAG:
   400                           	opt stack 0
   401  000584                     	ds	124
   402                           tblptru	equ	0xFF8
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           
   406                           	psect	bssBANK6
   407  000600                     __pbssBANK6:
   408                           	opt stack 0
   409  000600                     _pastBoosterValuesUSAG:
   410                           	opt stack 0
   411  000600                     	ds	248
   412                           tblptru	equ	0xFF8
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           
   416                           	psect	cstackBANK5
   417  000500                     __pcstackBANK5:
   418                           	opt stack 0
   419  000500                     ReturnBoosterData@partRespUSA:
   420                           	opt stack 0
   421                           
   422                           ; 62 bytes @ 0x0
   423  000500                     	ds	62
   424  00053E                     ReturnBoosterData@allRespUSA:
   425                           	opt stack 0
   426                           
   427                           ; 62 bytes @ 0x3E
   428  00053E                     	ds	62
   429  00057C                     ReturnBoosterData@windowCompareUS:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x7C
   433  00057C                     	ds	2
   434  00057E                     ReturnBoosterData@iscStatusUC:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x7E
   438  00057E                     	ds	1
   439  00057F                     ReturnBoosterData@respCountUC:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x7F
   443  00057F                     	ds	1
   444  000580                     ReturnBoosterData@commandValUC:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x80
   448  000580                     	ds	1
   449  000581                     ReturnBoosterData@wordCountUC:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x81
   453  000581                     	ds	1
   454  000582                     ReturnBoosterData@dataValUC:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x82
   458  000582                     	ds	1
   459  000583                     ReturnBoosterData@boosterCountUC:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x83
   463  000583                     	ds	1
   464                           tblptru	equ	0xFF8
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           
   468                           	psect	cstackBANK2
   469  000201                     __pcstackBANK2:
   470                           	opt stack 0
   471  000201                     ??_WindowIDBacktrack:
   472                           
   473                           ; 1 bytes @ 0x0
   474  000201                     	ds	7
   475  000208                     ??_SetWindowID:
   476                           
   477                           ; 1 bytes @ 0x7
   478  000208                     	ds	3
   479  00020B                     ??_BoosterCommsDispatcher:
   480                           
   481                           ; 1 bytes @ 0xA
   482  00020B                     	ds	1
   483  00020C                     ??_isr:
   484                           
   485                           ; 1 bytes @ 0xB
   486  00020C                     	ds	14
   487  00021A                     isr@discardUC:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x19
   491  00021A                     	ds	1
   492  00021B                     ?_PacketDataST7540:
   493                           	opt stack 0
   494  00021B                     ?_CRC16:
   495                           	opt stack 0
   496  00021B                     ?_GetLastPacketNumber:
   497                           	opt stack 0
   498  00021B                     ?_MangleSerial:
   499                           	opt stack 0
   500  00021B                     StartTransmitST7540@discardUC:
   501                           	opt stack 0
   502  00021B                     ReceiveNewDataST7540@discardUC:
   503                           	opt stack 0
   504  00021B                     ResetSingleBoosterState@boosterNumberUC:
   505                           	opt stack 0
   506  00021B                     ClearPacketNumbers@iscCountUC:
   507                           	opt stack 0
   508  00021B                     ClearPastValue@valuePosUC:
   509                           	opt stack 0
   510  00021B                     SetIsolationRelay@relayStateUC:
   511                           	opt stack 0
   512  00021B                     ReadConfigST7540@frameDataUS:
   513                           	opt stack 0
   514  00021B                     CRC16@data_p:
   515                           	opt stack 0
   516  00021B                     MangleSerial@mangleValueUS:
   517                           	opt stack 0
   518  00021B                     GetPacketSlot@srcSerialUS:
   519                           	opt stack 0
   520  00021B                     GetLastPacketNumber@srcSerialUS:
   521                           	opt stack 0
   522  00021B                     WaitTickCount@tickCountUS:
   523                           	opt stack 0
   524  00021B                     writeRegisterToProgram@address:
   525                           	opt stack 0
   526  00021B                     FlashReadAddress@flashAddressUS:
   527                           	opt stack 0
   528  00021B                     FlashEraseBlock@flashAddressUS:
   529                           	opt stack 0
   530  00021B                     FlashWriteWord@flashAddressUS:
   531                           	opt stack 0
   532  00021B                     readRegisterFromProgram@address:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x1A
   536  00021B                     	ds	1
   537  00021C                     ResetBoosterStates@boosterCountUC:
   538                           	opt stack 0
   539  00021C                     ClearPastValues@boosterCountUC:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x1B
   543  00021C                     	ds	1
   544  00021D                     ??_MangleSerial:
   545  00021D                     ForceFiringMode@forceModeUC:
   546                           	opt stack 0
   547  00021D                     IdlePacketSlot@iscCountC:
   548                           	opt stack 0
   549  00021D                     FlashEraseBlock@intStatusUC:
   550                           	opt stack 0
   551  00021D                     FlashWriteWord@lsbUC:
   552                           	opt stack 0
   553  00021D                     ReadConfigST7540@configDataUS:
   554                           	opt stack 0
   555  00021D                     CRC16@length:
   556                           	opt stack 0
   557  00021D                     writeRegisterToProgram@buffer:
   558                           	opt stack 0
   559  00021D                     readRegisterFromProgram@buffer:
   560                           	opt stack 0
   561  00021D                     WriteConfigST7540@frameDataUS:
   562                           	opt stack 0
   563                           
   564                           ; 3 bytes @ 0x1C
   565  00021D                     	ds	1
   566  00021E                     FlashWriteWord@msbUC:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x1D
   570  00021E                     	ds	1
   571  00021F                     ??_ReadConfigST7540:
   572  00021F                     ??_CRC16:
   573  00021F                     MangleSerial@xorOutputUC:
   574                           	opt stack 0
   575  00021F                     GetPacketSlot@saveSlotC:
   576                           	opt stack 0
   577  00021F                     GetLastPacketNumber@iscCountUC:
   578                           	opt stack 0
   579  00021F                     FlashWriteWord@intStatusUC:
   580                           	opt stack 0
   581  00021F                     writeRegisterToProgram@i:
   582                           	opt stack 0
   583  00021F                     readRegisterFromProgram@i:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x1E
   587  00021F                     	ds	1
   588  000220                     ??_ReadFlashValues:
   589  000220                     MangleSerial@b0UC:
   590                           	opt stack 0
   591  000220                     SavePacketNumber@srcSerialUS:
   592                           	opt stack 0
   593  000220                     WriteConfigST7540@configDataUS:
   594                           	opt stack 0
   595                           
   596                           ; 3 bytes @ 0x1F
   597  000220                     	ds	1
   598  000221                     MangleSerial@b1UC:
   599                           	opt stack 0
   600  000221                     writeBootloaderState@buffer:
   601                           	opt stack 0
   602  000221                     getSerialFromMemory@state:
   603                           	opt stack 0
   604                           
   605                           ; 64 bytes @ 0x20
   606  000221                     	ds	1
   607  000222                     ReadConfigST7540@discardUC:
   608                           	opt stack 0
   609  000222                     MangleSerial@b2UC:
   610                           	opt stack 0
   611  000222                     SavePacketNumber@packetNumberUC:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x21
   615  000222                     	ds	1
   616  000223                     ??_WriteConfigST7540:
   617  000223                     ??_SavePacketNumber:
   618  000223                     ReadConfigST7540@bitsReceivedUC:
   619                           	opt stack 0
   620  000223                     CRC16@i:
   621                           	opt stack 0
   622  000223                     MangleSerial@b4UC:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x22
   626  000223                     	ds	1
   627  000224                     MangleSerial@b6UC:
   628                           	opt stack 0
   629  000224                     CRC16@data:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x23
   633  000224                     	ds	1
   634  000225                     MangleSerial@b10UC:
   635                           	opt stack 0
   636  000225                     SavePacketNumber@saveSlotC:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x24
   640  000225                     	ds	1
   641  000226                     WriteConfigST7540@discardUC:
   642                           	opt stack 0
   643  000226                     MangleSerial@b12UC:
   644                           	opt stack 0
   645  000226                     CRC16@crc:
   646                           	opt stack 0
   647  000226                     UpdatePacketNumber@serialNumberUS:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x25
   651  000226                     	ds	1
   652  000227                     WriteConfigST7540@bitsSentUC:
   653                           	opt stack 0
   654  000227                     _MangleSerial$2321:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x26
   658  000227                     	ds	1
   659  000228                     ??_CheckCRCST7540:
   660  000228                     CreateMessageST7540@packetSourceUS:
   661                           	opt stack 0
   662  000228                     UpdatePacketNumber@packetNumberS:
   663                           	opt stack 0
   664  000228                     InitST7540@frameDataTXUS:
   665                           	opt stack 0
   666                           
   667                           ; 3 bytes @ 0x27
   668  000228                     	ds	1
   669  000229                     MangleSerial@cycleCountUC:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x28
   673  000229                     	ds	1
   674  00022A                     ??_UpdatePacketNumber:
   675  00022A                     CreateMessageST7540@packetDestUS:
   676                           	opt stack 0
   677  00022A                     CollisionCheck@delayValueUS:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x29
   681  00022A                     	ds	1
   682  00022B                     CheckCRCST7540@expectedCRCUS:
   683                           	opt stack 0
   684  00022B                     InitST7540@configDataTXUS:
   685                           	opt stack 0
   686                           
   687                           ; 3 bytes @ 0x2A
   688  00022B                     	ds	1
   689  00022C                     CreateMessageST7540@commandUC:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x2B
   693  00022C                     	ds	1
   694  00022D                     CreateMessageST7540@dataLenUC:
   695                           	opt stack 0
   696  00022D                     CheckCRCST7540@receivedCRCUS:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x2C
   700  00022D                     	ds	1
   701  00022E                     CreateMessageST7540@dataBuf:
   702                           	opt stack 0
   703  00022E                     InitST7540@frameDataRXUS:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x2D
   707  00022E                     	ds	1
   708  00022F                     CheckCRCST7540@packetLenUC:
   709                           	opt stack 0
   710  00022F                     UpdatePacketNumber@pastPacketNumberS:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x2E
   714  00022F                     	ds	1
   715  000230                     ??_CreateMessageST7540:
   716  000230                     ?_PacketReadParamST7540:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x2F
   720  000230                     	ds	1
   721  000231                     InitST7540@configDataRXUS:
   722                           	opt stack 0
   723                           
   724                           ; 3 bytes @ 0x30
   725  000231                     	ds	1
   726  000232                     ??_PacketReadParamST7540:
   727  000232                     CreateMessageST7540@packetCRCUS:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x31
   731  000232                     	ds	2
   732  000234                     CreateMessageST7540@dataBufLocUC:
   733                           	opt stack 0
   734  000234                     PacketReadParamST7540@paramName:
   735                           	opt stack 0
   736  000234                     InitST7540Wrapper@initCountUC:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x33
   740  000234                     	ds	1
   741  000235                     PacketReadParamST7540@retValueUS:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x34
   745  000235                     	ds	2
   746  000237                     RetransmitMessageSt7540@packetSourceUS:
   747                           	opt stack 0
   748  000237                     CreateAndSend@packetSourceUS:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x36
   752  000237                     	ds	2
   753  000239                     RetransmitMessageSt7540@packetDestUS:
   754                           	opt stack 0
   755  000239                     CreateAndSend@packetDestUS:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x38
   759  000239                     	ds	2
   760  00023B                     CreateAndSend@commandUC:
   761                           	opt stack 0
   762  00023B                     RetransmitMessageSt7540@dataBuf:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x3A
   766  00023B                     	ds	1
   767  00023C                     CreateAndSend@dataLenUC:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x3B
   771  00023C                     	ds	1
   772  00023D                     RetransmitMessageSt7540@commandUC:
   773                           	opt stack 0
   774  00023D                     CreateAndSend@dataBuf:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x3C
   778  00023D                     	ds	1
   779  00023E                     RetransmitMessageSt7540@oldPacketNumberUC:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x3D
   783  00023E                     	ds	1
   784  00023F                     RetransmitMessageSt7540@packetDataLenUC:
   785                           	opt stack 0
   786  00023F                     CreateAndSend@nextPacketNumberUS:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x3E
   790  00023F                     	ds	2
   791  000241                     SetSerialNumber@respSerialUS:
   792                           	opt stack 0
   793  000241                     ReturnBoosterData@respSerialUS:
   794                           	opt stack 0
   795  000241                     ProcessSerialCMD@respSerialUS:
   796                           	opt stack 0
   797  000241                     ProcessPingCMD@respSerialUS:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x40
   801  000241                     	ds	2
   802  000243                     ??_ReturnBoosterData:
   803  000243                     ??_SetSerialNumber:
   804  000243                     
   805                           ; 1 bytes @ 0x42
   806  000243                     	ds	2
   807  000245                     ProcessSerialCMD@serialListUSA:
   808                           	opt stack 0
   809                           
   810                           ; 60 bytes @ 0x44
   811  000245                     	ds	2
   812  000247                     SetSerialNumber@dataBufUSP:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x46
   816  000247                     	ds	26
   817  000261                     writeBootloaderState@i:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x60
   821  000261                     	ds	32
   822  000281                     ProcessSerialCMD@boosterIndexUC:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x80
   826  000281                     	ds	1
   827  000282                     ProcessSerialCMD@boosterCountUC:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x81
   831  000282                     	ds	1
   832  000283                     ProcessMasterComms@currentPacketNumberUS:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x82
   836  000283                     	ds	2
   837  000285                     ProcessMasterComms@destSerialUS:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x84
   841  000285                     	ds	2
   842  000287                     ProcessMasterComms@respSerialUS:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x86
   846  000287                     	ds	2
   847  000289                     ProcessMasterComms@recvCmdUC:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x88
   851  000289                     	ds	1
   852  00028A                     tblptru	equ	0xFF8
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           
   856                           ; 1 bytes @ 0x89
   857                           
   858                           	psect	cstackCOMRAM
   859  000001                     __pcstackCOMRAM:
   860                           	opt stack 0
   861  000001                     ?_ReadAnalogVoltage:
   862                           	opt stack 0
   863  000001                     ?___wmul:
   864                           	opt stack 0
   865  000001                     SPIISRHandlerST7540@dataReadUC:
   866                           	opt stack 0
   867  000001                     BoosterQueryStart@queryValUC:
   868                           	opt stack 0
   869  000001                     CheckDataCollision@boosterCountUC:
   870                           	opt stack 0
   871  000001                     i2ResetSingleBoosterState@boosterNumberUC:
   872                           	opt stack 0
   873  000001                     i2ClearPastValue@valuePosUC:
   874                           	opt stack 0
   875  000001                     CheckBoosterRXParity@recvFrameUS:
   876                           	opt stack 0
   877  000001                     ___wmul@multiplier:
   878                           	opt stack 0
   879  000001                     i2FlashEraseBlock@flashAddressUS:
   880                           	opt stack 0
   881  000001                     i2FlashWriteWord@flashAddressUS:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x0
   885  000001                     	ds	1
   886  000002                     i2ResetBoosterStates@boosterCountUC:
   887                           	opt stack 0
   888  000002                     i2ClearPastValues@boosterCountUC:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x1
   892  000002                     	ds	1
   893  000003                     LowestIdleWindow@boosterCountUC:
   894                           	opt stack 0
   895  000003                     ReadAnalogVoltage@channelC:
   896                           	opt stack 0
   897  000003                     i2ForceFiringMode@forceModeUC:
   898                           	opt stack 0
   899  000003                     i2FlashEraseBlock@intStatusUC:
   900                           	opt stack 0
   901  000003                     i2FlashWriteWord@lsbUC:
   902                           	opt stack 0
   903  000003                     CheckBoosterRXParity@tmpRecvFrameUS:
   904                           	opt stack 0
   905  000003                     ___wmul@multiplicand:
   906                           	opt stack 0
   907                           
   908                           ; 2 bytes @ 0x2
   909  000003                     	ds	1
   910  000004                     ??_NewBoosterAdded:
   911  000004                     i2FlashWriteWord@msbUC:
   912                           	opt stack 0
   913  000004                     ReadEarthLeakage@earthLeakageValueUS:
   914                           	opt stack 0
   915  000004                     ReadKeySwitch@keySwitchValueUS:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x3
   919  000004                     	ds	1
   920  000005                     CheckBoosterRXParity@bitParityUC:
   921                           	opt stack 0
   922  000005                     i2FlashWriteWord@intStatusUC:
   923                           	opt stack 0
   924  000005                     ___wmul@product:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x4
   928  000005                     	ds	1
   929  000006                     CheckBoosterRXParity@bitCountUC:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x5
   933  000006                     	ds	1
   934  000007                     ??_CheckLineFault:
   935  000007                     BoosterCommandStart@destSerialUS:
   936                           	opt stack 0
   937  000007                     ProcessRXFrame@recvFrameUS:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x6
   941  000007                     	ds	2
   942  000009                     BoosterCommandStart@destCommandUC:
   943                           	opt stack 0
   944  000009                     ProcessRXFrame@frameNumUC:
   945                           	opt stack 0
   946  000009                     CheckLineFault@activeWindowCounter:
   947                           	opt stack 0
   948                           
   949                           ; 2 bytes @ 0x8
   950  000009                     	ds	1
   951  00000A                     ??_ProcessRXFrame:
   952  00000A                     BoosterCommandStart@destPayloadUC:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x9
   956  00000A                     	ds	1
   957  00000B                     ??_BoosterCommandStart:
   958  00000B                     CheckLineFault@lineVoltUS:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0xA
   962  00000B                     	ds	2
   963  00000D                     CheckLineFault@i_1334:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0xC
   967  00000D                     	ds	2
   968  00000F                     CheckLineFault@i:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0xE
   972  00000F                     	ds	2
   973  000011                     ProcessRXFrame@parityCheckUC:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x10
   977  000011                     	ds	1
   978  000012                     ??_BoosterDataCommandComms:
   979                           
   980                           ; 1 bytes @ 0x11
   981  000012                     	ds	2
   982  000014                     BoosterDataCommandComms@commsADCValueUS:
   983                           	opt stack 0
   984                           
   985                           ; 2 bytes @ 0x13
   986  000014                     	ds	2
   987  000016                     WindowIDBacktrack@currentBitUC:
   988                           	opt stack 0
   989  000016                     AssignWindowID@serialNumberUS:
   990                           	opt stack 0
   991                           
   992                           ; 2 bytes @ 0x15
   993  000016                     	ds	2
   994  000018                     AssignWindowID@newWindowUC:
   995                           	opt stack 0
   996  000018                     WindowIDBacktrack@currentSerialUS:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x17
  1000  000018                     	ds	2
  1001  00001A                     WindowIDBacktrack@statusSetIDUC:
  1002                           	opt stack 0
  1003  00001A                     QueryWinSerial@serialNumberUS:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0x19
  1007  00001A                     	ds	2
  1008  00001C                     QueryWinSerial@j:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x1B
  1012  00001C                     	ds	1
  1013  00001D                     QueryWinSerial@i:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x1C
  1017  00001D                     	ds	1
  1018                           tblptru	equ	0xFF8
  1019                           postinc0	equ	0xFEE
  1020                           wreg	equ	0xFE8
  1021                           
  1022 ;;
  1023 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1024 ;;
  1025 ;; *************** function _main *****************
  1026 ;; Defined at:
  1027 ;;		line 68 in file "main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels required when called:   13
  1047 ;; This function calls:
  1048 ;;		_InitST7540Wrapper
  1049 ;;		_InitStates
  1050 ;;		_InitSystem
  1051 ;;		_ProcessMasterComms
  1052 ;;		_SetCommsHigh
  1053 ;;		_getSerialFromMemory
  1054 ;; This function is called by:
  1055 ;;		Startup code after reset
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text0
  1060  00B4A0                     __ptext0:
  1061                           	opt stack 0
  1062  00B4A0                     _main:
  1063                           	opt stack 18
  1064                           
  1065                           ;main.c: 69: InitStates();
  1066                           
  1067                           ; BSR set to: 2
  1068                           ;incstack = 0
  1069  00B4A0  EC03  F05B         	call	_InitStates	;wreg free
  1070                           
  1071                           ;main.c: 70: InitSystem();
  1072  00B4A4  EC64  F055         	call	_InitSystem	;wreg free
  1073                           
  1074                           ;main.c: 72: InitST7540Wrapper();
  1075  00B4A8  EC07  F05A         	call	_InitST7540Wrapper	;wreg free
  1076                           
  1077                           ;main.c: 74: SetCommsHigh();
  1078  00B4AC  EC31  F05B         	call	_SetCommsHigh	;wreg free
  1079                           
  1080                           ;main.c: 76: statusFlagsUSLG |= 0b000000001000000000000000;
  1081  00B4B0  0102               	movlb	2	; () banked
  1082  00B4B2  8F8B               	bsf	(_statusFlagsUSLG+1)& (0+255),7,b	;volatile
  1083                           
  1084                           ; BSR set to: 2
  1085                           ;main.c: 77: getSerialFromMemory();
  1086  00B4B4  ECAC  F059         	call	_getSerialFromMemory	;wreg free
  1087  00B4B8                     l6885:
  1088                           
  1089                           ;main.c: 79: ProcessMasterComms();
  1090  00B4B8  EC23  F04A         	call	_ProcessMasterComms	;wreg free
  1091  00B4BC  D7FD               	goto	l6885
  1092  00B4BE                     __end_of_main:
  1093                           	opt stack 0
  1094                           tblptru	equ	0xFF8
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           
  1098 ;; *************** function _getSerialFromMemory *****************
  1099 ;; Defined at:
  1100 ;;		line 239 in file "peripherals.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  state          64   32[BANK2 ] unsigned char [64]
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1115 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1117 ;;      Totals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1118 ;;Total ram usage:       64 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    8
  1121 ;; This function calls:
  1122 ;;		_readRegisterFromProgram
  1123 ;; This function is called by:
  1124 ;;		_main
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text1
  1129  00B358                     __ptext1:
  1130                           	opt stack 0
  1131  00B358                     _getSerialFromMemory:
  1132                           	opt stack 22
  1133                           
  1134                           ;peripherals.c: 240: unsigned char state[64];
  1135                           ;peripherals.c: 241: readRegisterFromProgram(0x4000, state);
  1136                           
  1137                           ;incstack = 0
  1138  00B358  0E40               	movlw	64
  1139  00B35A  0102               	movlb	2	; () banked
  1140  00B35C  6F1C               	movwf	(readRegisterFromProgram@address+1)& (0+255),b
  1141  00B35E  0E00               	movlw	0
  1142  00B360  6F1B               	movwf	readRegisterFromProgram@address& (0+255),b
  1143  00B362  0E21               	movlw	low getSerialFromMemory@state
  1144  00B364  0102               	movlb	2	; () banked
  1145  00B366  6F1D               	movwf	readRegisterFromProgram@buffer& (0+255),b
  1146  00B368  0E02               	movlw	high getSerialFromMemory@state
  1147  00B36A  0102               	movlb	2	; () banked
  1148  00B36C  6F1E               	movwf	(readRegisterFromProgram@buffer+1)& (0+255),b
  1149  00B36E  EC62  F057         	call	_readRegisterFromProgram	;wreg free
  1150                           
  1151                           ;peripherals.c: 243: iscSerialUSG = state[1] << 8;
  1152  00B372  0102               	movlb	2	; () banked
  1153  00B374  5122               	movf	(getSerialFromMemory@state+1)& (0+255),w,b
  1154  00B376  0102               	movlb	2	; () banked
  1155  00B378  6FAA               	movwf	(_iscSerialUSG+1)& (0+255),b
  1156  00B37A  6BA9               	clrf	_iscSerialUSG& (0+255),b
  1157                           
  1158                           ; BSR set to: 2
  1159                           ;peripherals.c: 244: iscSerialUSG |= state[0];
  1160  00B37C  0102               	movlb	2	; () banked
  1161  00B37E  5121               	movf	getSerialFromMemory@state& (0+255),w,b
  1162  00B380  0102               	movlb	2	; () banked
  1163  00B382  13A9               	iorwf	_iscSerialUSG& (0+255),f,b
  1164                           
  1165                           ; BSR set to: 2
  1166  00B384  0012               	return		;funcret
  1167  00B386                     __end_of_getSerialFromMemory:
  1168                           	opt stack 0
  1169                           tblptru	equ	0xFF8
  1170                           postinc0	equ	0xFEE
  1171                           wreg	equ	0xFE8
  1172                           
  1173 ;; *************** function _readRegisterFromProgram *****************
  1174 ;; Defined at:
  1175 ;;		line 248 in file "peripherals.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  address         2   26[BANK2 ] unsigned short 
  1178 ;;  buffer          2   28[BANK2 ] PTR unsigned char 
  1179 ;;		 -> getSerialFromMemory@state(64), 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  i               2   30[BANK2 ] int 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1191 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1192 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1194 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1195 ;;Total ram usage:        6 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    7
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_getSerialFromMemory
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text2
  1206  00AEC4                     __ptext2:
  1207                           	opt stack 0
  1208  00AEC4                     _readRegisterFromProgram:
  1209                           	opt stack 22
  1210                           
  1211                           ;peripherals.c: 249: TBLPTRU = 0x00;
  1212                           
  1213                           ; BSR set to: 2
  1214                           ;incstack = 0
  1215  00AEC4  0E00               	movlw	0
  1216  00AEC6  6EF8               	movwf	tblptru,c	;volatile
  1217                           
  1218                           ;peripherals.c: 250: TBLPTRH = (unsigned char)(address >> 8);
  1219  00AEC8  0102               	movlb	2	; () banked
  1220  00AECA  511C               	movf	(readRegisterFromProgram@address+1)& (0+255),w,b
  1221  00AECC  6EF7               	movwf	tblptrh,c	;volatile
  1222                           
  1223                           ; BSR set to: 2
  1224                           ;peripherals.c: 251: TBLPTRL = (unsigned char)(address & 0xFF);
  1225  00AECE  C21B  FFF6         	movff	readRegisterFromProgram@address,tblptrl	;volatile
  1226                           
  1227                           ;peripherals.c: 253: for(int i = 0; i < 64; i ++){
  1228  00AED2  0E00               	movlw	0
  1229  00AED4  0102               	movlb	2	; () banked
  1230  00AED6  6F20               	movwf	(readRegisterFromProgram@i+1)& (0+255),b
  1231  00AED8  0E00               	movlw	0
  1232  00AEDA  6F1F               	movwf	readRegisterFromProgram@i& (0+255),b
  1233  00AEDC                     l5461:
  1234                           
  1235                           ; BSR set to: 2
  1236  00AEDC  0102               	movlb	2	; () banked
  1237  00AEDE  BF20               	btfsc	(readRegisterFromProgram@i+1)& (0+255),7,b
  1238  00AEE0  D008               	goto	l1091
  1239  00AEE2  0102               	movlb	2	; () banked
  1240  00AEE4  5120               	movf	(readRegisterFromProgram@i+1)& (0+255),w,b
  1241  00AEE6  E116               	bnz	l1093
  1242  00AEE8  0E40               	movlw	64
  1243  00AEEA  0102               	movlb	2	; () banked
  1244  00AEEC  5D1F               	subwf	readRegisterFromProgram@i& (0+255),w,b
  1245  00AEEE  B0D8               	btfsc	status,0,c
  1246  00AEF0  0012               	return	
  1247  00AEF2                     l1091:
  1248                           
  1249                           ; BSR set to: 2
  1250  00AEF2  0009               	tblrd		*+	;# 
  1251                           
  1252                           ;peripherals.c: 255: buffer[i] = TABLAT;
  1253  00AEF4  0102               	movlb	2	; () banked
  1254  00AEF6  511F               	movf	readRegisterFromProgram@i& (0+255),w,b
  1255  00AEF8  0102               	movlb	2	; () banked
  1256  00AEFA  251D               	addwf	readRegisterFromProgram@buffer& (0+255),w,b
  1257  00AEFC  6ED9               	movwf	fsr2l,c
  1258  00AEFE  0102               	movlb	2	; () banked
  1259  00AF00  5120               	movf	(readRegisterFromProgram@i+1)& (0+255),w,b
  1260  00AF02  0102               	movlb	2	; () banked
  1261  00AF04  211E               	addwfc	(readRegisterFromProgram@buffer+1)& (0+255),w,b
  1262  00AF06  6EDA               	movwf	fsr2h,c
  1263  00AF08  CFF5 FFDF          	movff	tablat,indf2	;volatile
  1264                           
  1265                           ; BSR set to: 2
  1266  00AF0C  0102               	movlb	2	; () banked
  1267  00AF0E  4B1F               	infsnz	readRegisterFromProgram@i& (0+255),f,b
  1268  00AF10  2B20               	incf	(readRegisterFromProgram@i+1)& (0+255),f,b
  1269  00AF12  D7E4               	goto	l5461
  1270  00AF14                     l1093:
  1271                           
  1272                           ; BSR set to: 2
  1273  00AF14  0012               	return		;funcret
  1274  00AF16                     __end_of_readRegisterFromProgram:
  1275                           	opt stack 0
  1276                           tblptru	equ	0xFF8
  1277                           tblptrh	equ	0xFF7
  1278                           tblptrl	equ	0xFF6
  1279                           tablat	equ	0xFF5
  1280                           postinc0	equ	0xFEE
  1281                           wreg	equ	0xFE8
  1282                           indf2	equ	0xFDF
  1283                           fsr2h	equ	0xFDA
  1284                           fsr2l	equ	0xFD9
  1285                           status	equ	0xFD8
  1286                           
  1287 ;; *************** function _SetCommsHigh *****************
  1288 ;; Defined at:
  1289 ;;		line 488 in file "boostercomms.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		None
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    7
  1310 ;; This function calls:
  1311 ;;		Nothing
  1312 ;; This function is called by:
  1313 ;;		_main
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text3
  1318  00B662                     __ptext3:
  1319                           	opt stack 0
  1320  00B662                     _SetCommsHigh:
  1321                           	opt stack 23
  1322                           
  1323                           ;boostercomms.c: 489: LATBbits.LATB2 = 0;
  1324                           
  1325                           ; BSR set to: 2
  1326                           ;incstack = 0
  1327  00B662  948A               	bcf	3978,2,c	;volatile
  1328                           
  1329                           ;boostercomms.c: 490: LATAbits.LATA2 = 1;
  1330  00B664  8489               	bsf	3977,2,c	;volatile
  1331  00B666  0012               	return		;funcret
  1332  00B668                     __end_of_SetCommsHigh:
  1333                           	opt stack 0
  1334                           tblptru	equ	0xFF8
  1335                           tblptrh	equ	0xFF7
  1336                           tblptrl	equ	0xFF6
  1337                           tablat	equ	0xFF5
  1338                           postinc0	equ	0xFEE
  1339                           wreg	equ	0xFE8
  1340                           indf2	equ	0xFDF
  1341                           fsr2h	equ	0xFDA
  1342                           fsr2l	equ	0xFD9
  1343                           status	equ	0xFD8
  1344                           
  1345 ;; *************** function _ProcessMasterComms *****************
  1346 ;; Defined at:
  1347 ;;		line 39 in file "mastercomms.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  respSerialUS    2  134[BANK2 ] unsigned short 
  1352 ;;  destSerialUS    2  132[BANK2 ] unsigned short 
  1353 ;;  currentPacke    2  130[BANK2 ] unsigned short 
  1354 ;;  pastPacketNu    2    0        unsigned short 
  1355 ;;  recvCmdUC       1  136[BANK2 ] unsigned char 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      void 
  1358 ;; Registers used:
  1359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1366 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1368 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1369 ;;Total ram usage:        7 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:   12
  1372 ;; This function calls:
  1373 ;;		_CollisionCheck
  1374 ;;		_CreateAndSend
  1375 ;;		_DataReadyST7540
  1376 ;;		_ForceFiringMode
  1377 ;;		_PacketReadParamST7540
  1378 ;;		_ProcessPingCMD
  1379 ;;		_ProcessSerialCMD
  1380 ;;		_ReceiveNewDataST7540
  1381 ;;		_RetransmitMessageSt7540
  1382 ;;		_ReturnBoosterData
  1383 ;;		_SetIsolationRelay
  1384 ;;		_SetSerialNumber
  1385 ;;		_UpdatePacketNumber
  1386 ;;		_writeBootloaderState
  1387 ;; This function is called by:
  1388 ;;		_main
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text4
  1393  009446                     __ptext4:
  1394                           	opt stack 0
  1395  009446                     _ProcessMasterComms:
  1396                           	opt stack 18
  1397                           
  1398                           ;mastercomms.c: 40: unsigned char recvCmdUC;
  1399                           ;mastercomms.c: 41: unsigned short destSerialUS;
  1400                           ;mastercomms.c: 42: unsigned short respSerialUS;
  1401                           ;mastercomms.c: 43: unsigned short currentPacketNumberUS;
  1402                           ;mastercomms.c: 44: unsigned short pastPacketNumberUS;
  1403                           ;mastercomms.c: 46: masterFlagsUCG = 0;
  1404                           
  1405                           ;incstack = 0
  1406  009446  0E00               	movlw	0
  1407  009448  0102               	movlb	2	; () banked
  1408  00944A  6F93               	movwf	_masterFlagsUCG& (0+255),b
  1409                           
  1410                           ; BSR set to: 2
  1411                           ;mastercomms.c: 47: ReceiveNewDataST7540();
  1412  00944C  ECB6  F05A         	call	_ReceiveNewDataST7540	;wreg free
  1413  009450                     l6797:
  1414  009450  EC2D  F05B         	call	_DataReadyST7540	;wreg free
  1415  009454  0900               	iorlw	0
  1416  009456  B4D8               	btfsc	status,2,c
  1417  009458  D7FB               	goto	l6797
  1418                           
  1419                           ;mastercomms.c: 50: if(!PacketReadParamST7540(5))
  1420  00945A  0E05               	movlw	5
  1421  00945C  ECC9  F050         	call	_PacketReadParamST7540
  1422  009460  0102               	movlb	2	; () banked
  1423  009462  5130               	movf	?_PacketReadParamST7540& (0+255),w,b
  1424  009464  0102               	movlb	2	; () banked
  1425  009466  1131               	iorwf	(?_PacketReadParamST7540+1)& (0+255),w,b
  1426  009468  B4D8               	btfsc	status,2,c
  1427  00946A  0012               	return	
  1428                           
  1429                           ; BSR set to: 2
  1430                           ;mastercomms.c: 53: ForceFiringMode(1);
  1431                           
  1432                           ; BSR set to: 2
  1433                           
  1434                           ; BSR set to: 2
  1435                           ;mastercomms.c: 51: return;
  1436  00946C  0E01               	movlw	1
  1437  00946E  ECF8  F057         	call	_ForceFiringMode
  1438                           
  1439                           ;mastercomms.c: 54: statusFlagsUSLG |= 0b000000000000000000000010;
  1440  009472  0102               	movlb	2	; () banked
  1441  009474  838A               	bsf	_statusFlagsUSLG& (0+255),1,b	;volatile
  1442                           
  1443                           ; BSR set to: 2
  1444                           ;mastercomms.c: 55: masterCommsTimeoutUSG = 0;
  1445  009476  0E00               	movlw	0
  1446  009478  0103               	movlb	3	; () banked
  1447  00947A  6F40               	movwf	(_masterCommsTimeoutUSG+1)& (0+255),b
  1448  00947C  0E00               	movlw	0
  1449  00947E  6F3F               	movwf	_masterCommsTimeoutUSG& (0+255),b
  1450                           
  1451                           ; BSR set to: 3
  1452                           ;mastercomms.c: 59: recvCmdUC = PacketReadParamST7540(4);
  1453  009480  0E04               	movlw	4
  1454  009482  ECC9  F050         	call	_PacketReadParamST7540
  1455  009486  0102               	movlb	2	; () banked
  1456  009488  5130               	movf	?_PacketReadParamST7540& (0+255),w,b
  1457  00948A  0102               	movlb	2	; () banked
  1458  00948C  6F89               	movwf	ProcessMasterComms@recvCmdUC& (0+255),b
  1459                           
  1460                           ; BSR set to: 2
  1461                           ;mastercomms.c: 60: destSerialUS = PacketReadParamST7540(2);
  1462  00948E  0E02               	movlw	2
  1463  009490  ECC9  F050         	call	_PacketReadParamST7540
  1464  009494  C230  F285         	movff	?_PacketReadParamST7540,ProcessMasterComms@destSerialUS
  1465  009498  C231  F286         	movff	?_PacketReadParamST7540+1,ProcessMasterComms@destSerialUS+1
  1466                           
  1467                           ;mastercomms.c: 61: respSerialUS = PacketReadParamST7540(1);
  1468  00949C  0E01               	movlw	1
  1469  00949E  ECC9  F050         	call	_PacketReadParamST7540
  1470  0094A2  C230  F287         	movff	?_PacketReadParamST7540,ProcessMasterComms@respSerialUS
  1471  0094A6  C231  F288         	movff	?_PacketReadParamST7540+1,ProcessMasterComms@respSerialUS+1
  1472                           
  1473                           ;mastercomms.c: 63: __nop();
  1474  0094AA  F000               	nop	
  1475                           
  1476                           ;mastercomms.c: 65: if(recvCmdUC & 0b10000000){
  1477  0094AC  0102               	movlb	2	; () banked
  1478  0094AE  AF89               	btfss	ProcessMasterComms@recvCmdUC& (0+255),7,b
  1479  0094B0  D004               	goto	l6821
  1480                           
  1481                           ; BSR set to: 2
  1482                           ;mastercomms.c: 66: masterFlagsUCG |= 0b00000001;
  1483  0094B2  0102               	movlb	2	; () banked
  1484  0094B4  8193               	bsf	_masterFlagsUCG& (0+255),0,b
  1485                           
  1486                           ;mastercomms.c: 67: recvCmdUC &= ~0b10000000;
  1487  0094B6  0102               	movlb	2	; () banked
  1488  0094B8  9F89               	bcf	ProcessMasterComms@recvCmdUC& (0+255),7,b
  1489  0094BA                     l6821:
  1490                           
  1491                           ; BSR set to: 2
  1492                           ;mastercomms.c: 68: }
  1493                           ;mastercomms.c: 70: if(recvCmdUC & 0b01000000){
  1494  0094BA  0102               	movlb	2	; () banked
  1495  0094BC  AD89               	btfss	ProcessMasterComms@recvCmdUC& (0+255),6,b
  1496  0094BE  D004               	goto	l6825
  1497                           
  1498                           ; BSR set to: 2
  1499                           ;mastercomms.c: 71: masterFlagsUCG |= 0b00000100;
  1500  0094C0  0102               	movlb	2	; () banked
  1501  0094C2  8593               	bsf	_masterFlagsUCG& (0+255),2,b
  1502                           
  1503                           ;mastercomms.c: 72: recvCmdUC &= ~0b01000000;
  1504  0094C4  0102               	movlb	2	; () banked
  1505  0094C6  9D89               	bcf	ProcessMasterComms@recvCmdUC& (0+255),6,b
  1506  0094C8                     l6825:
  1507                           
  1508                           ; BSR set to: 2
  1509                           ;mastercomms.c: 73: }
  1510                           ;mastercomms.c: 75: if(destSerialUS)
  1511  0094C8  0102               	movlb	2	; () banked
  1512  0094CA  5185               	movf	ProcessMasterComms@destSerialUS& (0+255),w,b
  1513  0094CC  0102               	movlb	2	; () banked
  1514  0094CE  1186               	iorwf	(ProcessMasterComms@destSerialUS+1)& (0+255),w,b
  1515  0094D0  B4D8               	btfsc	status,2,c
  1516  0094D2  D002               	goto	l6829
  1517                           
  1518                           ; BSR set to: 2
  1519                           ;mastercomms.c: 76: masterFlagsUCG |= 0b00000010;
  1520  0094D4  0102               	movlb	2	; () banked
  1521  0094D6  8393               	bsf	_masterFlagsUCG& (0+255),1,b
  1522  0094D8                     l6829:
  1523                           
  1524                           ; BSR set to: 2
  1525                           ;mastercomms.c: 78: if(!destSerialUS || (destSerialUS == iscSerialUSG)){
  1526  0094D8  0102               	movlb	2	; () banked
  1527  0094DA  5185               	movf	ProcessMasterComms@destSerialUS& (0+255),w,b
  1528  0094DC  0102               	movlb	2	; () banked
  1529  0094DE  1186               	iorwf	(ProcessMasterComms@destSerialUS+1)& (0+255),w,b
  1530  0094E0  B4D8               	btfsc	status,2,c
  1531  0094E2  D00B               	goto	l6833
  1532                           
  1533                           ; BSR set to: 2
  1534  0094E4  0102               	movlb	2	; () banked
  1535  0094E6  51A9               	movf	_iscSerialUSG& (0+255),w,b
  1536  0094E8  0102               	movlb	2	; () banked
  1537  0094EA  1985               	xorwf	ProcessMasterComms@destSerialUS& (0+255),w,b
  1538  0094EC  E105               	bnz	u7601
  1539  0094EE  0102               	movlb	2	; () banked
  1540  0094F0  51AA               	movf	(_iscSerialUSG+1)& (0+255),w,b
  1541  0094F2  0102               	movlb	2	; () banked
  1542  0094F4  1986               	xorwf	(ProcessMasterComms@destSerialUS+1)& (0+255),w,b
  1543  0094F6  A4D8               	btfss	status,2,c
  1544  0094F8                     u7601:
  1545  0094F8  D098               	goto	l6865
  1546  0094FA                     l6833:
  1547                           
  1548                           ; BSR set to: 2
  1549                           ;mastercomms.c: 79: currentPacketNumberUS = PacketReadParamST7540(3);
  1550  0094FA  0E03               	movlw	3
  1551  0094FC  ECC9  F050         	call	_PacketReadParamST7540
  1552  009500  C230  F283         	movff	?_PacketReadParamST7540,ProcessMasterComms@currentPacketNumberUS
  1553  009504  C231  F284         	movff	?_PacketReadParamST7540+1,ProcessMasterComms@currentPacketNumberUS+1
  1554                           
  1555                           ;mastercomms.c: 80: if(!UpdatePacketNumber(respSerialUS, currentPacketNumberUS))
  1556  009508  C287  F226         	movff	ProcessMasterComms@respSerialUS,UpdatePacketNumber@serialNumberUS
  1557  00950C  C288  F227         	movff	ProcessMasterComms@respSerialUS+1,UpdatePacketNumber@serialNumberUS+1
  1558  009510  C283  F228         	movff	ProcessMasterComms@currentPacketNumberUS,UpdatePacketNumber@packetNumberS
  1559  009514  C284  F229         	movff	ProcessMasterComms@currentPacketNumberUS+1,UpdatePacketNumber@packetNumberS+1
  1560  009518  EC34  F054         	call	_UpdatePacketNumber	;wreg free
  1561  00951C  0900               	iorlw	0
  1562  00951E  B4D8               	btfsc	status,2,c
  1563  009520  0012               	return	
  1564  009522  D05F               	goto	l6863
  1565  009524                     l6837:
  1566                           
  1567                           ;mastercomms.c: 84: case(0b00000001):
  1568                           ;mastercomms.c: 85: case(0b00000010):
  1569                           ;mastercomms.c: 86: case(0b00000011):
  1570                           ;mastercomms.c: 88: ReturnBoosterData(recvCmdUC, respSerialUS);
  1571  009524  C287  F241         	movff	ProcessMasterComms@respSerialUS,ReturnBoosterData@respSerialUS
  1572  009528  C288  F242         	movff	ProcessMasterComms@respSerialUS+1,ReturnBoosterData@respSerialUS+1
  1573  00952C  0102               	movlb	2	; () banked
  1574  00952E  5189               	movf	ProcessMasterComms@recvCmdUC& (0+255),w,b
  1575  009530  ECFE  F044         	call	_ReturnBoosterData
  1576                           
  1577                           ;mastercomms.c: 89: break;
  1578  009534  0012               	return	
  1579  009536                     l6839:
  1580                           
  1581                           ;mastercomms.c: 91: SetIsolationRelay(recvCmdUC);
  1582  009536  0102               	movlb	2	; () banked
  1583  009538  5189               	movf	ProcessMasterComms@recvCmdUC& (0+255),w,b
  1584  00953A  EC49  F059         	call	_SetIsolationRelay
  1585                           
  1586                           ;mastercomms.c: 92: CreateAndSend(iscSerialUSG, respSerialUS, recvCmdUC, 0, 0);
  1587  00953E  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  1588  009542  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  1589  009546  C287  F239         	movff	ProcessMasterComms@respSerialUS,CreateAndSend@packetDestUS
  1590  00954A  C288  F23A         	movff	ProcessMasterComms@respSerialUS+1,CreateAndSend@packetDestUS+1
  1591  00954E  C289  F23B         	movff	ProcessMasterComms@recvCmdUC,CreateAndSend@commandUC
  1592  009552  0E00               	movlw	0
  1593  009554  0102               	movlb	2	; () banked
  1594  009556  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  1595  009558  0E00               	movlw	0
  1596  00955A  0102               	movlb	2	; () banked
  1597  00955C  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  1598  00955E  0E00               	movlw	0
  1599  009560  0102               	movlb	2	; () banked
  1600  009562  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  1601  009564  ECA4  F055         	call	_CreateAndSend	;wreg free
  1602  009568                     l6843:
  1603                           
  1604                           ;mastercomms.c: 94: SetIsolationRelay(recvCmdUC);
  1605  009568  0102               	movlb	2	; () banked
  1606  00956A  5189               	movf	ProcessMasterComms@recvCmdUC& (0+255),w,b
  1607  00956C  EC49  F059         	call	_SetIsolationRelay
  1608                           
  1609                           ;mastercomms.c: 95: CreateAndSend(iscSerialUSG, respSerialUS, recvCmdUC, 0, 0);
  1610  009570  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  1611  009574  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  1612  009578  C287  F239         	movff	ProcessMasterComms@respSerialUS,CreateAndSend@packetDestUS
  1613  00957C  C288  F23A         	movff	ProcessMasterComms@respSerialUS+1,CreateAndSend@packetDestUS+1
  1614  009580  C289  F23B         	movff	ProcessMasterComms@recvCmdUC,CreateAndSend@commandUC
  1615  009584  0E00               	movlw	0
  1616  009586  0102               	movlb	2	; () banked
  1617  009588  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  1618  00958A  0E00               	movlw	0
  1619  00958C  0102               	movlb	2	; () banked
  1620  00958E  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  1621  009590  0E00               	movlw	0
  1622  009592  0102               	movlb	2	; () banked
  1623  009594  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  1624  009596  ECA4  F055         	call	_CreateAndSend	;wreg free
  1625                           
  1626                           ;mastercomms.c: 96: break;
  1627  00959A  0012               	return	
  1628  00959C                     l6845:
  1629                           
  1630                           ;mastercomms.c: 98: ProcessSerialCMD(respSerialUS);
  1631  00959C  C287  F241         	movff	ProcessMasterComms@respSerialUS,ProcessSerialCMD@respSerialUS
  1632  0095A0  C288  F242         	movff	ProcessMasterComms@respSerialUS+1,ProcessSerialCMD@respSerialUS+1
  1633  0095A4  EC19  F052         	call	_ProcessSerialCMD	;wreg free
  1634                           
  1635                           ;mastercomms.c: 99: break;
  1636  0095A8  0012               	return	
  1637  0095AA                     l6847:
  1638                           
  1639                           ;mastercomms.c: 101: SetSerialNumber(respSerialUS);
  1640  0095AA  C287  F241         	movff	ProcessMasterComms@respSerialUS,SetSerialNumber@respSerialUS
  1641  0095AE  C288  F242         	movff	ProcessMasterComms@respSerialUS+1,SetSerialNumber@respSerialUS+1
  1642  0095B2  EC44  F04F         	call	_SetSerialNumber	;wreg free
  1643                           
  1644                           ;mastercomms.c: 102: break;
  1645  0095B6  0012               	return	
  1646  0095B8                     l6849:
  1647                           
  1648                           ;mastercomms.c: 104: ForceFiringMode(0);
  1649  0095B8  0E00               	movlw	0
  1650  0095BA  ECF8  F057         	call	_ForceFiringMode
  1651                           
  1652                           ;mastercomms.c: 106: statusFlagsUSLG |= 0b001000000000000000000000;
  1653  0095BE  0102               	movlb	2	; () banked
  1654  0095C0  8B8C               	bsf	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
  1655                           
  1656                           ; BSR set to: 2
  1657                           ;mastercomms.c: 108: statusFlagsUSLG &= ~((unsigned short long) 0b0000000010000000000000
      +                          00);
  1658  0095C2  0102               	movlb	2	; () banked
  1659  0095C4  9F8B               	bcf	(_statusFlagsUSLG+1)& (0+255),7,b	;volatile
  1660                           
  1661                           ; BSR set to: 2
  1662                           ;mastercomms.c: 109: LATBbits.LATB3 = 1;
  1663  0095C6  868A               	bsf	3978,3,c	;volatile
  1664                           
  1665                           ;mastercomms.c: 111: break;
  1666  0095C8  0012               	return	
  1667  0095CA                     l823:
  1668                           
  1669                           ; BSR set to: 2
  1670                           ;mastercomms.c: 113: __nop();
  1671  0095CA  F000               	nop	
  1672                           
  1673                           ;mastercomms.c: 114: ProcessPingCMD(respSerialUS);
  1674  0095CC  C287  F241         	movff	ProcessMasterComms@respSerialUS,ProcessPingCMD@respSerialUS
  1675  0095D0  C288  F242         	movff	ProcessMasterComms@respSerialUS+1,ProcessPingCMD@respSerialUS+1
  1676  0095D4  ECC3  F059         	call	_ProcessPingCMD	;wreg free
  1677                           
  1678                           ;mastercomms.c: 115: break;
  1679  0095D8  0012               	return	
  1680  0095DA                     l6859:
  1681                           
  1682                           ;mastercomms.c: 117: writeBootloaderState();
  1683  0095DA  ECDF  F056         	call	_writeBootloaderState	;wreg free
  1684  0095DE  00FF               	reset		;# 
  1685                           
  1686                           ;mastercomms.c: 123: }
  1687                           
  1688                           ;mastercomms.c: 119: break;
  1689  0095E0  0012               	return	
  1690  0095E2                     l6863:
  1691  0095E2  0102               	movlb	2	; () banked
  1692  0095E4  5189               	movf	ProcessMasterComms@recvCmdUC& (0+255),w,b
  1693                           
  1694                           ; Switch size 1, requested type "space"
  1695                           ; Number of cases is 11, Range of values is 0 to 49
  1696                           ; switch strategies available:
  1697                           ; Name         Instructions Cycles
  1698                           ; simple_byte           34    18 (average)
  1699                           ;	Chosen strategy is simple_byte
  1700  0095E6  0A00               	xorlw	0	; case 0
  1701  0095E8  B4D8               	btfsc	status,2,c
  1702  0095EA  D79C               	goto	l6837
  1703  0095EC  0A01               	xorlw	1	; case 1
  1704  0095EE  B4D8               	btfsc	status,2,c
  1705  0095F0  D799               	goto	l6837
  1706  0095F2  0A03               	xorlw	3	; case 2
  1707  0095F4  B4D8               	btfsc	status,2,c
  1708  0095F6  D796               	goto	l6837
  1709  0095F8  0A01               	xorlw	1	; case 3
  1710  0095FA  B4D8               	btfsc	status,2,c
  1711  0095FC  D793               	goto	l6837
  1712  0095FE  0A06               	xorlw	6	; case 5
  1713  009600  B4D8               	btfsc	status,2,c
  1714  009602  D799               	goto	l6839
  1715  009604  0A03               	xorlw	3	; case 6
  1716  009606  B4D8               	btfsc	status,2,c
  1717  009608  D7AF               	goto	l6843
  1718  00960A  0A01               	xorlw	1	; case 7
  1719  00960C  B4D8               	btfsc	status,2,c
  1720  00960E  D7C6               	goto	l6845
  1721  009610  0A0E               	xorlw	14	; case 9
  1722  009612  B4D8               	btfsc	status,2,c
  1723  009614  D7CA               	goto	l6847
  1724  009616  0A2C               	xorlw	44	; case 37
  1725  009618  B4D8               	btfsc	status,2,c
  1726  00961A  D7CE               	goto	l6849
  1727  00961C  0A0C               	xorlw	12	; case 41
  1728  00961E  B4D8               	btfsc	status,2,c
  1729  009620  D7D4               	goto	l823
  1730  009622  0A18               	xorlw	24	; case 49
  1731  009624  A4D8               	btfss	status,2,c
  1732                           
  1733                           ; BSR set to: 2
  1734                           ;mastercomms.c: 124: }else{
  1735  009626  0012               	return	
  1736  009628  D7D8               	goto	l6859
  1737  00962A                     l6865:
  1738                           
  1739                           ; BSR set to: 2
  1740                           ;mastercomms.c: 125: currentPacketNumberUS = PacketReadParamST7540(3);
  1741  00962A  0E03               	movlw	3
  1742  00962C  ECC9  F050         	call	_PacketReadParamST7540
  1743  009630  C230  F283         	movff	?_PacketReadParamST7540,ProcessMasterComms@currentPacketNumberUS
  1744  009634  C231  F284         	movff	?_PacketReadParamST7540+1,ProcessMasterComms@currentPacketNumberUS+1
  1745                           
  1746                           ;mastercomms.c: 126: if(UpdatePacketNumber(respSerialUS, currentPacketNumberUS) &&
  1747                           ;mastercomms.c: 127: (masterFlagsUCG & 0b00000001)){
  1748  009638  C287  F226         	movff	ProcessMasterComms@respSerialUS,UpdatePacketNumber@serialNumberUS
  1749  00963C  C288  F227         	movff	ProcessMasterComms@respSerialUS+1,UpdatePacketNumber@serialNumberUS+1
  1750  009640  C283  F228         	movff	ProcessMasterComms@currentPacketNumberUS,UpdatePacketNumber@packetNumberS
  1751  009644  C284  F229         	movff	ProcessMasterComms@currentPacketNumberUS+1,UpdatePacketNumber@packetNumberS+1
  1752  009648  EC34  F054         	call	_UpdatePacketNumber	;wreg free
  1753  00964C  0900               	iorlw	0
  1754  00964E  B4D8               	btfsc	status,2,c
  1755  009650  0012               	return	
  1756  009652  0102               	movlb	2	; () banked
  1757  009654  A193               	btfss	_masterFlagsUCG& (0+255),0,b
  1758  009656  0012               	return	
  1759                           
  1760                           ; BSR set to: 2
  1761                           ;mastercomms.c: 128: CollisionCheck();
  1762  009658  ECF7  F058         	call	_CollisionCheck	;wreg free
  1763                           
  1764                           ;mastercomms.c: 129: RetransmitMessageSt7540();
  1765  00965C  EC84  F054         	call	_RetransmitMessageSt7540	;wreg free
  1766  009660  0012               	return	
  1767  009662                     __end_of_ProcessMasterComms:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           postinc0	equ	0xFEE
  1774                           wreg	equ	0xFE8
  1775                           indf2	equ	0xFDF
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8
  1779                           
  1780 ;; *************** function _writeBootloaderState *****************
  1781 ;; Defined at:
  1782 ;;		line 112 in file "peripherals.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  i               2   96[BANK2 ] int 
  1787 ;;  buffer         64   32[BANK2 ] unsigned char [64]
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1798 ;;      Locals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1800 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1801 ;;Total ram usage:       66 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    8
  1804 ;; This function calls:
  1805 ;;		_writeRegisterToProgram
  1806 ;; This function is called by:
  1807 ;;		_ProcessMasterComms
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text5
  1812  00ADBE                     __ptext5:
  1813                           	opt stack 0
  1814  00ADBE                     _writeBootloaderState:
  1815                           	opt stack 21
  1816                           
  1817                           ;peripherals.c: 113: unsigned char buffer[64];
  1818                           ;peripherals.c: 114: for(int i = 0; i < 64; i ++){
  1819                           
  1820                           ;incstack = 0
  1821  00ADBE  0E00               	movlw	0
  1822  00ADC0  0102               	movlb	2	; () banked
  1823  00ADC2  6F62               	movwf	(writeBootloaderState@i+1)& (0+255),b
  1824  00ADC4  0E00               	movlw	0
  1825  00ADC6  6F61               	movwf	writeBootloaderState@i& (0+255),b
  1826  00ADC8                     l5445:
  1827                           
  1828                           ; BSR set to: 2
  1829  00ADC8  0102               	movlb	2	; () banked
  1830  00ADCA  BF62               	btfsc	(writeBootloaderState@i+1)& (0+255),7,b
  1831  00ADCC  D008               	goto	l5449
  1832  00ADCE  0102               	movlb	2	; () banked
  1833  00ADD0  5162               	movf	(writeBootloaderState@i+1)& (0+255),w,b
  1834  00ADD2  E113               	bnz	l5455
  1835  00ADD4  0E40               	movlw	64
  1836  00ADD6  0102               	movlb	2	; () banked
  1837  00ADD8  5D61               	subwf	writeBootloaderState@i& (0+255),w,b
  1838  00ADDA  B0D8               	btfsc	status,0,c
  1839  00ADDC  D00E               	goto	l5455
  1840  00ADDE                     l5449:
  1841                           
  1842                           ; BSR set to: 2
  1843                           ;peripherals.c: 115: buffer[i] = 1;
  1844  00ADDE  0E21               	movlw	low writeBootloaderState@buffer
  1845  00ADE0  0102               	movlb	2	; () banked
  1846  00ADE2  2561               	addwf	writeBootloaderState@i& (0+255),w,b
  1847  00ADE4  6ED9               	movwf	fsr2l,c
  1848  00ADE6  0E02               	movlw	high writeBootloaderState@buffer
  1849  00ADE8  0102               	movlb	2	; () banked
  1850  00ADEA  2162               	addwfc	(writeBootloaderState@i+1)& (0+255),w,b
  1851  00ADEC  6EDA               	movwf	fsr2h,c
  1852  00ADEE  0E01               	movlw	1
  1853  00ADF0  6EDF               	movwf	indf2,c
  1854                           
  1855                           ; BSR set to: 2
  1856  00ADF2  0102               	movlb	2	; () banked
  1857  00ADF4  4B61               	infsnz	writeBootloaderState@i& (0+255),f,b
  1858  00ADF6  2B62               	incf	(writeBootloaderState@i+1)& (0+255),f,b
  1859  00ADF8  D7E7               	goto	l5445
  1860  00ADFA                     l5455:
  1861                           
  1862                           ; BSR set to: 2
  1863                           ;peripherals.c: 116: }
  1864                           ;peripherals.c: 117: writeRegisterToProgram(0x3C00, buffer);
  1865  00ADFA  0E3C               	movlw	60
  1866  00ADFC  0102               	movlb	2	; () banked
  1867  00ADFE  6F1C               	movwf	(writeRegisterToProgram@address+1)& (0+255),b
  1868  00AE00  0E00               	movlw	0
  1869  00AE02  6F1B               	movwf	writeRegisterToProgram@address& (0+255),b
  1870  00AE04  0E21               	movlw	low writeBootloaderState@buffer
  1871  00AE06  0102               	movlb	2	; () banked
  1872  00AE08  6F1D               	movwf	writeRegisterToProgram@buffer& (0+255),b
  1873  00AE0A  0E02               	movlw	high writeBootloaderState@buffer
  1874  00AE0C  0102               	movlb	2	; () banked
  1875  00AE0E  6F1E               	movwf	(writeRegisterToProgram@buffer+1)& (0+255),b
  1876  00AE10  EC1C  F055         	call	_writeRegisterToProgram	;wreg free
  1877  00AE14  0012               	return		;funcret
  1878  00AE16                     __end_of_writeBootloaderState:
  1879                           	opt stack 0
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           postinc0	equ	0xFEE
  1885                           wreg	equ	0xFE8
  1886                           indf2	equ	0xFDF
  1887                           fsr2h	equ	0xFDA
  1888                           fsr2l	equ	0xFD9
  1889                           status	equ	0xFD8
  1890                           
  1891 ;; *************** function _writeRegisterToProgram *****************
  1892 ;; Defined at:
  1893 ;;		line 125 in file "peripherals.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  address         2   26[BANK2 ] unsigned short 
  1896 ;;  buffer          2   28[BANK2 ] PTR unsigned char 
  1897 ;;		 -> writeBootloaderState@buffer(64), 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  i               2   30[BANK2 ] int 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  1909 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1910 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;Total ram usage:        6 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    7
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_writeBootloaderState
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text6
  1924  00AA38                     __ptext6:
  1925                           	opt stack 0
  1926  00AA38                     _writeRegisterToProgram:
  1927                           	opt stack 21
  1928                           
  1929                           ;peripherals.c: 126: address --;
  1930                           
  1931                           ;incstack = 0
  1932  00AA38  0102               	movlb	2	; () banked
  1933  00AA3A  071B               	decf	writeRegisterToProgram@address& (0+255),f,b
  1934  00AA3C  A0D8               	btfss	status,0,c
  1935  00AA3E  071C               	decf	(writeRegisterToProgram@address+1)& (0+255),f,b
  1936                           
  1937                           ; BSR set to: 2
  1938                           ;peripherals.c: 127: TBLPTRU = 0x00;
  1939  00AA40  0E00               	movlw	0
  1940  00AA42  6EF8               	movwf	tblptru,c	;volatile
  1941                           
  1942                           ; BSR set to: 2
  1943                           ;peripherals.c: 128: TBLPTRH = (unsigned char)(address >> 8);
  1944  00AA44  0102               	movlb	2	; () banked
  1945  00AA46  511C               	movf	(writeRegisterToProgram@address+1)& (0+255),w,b
  1946  00AA48  6EF7               	movwf	tblptrh,c	;volatile
  1947                           
  1948                           ; BSR set to: 2
  1949                           ;peripherals.c: 129: TBLPTRL = (unsigned char)(address & 0xFF);
  1950  00AA4A  C21B  FFF6         	movff	writeRegisterToProgram@address,tblptrl	;volatile
  1951                           
  1952                           ; BSR set to: 2
  1953                           ;peripherals.c: 131: TABLAT = buffer[63];
  1954  00AA4E  0102               	movlb	2	; () banked
  1955  00AA50  EE20 F03F          	lfsr	2,63
  1956  00AA54  511D               	movf	writeRegisterToProgram@buffer& (0+255),w,b
  1957  00AA56  26D9               	addwf	fsr2l,f,c
  1958  00AA58  511E               	movf	(writeRegisterToProgram@buffer+1)& (0+255),w,b
  1959  00AA5A  22DA               	addwfc	fsr2h,f,c
  1960  00AA5C  50DF               	movf	indf2,w,c
  1961  00AA5E  6EF5               	movwf	tablat,c	;volatile
  1962  00AA60  000D               	tblwt		*+	;# 
  1963                           
  1964                           ;peripherals.c: 133: for(int i = 0; i < 63; i++){
  1965  00AA62  0E00               	movlw	0
  1966  00AA64  0102               	movlb	2	; () banked
  1967  00AA66  6F20               	movwf	(writeRegisterToProgram@i+1)& (0+255),b
  1968  00AA68  0E00               	movlw	0
  1969  00AA6A  6F1F               	movwf	writeRegisterToProgram@i& (0+255),b
  1970                           
  1971                           ; BSR set to: 2
  1972  00AA6C  0102               	movlb	2	; () banked
  1973  00AA6E  BF20               	btfsc	(writeRegisterToProgram@i+1)& (0+255),7,b
  1974  00AA70  D008               	goto	l4709
  1975  00AA72  0102               	movlb	2	; () banked
  1976  00AA74  5120               	movf	(writeRegisterToProgram@i+1)& (0+255),w,b
  1977  00AA76  E11C               	bnz	l1060
  1978  00AA78  0E3F               	movlw	63
  1979  00AA7A  0102               	movlb	2	; () banked
  1980  00AA7C  5D1F               	subwf	writeRegisterToProgram@i& (0+255),w,b
  1981  00AA7E  B0D8               	btfsc	status,0,c
  1982  00AA80  D017               	goto	l1060
  1983  00AA82                     l4709:
  1984                           
  1985                           ; BSR set to: 2
  1986                           ;peripherals.c: 134: TABLAT = buffer[i];
  1987  00AA82  0102               	movlb	2	; () banked
  1988  00AA84  511F               	movf	writeRegisterToProgram@i& (0+255),w,b
  1989  00AA86  0102               	movlb	2	; () banked
  1990  00AA88  251D               	addwf	writeRegisterToProgram@buffer& (0+255),w,b
  1991  00AA8A  6ED9               	movwf	fsr2l,c
  1992  00AA8C  0102               	movlb	2	; () banked
  1993  00AA8E  5120               	movf	(writeRegisterToProgram@i+1)& (0+255),w,b
  1994  00AA90  0102               	movlb	2	; () banked
  1995  00AA92  211E               	addwfc	(writeRegisterToProgram@buffer+1)& (0+255),w,b
  1996  00AA94  6EDA               	movwf	fsr2h,c
  1997  00AA96  50DF               	movf	indf2,w,c
  1998  00AA98  6EF5               	movwf	tablat,c	;volatile
  1999  00AA9A  000D               	tblwt		*+	;# 
  2000  00AA9C  0102               	movlb	2	; () banked
  2001  00AA9E  4B1F               	infsnz	writeRegisterToProgram@i& (0+255),f,b
  2002  00AAA0  2B20               	incf	(writeRegisterToProgram@i+1)& (0+255),f,b
  2003                           
  2004                           ; BSR set to: 2
  2005  00AAA2  0102               	movlb	2	; () banked
  2006  00AAA4  BF20               	btfsc	(writeRegisterToProgram@i+1)& (0+255),7,b
  2007  00AAA6  D7ED               	goto	l4709
  2008  00AAA8  0102               	movlb	2	; () banked
  2009  00AAAA  5120               	movf	(writeRegisterToProgram@i+1)& (0+255),w,b
  2010  00AAAC  E101               	bnz	u4260
  2011  00AAAE  D7E4               	goto	L1
  2012  00AAB0                     u4260:
  2013  00AAB0                     l1060:
  2014                           
  2015                           ; BSR set to: 2
  2016                           ;peripherals.c: 136: }
  2017                           ;peripherals.c: 139: EECON1bits.WREN = 1;
  2018  00AAB0  84A6               	bsf	4006,2,c	;volatile
  2019                           
  2020                           ;peripherals.c: 140: INTCONbits.GIE = 0;
  2021  00AAB2  9EF2               	bcf	intcon,7,c	;volatile
  2022                           
  2023                           ; BSR set to: 2
  2024                           ;peripherals.c: 142: EECON2 = 0x55;
  2025  00AAB4  0E55               	movlw	85
  2026  00AAB6  6EA7               	movwf	4007,c	;volatile
  2027                           
  2028                           ;peripherals.c: 143: EECON2 = 0xAA;
  2029  00AAB8  0EAA               	movlw	170
  2030  00AABA  6EA7               	movwf	4007,c	;volatile
  2031                           
  2032                           ; BSR set to: 2
  2033                           ;peripherals.c: 145: EECON1bits.WR = 1;
  2034  00AABC  82A6               	bsf	4006,1,c	;volatile
  2035  00AABE                     l1061:
  2036  00AABE  B2A6               	btfsc	4006,1,c	;volatile
  2037  00AAC0  D7FE               	goto	l1061
  2038                           
  2039                           ;peripherals.c: 147: INTCONbits.GIE = 1;
  2040  00AAC2  8EF2               	bsf	intcon,7,c	;volatile
  2041                           
  2042                           ;peripherals.c: 148: EECON1bits.WREN = 0;
  2043  00AAC4  94A6               	bcf	4006,2,c	;volatile
  2044  00AAC6  0012               	return		;funcret
  2045  00AAC8                     __end_of_writeRegisterToProgram:
  2046                           	opt stack 0
  2047                           tblptru	equ	0xFF8
  2048                           tblptrh	equ	0xFF7
  2049                           tblptrl	equ	0xFF6
  2050                           tablat	equ	0xFF5
  2051                           intcon	equ	0xFF2
  2052                           postinc0	equ	0xFEE
  2053                           wreg	equ	0xFE8
  2054                           indf2	equ	0xFDF
  2055                           fsr2h	equ	0xFDA
  2056                           fsr2l	equ	0xFD9
  2057                           status	equ	0xFD8
  2058                           
  2059 ;; *************** function _UpdatePacketNumber *****************
  2060 ;; Defined at:
  2061 ;;		line 134 in file "mastercomms.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  serialNumber    2   37[BANK2 ] unsigned short 
  2064 ;;  packetNumber    2   39[BANK2 ] short 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  pastPacketNu    2   46[BANK2 ] short 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      unsigned char 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  2076 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2077 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2078 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2079 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;Total ram usage:       11 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    9
  2083 ;; This function calls:
  2084 ;;		_GetLastPacketNumber
  2085 ;;		_SavePacketNumber
  2086 ;; This function is called by:
  2087 ;;		_ProcessMasterComms
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text7
  2092  00A868                     __ptext7:
  2093                           	opt stack 0
  2094  00A868                     _UpdatePacketNumber:
  2095                           	opt stack 20
  2096                           
  2097                           ;mastercomms.c: 135: signed short pastPacketNumberS;
  2098                           ;mastercomms.c: 137: pastPacketNumberS = GetLastPacketNumber(serialNumberUS);
  2099                           
  2100                           ;incstack = 0
  2101  00A868  C226  F21B         	movff	UpdatePacketNumber@serialNumberUS,GetLastPacketNumber@srcSerialUS
  2102  00A86C  C227  F21C         	movff	UpdatePacketNumber@serialNumberUS+1,GetLastPacketNumber@srcSerialUS+1
  2103  00A870  EC81  F056         	call	_GetLastPacketNumber	;wreg free
  2104  00A874  C21B  F22F         	movff	?_GetLastPacketNumber,UpdatePacketNumber@pastPacketNumberS
  2105  00A878  C21C  F230         	movff	?_GetLastPacketNumber+1,UpdatePacketNumber@pastPacketNumberS+1
  2106                           
  2107                           ;mastercomms.c: 138: if((packetNumberS > pastPacketNumberS) ||
  2108                           ;mastercomms.c: 139: (packetNumberS < (pastPacketNumberS - 10)) ||
  2109                           ;mastercomms.c: 140: (pastPacketNumberS == (-10-1))){
  2110  00A87C  0102               	movlb	2	; () banked
  2111  00A87E  5128               	movf	UpdatePacketNumber@packetNumberS& (0+255),w,b
  2112  00A880  0102               	movlb	2	; () banked
  2113  00A882  5D2F               	subwf	UpdatePacketNumber@pastPacketNumberS& (0+255),w,b
  2114  00A884  0102               	movlb	2	; () banked
  2115  00A886  5130               	movf	(UpdatePacketNumber@pastPacketNumberS+1)& (0+255),w,b
  2116  00A888  0A80               	xorlw	128
  2117  00A88A  0102               	movlb	2	; () banked
  2118  00A88C  6F2A               	movwf	??_UpdatePacketNumber& (0+255),b
  2119  00A88E  0102               	movlb	2	; () banked
  2120  00A890  5129               	movf	(UpdatePacketNumber@packetNumberS+1)& (0+255),w,b
  2121  00A892  0A80               	xorlw	128
  2122  00A894  0102               	movlb	2	; () banked
  2123  00A896  592A               	subwfb	??_UpdatePacketNumber& (0+255),w,b
  2124  00A898  A0D8               	btfss	status,0,c
  2125  00A89A  D02A               	goto	l6613
  2126                           
  2127                           ; BSR set to: 2
  2128  00A89C  0EF6               	movlw	246
  2129  00A89E  0102               	movlb	2	; () banked
  2130  00A8A0  6F2A               	movwf	??_UpdatePacketNumber& (0+255),b
  2131  00A8A2  0EFF               	movlw	255
  2132  00A8A4  0102               	movlb	2	; () banked
  2133  00A8A6  6F2B               	movwf	(??_UpdatePacketNumber+1)& (0+255),b
  2134  00A8A8  C22F  F22C         	movff	UpdatePacketNumber@pastPacketNumberS,??_UpdatePacketNumber+2
  2135  00A8AC  C230  F22D         	movff	UpdatePacketNumber@pastPacketNumberS+1,??_UpdatePacketNumber+3
  2136  00A8B0  0102               	movlb	2	; () banked
  2137  00A8B2  512A               	movf	??_UpdatePacketNumber& (0+255),w,b
  2138  00A8B4  0102               	movlb	2	; () banked
  2139  00A8B6  272C               	addwf	(??_UpdatePacketNumber+2)& (0+255),f,b
  2140  00A8B8  0102               	movlb	2	; () banked
  2141  00A8BA  512B               	movf	(??_UpdatePacketNumber+1)& (0+255),w,b
  2142  00A8BC  0102               	movlb	2	; () banked
  2143  00A8BE  232D               	addwfc	(??_UpdatePacketNumber+3)& (0+255),f,b
  2144  00A8C0  0102               	movlb	2	; () banked
  2145  00A8C2  512C               	movf	(??_UpdatePacketNumber+2)& (0+255),w,b
  2146  00A8C4  0102               	movlb	2	; () banked
  2147  00A8C6  5D28               	subwf	UpdatePacketNumber@packetNumberS& (0+255),w,b
  2148  00A8C8  0102               	movlb	2	; () banked
  2149  00A8CA  5129               	movf	(UpdatePacketNumber@packetNumberS+1)& (0+255),w,b
  2150  00A8CC  0A80               	xorlw	128
  2151  00A8CE  0102               	movlb	2	; () banked
  2152  00A8D0  6F2E               	movwf	(??_UpdatePacketNumber+4)& (0+255),b
  2153  00A8D2  0102               	movlb	2	; () banked
  2154  00A8D4  512D               	movf	(??_UpdatePacketNumber+3)& (0+255),w,b
  2155  00A8D6  0A80               	xorlw	128
  2156  00A8D8  0102               	movlb	2	; () banked
  2157  00A8DA  592E               	subwfb	(??_UpdatePacketNumber+4)& (0+255),w,b
  2158  00A8DC  A0D8               	btfss	status,0,c
  2159  00A8DE  D008               	goto	l6613
  2160                           
  2161                           ; BSR set to: 2
  2162  00A8E0  0EF5               	movlw	245
  2163  00A8E2  0102               	movlb	2	; () banked
  2164  00A8E4  192F               	xorwf	UpdatePacketNumber@pastPacketNumberS& (0+255),w,b
  2165  00A8E6  E10E               	bnz	l6619
  2166  00A8E8  0102               	movlb	2	; () banked
  2167  00A8EA  2930               	incf	(UpdatePacketNumber@pastPacketNumberS+1)& (0+255),w,b
  2168  00A8EC  A4D8               	btfss	status,2,c
  2169  00A8EE  D00A               	goto	l6619
  2170  00A8F0                     l6613:
  2171                           
  2172                           ; BSR set to: 2
  2173                           ;mastercomms.c: 141: SavePacketNumber(serialNumberUS, packetNumberS);
  2174  00A8F0  C226  F220         	movff	UpdatePacketNumber@serialNumberUS,SavePacketNumber@srcSerialUS
  2175  00A8F4  C227  F221         	movff	UpdatePacketNumber@serialNumberUS+1,SavePacketNumber@srcSerialUS+1
  2176  00A8F8  C228  F222         	movff	UpdatePacketNumber@packetNumberS,SavePacketNumber@packetNumberUC
  2177  00A8FC  ECDE  F055         	call	_SavePacketNumber	;wreg free
  2178                           
  2179                           ;mastercomms.c: 142: return 1;
  2180  00A900  0E01               	movlw	1
  2181  00A902  0012               	return	
  2182  00A904                     l6619:
  2183                           
  2184                           ;mastercomms.c: 143: }
  2185                           ;mastercomms.c: 144: return 0;
  2186  00A904  0E00               	movlw	0
  2187  00A906  0012               	return	
  2188  00A908                     __end_of_UpdatePacketNumber:
  2189                           	opt stack 0
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           intcon	equ	0xFF2
  2195                           postinc0	equ	0xFEE
  2196                           wreg	equ	0xFE8
  2197                           indf2	equ	0xFDF
  2198                           fsr2h	equ	0xFDA
  2199                           fsr2l	equ	0xFD9
  2200                           status	equ	0xFD8
  2201                           
  2202 ;; *************** function _GetLastPacketNumber *****************
  2203 ;; Defined at:
  2204 ;;		line 262 in file "mastercomms.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  srcSerialUS     2   26[BANK2 ] unsigned short 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  iscCountUC      1   30[BANK2 ] unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  2   26[BANK2 ] short 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  2218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2220 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2221 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2222 ;;Total ram usage:        5 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    7
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_UpdatePacketNumber
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text8
  2233  00AD02                     __ptext8:
  2234                           	opt stack 0
  2235  00AD02                     _GetLastPacketNumber:
  2236                           	opt stack 21
  2237                           
  2238                           ;mastercomms.c: 263: unsigned char iscCountUC;
  2239                           ;mastercomms.c: 265: for(iscCountUC = 0; iscCountUC < 31; iscCountUC++){
  2240                           
  2241                           ;incstack = 0
  2242  00AD02  0E00               	movlw	0
  2243  00AD04  0102               	movlb	2	; () banked
  2244  00AD06  6F1F               	movwf	GetLastPacketNumber@iscCountUC& (0+255),b
  2245  00AD08                     l4675:
  2246                           
  2247                           ; BSR set to: 2
  2248  00AD08  0E1E               	movlw	30
  2249  00AD0A  0102               	movlb	2	; () banked
  2250  00AD0C  651F               	cpfsgt	GetLastPacketNumber@iscCountUC& (0+255),b
  2251  00AD0E  D001               	goto	l4679
  2252  00AD10  D023               	goto	l4689
  2253  00AD12                     l4679:
  2254                           
  2255                           ; BSR set to: 2
  2256                           ;mastercomms.c: 266: if(packetNumbersUSAG[1][iscCountUC] == srcSerialUS)
  2257  00AD12  0102               	movlb	2	; () banked
  2258  00AD14  511F               	movf	GetLastPacketNumber@iscCountUC& (0+255),w,b
  2259  00AD16  0D02               	mullw	2
  2260  00AD18  0EC2               	movlw	low (_packetNumbersUSAG+62)
  2261  00AD1A  24F3               	addwf	prodl,w,c
  2262  00AD1C  6ED9               	movwf	fsr2l,c
  2263  00AD1E  0E05               	movlw	high (_packetNumbersUSAG+62)
  2264  00AD20  20F4               	addwfc	prodh,w,c
  2265  00AD22  6EDA               	movwf	fsr2h,c
  2266  00AD24  0102               	movlb	2	; () banked
  2267  00AD26  511B               	movf	GetLastPacketNumber@srcSerialUS& (0+255),w,b
  2268  00AD28  18DE               	xorwf	postinc2,w,c
  2269  00AD2A  E113               	bnz	l4685
  2270  00AD2C  0102               	movlb	2	; () banked
  2271  00AD2E  511C               	movf	(GetLastPacketNumber@srcSerialUS+1)& (0+255),w,b
  2272  00AD30  18DE               	xorwf	postinc2,w,c
  2273  00AD32  A4D8               	btfss	status,2,c
  2274  00AD34  D00E               	goto	l4685
  2275                           
  2276                           ; BSR set to: 2
  2277                           ;mastercomms.c: 267: return packetNumbersUSAG[0][iscCountUC];
  2278  00AD36  0102               	movlb	2	; () banked
  2279  00AD38  511F               	movf	GetLastPacketNumber@iscCountUC& (0+255),w,b
  2280  00AD3A  0D02               	mullw	2
  2281  00AD3C  0E84               	movlw	low _packetNumbersUSAG
  2282  00AD3E  24F3               	addwf	prodl,w,c
  2283  00AD40  6ED9               	movwf	fsr2l,c
  2284  00AD42  0E05               	movlw	high _packetNumbersUSAG
  2285  00AD44  20F4               	addwfc	prodh,w,c
  2286  00AD46  6EDA               	movwf	fsr2h,c
  2287  00AD48  CFDE F21B          	movff	postinc2,?_GetLastPacketNumber
  2288  00AD4C  CFDD F21C          	movff	postdec2,?_GetLastPacketNumber+1
  2289                           
  2290                           ; BSR set to: 2
  2291  00AD50  0012               	return	
  2292  00AD52                     l4685:
  2293                           
  2294                           ; BSR set to: 2
  2295  00AD52  0102               	movlb	2	; () banked
  2296  00AD54  2B1F               	incf	GetLastPacketNumber@iscCountUC& (0+255),f,b
  2297  00AD56  D7D8               	goto	l4675
  2298  00AD58                     l4689:
  2299                           
  2300                           ; BSR set to: 2
  2301                           ;mastercomms.c: 268: }
  2302                           ;mastercomms.c: 269: return (-10-1);
  2303  00AD58  0EFF               	movlw	255
  2304  00AD5A  0102               	movlb	2	; () banked
  2305  00AD5C  6F1C               	movwf	(?_GetLastPacketNumber+1)& (0+255),b
  2306  00AD5E  0EF5               	movlw	245
  2307  00AD60  6F1B               	movwf	?_GetLastPacketNumber& (0+255),b
  2308  00AD62  0012               	return	
  2309  00AD64                     __end_of_GetLastPacketNumber:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           prodh	equ	0xFF4
  2316                           prodl	equ	0xFF3
  2317                           intcon	equ	0xFF2
  2318                           postinc0	equ	0xFEE
  2319                           wreg	equ	0xFE8
  2320                           indf2	equ	0xFDF
  2321                           postinc2	equ	0xFDE
  2322                           postdec2	equ	0xFDD
  2323                           fsr2h	equ	0xFDA
  2324                           fsr2l	equ	0xFD9
  2325                           status	equ	0xFD8
  2326                           
  2327 ;; *************** function _SetSerialNumber *****************
  2328 ;; Defined at:
  2329 ;;		line 163 in file "mastercomms.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  respSerialUS    2   64[BANK2 ] unsigned short 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  dataBufUSP      2   70[BANK2 ] PTR unsigned short 
  2334 ;;		 -> bufferRXST7540UCAG(75), 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  2344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2345 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2346 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2348 ;;Total ram usage:        8 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:   11
  2351 ;; This function calls:
  2352 ;;		_CreateAndSend
  2353 ;;		_PacketDataST7540
  2354 ;;		_WriteFlashValues
  2355 ;; This function is called by:
  2356 ;;		_ProcessMasterComms
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text9
  2361  009E88                     __ptext9:
  2362                           	opt stack 0
  2363  009E88                     _SetSerialNumber:
  2364                           	opt stack 18
  2365                           
  2366                           ;mastercomms.c: 164: unsigned short *dataBufUSP;
  2367                           ;mastercomms.c: 166: if(iscSerialUSG == 0x3FFE){
  2368                           
  2369                           ; BSR set to: 2
  2370                           ;incstack = 0
  2371  009E88  0EFE               	movlw	254
  2372  009E8A  0102               	movlb	2	; () banked
  2373  009E8C  19A9               	xorwf	_iscSerialUSG& (0+255),w,b
  2374  009E8E  E16A               	bnz	l6769
  2375  009E90  0E3F               	movlw	63
  2376  009E92  0102               	movlb	2	; () banked
  2377  009E94  19AA               	xorwf	(_iscSerialUSG+1)& (0+255),w,b
  2378  009E96  A4D8               	btfss	status,2,c
  2379  009E98  D065               	goto	l6769
  2380                           
  2381                           ; BSR set to: 2
  2382                           ;mastercomms.c: 167: dataBufUSP = (unsigned short *) PacketDataST7540();
  2383  009E9A  ECFC  F05A         	call	_PacketDataST7540	;wreg free
  2384  009E9E  C21B  F247         	movff	?_PacketDataST7540,SetSerialNumber@dataBufUSP
  2385  009EA2  C21C  F248         	movff	?_PacketDataST7540+1,SetSerialNumber@dataBufUSP+1
  2386                           
  2387                           ;mastercomms.c: 168: iscSerialUSG = (dataBufUSP[0] << 8) | (dataBufUSP[0] >> 8);
  2388  009EA6  C247  FFD9         	movff	SetSerialNumber@dataBufUSP,fsr2l
  2389  009EAA  C248  FFDA         	movff	SetSerialNumber@dataBufUSP+1,fsr2h
  2390  009EAE  CFDE F243          	movff	postinc2,??_SetSerialNumber
  2391  009EB2  CFDD F244          	movff	postdec2,??_SetSerialNumber+1
  2392  009EB6  C244  F243         	movff	??_SetSerialNumber+1,??_SetSerialNumber
  2393  009EBA  0102               	movlb	2	; () banked
  2394  009EBC  6B44               	clrf	(??_SetSerialNumber+1)& (0+255),b
  2395  009EBE  C247  FFD9         	movff	SetSerialNumber@dataBufUSP,fsr2l
  2396  009EC2  C248  FFDA         	movff	SetSerialNumber@dataBufUSP+1,fsr2h
  2397  009EC6  CFDE F245          	movff	postinc2,??_SetSerialNumber+2
  2398  009ECA  CFDD F246          	movff	postdec2,??_SetSerialNumber+3
  2399  009ECE  C245  F246         	movff	??_SetSerialNumber+2,??_SetSerialNumber+3
  2400  009ED2  0102               	movlb	2	; () banked
  2401  009ED4  6B45               	clrf	(??_SetSerialNumber+2)& (0+255),b
  2402  009ED6  0102               	movlb	2	; () banked
  2403  009ED8  5143               	movf	??_SetSerialNumber& (0+255),w,b
  2404  009EDA  0102               	movlb	2	; () banked
  2405  009EDC  1145               	iorwf	(??_SetSerialNumber+2)& (0+255),w,b
  2406  009EDE  0102               	movlb	2	; () banked
  2407  009EE0  6FA9               	movwf	_iscSerialUSG& (0+255),b
  2408  009EE2  0102               	movlb	2	; () banked
  2409  009EE4  5144               	movf	(??_SetSerialNumber+1)& (0+255),w,b
  2410  009EE6  0102               	movlb	2	; () banked
  2411  009EE8  1146               	iorwf	(??_SetSerialNumber+3)& (0+255),w,b
  2412  009EEA  0102               	movlb	2	; () banked
  2413  009EEC  6FAA               	movwf	(_iscSerialUSG+1)& (0+255),b
  2414                           
  2415                           ; BSR set to: 2
  2416                           ;mastercomms.c: 169: if(!iscSerialUSG){
  2417  009EEE  0102               	movlb	2	; () banked
  2418  009EF0  51A9               	movf	_iscSerialUSG& (0+255),w,b
  2419  009EF2  0102               	movlb	2	; () banked
  2420  009EF4  11AA               	iorwf	(_iscSerialUSG+1)& (0+255),w,b
  2421  009EF6  A4D8               	btfss	status,2,c
  2422  009EF8  D01C               	goto	l6765
  2423                           
  2424                           ; BSR set to: 2
  2425                           ;mastercomms.c: 170: iscSerialUSG = 0x3FFE;
  2426  009EFA  0E3F               	movlw	63
  2427  009EFC  0102               	movlb	2	; () banked
  2428  009EFE  6FAA               	movwf	(_iscSerialUSG+1)& (0+255),b
  2429  009F00  0EFE               	movlw	254
  2430  009F02  6FA9               	movwf	_iscSerialUSG& (0+255),b
  2431                           
  2432                           ; BSR set to: 2
  2433                           ;mastercomms.c: 171: CreateAndSend(iscSerialUSG, respSerialUS, 0b00001001, 0, 0);
  2434  009F04  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  2435  009F08  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  2436  009F0C  C241  F239         	movff	SetSerialNumber@respSerialUS,CreateAndSend@packetDestUS
  2437  009F10  C242  F23A         	movff	SetSerialNumber@respSerialUS+1,CreateAndSend@packetDestUS+1
  2438  009F14  0E09               	movlw	9
  2439  009F16  0102               	movlb	2	; () banked
  2440  009F18  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  2441  009F1A  0E00               	movlw	0
  2442  009F1C  0102               	movlb	2	; () banked
  2443  009F1E  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  2444  009F20  0E00               	movlw	0
  2445  009F22  0102               	movlb	2	; () banked
  2446  009F24  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  2447  009F26  0E00               	movlw	0
  2448  009F28  0102               	movlb	2	; () banked
  2449  009F2A  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  2450  009F2C  ECA4  F055         	call	_CreateAndSend	;wreg free
  2451                           
  2452                           ;mastercomms.c: 172: return;
  2453  009F30  0012               	return	
  2454  009F32                     l6765:
  2455                           
  2456                           ;mastercomms.c: 173: }
  2457                           ;mastercomms.c: 174: WriteFlashValues();
  2458  009F32  EC1B  F058         	call	_WriteFlashValues	;wreg free
  2459                           
  2460                           ;mastercomms.c: 175: CreateAndSend(iscSerialUSG, respSerialUS, 0b00001001, 2, (char *) &
      +                          iscSerialUSG);
  2461  009F36  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  2462  009F3A  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  2463  009F3E  C241  F239         	movff	SetSerialNumber@respSerialUS,CreateAndSend@packetDestUS
  2464  009F42  C242  F23A         	movff	SetSerialNumber@respSerialUS+1,CreateAndSend@packetDestUS+1
  2465  009F46  0E09               	movlw	9
  2466  009F48  0102               	movlb	2	; () banked
  2467  009F4A  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  2468  009F4C  0E02               	movlw	2
  2469  009F4E  0102               	movlb	2	; () banked
  2470  009F50  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  2471  009F52  0EA9               	movlw	low _iscSerialUSG
  2472  009F54  0102               	movlb	2	; () banked
  2473  009F56  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  2474  009F58  0E02               	movlw	high _iscSerialUSG
  2475  009F5A  0102               	movlb	2	; () banked
  2476  009F5C  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  2477  009F5E  ECA4  F055         	call	_CreateAndSend	;wreg free
  2478                           
  2479                           ;mastercomms.c: 176: }else
  2480  009F62  0012               	return	
  2481  009F64                     l6769:
  2482                           
  2483                           ;mastercomms.c: 177: CreateAndSend(iscSerialUSG, respSerialUS, 0b00001001, 0, 0);
  2484  009F64  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  2485  009F68  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  2486  009F6C  C241  F239         	movff	SetSerialNumber@respSerialUS,CreateAndSend@packetDestUS
  2487  009F70  C242  F23A         	movff	SetSerialNumber@respSerialUS+1,CreateAndSend@packetDestUS+1
  2488  009F74  0E09               	movlw	9
  2489  009F76  0102               	movlb	2	; () banked
  2490  009F78  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  2491  009F7A  0E00               	movlw	0
  2492  009F7C  0102               	movlb	2	; () banked
  2493  009F7E  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  2494  009F80  0E00               	movlw	0
  2495  009F82  0102               	movlb	2	; () banked
  2496  009F84  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  2497  009F86  0E00               	movlw	0
  2498  009F88  0102               	movlb	2	; () banked
  2499  009F8A  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  2500  009F8C  ECA4  F055         	call	_CreateAndSend	;wreg free
  2501  009F90  0012               	return	
  2502  009F92                     __end_of_SetSerialNumber:
  2503                           	opt stack 0
  2504                           tblptru	equ	0xFF8
  2505                           tblptrh	equ	0xFF7
  2506                           tblptrl	equ	0xFF6
  2507                           tablat	equ	0xFF5
  2508                           prodh	equ	0xFF4
  2509                           prodl	equ	0xFF3
  2510                           intcon	equ	0xFF2
  2511                           postinc0	equ	0xFEE
  2512                           wreg	equ	0xFE8
  2513                           indf2	equ	0xFDF
  2514                           postinc2	equ	0xFDE
  2515                           postdec2	equ	0xFDD
  2516                           fsr2h	equ	0xFDA
  2517                           fsr2l	equ	0xFD9
  2518                           status	equ	0xFD8
  2519                           
  2520 ;; *************** function _SetIsolationRelay *****************
  2521 ;; Defined at:
  2522 ;;		line 286 in file "mastercomms.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  relayStateUC    1    wreg     unsigned char 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  relayStateUC    1   26[BANK2 ] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2539 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2540 ;;Total ram usage:        1 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    7
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_ProcessMasterComms
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text10
  2551  00B292                     __ptext10:
  2552                           	opt stack 0
  2553  00B292                     _SetIsolationRelay:
  2554                           	opt stack 22
  2555                           
  2556                           ;incstack = 0
  2557                           ;SetIsolationRelay@relayStateUC stored from wreg
  2558  00B292  0102               	movlb	2	; () banked
  2559  00B294  6F1B               	movwf	SetIsolationRelay@relayStateUC& (0+255),b
  2560                           
  2561                           ;mastercomms.c: 287: __nop();
  2562  00B296  F000               	nop	
  2563                           
  2564                           ;mastercomms.c: 288: if(relayStateUC == 0b00000110){
  2565  00B298  0E06               	movlw	6
  2566  00B29A  0102               	movlb	2	; () banked
  2567  00B29C  191B               	xorwf	SetIsolationRelay@relayStateUC& (0+255),w,b
  2568  00B29E  A4D8               	btfss	status,2,c
  2569  00B2A0  D006               	goto	l5389
  2570                           
  2571                           ; BSR set to: 2
  2572                           ;mastercomms.c: 289: statusFlagsUSLG &= ~0b000000010000000000000000;
  2573  00B2A2  0102               	movlb	2	; () banked
  2574  00B2A4  918C               	bcf	(_statusFlagsUSLG+2)& (0+255),0,b	;volatile
  2575                           
  2576                           ;mastercomms.c: 290: statusFlagsUSLG &= ~0b000100000000000000000000;
  2577  00B2A6  0102               	movlb	2	; () banked
  2578  00B2A8  998C               	bcf	(_statusFlagsUSLG+2)& (0+255),4,b	;volatile
  2579                           
  2580                           ; BSR set to: 2
  2581                           ;mastercomms.c: 291: LATAbits.LATA5 = 1;
  2582  00B2AA  8A89               	bsf	3977,5,c	;volatile
  2583                           
  2584                           ;mastercomms.c: 292: }else if(relayStateUC == 0b00000101){
  2585  00B2AC  0012               	return	
  2586  00B2AE                     l5389:
  2587                           
  2588                           ; BSR set to: 2
  2589  00B2AE  0E05               	movlw	5
  2590  00B2B0  0102               	movlb	2	; () banked
  2591  00B2B2  191B               	xorwf	SetIsolationRelay@relayStateUC& (0+255),w,b
  2592  00B2B4  A4D8               	btfss	status,2,c
  2593  00B2B6  0012               	return	
  2594                           
  2595                           ; BSR set to: 2
  2596                           ;mastercomms.c: 293: statusFlagsUSLG |= 0b000000010000000000000000;
  2597  00B2B8  0102               	movlb	2	; () banked
  2598  00B2BA  818C               	bsf	(_statusFlagsUSLG+2)& (0+255),0,b	;volatile
  2599                           
  2600                           ;mastercomms.c: 294: statusFlagsUSLG |= 0b000100000000000000000000;
  2601  00B2BC  0102               	movlb	2	; () banked
  2602  00B2BE  898C               	bsf	(_statusFlagsUSLG+2)& (0+255),4,b	;volatile
  2603                           
  2604                           ; BSR set to: 2
  2605                           ;mastercomms.c: 295: LATAbits.LATA5 = 0;
  2606  00B2C0  9A89               	bcf	3977,5,c	;volatile
  2607                           
  2608                           ; BSR set to: 2
  2609  00B2C2  0012               	return	
  2610  00B2C4                     __end_of_SetIsolationRelay:
  2611                           	opt stack 0
  2612                           tblptru	equ	0xFF8
  2613                           tblptrh	equ	0xFF7
  2614                           tblptrl	equ	0xFF6
  2615                           tablat	equ	0xFF5
  2616                           prodh	equ	0xFF4
  2617                           prodl	equ	0xFF3
  2618                           intcon	equ	0xFF2
  2619                           postinc0	equ	0xFEE
  2620                           wreg	equ	0xFE8
  2621                           indf2	equ	0xFDF
  2622                           postinc2	equ	0xFDE
  2623                           postdec2	equ	0xFDD
  2624                           fsr2h	equ	0xFDA
  2625                           fsr2l	equ	0xFD9
  2626                           status	equ	0xFD8
  2627                           
  2628 ;; *************** function _ReturnBoosterData *****************
  2629 ;; Defined at:
  2630 ;;		line 299 in file "mastercomms.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  commandValUC    1    wreg     unsigned char 
  2633 ;;  respSerialUS    2   64[BANK2 ] unsigned short 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  commandValUC    1  128[BANK5 ] unsigned char 
  2636 ;;  allRespUSA     62   62[BANK5 ] unsigned short [31]
  2637 ;;  partRespUSA    62    0[BANK5 ] unsigned short [31]
  2638 ;;  windowCompar    2  124[BANK5 ] unsigned short 
  2639 ;;  boosterCount    1  131[BANK5 ] unsigned char 
  2640 ;;  dataValUC       1  130[BANK5 ] unsigned char 
  2641 ;;  wordCountUC     1  129[BANK5 ] unsigned char 
  2642 ;;  respCountUC     1  127[BANK5 ] unsigned char 
  2643 ;;  iscStatusUC     1  126[BANK5 ] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  2653 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2654 ;;      Locals:         0       0       0       0     132       0       0       0       0       0       0       0       
      +0       0
  2655 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Totals:         0      11       0       0     132       0       0       0       0       0       0       0       
      +0       0
  2657 ;;Total ram usage:      143 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:   11
  2660 ;; This function calls:
  2661 ;;		_CreateAndSend
  2662 ;; This function is called by:
  2663 ;;		_ProcessMasterComms
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text11
  2668  0089FC                     __ptext11:
  2669                           	opt stack 0
  2670  0089FC                     _ReturnBoosterData:
  2671                           	opt stack 18
  2672                           
  2673                           ; BSR set to: 2
  2674                           ;incstack = 0
  2675                           ;ReturnBoosterData@commandValUC stored from wreg
  2676  0089FC  0105               	movlb	5	; () banked
  2677  0089FE  6F80               	movwf	ReturnBoosterData@commandValUC& (0+255),b
  2678                           
  2679                           ;mastercomms.c: 300: unsigned char boosterCountUC;
  2680                           ;mastercomms.c: 301: unsigned short allRespUSA[31];
  2681                           ;mastercomms.c: 302: unsigned short partRespUSA[31];
  2682                           ;mastercomms.c: 303: unsigned char iscStatusUC = 0;
  2683  008A00  0E00               	movlw	0
  2684  008A02  0105               	movlb	5	; () banked
  2685  008A04  6F7E               	movwf	ReturnBoosterData@iscStatusUC& (0+255),b
  2686                           
  2687                           ;mastercomms.c: 304: unsigned char wordCountUC;
  2688                           ;mastercomms.c: 305: unsigned char respCountUC;
  2689                           ;mastercomms.c: 306: unsigned char dataValUC;
  2690                           ;mastercomms.c: 307: unsigned short windowCompareUS = 0;
  2691  008A06  0E00               	movlw	0
  2692  008A08  0105               	movlb	5	; () banked
  2693  008A0A  6F7D               	movwf	(ReturnBoosterData@windowCompareUS+1)& (0+255),b
  2694  008A0C  0E00               	movlw	0
  2695  008A0E  6F7C               	movwf	ReturnBoosterData@windowCompareUS& (0+255),b
  2696                           
  2697                           ; BSR set to: 5
  2698                           ;mastercomms.c: 309: __nop();
  2699  008A10  F000               	nop	
  2700                           
  2701                           ;mastercomms.c: 311: if(statusFlagsUSLG & 0b000001000000000000000000){
  2702  008A12  0102               	movlb	2	; () banked
  2703  008A14  A58C               	btfss	(_statusFlagsUSLG+2)& (0+255),2,b	;volatile
  2704  008A16  D021               	goto	l6643
  2705                           
  2706                           ; BSR set to: 2
  2707                           ;mastercomms.c: 312: CreateAndSend(iscSerialUSG, respSerialUS, 0b00001000, 0, 0);
  2708  008A18  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  2709  008A1C  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  2710  008A20  C241  F239         	movff	ReturnBoosterData@respSerialUS,CreateAndSend@packetDestUS
  2711  008A24  C242  F23A         	movff	ReturnBoosterData@respSerialUS+1,CreateAndSend@packetDestUS+1
  2712  008A28  0E08               	movlw	8
  2713  008A2A  0102               	movlb	2	; () banked
  2714  008A2C  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  2715  008A2E  0E00               	movlw	0
  2716  008A30  0102               	movlb	2	; () banked
  2717  008A32  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  2718  008A34  0E00               	movlw	0
  2719  008A36  0102               	movlb	2	; () banked
  2720  008A38  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  2721  008A3A  0E00               	movlw	0
  2722  008A3C  0102               	movlb	2	; () banked
  2723  008A3E  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  2724  008A40  ECA4  F055         	call	_CreateAndSend	;wreg free
  2725                           
  2726                           ;mastercomms.c: 313: return;
  2727  008A44  0012               	return	
  2728  008A46                     l6633:
  2729                           
  2730                           ;mastercomms.c: 318: dataValUC = 0;
  2731  008A46  0E00               	movlw	0
  2732  008A48  D005               	goto	L4
  2733  008A4A                     l6635:
  2734                           
  2735                           ; BSR set to: 5
  2736                           ;mastercomms.c: 321: dataValUC = 1;
  2737  008A4A  0E01               	movlw	1
  2738  008A4C  D003               	goto	L4
  2739  008A4E                     l6637:
  2740                           
  2741                           ; BSR set to: 5
  2742                           ;mastercomms.c: 324: dataValUC = 2;
  2743  008A4E  0E02               	movlw	2
  2744  008A50  D001               	goto	L4
  2745  008A52                     l6639:
  2746                           
  2747                           ; BSR set to: 5
  2748                           ;mastercomms.c: 327: dataValUC = 3;
  2749  008A52  0E03               	movlw	3
  2750  008A54                     L4:
  2751  008A54  0105               	movlb	5	; () banked
  2752  008A56  6F82               	movwf	ReturnBoosterData@dataValUC& (0+255),b
  2753                           
  2754                           ; BSR set to: 5
  2755                           ;mastercomms.c: 329: }
  2756                           
  2757                           ;mastercomms.c: 328: break;
  2758  008A58  D00E               	goto	l6645
  2759  008A5A                     l6643:
  2760  008A5A  0105               	movlb	5	; () banked
  2761  008A5C  5180               	movf	ReturnBoosterData@commandValUC& (0+255),w,b
  2762                           
  2763                           ; Switch size 1, requested type "space"
  2764                           ; Number of cases is 4, Range of values is 0 to 3
  2765                           ; switch strategies available:
  2766                           ; Name         Instructions Cycles
  2767                           ; simple_byte           13     7 (average)
  2768                           ;	Chosen strategy is simple_byte
  2769  008A5E  0A00               	xorlw	0	; case 0
  2770  008A60  B4D8               	btfsc	status,2,c
  2771  008A62  D7F1               	goto	l6633
  2772  008A64  0A01               	xorlw	1	; case 1
  2773  008A66  B4D8               	btfsc	status,2,c
  2774  008A68  D7F0               	goto	l6635
  2775  008A6A  0A03               	xorlw	3	; case 2
  2776  008A6C  B4D8               	btfsc	status,2,c
  2777  008A6E  D7EF               	goto	l6637
  2778  008A70  0A01               	xorlw	1	; case 3
  2779  008A72  B4D8               	btfsc	status,2,c
  2780  008A74  D7EE               	goto	l6639
  2781  008A76                     l6645:
  2782                           
  2783                           ; BSR set to: 5
  2784                           ;mastercomms.c: 331: for(boosterCountUC = 0; boosterCountUC < 31; boosterCountUC++){
  2785  008A76  0E00               	movlw	0
  2786  008A78  0105               	movlb	5	; () banked
  2787  008A7A  6F83               	movwf	ReturnBoosterData@boosterCountUC& (0+255),b
  2788  008A7C                     l6647:
  2789                           
  2790                           ; BSR set to: 5
  2791  008A7C  0E1E               	movlw	30
  2792  008A7E  0105               	movlb	5	; () banked
  2793  008A80  6583               	cpfsgt	ReturnBoosterData@boosterCountUC& (0+255),b
  2794  008A82  D001               	goto	l6651
  2795  008A84  D01D               	goto	l6657
  2796  008A86                     l6651:
  2797                           
  2798                           ; BSR set to: 5
  2799                           ;mastercomms.c: 332: allRespUSA[boosterCountUC] = 0;
  2800  008A86  0105               	movlb	5	; () banked
  2801  008A88  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2802  008A8A  0D02               	mullw	2
  2803  008A8C  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  2804  008A8E  24F3               	addwf	prodl,w,c
  2805  008A90  6ED9               	movwf	fsr2l,c
  2806  008A92  0E05               	movlw	high ReturnBoosterData@allRespUSA
  2807  008A94  20F4               	addwfc	prodh,w,c
  2808  008A96  6EDA               	movwf	fsr2h,c
  2809  008A98  0E00               	movlw	0
  2810  008A9A  6EDE               	movwf	postinc2,c
  2811  008A9C  0E00               	movlw	0
  2812  008A9E  6EDD               	movwf	postdec2,c
  2813                           
  2814                           ;mastercomms.c: 333: partRespUSA[boosterCountUC] = 0;
  2815  008AA0  0105               	movlb	5	; () banked
  2816  008AA2  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2817  008AA4  0D02               	mullw	2
  2818  008AA6  0E00               	movlw	low ReturnBoosterData@partRespUSA
  2819  008AA8  24F3               	addwf	prodl,w,c
  2820  008AAA  6ED9               	movwf	fsr2l,c
  2821  008AAC  0E05               	movlw	high ReturnBoosterData@partRespUSA
  2822  008AAE  20F4               	addwfc	prodh,w,c
  2823  008AB0  6EDA               	movwf	fsr2h,c
  2824  008AB2  0E00               	movlw	0
  2825  008AB4  6EDE               	movwf	postinc2,c
  2826  008AB6  0E00               	movlw	0
  2827  008AB8  6EDD               	movwf	postdec2,c
  2828                           
  2829                           ; BSR set to: 5
  2830  008ABA  0105               	movlb	5	; () banked
  2831  008ABC  2B83               	incf	ReturnBoosterData@boosterCountUC& (0+255),f,b
  2832  008ABE  D7DE               	goto	l6647
  2833  008AC0                     l6657:
  2834                           
  2835                           ; BSR set to: 5
  2836                           ;mastercomms.c: 334: }
  2837                           ;mastercomms.c: 336: allRespUSA[0] = 0b0100000000000000;
  2838  008AC0  0E40               	movlw	64
  2839  008AC2  0105               	movlb	5	; () banked
  2840  008AC4  6F3F               	movwf	(ReturnBoosterData@allRespUSA+1)& (0+255),b
  2841  008AC6  0E00               	movlw	0
  2842  008AC8  6F3E               	movwf	ReturnBoosterData@allRespUSA& (0+255),b
  2843                           
  2844                           ;mastercomms.c: 337: if(dataValUC == 0){
  2845  008ACA  0105               	movlb	5	; () banked
  2846  008ACC  5182               	movf	ReturnBoosterData@dataValUC& (0+255),w,b
  2847  008ACE  0105               	movlb	5	; () banked
  2848  008AD0  A4D8               	btfss	status,2,c
  2849  008AD2  D018               	goto	l6677
  2850                           
  2851                           ; BSR set to: 5
  2852                           ;mastercomms.c: 338: if(statusFlagsUSLG & 0b000000000000000000100000)
  2853  008AD4  0102               	movlb	2	; () banked
  2854  008AD6  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
  2855  008AD8  D002               	goto	l6663
  2856                           
  2857                           ; BSR set to: 2
  2858                           ;mastercomms.c: 339: iscStatusUC |= 0b10000000;
  2859  008ADA  0105               	movlb	5	; () banked
  2860  008ADC  8F7E               	bsf	ReturnBoosterData@iscStatusUC& (0+255),7,b
  2861  008ADE                     l6663:
  2862                           
  2863                           ;mastercomms.c: 340: if(statusFlagsUSLG & 0b000000010000000000000000)
  2864  008ADE  0102               	movlb	2	; () banked
  2865  008AE0  A18C               	btfss	(_statusFlagsUSLG+2)& (0+255),0,b	;volatile
  2866  008AE2  D002               	goto	l6667
  2867                           
  2868                           ; BSR set to: 2
  2869                           ;mastercomms.c: 341: iscStatusUC |= 0b01000000;
  2870  008AE4  0105               	movlb	5	; () banked
  2871  008AE6  8D7E               	bsf	ReturnBoosterData@iscStatusUC& (0+255),6,b
  2872  008AE8                     l6667:
  2873                           
  2874                           ;mastercomms.c: 344: if(statusFlagsUSLG & 0b000000000000000001000000)
  2875  008AE8  0102               	movlb	2	; () banked
  2876  008AEA  AD8A               	btfss	_statusFlagsUSLG& (0+255),6,b	;volatile
  2877  008AEC  D002               	goto	l6671
  2878                           
  2879                           ; BSR set to: 2
  2880                           ;mastercomms.c: 345: iscStatusUC |= 0b00010000;
  2881  008AEE  0105               	movlb	5	; () banked
  2882  008AF0  897E               	bsf	ReturnBoosterData@iscStatusUC& (0+255),4,b
  2883  008AF2                     l6671:
  2884                           
  2885                           ;mastercomms.c: 346: if(statusFlagsUSLG & 0b000000000000000000010000)
  2886  008AF2  0102               	movlb	2	; () banked
  2887  008AF4  A98A               	btfss	_statusFlagsUSLG& (0+255),4,b	;volatile
  2888  008AF6  D002               	goto	l6675
  2889                           
  2890                           ; BSR set to: 2
  2891                           ;mastercomms.c: 347: iscStatusUC |= 0b00001000;
  2892  008AF8  0105               	movlb	5	; () banked
  2893  008AFA  877E               	bsf	ReturnBoosterData@iscStatusUC& (0+255),3,b
  2894  008AFC                     l6675:
  2895                           
  2896                           ;mastercomms.c: 348: allRespUSA[0] |= iscStatusUC;
  2897  008AFC  0105               	movlb	5	; () banked
  2898  008AFE  517E               	movf	ReturnBoosterData@iscStatusUC& (0+255),w,b
  2899  008B00  0105               	movlb	5	; () banked
  2900  008B02  133E               	iorwf	ReturnBoosterData@allRespUSA& (0+255),f,b
  2901  008B04                     l6677:
  2902                           
  2903                           ; BSR set to: 5
  2904                           ;mastercomms.c: 349: }
  2905                           ;mastercomms.c: 351: for(boosterCountUC = 0, wordCountUC = 1; boosterCountUC < 30; boost
      +                          erCountUC++){
  2906  008B04  0E00               	movlw	0
  2907  008B06  0105               	movlb	5	; () banked
  2908  008B08  6F83               	movwf	ReturnBoosterData@boosterCountUC& (0+255),b
  2909                           
  2910                           ; BSR set to: 5
  2911  008B0A  0E01               	movlw	1
  2912  008B0C  0105               	movlb	5	; () banked
  2913  008B0E  6F81               	movwf	ReturnBoosterData@wordCountUC& (0+255),b
  2914  008B10                     l6681:
  2915                           
  2916                           ; BSR set to: 5
  2917  008B10  0E1D               	movlw	29
  2918  008B12  0105               	movlb	5	; () banked
  2919  008B14  6583               	cpfsgt	ReturnBoosterData@boosterCountUC& (0+255),b
  2920  008B16  D001               	goto	l6685
  2921  008B18  D063               	goto	l922
  2922  008B1A                     l6685:
  2923                           
  2924                           ; BSR set to: 5
  2925                           ;mastercomms.c: 352: if(boosterCommsDataSerial[boosterCountUC]){
  2926  008B1A  0105               	movlb	5	; () banked
  2927  008B1C  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2928  008B1E  0D02               	mullw	2
  2929  008B20  0E00               	movlw	low _boosterCommsDataSerial
  2930  008B22  24F3               	addwf	prodl,w,c
  2931  008B24  6ED9               	movwf	fsr2l,c
  2932  008B26  0E03               	movlw	high _boosterCommsDataSerial
  2933  008B28  20F4               	addwfc	prodh,w,c
  2934  008B2A  6EDA               	movwf	fsr2h,c
  2935  008B2C  50DE               	movf	postinc2,w,c
  2936  008B2E  10DE               	iorwf	postinc2,w,c
  2937  008B30  B4D8               	btfsc	status,2,c
  2938  008B32  D053               	goto	l6691
  2939                           
  2940                           ; BSR set to: 5
  2941                           ;mastercomms.c: 353: allRespUSA[wordCountUC++] = 0b0010000000000000 |
  2942                           ;mastercomms.c: 354: ((unsigned short) (boosterCountUC+1) << 8) |
  2943                           ;mastercomms.c: 355: boosterCommsData[dataValUC][boosterCountUC];
  2944  008B34  0E00               	movlw	0
  2945  008B36  0102               	movlb	2	; () banked
  2946  008B38  6F43               	movwf	??_ReturnBoosterData& (0+255),b
  2947  008B3A  0E20               	movlw	32
  2948  008B3C  0102               	movlb	2	; () banked
  2949  008B3E  6F44               	movwf	(??_ReturnBoosterData+1)& (0+255),b
  2950  008B40  0E00               	movlw	0
  2951  008B42  0102               	movlb	2	; () banked
  2952  008B44  6F45               	movwf	(??_ReturnBoosterData+2)& (0+255),b
  2953  008B46  0E01               	movlw	1
  2954  008B48  0102               	movlb	2	; () banked
  2955  008B4A  6F46               	movwf	(??_ReturnBoosterData+3)& (0+255),b
  2956  008B4C  0105               	movlb	5	; () banked
  2957  008B4E  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2958  008B50  0102               	movlb	2	; () banked
  2959  008B52  6F48               	movwf	(??_ReturnBoosterData+5)& (0+255),b
  2960  008B54  6B47               	clrf	(??_ReturnBoosterData+4)& (0+255),b
  2961  008B56  0102               	movlb	2	; () banked
  2962  008B58  5145               	movf	(??_ReturnBoosterData+2)& (0+255),w,b
  2963  008B5A  0102               	movlb	2	; () banked
  2964  008B5C  2747               	addwf	(??_ReturnBoosterData+4)& (0+255),f,b
  2965  008B5E  0102               	movlb	2	; () banked
  2966  008B60  5146               	movf	(??_ReturnBoosterData+3)& (0+255),w,b
  2967  008B62  0102               	movlb	2	; () banked
  2968  008B64  2348               	addwfc	(??_ReturnBoosterData+5)& (0+255),f,b
  2969  008B66  0105               	movlb	5	; () banked
  2970  008B68  5182               	movf	ReturnBoosterData@dataValUC& (0+255),w,b
  2971  008B6A  0D1E               	mullw	30
  2972  008B6C  0E00               	movlw	low _boosterCommsData
  2973  008B6E  0102               	movlb	2	; () banked
  2974  008B70  6F49               	movwf	(??_ReturnBoosterData+6)& (0+255),b
  2975  008B72  0E04               	movlw	high _boosterCommsData
  2976  008B74  0102               	movlb	2	; () banked
  2977  008B76  6F4A               	movwf	(??_ReturnBoosterData+7)& (0+255),b
  2978  008B78  50F3               	movf	prodl,w,c
  2979  008B7A  0102               	movlb	2	; () banked
  2980  008B7C  2749               	addwf	(??_ReturnBoosterData+6)& (0+255),f,b
  2981  008B7E  50F4               	movf	prodh,w,c
  2982  008B80  0102               	movlb	2	; () banked
  2983  008B82  234A               	addwfc	(??_ReturnBoosterData+7)& (0+255),f,b
  2984  008B84  0105               	movlb	5	; () banked
  2985  008B86  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  2986  008B88  0D01               	mullw	1
  2987  008B8A  50F3               	movf	prodl,w,c
  2988  008B8C  0102               	movlb	2	; () banked
  2989  008B8E  2549               	addwf	(??_ReturnBoosterData+6)& (0+255),w,b
  2990  008B90  6ED9               	movwf	fsr2l,c
  2991  008B92  50F4               	movf	prodh,w,c
  2992  008B94  0102               	movlb	2	; () banked
  2993  008B96  214A               	addwfc	(??_ReturnBoosterData+7)& (0+255),w,b
  2994  008B98  6EDA               	movwf	fsr2h,c
  2995  008B9A  50DF               	movf	indf2,w,c
  2996  008B9C  0102               	movlb	2	; () banked
  2997  008B9E  6F4B               	movwf	(??_ReturnBoosterData+8)& (0+255),b
  2998  008BA0  0102               	movlb	2	; () banked
  2999  008BA2  514B               	movf	(??_ReturnBoosterData+8)& (0+255),w,b
  3000  008BA4  0102               	movlb	2	; () banked
  3001  008BA6  1347               	iorwf	(??_ReturnBoosterData+4)& (0+255),f,b
  3002  008BA8  0E00               	movlw	0
  3003  008BAA  1348               	iorwf	(??_ReturnBoosterData+5)& (0+255),f,b
  3004  008BAC  0102               	movlb	2	; () banked
  3005  008BAE  5143               	movf	??_ReturnBoosterData& (0+255),w,b
  3006  008BB0  0102               	movlb	2	; () banked
  3007  008BB2  1347               	iorwf	(??_ReturnBoosterData+4)& (0+255),f,b
  3008  008BB4  0102               	movlb	2	; () banked
  3009  008BB6  5144               	movf	(??_ReturnBoosterData+1)& (0+255),w,b
  3010  008BB8  0102               	movlb	2	; () banked
  3011  008BBA  1348               	iorwf	(??_ReturnBoosterData+5)& (0+255),f,b
  3012  008BBC  0105               	movlb	5	; () banked
  3013  008BBE  5181               	movf	ReturnBoosterData@wordCountUC& (0+255),w,b
  3014  008BC0  0D02               	mullw	2
  3015  008BC2  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  3016  008BC4  24F3               	addwf	prodl,w,c
  3017  008BC6  6ED9               	movwf	fsr2l,c
  3018  008BC8  0E05               	movlw	high ReturnBoosterData@allRespUSA
  3019  008BCA  20F4               	addwfc	prodh,w,c
  3020  008BCC  6EDA               	movwf	fsr2h,c
  3021  008BCE  C247  FFDE         	movff	??_ReturnBoosterData+4,postinc2
  3022  008BD2  C248  FFDD         	movff	??_ReturnBoosterData+5,postdec2
  3023                           
  3024                           ; BSR set to: 5
  3025  008BD6  0105               	movlb	5	; () banked
  3026  008BD8  2B81               	incf	ReturnBoosterData@wordCountUC& (0+255),f,b
  3027  008BDA                     l6691:
  3028                           
  3029                           ; BSR set to: 5
  3030  008BDA  0105               	movlb	5	; () banked
  3031  008BDC  2B83               	incf	ReturnBoosterData@boosterCountUC& (0+255),f,b
  3032  008BDE  D798               	goto	l6681
  3033  008BE0                     l922:
  3034                           
  3035                           ; BSR set to: 5
  3036                           ;mastercomms.c: 356: }
  3037                           ;mastercomms.c: 357: }
  3038                           ;mastercomms.c: 359: __nop();
  3039  008BE0  F000               	nop	
  3040                           
  3041                           ;mastercomms.c: 361: if(masterFlagsUCG & 0b00000100){
  3042  008BE2  0102               	movlb	2	; () banked
  3043  008BE4  A593               	btfss	_masterFlagsUCG& (0+255),2,b
  3044  008BE6  D01A               	goto	l6699
  3045                           
  3046                           ; BSR set to: 2
  3047                           ;mastercomms.c: 362: commandValUC |= 0b01000000;
  3048  008BE8  0105               	movlb	5	; () banked
  3049  008BEA  8D80               	bsf	ReturnBoosterData@commandValUC& (0+255),6,b
  3050                           
  3051                           ; BSR set to: 5
  3052                           ;mastercomms.c: 363: CreateAndSend(iscSerialUSG, respSerialUS, commandValUC, wordCountUC
      +                           * 2, (char *) allRespUSA);
  3053  008BEC  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  3054  008BF0  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  3055  008BF4  C241  F239         	movff	ReturnBoosterData@respSerialUS,CreateAndSend@packetDestUS
  3056  008BF8  C242  F23A         	movff	ReturnBoosterData@respSerialUS+1,CreateAndSend@packetDestUS+1
  3057  008BFC  C580  F23B         	movff	ReturnBoosterData@commandValUC,CreateAndSend@commandUC
  3058  008C00  0105               	movlb	5	; () banked
  3059  008C02  5181               	movf	ReturnBoosterData@wordCountUC& (0+255),w,b
  3060  008C04  0D02               	mullw	2
  3061  008C06  CFF3 F23C          	movff	prodl,CreateAndSend@dataLenUC
  3062  008C0A  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  3063  008C0C  0102               	movlb	2	; () banked
  3064  008C0E  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  3065  008C10  0E05               	movlw	high ReturnBoosterData@allRespUSA
  3066  008C12  0102               	movlb	2	; () banked
  3067  008C14  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  3068  008C16  ECA4  F055         	call	_CreateAndSend	;wreg free
  3069                           
  3070                           ;mastercomms.c: 364: }else{
  3071  008C1A  D0BF               	goto	l6717
  3072  008C1C                     l6699:
  3073                           
  3074                           ;mastercomms.c: 365: if(commandValUC != 0b00000000)
  3075  008C1C  0105               	movlb	5	; () banked
  3076  008C1E  5180               	movf	ReturnBoosterData@commandValUC& (0+255),w,b
  3077  008C20  0105               	movlb	5	; () banked
  3078  008C22  B4D8               	btfsc	status,2,c
  3079  008C24  D005               	goto	l926
  3080                           
  3081                           ; BSR set to: 5
  3082                           ;mastercomms.c: 366: windowCompareUS = 10;
  3083  008C26  0E00               	movlw	0
  3084  008C28  0105               	movlb	5	; () banked
  3085  008C2A  6F7D               	movwf	(ReturnBoosterData@windowCompareUS+1)& (0+255),b
  3086  008C2C  0E0A               	movlw	10
  3087  008C2E  6F7C               	movwf	ReturnBoosterData@windowCompareUS& (0+255),b
  3088  008C30                     l926:
  3089                           
  3090                           ; BSR set to: 5
  3091                           ;mastercomms.c: 367: for(boosterCountUC = 0, respCountUC = 0; boosterCountUC < wordCount
      +                          UC; boosterCountUC++){
  3092  008C30  0E00               	movlw	0
  3093  008C32  0105               	movlb	5	; () banked
  3094  008C34  6F83               	movwf	ReturnBoosterData@boosterCountUC& (0+255),b
  3095  008C36  0E00               	movlw	0
  3096  008C38  0105               	movlb	5	; () banked
  3097  008C3A  6F7F               	movwf	ReturnBoosterData@respCountUC& (0+255),b
  3098  008C3C  D091               	goto	l6713
  3099  008C3E                     l6703:
  3100                           
  3101                           ; BSR set to: 5
  3102                           ;mastercomms.c: 368: if((pastBoosterValuesUSAG[dataValUC][boosterCountUC] < (allRespUSA[
      +                          boosterCountUC] - windowCompareUS)) ||
  3103                           ;mastercomms.c: 369: (pastBoosterValuesUSAG[dataValUC][boosterCountUC] > (allRespUSA[boo
      +                          sterCountUC] + windowCompareUS))){
  3104  008C3E  0105               	movlb	5	; () banked
  3105  008C40  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3106  008C42  0D02               	mullw	2
  3107  008C44  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  3108  008C46  24F3               	addwf	prodl,w,c
  3109  008C48  6ED9               	movwf	fsr2l,c
  3110  008C4A  0E05               	movlw	high ReturnBoosterData@allRespUSA
  3111  008C4C  20F4               	addwfc	prodh,w,c
  3112  008C4E  6EDA               	movwf	fsr2h,c
  3113  008C50  CFDE F243          	movff	postinc2,??_ReturnBoosterData
  3114  008C54  CFDD F244          	movff	postdec2,??_ReturnBoosterData+1
  3115  008C58  C57C  F245         	movff	ReturnBoosterData@windowCompareUS,??_ReturnBoosterData+2
  3116  008C5C  C57D  F246         	movff	ReturnBoosterData@windowCompareUS+1,??_ReturnBoosterData+3
  3117  008C60  0102               	movlb	2	; () banked
  3118  008C62  1F45               	comf	(??_ReturnBoosterData+2)& (0+255),f,b
  3119  008C64  1F46               	comf	(??_ReturnBoosterData+3)& (0+255),f,b
  3120  008C66  4B45               	infsnz	(??_ReturnBoosterData+2)& (0+255),f,b
  3121  008C68  2B46               	incf	(??_ReturnBoosterData+3)& (0+255),f,b
  3122  008C6A  0102               	movlb	2	; () banked
  3123  008C6C  5143               	movf	??_ReturnBoosterData& (0+255),w,b
  3124  008C6E  0102               	movlb	2	; () banked
  3125  008C70  2745               	addwf	(??_ReturnBoosterData+2)& (0+255),f,b
  3126  008C72  0102               	movlb	2	; () banked
  3127  008C74  5144               	movf	(??_ReturnBoosterData+1)& (0+255),w,b
  3128  008C76  0102               	movlb	2	; () banked
  3129  008C78  2346               	addwfc	(??_ReturnBoosterData+3)& (0+255),f,b
  3130  008C7A  0105               	movlb	5	; () banked
  3131  008C7C  5182               	movf	ReturnBoosterData@dataValUC& (0+255),w,b
  3132  008C7E  0D3E               	mullw	62
  3133  008C80  0E00               	movlw	low _pastBoosterValuesUSAG
  3134  008C82  0102               	movlb	2	; () banked
  3135  008C84  6F47               	movwf	(??_ReturnBoosterData+4)& (0+255),b
  3136  008C86  0E06               	movlw	high _pastBoosterValuesUSAG
  3137  008C88  0102               	movlb	2	; () banked
  3138  008C8A  6F48               	movwf	(??_ReturnBoosterData+5)& (0+255),b
  3139  008C8C  50F3               	movf	prodl,w,c
  3140  008C8E  0102               	movlb	2	; () banked
  3141  008C90  2747               	addwf	(??_ReturnBoosterData+4)& (0+255),f,b
  3142  008C92  50F4               	movf	prodh,w,c
  3143  008C94  0102               	movlb	2	; () banked
  3144  008C96  2348               	addwfc	(??_ReturnBoosterData+5)& (0+255),f,b
  3145  008C98  0105               	movlb	5	; () banked
  3146  008C9A  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3147  008C9C  0D02               	mullw	2
  3148  008C9E  50F3               	movf	prodl,w,c
  3149  008CA0  0102               	movlb	2	; () banked
  3150  008CA2  2547               	addwf	(??_ReturnBoosterData+4)& (0+255),w,b
  3151  008CA4  6ED9               	movwf	fsr2l,c
  3152  008CA6  50F4               	movf	prodh,w,c
  3153  008CA8  0102               	movlb	2	; () banked
  3154  008CAA  2148               	addwfc	(??_ReturnBoosterData+5)& (0+255),w,b
  3155  008CAC  6EDA               	movwf	fsr2h,c
  3156  008CAE  0102               	movlb	2	; () banked
  3157  008CB0  5145               	movf	(??_ReturnBoosterData+2)& (0+255),w,b
  3158  008CB2  5CDE               	subwf	postinc2,w,c
  3159  008CB4  0102               	movlb	2	; () banked
  3160  008CB6  5146               	movf	(??_ReturnBoosterData+3)& (0+255),w,b
  3161  008CB8  58DE               	subwfb	postinc2,w,c
  3162  008CBA  A0D8               	btfss	status,0,c
  3163  008CBC  D037               	goto	l6707
  3164                           
  3165                           ; BSR set to: 2
  3166  008CBE  0105               	movlb	5	; () banked
  3167  008CC0  5182               	movf	ReturnBoosterData@dataValUC& (0+255),w,b
  3168  008CC2  0D3E               	mullw	62
  3169  008CC4  0E00               	movlw	low _pastBoosterValuesUSAG
  3170  008CC6  0102               	movlb	2	; () banked
  3171  008CC8  6F43               	movwf	??_ReturnBoosterData& (0+255),b
  3172  008CCA  0E06               	movlw	high _pastBoosterValuesUSAG
  3173  008CCC  0102               	movlb	2	; () banked
  3174  008CCE  6F44               	movwf	(??_ReturnBoosterData+1)& (0+255),b
  3175  008CD0  50F3               	movf	prodl,w,c
  3176  008CD2  0102               	movlb	2	; () banked
  3177  008CD4  2743               	addwf	??_ReturnBoosterData& (0+255),f,b
  3178  008CD6  50F4               	movf	prodh,w,c
  3179  008CD8  0102               	movlb	2	; () banked
  3180  008CDA  2344               	addwfc	(??_ReturnBoosterData+1)& (0+255),f,b
  3181  008CDC  0105               	movlb	5	; () banked
  3182  008CDE  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3183  008CE0  0D02               	mullw	2
  3184  008CE2  50F3               	movf	prodl,w,c
  3185  008CE4  0102               	movlb	2	; () banked
  3186  008CE6  2543               	addwf	??_ReturnBoosterData& (0+255),w,b
  3187  008CE8  6ED9               	movwf	fsr2l,c
  3188  008CEA  50F4               	movf	prodh,w,c
  3189  008CEC  0102               	movlb	2	; () banked
  3190  008CEE  2144               	addwfc	(??_ReturnBoosterData+1)& (0+255),w,b
  3191  008CF0  6EDA               	movwf	fsr2h,c
  3192  008CF2  0105               	movlb	5	; () banked
  3193  008CF4  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3194  008CF6  0D02               	mullw	2
  3195  008CF8  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  3196  008CFA  24F3               	addwf	prodl,w,c
  3197  008CFC  6EE1               	movwf	fsr1l,c
  3198  008CFE  0E05               	movlw	high ReturnBoosterData@allRespUSA
  3199  008D00  20F4               	addwfc	prodh,w,c
  3200  008D02  6EE2               	movwf	fsr1h,c
  3201  008D04  CFE6 F247          	movff	postinc1,??_ReturnBoosterData+4
  3202  008D08  CFE5 F248          	movff	postdec1,??_ReturnBoosterData+5
  3203  008D0C  0105               	movlb	5	; () banked
  3204  008D0E  517C               	movf	ReturnBoosterData@windowCompareUS& (0+255),w,b
  3205  008D10  0102               	movlb	2	; () banked
  3206  008D12  2747               	addwf	(??_ReturnBoosterData+4)& (0+255),f,b
  3207  008D14  0105               	movlb	5	; () banked
  3208  008D16  517D               	movf	(ReturnBoosterData@windowCompareUS+1)& (0+255),w,b
  3209  008D18  0102               	movlb	2	; () banked
  3210  008D1A  2348               	addwfc	(??_ReturnBoosterData+5)& (0+255),f,b
  3211  008D1C  50DE               	movf	postinc2,w,c
  3212  008D1E  0102               	movlb	2	; () banked
  3213  008D20  5D47               	subwf	(??_ReturnBoosterData+4)& (0+255),w,b
  3214  008D22  50DE               	movf	postinc2,w,c
  3215  008D24  0102               	movlb	2	; () banked
  3216  008D26  5948               	subwfb	(??_ReturnBoosterData+5)& (0+255),w,b
  3217  008D28  B0D8               	btfsc	status,0,c
  3218  008D2A  D018               	goto	l6711
  3219  008D2C                     l6707:
  3220                           
  3221                           ; BSR set to: 2
  3222                           ;mastercomms.c: 370: partRespUSA[respCountUC++] = allRespUSA[boosterCountUC];
  3223  008D2C  0105               	movlb	5	; () banked
  3224  008D2E  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3225  008D30  0D02               	mullw	2
  3226  008D32  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  3227  008D34  24F3               	addwf	prodl,w,c
  3228  008D36  6ED9               	movwf	fsr2l,c
  3229  008D38  0E05               	movlw	high ReturnBoosterData@allRespUSA
  3230  008D3A  20F4               	addwfc	prodh,w,c
  3231  008D3C  6EDA               	movwf	fsr2h,c
  3232  008D3E  0105               	movlb	5	; () banked
  3233  008D40  517F               	movf	ReturnBoosterData@respCountUC& (0+255),w,b
  3234  008D42  0D02               	mullw	2
  3235  008D44  0E00               	movlw	low ReturnBoosterData@partRespUSA
  3236  008D46  24F3               	addwf	prodl,w,c
  3237  008D48  6EE1               	movwf	fsr1l,c
  3238  008D4A  0E05               	movlw	high ReturnBoosterData@partRespUSA
  3239  008D4C  20F4               	addwfc	prodh,w,c
  3240  008D4E  6EE2               	movwf	fsr1h,c
  3241  008D50  CFDE FFE6          	movff	postinc2,postinc1
  3242  008D54  CFDD FFE5          	movff	postdec2,postdec1
  3243                           
  3244                           ; BSR set to: 5
  3245  008D58  0105               	movlb	5	; () banked
  3246  008D5A  2B7F               	incf	ReturnBoosterData@respCountUC& (0+255),f,b
  3247  008D5C                     l6711:
  3248  008D5C  0105               	movlb	5	; () banked
  3249  008D5E  2B83               	incf	ReturnBoosterData@boosterCountUC& (0+255),f,b
  3250  008D60                     l6713:
  3251                           
  3252                           ; BSR set to: 5
  3253  008D60  0105               	movlb	5	; () banked
  3254  008D62  5181               	movf	ReturnBoosterData@wordCountUC& (0+255),w,b
  3255  008D64  0105               	movlb	5	; () banked
  3256  008D66  5D83               	subwf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3257  008D68  A0D8               	btfss	status,0,c
  3258  008D6A  D769               	goto	l6703
  3259                           
  3260                           ; BSR set to: 5
  3261                           ;mastercomms.c: 371: }
  3262                           ;mastercomms.c: 372: }
  3263                           ;mastercomms.c: 373: CreateAndSend(iscSerialUSG, respSerialUS, commandValUC, respCountUC
      +                           * 2, (char *) partRespUSA);
  3264                           
  3265                           ; BSR set to: 5
  3266  008D6C  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  3267  008D70  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  3268  008D74  C241  F239         	movff	ReturnBoosterData@respSerialUS,CreateAndSend@packetDestUS
  3269  008D78  C242  F23A         	movff	ReturnBoosterData@respSerialUS+1,CreateAndSend@packetDestUS+1
  3270  008D7C  C580  F23B         	movff	ReturnBoosterData@commandValUC,CreateAndSend@commandUC
  3271  008D80  0105               	movlb	5	; () banked
  3272  008D82  517F               	movf	ReturnBoosterData@respCountUC& (0+255),w,b
  3273  008D84  0D02               	mullw	2
  3274  008D86  CFF3 F23C          	movff	prodl,CreateAndSend@dataLenUC
  3275  008D8A  0E00               	movlw	low ReturnBoosterData@partRespUSA
  3276  008D8C  0102               	movlb	2	; () banked
  3277  008D8E  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  3278  008D90  0E05               	movlw	high ReturnBoosterData@partRespUSA
  3279  008D92  0102               	movlb	2	; () banked
  3280  008D94  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  3281  008D96  ECA4  F055         	call	_CreateAndSend	;wreg free
  3282  008D9A                     l6717:
  3283                           
  3284                           ;mastercomms.c: 374: }
  3285                           ;mastercomms.c: 376: for(boosterCountUC = 0; boosterCountUC < wordCountUC; boosterCountU
      +                          C++)
  3286  008D9A  0E00               	movlw	0
  3287  008D9C  0105               	movlb	5	; () banked
  3288  008D9E  6F83               	movwf	ReturnBoosterData@boosterCountUC& (0+255),b
  3289  008DA0  D029               	goto	l6723
  3290  008DA2                     l6719:
  3291                           
  3292                           ; BSR set to: 5
  3293                           ;mastercomms.c: 377: pastBoosterValuesUSAG[dataValUC][boosterCountUC] = allRespUSA[boost
      +                          erCountUC];
  3294  008DA2  0105               	movlb	5	; () banked
  3295  008DA4  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3296  008DA6  0D02               	mullw	2
  3297  008DA8  0E3E               	movlw	low ReturnBoosterData@allRespUSA
  3298  008DAA  24F3               	addwf	prodl,w,c
  3299  008DAC  6ED9               	movwf	fsr2l,c
  3300  008DAE  0E05               	movlw	high ReturnBoosterData@allRespUSA
  3301  008DB0  20F4               	addwfc	prodh,w,c
  3302  008DB2  6EDA               	movwf	fsr2h,c
  3303  008DB4  0105               	movlb	5	; () banked
  3304  008DB6  5182               	movf	ReturnBoosterData@dataValUC& (0+255),w,b
  3305  008DB8  0D3E               	mullw	62
  3306  008DBA  0E00               	movlw	low _pastBoosterValuesUSAG
  3307  008DBC  0102               	movlb	2	; () banked
  3308  008DBE  6F43               	movwf	??_ReturnBoosterData& (0+255),b
  3309  008DC0  0E06               	movlw	high _pastBoosterValuesUSAG
  3310  008DC2  0102               	movlb	2	; () banked
  3311  008DC4  6F44               	movwf	(??_ReturnBoosterData+1)& (0+255),b
  3312  008DC6  50F3               	movf	prodl,w,c
  3313  008DC8  0102               	movlb	2	; () banked
  3314  008DCA  2743               	addwf	??_ReturnBoosterData& (0+255),f,b
  3315  008DCC  50F4               	movf	prodh,w,c
  3316  008DCE  0102               	movlb	2	; () banked
  3317  008DD0  2344               	addwfc	(??_ReturnBoosterData+1)& (0+255),f,b
  3318  008DD2  0105               	movlb	5	; () banked
  3319  008DD4  5183               	movf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3320  008DD6  0D02               	mullw	2
  3321  008DD8  50F3               	movf	prodl,w,c
  3322  008DDA  0102               	movlb	2	; () banked
  3323  008DDC  2543               	addwf	??_ReturnBoosterData& (0+255),w,b
  3324  008DDE  6EE1               	movwf	fsr1l,c
  3325  008DE0  50F4               	movf	prodh,w,c
  3326  008DE2  0102               	movlb	2	; () banked
  3327  008DE4  2144               	addwfc	(??_ReturnBoosterData+1)& (0+255),w,b
  3328  008DE6  6EE2               	movwf	fsr1h,c
  3329  008DE8  CFDE FFE6          	movff	postinc2,postinc1
  3330  008DEC  CFDD FFE5          	movff	postdec2,postdec1
  3331                           
  3332                           ; BSR set to: 2
  3333  008DF0  0105               	movlb	5	; () banked
  3334  008DF2  2B83               	incf	ReturnBoosterData@boosterCountUC& (0+255),f,b
  3335  008DF4                     l6723:
  3336                           
  3337                           ; BSR set to: 5
  3338  008DF4  0105               	movlb	5	; () banked
  3339  008DF6  5181               	movf	ReturnBoosterData@wordCountUC& (0+255),w,b
  3340  008DF8  0105               	movlb	5	; () banked
  3341  008DFA  5D83               	subwf	ReturnBoosterData@boosterCountUC& (0+255),w,b
  3342  008DFC  B0D8               	btfsc	status,0,c
  3343  008DFE  0012               	return	
  3344  008E00  D7D0               	goto	l6719
  3345  008E02                     __end_of_ReturnBoosterData:
  3346                           	opt stack 0
  3347                           tblptru	equ	0xFF8
  3348                           tblptrh	equ	0xFF7
  3349                           tblptrl	equ	0xFF6
  3350                           tablat	equ	0xFF5
  3351                           prodh	equ	0xFF4
  3352                           prodl	equ	0xFF3
  3353                           intcon	equ	0xFF2
  3354                           postinc0	equ	0xFEE
  3355                           wreg	equ	0xFE8
  3356                           postinc1	equ	0xFE6
  3357                           postdec1	equ	0xFE5
  3358                           fsr1h	equ	0xFE2
  3359                           fsr1l	equ	0xFE1
  3360                           indf2	equ	0xFDF
  3361                           postinc2	equ	0xFDE
  3362                           postdec2	equ	0xFDD
  3363                           fsr2h	equ	0xFDA
  3364                           fsr2l	equ	0xFD9
  3365                           status	equ	0xFD8
  3366                           
  3367 ;; *************** function _RetransmitMessageSt7540 *****************
  3368 ;; Defined at:
  3369 ;;		line 248 in file "ST7540.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  dataBuf         2   58[BANK2 ] PTR unsigned char 
  3374 ;;		 -> bufferRXST7540UCAG(75), 
  3375 ;;  packetDestUS    2   56[BANK2 ] unsigned short 
  3376 ;;  packetSource    2   54[BANK2 ] unsigned short 
  3377 ;;  packetDataLe    1   62[BANK2 ] unsigned char 
  3378 ;;  oldPacketNum    1   61[BANK2 ] unsigned char 
  3379 ;;  commandUC       1   60[BANK2 ] unsigned char 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3390 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3392 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3393 ;;Total ram usage:        9 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:   10
  3396 ;; This function calls:
  3397 ;;		_CreateMessageST7540
  3398 ;;		_LineIdleST7540
  3399 ;;		_PacketDataST7540
  3400 ;;		_PacketReadParamST7540
  3401 ;;		_StartTransmitST7540
  3402 ;;		_TransmitBusyST7540
  3403 ;; This function is called by:
  3404 ;;		_ProcessMasterComms
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text12
  3409  00A908                     __ptext12:
  3410                           	opt stack 0
  3411  00A908                     _RetransmitMessageSt7540:
  3412                           	opt stack 19
  3413                           
  3414                           ;ST7540.c: 249: unsigned short packetSourceUS;
  3415                           ;ST7540.c: 250: unsigned short packetDestUS;
  3416                           ;ST7540.c: 251: unsigned char commandUC;
  3417                           ;ST7540.c: 252: unsigned char oldPacketNumberUC;
  3418                           ;ST7540.c: 254: unsigned char packetDataLenUC;
  3419                           ;ST7540.c: 255: char *dataBuf;
  3420                           ;ST7540.c: 257: oldPacketNumberUC = packetNumberUCG;
  3421                           
  3422                           ;incstack = 0
  3423  00A908  C2A4  F23E         	movff	_packetNumberUCG,RetransmitMessageSt7540@oldPacketNumberUC
  3424                           
  3425                           ;ST7540.c: 259: packetSourceUS = PacketReadParamST7540(1);
  3426  00A90C  0E01               	movlw	1
  3427  00A90E  ECC9  F050         	call	_PacketReadParamST7540
  3428  00A912  C230  F237         	movff	?_PacketReadParamST7540,RetransmitMessageSt7540@packetSourceUS
  3429  00A916  C231  F238         	movff	?_PacketReadParamST7540+1,RetransmitMessageSt7540@packetSourceUS+1
  3430                           
  3431                           ;ST7540.c: 260: packetDestUS = PacketReadParamST7540(2);
  3432  00A91A  0E02               	movlw	2
  3433  00A91C  ECC9  F050         	call	_PacketReadParamST7540
  3434  00A920  C230  F239         	movff	?_PacketReadParamST7540,RetransmitMessageSt7540@packetDestUS
  3435  00A924  C231  F23A         	movff	?_PacketReadParamST7540+1,RetransmitMessageSt7540@packetDestUS+1
  3436                           
  3437                           ;ST7540.c: 261: packetNumberUCG = PacketReadParamST7540(3);
  3438  00A928  0E03               	movlw	3
  3439  00A92A  ECC9  F050         	call	_PacketReadParamST7540
  3440  00A92E  0102               	movlb	2	; () banked
  3441  00A930  5130               	movf	?_PacketReadParamST7540& (0+255),w,b
  3442  00A932  0102               	movlb	2	; () banked
  3443  00A934  6FA4               	movwf	_packetNumberUCG& (0+255),b
  3444                           
  3445                           ;ST7540.c: 262: commandUC = PacketReadParamST7540(4);
  3446  00A936  0E04               	movlw	4
  3447  00A938  ECC9  F050         	call	_PacketReadParamST7540
  3448  00A93C  0102               	movlb	2	; () banked
  3449  00A93E  5130               	movf	?_PacketReadParamST7540& (0+255),w,b
  3450  00A940  0102               	movlb	2	; () banked
  3451  00A942  6F3D               	movwf	RetransmitMessageSt7540@commandUC& (0+255),b
  3452                           
  3453                           ;ST7540.c: 263: packetDataLenUC = PacketReadParamST7540(0);
  3454  00A944  0E00               	movlw	0
  3455  00A946  ECC9  F050         	call	_PacketReadParamST7540
  3456  00A94A  0102               	movlb	2	; () banked
  3457  00A94C  5130               	movf	?_PacketReadParamST7540& (0+255),w,b
  3458  00A94E  0102               	movlb	2	; () banked
  3459  00A950  6F3F               	movwf	RetransmitMessageSt7540@packetDataLenUC& (0+255),b
  3460                           
  3461                           ; BSR set to: 2
  3462                           ;ST7540.c: 264: dataBuf = PacketDataST7540();
  3463  00A952  ECFC  F05A         	call	_PacketDataST7540	;wreg free
  3464  00A956  C21B  F23B         	movff	?_PacketDataST7540,RetransmitMessageSt7540@dataBuf
  3465  00A95A  C21C  F23C         	movff	?_PacketDataST7540+1,RetransmitMessageSt7540@dataBuf+1
  3466                           
  3467                           ;ST7540.c: 266: CreateMessageST7540(packetSourceUS, packetDestUS, commandUC, packetDataL
      +                          enUC, dataBuf);
  3468  00A95E  C237  F228         	movff	RetransmitMessageSt7540@packetSourceUS,CreateMessageST7540@packetSourceUS
  3469  00A962  C238  F229         	movff	RetransmitMessageSt7540@packetSourceUS+1,CreateMessageST7540@packetSourceUS+1
  3470  00A966  C239  F22A         	movff	RetransmitMessageSt7540@packetDestUS,CreateMessageST7540@packetDestUS
  3471  00A96A  C23A  F22B         	movff	RetransmitMessageSt7540@packetDestUS+1,CreateMessageST7540@packetDestUS+1
  3472  00A96E  C23D  F22C         	movff	RetransmitMessageSt7540@commandUC,CreateMessageST7540@commandUC
  3473  00A972  C23F  F22D         	movff	RetransmitMessageSt7540@packetDataLenUC,CreateMessageST7540@dataLenUC
  3474  00A976  C23B  F22E         	movff	RetransmitMessageSt7540@dataBuf,CreateMessageST7540@dataBuf
  3475  00A97A  C23C  F22F         	movff	RetransmitMessageSt7540@dataBuf+1,CreateMessageST7540@dataBuf+1
  3476  00A97E  ECC9  F04F         	call	_CreateMessageST7540	;wreg free
  3477  00A982                     l6597:
  3478  00A982  EC11  F05B         	call	_LineIdleST7540	;wreg free
  3479  00A986  0900               	iorlw	0
  3480  00A988  B4D8               	btfsc	status,2,c
  3481  00A98A  D7FB               	goto	l6597
  3482  00A98C  EC29  F05B         	call	_TransmitBusyST7540	;wreg free
  3483  00A990  0900               	iorlw	0
  3484  00A992  A4D8               	btfss	status,2,c
  3485  00A994  D7F6               	goto	l6597
  3486                           
  3487                           ;ST7540.c: 268: StartTransmitST7540();
  3488  00A996  EC9B  F05A         	call	_StartTransmitST7540	;wreg free
  3489                           
  3490                           ;ST7540.c: 270: packetNumberUCG = oldPacketNumberUC;
  3491  00A99A  C23E  F2A4         	movff	RetransmitMessageSt7540@oldPacketNumberUC,_packetNumberUCG
  3492  00A99E  0012               	return		;funcret
  3493  00A9A0                     __end_of_RetransmitMessageSt7540:
  3494                           	opt stack 0
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           prodh	equ	0xFF4
  3500                           prodl	equ	0xFF3
  3501                           intcon	equ	0xFF2
  3502                           postinc0	equ	0xFEE
  3503                           wreg	equ	0xFE8
  3504                           postinc1	equ	0xFE6
  3505                           postdec1	equ	0xFE5
  3506                           fsr1h	equ	0xFE2
  3507                           fsr1l	equ	0xFE1
  3508                           indf2	equ	0xFDF
  3509                           postinc2	equ	0xFDE
  3510                           postdec2	equ	0xFDD
  3511                           fsr2h	equ	0xFDA
  3512                           fsr2l	equ	0xFD9
  3513                           status	equ	0xFD8
  3514                           
  3515 ;; *************** function _PacketDataST7540 *****************
  3516 ;; Defined at:
  3517 ;;		line 352 in file "ST7540.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  2   26[BANK2 ] PTR unsigned char 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3531 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3534 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;Total ram usage:        2 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    7
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		_RetransmitMessageSt7540
  3542 ;;		_SetSerialNumber
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text13
  3547  00B5F8                     __ptext13:
  3548                           	opt stack 0
  3549  00B5F8                     _PacketDataST7540:
  3550                           	opt stack 21
  3551                           
  3552                           ;ST7540.c: 353: return (bufferRXST7540UCAG + 7);
  3553                           
  3554                           ;incstack = 0
  3555  00B5F8  0EA2               	movlw	low (_bufferRXST7540UCAG+7)
  3556  00B5FA  0102               	movlb	2	; () banked
  3557  00B5FC  6F1B               	movwf	?_PacketDataST7540& (0+255),b
  3558  00B5FE  0E03               	movlw	high (_bufferRXST7540UCAG+7)
  3559  00B600  0102               	movlb	2	; () banked
  3560  00B602  6F1C               	movwf	(?_PacketDataST7540+1)& (0+255),b
  3561  00B604  0012               	return	
  3562  00B606                     __end_of_PacketDataST7540:
  3563                           	opt stack 0
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           prodh	equ	0xFF4
  3569                           prodl	equ	0xFF3
  3570                           intcon	equ	0xFF2
  3571                           postinc0	equ	0xFEE
  3572                           wreg	equ	0xFE8
  3573                           postinc1	equ	0xFE6
  3574                           postdec1	equ	0xFE5
  3575                           fsr1h	equ	0xFE2
  3576                           fsr1l	equ	0xFE1
  3577                           indf2	equ	0xFDF
  3578                           postinc2	equ	0xFDE
  3579                           postdec2	equ	0xFDD
  3580                           fsr2h	equ	0xFDA
  3581                           fsr2l	equ	0xFD9
  3582                           status	equ	0xFD8
  3583                           
  3584 ;; *************** function _ReceiveNewDataST7540 *****************
  3585 ;; Defined at:
  3586 ;;		line 315 in file "ST7540.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  discardUC       1   26[BANK2 ] unsigned char 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3601 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3603 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3604 ;;Total ram usage:        1 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    7
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_ProcessMasterComms
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text14
  3615  00B56C                     __ptext14:
  3616                           	opt stack 0
  3617  00B56C                     _ReceiveNewDataST7540:
  3618                           	opt stack 22
  3619                           
  3620                           ;ST7540.c: 316: unsigned char discardUC;
  3621                           ;ST7540.c: 318: flagST7540UCG |= 2;
  3622                           
  3623                           ; BSR set to: 2
  3624                           ;incstack = 0
  3625  00B56C  0102               	movlb	2	; () banked
  3626  00B56E  83A8               	bsf	_flagST7540UCG& (0+255),1,b
  3627                           
  3628                           ;ST7540.c: 319: flagST7540UCG &= ~4;
  3629  00B570  0102               	movlb	2	; () banked
  3630  00B572  95A8               	bcf	_flagST7540UCG& (0+255),2,b
  3631                           
  3632                           ; BSR set to: 2
  3633                           ;ST7540.c: 320: discardUC = SSP2BUF;
  3634  00B574  CF75 F21B          	movff	3957,ReceiveNewDataST7540@discardUC	;volatile
  3635                           
  3636                           ; BSR set to: 2
  3637                           ;ST7540.c: 321: SSP2BUF = 0;
  3638  00B578  0E00               	movlw	0
  3639  00B57A  6E75               	movwf	3957,c	;volatile
  3640                           
  3641                           ; BSR set to: 2
  3642                           ;ST7540.c: 322: bufferRXNextUCG = 0;
  3643  00B57C  0E00               	movlw	0
  3644  00B57E  0102               	movlb	2	; () banked
  3645  00B580  6FA5               	movwf	_bufferRXNextUCG& (0+255),b
  3646                           
  3647                           ; BSR set to: 2
  3648  00B582  0012               	return		;funcret
  3649  00B584                     __end_of_ReceiveNewDataST7540:
  3650                           	opt stack 0
  3651                           tblptru	equ	0xFF8
  3652                           tblptrh	equ	0xFF7
  3653                           tblptrl	equ	0xFF6
  3654                           tablat	equ	0xFF5
  3655                           prodh	equ	0xFF4
  3656                           prodl	equ	0xFF3
  3657                           intcon	equ	0xFF2
  3658                           postinc0	equ	0xFEE
  3659                           wreg	equ	0xFE8
  3660                           postinc1	equ	0xFE6
  3661                           postdec1	equ	0xFE5
  3662                           fsr1h	equ	0xFE2
  3663                           fsr1l	equ	0xFE1
  3664                           indf2	equ	0xFDF
  3665                           postinc2	equ	0xFDE
  3666                           postdec2	equ	0xFDD
  3667                           fsr2h	equ	0xFDA
  3668                           fsr2l	equ	0xFD9
  3669                           status	equ	0xFD8
  3670                           
  3671 ;; *************** function _ProcessSerialCMD *****************
  3672 ;; Defined at:
  3673 ;;		line 395 in file "mastercomms.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  respSerialUS    2   64[BANK2 ] unsigned short 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  serialListUS   60   68[BANK2 ] unsigned short [30]
  3678 ;;  boosterCount    1  129[BANK2 ] unsigned char 
  3679 ;;  boosterIndex    1  128[BANK2 ] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3689 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3690 ;;      Locals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3691 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3692 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3693 ;;Total ram usage:       66 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:   11
  3696 ;; This function calls:
  3697 ;;		_CreateAndSend
  3698 ;; This function is called by:
  3699 ;;		_ProcessMasterComms
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text15
  3704  00A432                     __ptext15:
  3705                           	opt stack 0
  3706  00A432                     _ProcessSerialCMD:
  3707                           	opt stack 18
  3708                           
  3709                           ;mastercomms.c: 396: unsigned short serialListUSA[30];
  3710                           ;mastercomms.c: 397: unsigned char boosterCountUC;
  3711                           ;mastercomms.c: 398: unsigned char boosterIndexUC;
  3712                           ;mastercomms.c: 400: if(statusFlagsUSLG & 0b000000100000000000000000)
  3713                           
  3714                           ; BSR set to: 2
  3715                           ;incstack = 0
  3716  00A432  0102               	movlb	2	; () banked
  3717  00A434  A38C               	btfss	(_statusFlagsUSLG+2)& (0+255),1,b	;volatile
  3718  00A436  D016               	goto	l6729
  3719                           
  3720                           ; BSR set to: 2
  3721                           ;mastercomms.c: 401: CreateAndSend(iscSerialUSG, respSerialUS, 0b00001111, 0, 0);
  3722  00A438  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  3723  00A43C  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  3724  00A440  C241  F239         	movff	ProcessSerialCMD@respSerialUS,CreateAndSend@packetDestUS
  3725  00A444  C242  F23A         	movff	ProcessSerialCMD@respSerialUS+1,CreateAndSend@packetDestUS+1
  3726  00A448  0E0F               	movlw	15
  3727  00A44A  0102               	movlb	2	; () banked
  3728  00A44C  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  3729  00A44E  0E00               	movlw	0
  3730  00A450  0102               	movlb	2	; () banked
  3731  00A452  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  3732  00A454  0E00               	movlw	0
  3733  00A456  0102               	movlb	2	; () banked
  3734  00A458  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  3735  00A45A  0E00               	movlw	0
  3736  00A45C  0102               	movlb	2	; () banked
  3737  00A45E  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  3738  00A460  ECA4  F055         	call	_CreateAndSend	;wreg free
  3739  00A464                     l6729:
  3740                           
  3741                           ;mastercomms.c: 403: for(boosterCountUC = 0, boosterIndexUC = 0; boosterCountUC < 30; bo
      +                          osterCountUC++){
  3742  00A464  0E00               	movlw	0
  3743  00A466  0102               	movlb	2	; () banked
  3744  00A468  6F82               	movwf	ProcessSerialCMD@boosterCountUC& (0+255),b
  3745                           
  3746                           ; BSR set to: 2
  3747  00A46A  0E00               	movlw	0
  3748  00A46C  0102               	movlb	2	; () banked
  3749  00A46E  6F81               	movwf	ProcessSerialCMD@boosterIndexUC& (0+255),b
  3750  00A470                     l6733:
  3751                           
  3752                           ; BSR set to: 2
  3753  00A470  0E1D               	movlw	29
  3754  00A472  0102               	movlb	2	; () banked
  3755  00A474  6582               	cpfsgt	ProcessSerialCMD@boosterCountUC& (0+255),b
  3756  00A476  D001               	goto	l6737
  3757  00A478  D028               	goto	l6747
  3758  00A47A                     l6737:
  3759                           
  3760                           ; BSR set to: 2
  3761                           ;mastercomms.c: 404: if(boosterCommsDataSerial[boosterCountUC])
  3762  00A47A  0102               	movlb	2	; () banked
  3763  00A47C  5182               	movf	ProcessSerialCMD@boosterCountUC& (0+255),w,b
  3764  00A47E  0D02               	mullw	2
  3765  00A480  0E00               	movlw	low _boosterCommsDataSerial
  3766  00A482  24F3               	addwf	prodl,w,c
  3767  00A484  6ED9               	movwf	fsr2l,c
  3768  00A486  0E03               	movlw	high _boosterCommsDataSerial
  3769  00A488  20F4               	addwfc	prodh,w,c
  3770  00A48A  6EDA               	movwf	fsr2h,c
  3771  00A48C  50DE               	movf	postinc2,w,c
  3772  00A48E  10DE               	iorwf	postinc2,w,c
  3773  00A490  B4D8               	btfsc	status,2,c
  3774  00A492  D018               	goto	l6743
  3775                           
  3776                           ; BSR set to: 2
  3777                           ;mastercomms.c: 405: serialListUSA[boosterIndexUC++] = boosterCommsDataSerial[boosterCou
      +                          ntUC];
  3778  00A494  0102               	movlb	2	; () banked
  3779  00A496  5182               	movf	ProcessSerialCMD@boosterCountUC& (0+255),w,b
  3780  00A498  0D02               	mullw	2
  3781  00A49A  0E00               	movlw	low _boosterCommsDataSerial
  3782  00A49C  24F3               	addwf	prodl,w,c
  3783  00A49E  6ED9               	movwf	fsr2l,c
  3784  00A4A0  0E03               	movlw	high _boosterCommsDataSerial
  3785  00A4A2  20F4               	addwfc	prodh,w,c
  3786  00A4A4  6EDA               	movwf	fsr2h,c
  3787  00A4A6  0102               	movlb	2	; () banked
  3788  00A4A8  5181               	movf	ProcessSerialCMD@boosterIndexUC& (0+255),w,b
  3789  00A4AA  0D02               	mullw	2
  3790  00A4AC  0E45               	movlw	low ProcessSerialCMD@serialListUSA
  3791  00A4AE  24F3               	addwf	prodl,w,c
  3792  00A4B0  6EE1               	movwf	fsr1l,c
  3793  00A4B2  0E02               	movlw	high ProcessSerialCMD@serialListUSA
  3794  00A4B4  20F4               	addwfc	prodh,w,c
  3795  00A4B6  6EE2               	movwf	fsr1h,c
  3796  00A4B8  CFDE FFE6          	movff	postinc2,postinc1
  3797  00A4BC  CFDD FFE5          	movff	postdec2,postdec1
  3798                           
  3799                           ; BSR set to: 2
  3800  00A4C0  0102               	movlb	2	; () banked
  3801  00A4C2  2B81               	incf	ProcessSerialCMD@boosterIndexUC& (0+255),f,b
  3802  00A4C4                     l6743:
  3803                           
  3804                           ; BSR set to: 2
  3805  00A4C4  0102               	movlb	2	; () banked
  3806  00A4C6  2B82               	incf	ProcessSerialCMD@boosterCountUC& (0+255),f,b
  3807  00A4C8  D7D3               	goto	l6733
  3808  00A4CA                     l6747:
  3809                           
  3810                           ; BSR set to: 2
  3811                           ;mastercomms.c: 406: }
  3812                           ;mastercomms.c: 407: statusFlagsUSLG &= ~0b000001000000000000000000;
  3813  00A4CA  0102               	movlb	2	; () banked
  3814  00A4CC  958C               	bcf	(_statusFlagsUSLG+2)& (0+255),2,b	;volatile
  3815                           
  3816                           ; BSR set to: 2
  3817                           ;mastercomms.c: 408: CreateAndSend(iscSerialUSG, respSerialUS, 0b00000111, boosterIndexU
      +                          C * 2, (char *) serialListUSA);
  3818  00A4CE  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  3819  00A4D2  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  3820  00A4D6  C241  F239         	movff	ProcessSerialCMD@respSerialUS,CreateAndSend@packetDestUS
  3821  00A4DA  C242  F23A         	movff	ProcessSerialCMD@respSerialUS+1,CreateAndSend@packetDestUS+1
  3822  00A4DE  0E07               	movlw	7
  3823  00A4E0  0102               	movlb	2	; () banked
  3824  00A4E2  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  3825  00A4E4  0102               	movlb	2	; () banked
  3826  00A4E6  5181               	movf	ProcessSerialCMD@boosterIndexUC& (0+255),w,b
  3827  00A4E8  0D02               	mullw	2
  3828  00A4EA  CFF3 F23C          	movff	prodl,CreateAndSend@dataLenUC
  3829  00A4EE  0E45               	movlw	low ProcessSerialCMD@serialListUSA
  3830  00A4F0  0102               	movlb	2	; () banked
  3831  00A4F2  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  3832  00A4F4  0E02               	movlw	high ProcessSerialCMD@serialListUSA
  3833  00A4F6  0102               	movlb	2	; () banked
  3834  00A4F8  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  3835  00A4FA  ECA4  F055         	call	_CreateAndSend	;wreg free
  3836  00A4FE  0012               	return		;funcret
  3837  00A500                     __end_of_ProcessSerialCMD:
  3838                           	opt stack 0
  3839                           tblptru	equ	0xFF8
  3840                           tblptrh	equ	0xFF7
  3841                           tblptrl	equ	0xFF6
  3842                           tablat	equ	0xFF5
  3843                           prodh	equ	0xFF4
  3844                           prodl	equ	0xFF3
  3845                           intcon	equ	0xFF2
  3846                           postinc0	equ	0xFEE
  3847                           wreg	equ	0xFE8
  3848                           postinc1	equ	0xFE6
  3849                           postdec1	equ	0xFE5
  3850                           fsr1h	equ	0xFE2
  3851                           fsr1l	equ	0xFE1
  3852                           indf2	equ	0xFDF
  3853                           postinc2	equ	0xFDE
  3854                           postdec2	equ	0xFDD
  3855                           fsr2h	equ	0xFDA
  3856                           fsr2l	equ	0xFD9
  3857                           status	equ	0xFD8
  3858                           
  3859 ;; *************** function _ProcessPingCMD *****************
  3860 ;; Defined at:
  3861 ;;		line 411 in file "mastercomms.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  respSerialUS    2   64[BANK2 ] unsigned short 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3878 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3879 ;;Total ram usage:        2 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:   11
  3882 ;; This function calls:
  3883 ;;		_CreateAndSend
  3884 ;; This function is called by:
  3885 ;;		_ProcessMasterComms
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text16
  3890  00B386                     __ptext16:
  3891                           	opt stack 0
  3892  00B386                     _ProcessPingCMD:
  3893                           	opt stack 18
  3894                           
  3895                           ;mastercomms.c: 412: CreateAndSend(iscSerialUSG, respSerialUS, 0b00101001, 0, 0);
  3896                           
  3897                           ;incstack = 0
  3898  00B386  C2A9  F237         	movff	_iscSerialUSG,CreateAndSend@packetSourceUS
  3899  00B38A  C2AA  F238         	movff	_iscSerialUSG+1,CreateAndSend@packetSourceUS+1
  3900  00B38E  C241  F239         	movff	ProcessPingCMD@respSerialUS,CreateAndSend@packetDestUS
  3901  00B392  C242  F23A         	movff	ProcessPingCMD@respSerialUS+1,CreateAndSend@packetDestUS+1
  3902  00B396  0E29               	movlw	41
  3903  00B398  0102               	movlb	2	; () banked
  3904  00B39A  6F3B               	movwf	CreateAndSend@commandUC& (0+255),b
  3905  00B39C  0E00               	movlw	0
  3906  00B39E  0102               	movlb	2	; () banked
  3907  00B3A0  6F3C               	movwf	CreateAndSend@dataLenUC& (0+255),b
  3908  00B3A2  0E00               	movlw	0
  3909  00B3A4  0102               	movlb	2	; () banked
  3910  00B3A6  6F3D               	movwf	CreateAndSend@dataBuf& (0+255),b
  3911  00B3A8  0E00               	movlw	0
  3912  00B3AA  0102               	movlb	2	; () banked
  3913  00B3AC  6F3E               	movwf	(CreateAndSend@dataBuf+1)& (0+255),b
  3914  00B3AE  ECA4  F055         	call	_CreateAndSend	;wreg free
  3915  00B3B2  0012               	return		;funcret
  3916  00B3B4                     __end_of_ProcessPingCMD:
  3917                           	opt stack 0
  3918                           tblptru	equ	0xFF8
  3919                           tblptrh	equ	0xFF7
  3920                           tblptrl	equ	0xFF6
  3921                           tablat	equ	0xFF5
  3922                           prodh	equ	0xFF4
  3923                           prodl	equ	0xFF3
  3924                           intcon	equ	0xFF2
  3925                           postinc0	equ	0xFEE
  3926                           wreg	equ	0xFE8
  3927                           postinc1	equ	0xFE6
  3928                           postdec1	equ	0xFE5
  3929                           fsr1h	equ	0xFE2
  3930                           fsr1l	equ	0xFE1
  3931                           indf2	equ	0xFDF
  3932                           postinc2	equ	0xFDE
  3933                           postdec2	equ	0xFDD
  3934                           fsr2h	equ	0xFDA
  3935                           fsr2l	equ	0xFD9
  3936                           status	equ	0xFD8
  3937                           
  3938 ;; *************** function _CreateAndSend *****************
  3939 ;; Defined at:
  3940 ;;		line 380 in file "mastercomms.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  packetSource    2   54[BANK2 ] unsigned short 
  3943 ;;  packetDestUS    2   56[BANK2 ] unsigned short 
  3944 ;;  commandUC       1   58[BANK2 ] unsigned char 
  3945 ;;  dataLenUC       1   59[BANK2 ] unsigned char 
  3946 ;;  dataBuf         2   60[BANK2 ] PTR unsigned char 
  3947 ;;		 -> ProcessSerialCMD@serialListUSA(60), ReturnBoosterData@partRespUSA(62), ReturnBoosterData@allRespUSA(62), NULL(0)
      +, 
  3948 ;;		 -> iscSerialUSG(2), 
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  nextPacketNu    2   62[BANK2 ] unsigned short 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  3960 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3963 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3964 ;;Total ram usage:       10 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:   10
  3967 ;; This function calls:
  3968 ;;		_CollisionCheck
  3969 ;;		_CreateMessageST7540
  3970 ;;		_LineIdleST7540
  3971 ;;		_PacketReadParamST7540
  3972 ;;		_SavePacketNumber
  3973 ;;		_StartTransmitST7540
  3974 ;;		_TransmitBusyST7540
  3975 ;; This function is called by:
  3976 ;;		_ProcessMasterComms
  3977 ;;		_SetSerialNumber
  3978 ;;		_ReturnBoosterData
  3979 ;;		_ProcessSerialCMD
  3980 ;;		_ProcessPingCMD
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text17
  3985  00AB48                     __ptext17:
  3986                           	opt stack 0
  3987  00AB48                     _CreateAndSend:
  3988                           	opt stack 18
  3989                           
  3990                           ;mastercomms.c: 381: unsigned short nextPacketNumberUS;
  3991                           ;mastercomms.c: 383: if(masterFlagsUCG & 0b00000001)
  3992                           
  3993                           ;incstack = 0
  3994  00AB48  0102               	movlb	2	; () banked
  3995  00AB4A  A193               	btfss	_masterFlagsUCG& (0+255),0,b
  3996  00AB4C  D002               	goto	l6537
  3997                           
  3998                           ; BSR set to: 2
  3999                           ;mastercomms.c: 384: commandUC |= 0b10000000;
  4000  00AB4E  0102               	movlb	2	; () banked
  4001  00AB50  8F3B               	bsf	CreateAndSend@commandUC& (0+255),7,b
  4002  00AB52                     l6537:
  4003                           
  4004                           ; BSR set to: 2
  4005                           ;mastercomms.c: 385: CreateMessageST7540(packetSourceUS, packetDestUS, commandUC, dataLe
      +                          nUC, dataBuf);
  4006  00AB52  C237  F228         	movff	CreateAndSend@packetSourceUS,CreateMessageST7540@packetSourceUS
  4007  00AB56  C238  F229         	movff	CreateAndSend@packetSourceUS+1,CreateMessageST7540@packetSourceUS+1
  4008  00AB5A  C239  F22A         	movff	CreateAndSend@packetDestUS,CreateMessageST7540@packetDestUS
  4009  00AB5E  C23A  F22B         	movff	CreateAndSend@packetDestUS+1,CreateMessageST7540@packetDestUS+1
  4010  00AB62  C23B  F22C         	movff	CreateAndSend@commandUC,CreateMessageST7540@commandUC
  4011  00AB66  C23C  F22D         	movff	CreateAndSend@dataLenUC,CreateMessageST7540@dataLenUC
  4012  00AB6A  C23D  F22E         	movff	CreateAndSend@dataBuf,CreateMessageST7540@dataBuf
  4013  00AB6E  C23E  F22F         	movff	CreateAndSend@dataBuf+1,CreateMessageST7540@dataBuf+1
  4014  00AB72  ECC9  F04F         	call	_CreateMessageST7540	;wreg free
  4015                           
  4016                           ;mastercomms.c: 386: nextPacketNumberUS = PacketReadParamST7540(6);
  4017  00AB76  0E06               	movlw	6
  4018  00AB78  ECC9  F050         	call	_PacketReadParamST7540
  4019  00AB7C  C230  F23F         	movff	?_PacketReadParamST7540,CreateAndSend@nextPacketNumberUS
  4020  00AB80  C231  F240         	movff	?_PacketReadParamST7540+1,CreateAndSend@nextPacketNumberUS+1
  4021                           
  4022                           ;mastercomms.c: 387: SavePacketNumber(packetSourceUS, nextPacketNumberUS);
  4023  00AB84  C237  F220         	movff	CreateAndSend@packetSourceUS,SavePacketNumber@srcSerialUS
  4024  00AB88  C238  F221         	movff	CreateAndSend@packetSourceUS+1,SavePacketNumber@srcSerialUS+1
  4025  00AB8C  C23F  F222         	movff	CreateAndSend@nextPacketNumberUS,SavePacketNumber@packetNumberUC
  4026  00AB90  ECDE  F055         	call	_SavePacketNumber	;wreg free
  4027                           
  4028                           ;mastercomms.c: 388: if(!(masterFlagsUCG & 0b00000010) ||
  4029                           ;mastercomms.c: 389: (masterFlagsUCG & 0b00000001))
  4030  00AB94  0102               	movlb	2	; () banked
  4031  00AB96  A393               	btfss	_masterFlagsUCG& (0+255),1,b
  4032  00AB98  D002               	goto	l6547
  4033                           
  4034                           ; BSR set to: 2
  4035  00AB9A  0102               	movlb	2	; () banked
  4036  00AB9C  B193               	btfsc	_masterFlagsUCG& (0+255),0,b
  4037  00AB9E                     l6547:
  4038                           
  4039                           ; BSR set to: 2
  4040                           ;mastercomms.c: 390: CollisionCheck();
  4041  00AB9E  ECF7  F058         	call	_CollisionCheck	;wreg free
  4042  00ABA2                     l6549:
  4043  00ABA2  EC11  F05B         	call	_LineIdleST7540	;wreg free
  4044  00ABA6  0900               	iorlw	0
  4045  00ABA8  B4D8               	btfsc	status,2,c
  4046  00ABAA  D7FB               	goto	l6549
  4047  00ABAC  EC29  F05B         	call	_TransmitBusyST7540	;wreg free
  4048  00ABB0  0900               	iorlw	0
  4049  00ABB2  A4D8               	btfss	status,2,c
  4050  00ABB4  D7F6               	goto	l6549
  4051                           
  4052                           ;mastercomms.c: 392: StartTransmitST7540();
  4053  00ABB6  EC9B  F05A         	call	_StartTransmitST7540	;wreg free
  4054  00ABBA  0012               	return		;funcret
  4055  00ABBC                     __end_of_CreateAndSend:
  4056                           	opt stack 0
  4057                           tblptru	equ	0xFF8
  4058                           tblptrh	equ	0xFF7
  4059                           tblptrl	equ	0xFF6
  4060                           tablat	equ	0xFF5
  4061                           prodh	equ	0xFF4
  4062                           prodl	equ	0xFF3
  4063                           intcon	equ	0xFF2
  4064                           postinc0	equ	0xFEE
  4065                           wreg	equ	0xFE8
  4066                           postinc1	equ	0xFE6
  4067                           postdec1	equ	0xFE5
  4068                           fsr1h	equ	0xFE2
  4069                           fsr1l	equ	0xFE1
  4070                           indf2	equ	0xFDF
  4071                           postinc2	equ	0xFDE
  4072                           postdec2	equ	0xFDD
  4073                           fsr2h	equ	0xFDA
  4074                           fsr2l	equ	0xFD9
  4075                           status	equ	0xFD8
  4076                           
  4077 ;; *************** function _TransmitBusyST7540 *****************
  4078 ;; Defined at:
  4079 ;;		line 311 in file "ST7540.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      unsigned char 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    7
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_RetransmitMessageSt7540
  4104 ;;		_CreateAndSend
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text18
  4109  00B652                     __ptext18:
  4110                           	opt stack 0
  4111  00B652                     _TransmitBusyST7540:
  4112                           	opt stack 20
  4113                           
  4114                           ;ST7540.c: 312: return (flagST7540UCG & 1);
  4115                           
  4116                           ;incstack = 0
  4117  00B652  0102               	movlb	2	; () banked
  4118  00B654  51A8               	movf	_flagST7540UCG& (0+255),w,b
  4119  00B656  0B01               	andlw	1
  4120  00B658  0012               	return	
  4121  00B65A                     __end_of_TransmitBusyST7540:
  4122                           	opt stack 0
  4123                           tblptru	equ	0xFF8
  4124                           tblptrh	equ	0xFF7
  4125                           tblptrl	equ	0xFF6
  4126                           tablat	equ	0xFF5
  4127                           prodh	equ	0xFF4
  4128                           prodl	equ	0xFF3
  4129                           intcon	equ	0xFF2
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           postinc1	equ	0xFE6
  4133                           postdec1	equ	0xFE5
  4134                           fsr1h	equ	0xFE2
  4135                           fsr1l	equ	0xFE1
  4136                           indf2	equ	0xFDF
  4137                           postinc2	equ	0xFDE
  4138                           postdec2	equ	0xFDD
  4139                           fsr2h	equ	0xFDA
  4140                           fsr2l	equ	0xFD9
  4141                           status	equ	0xFD8
  4142                           
  4143 ;; *************** function _StartTransmitST7540 *****************
  4144 ;; Defined at:
  4145 ;;		line 299 in file "ST7540.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;  discardUC       1   26[BANK2 ] unsigned char 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, status,0
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;Total ram usage:        1 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:    7
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_RetransmitMessageSt7540
  4170 ;;		_CreateAndSend
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text19
  4175  00B536                     __ptext19:
  4176                           	opt stack 0
  4177  00B536                     _StartTransmitST7540:
  4178                           	opt stack 20
  4179                           
  4180                           ;ST7540.c: 300: unsigned char discardUC;
  4181                           ;ST7540.c: 302: flagST7540UCG |= 1;
  4182                           
  4183                           ; BSR set to: 2
  4184                           ;incstack = 0
  4185  00B536  0102               	movlb	2	; () banked
  4186  00B538  81A8               	bsf	_flagST7540UCG& (0+255),0,b
  4187                           
  4188                           ; BSR set to: 2
  4189                           ;ST7540.c: 303: LATCbits.LATC3 = 0;
  4190  00B53A  968B               	bcf	3979,3,c	;volatile
  4191  00B53C                     l137:
  4192  00B53C  BA83               	btfsc	3971,5,c	;volatile
  4193  00B53E  D7FE               	goto	l137
  4194                           
  4195                           ;ST7540.c: 305: SSP2CON1bits.SSPEN = 1;
  4196  00B540  8A72               	bsf	3954,5,c	;volatile
  4197                           
  4198                           ;ST7540.c: 306: discardUC = SSP2BUF;
  4199  00B542  CF75 F21B          	movff	3957,StartTransmitST7540@discardUC	;volatile
  4200                           
  4201                           ;ST7540.c: 307: SSP2BUF = bufferTXST7540UCAG[0];
  4202  00B546  C34C  FF75         	movff	_bufferTXST7540UCAG,3957	;volatile
  4203                           
  4204                           ;ST7540.c: 308: bufferTXNextUCG = 1;
  4205  00B54A  0E01               	movlw	1
  4206  00B54C  0102               	movlb	2	; () banked
  4207  00B54E  6FA6               	movwf	_bufferTXNextUCG& (0+255),b
  4208                           
  4209                           ; BSR set to: 2
  4210  00B550  0012               	return		;funcret
  4211  00B552                     __end_of_StartTransmitST7540:
  4212                           	opt stack 0
  4213                           tblptru	equ	0xFF8
  4214                           tblptrh	equ	0xFF7
  4215                           tblptrl	equ	0xFF6
  4216                           tablat	equ	0xFF5
  4217                           prodh	equ	0xFF4
  4218                           prodl	equ	0xFF3
  4219                           intcon	equ	0xFF2
  4220                           postinc0	equ	0xFEE
  4221                           wreg	equ	0xFE8
  4222                           postinc1	equ	0xFE6
  4223                           postdec1	equ	0xFE5
  4224                           fsr1h	equ	0xFE2
  4225                           fsr1l	equ	0xFE1
  4226                           indf2	equ	0xFDF
  4227                           postinc2	equ	0xFDE
  4228                           postdec2	equ	0xFDD
  4229                           fsr2h	equ	0xFDA
  4230                           fsr2l	equ	0xFD9
  4231                           status	equ	0xFD8
  4232                           
  4233 ;; *************** function _SavePacketNumber *****************
  4234 ;; Defined at:
  4235 ;;		line 246 in file "mastercomms.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  srcSerialUS     2   31[BANK2 ] unsigned short 
  4238 ;;  packetNumber    1   33[BANK2 ] unsigned char 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  saveSlotC       1   36[BANK2 ] char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4250 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4252 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4253 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4254 ;;Total ram usage:        6 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    8
  4257 ;; This function calls:
  4258 ;;		_ClearPacketNumbers
  4259 ;;		_GetPacketSlot
  4260 ;;		_IdlePacketSlot
  4261 ;; This function is called by:
  4262 ;;		_UpdatePacketNumber
  4263 ;;		_CreateAndSend
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text20
  4268  00ABBC                     __ptext20:
  4269                           	opt stack 0
  4270  00ABBC                     _SavePacketNumber:
  4271                           	opt stack 20
  4272                           
  4273                           ;mastercomms.c: 247: signed char saveSlotC;
  4274                           ;mastercomms.c: 249: saveSlotC = GetPacketSlot(srcSerialUS);
  4275                           
  4276                           ; BSR set to: 2
  4277                           ;incstack = 0
  4278  00ABBC  C220  F21B         	movff	SavePacketNumber@srcSerialUS,GetPacketSlot@srcSerialUS
  4279  00ABC0  C221  F21C         	movff	SavePacketNumber@srcSerialUS+1,GetPacketSlot@srcSerialUS+1
  4280  00ABC4  ECD5  F057         	call	_GetPacketSlot	;wreg free
  4281  00ABC8  0102               	movlb	2	; () banked
  4282  00ABCA  6F25               	movwf	SavePacketNumber@saveSlotC& (0+255),b
  4283                           
  4284                           ; BSR set to: 2
  4285                           ;mastercomms.c: 250: if(saveSlotC == -1){
  4286  00ABCC  0102               	movlb	2	; () banked
  4287  00ABCE  2925               	incf	SavePacketNumber@saveSlotC& (0+255),w,b
  4288  00ABD0  A4D8               	btfss	status,2,c
  4289  00ABD2  D00E               	goto	l6501
  4290                           
  4291                           ; BSR set to: 2
  4292                           ;mastercomms.c: 251: saveSlotC = IdlePacketSlot();
  4293  00ABD4  EC9E  F058         	call	_IdlePacketSlot	;wreg free
  4294  00ABD8  0102               	movlb	2	; () banked
  4295  00ABDA  6F25               	movwf	SavePacketNumber@saveSlotC& (0+255),b
  4296                           
  4297                           ; BSR set to: 2
  4298                           ;mastercomms.c: 252: if(saveSlotC == -1){
  4299  00ABDC  0102               	movlb	2	; () banked
  4300  00ABDE  2925               	incf	SavePacketNumber@saveSlotC& (0+255),w,b
  4301  00ABE0  A4D8               	btfss	status,2,c
  4302  00ABE2  D006               	goto	l6501
  4303                           
  4304                           ; BSR set to: 2
  4305                           ;mastercomms.c: 253: ClearPacketNumbers();
  4306  00ABE4  ECB0  F057         	call	_ClearPacketNumbers	;wreg free
  4307                           
  4308                           ;mastercomms.c: 254: saveSlotC = IdlePacketSlot();
  4309  00ABE8  EC9E  F058         	call	_IdlePacketSlot	;wreg free
  4310  00ABEC  0102               	movlb	2	; () banked
  4311  00ABEE  6F25               	movwf	SavePacketNumber@saveSlotC& (0+255),b
  4312  00ABF0                     l6501:
  4313                           
  4314                           ; BSR set to: 2
  4315                           ;mastercomms.c: 255: }
  4316                           ;mastercomms.c: 256: }
  4317                           ;mastercomms.c: 258: packetNumbersUSAG[1][saveSlotC] = srcSerialUS;
  4318  00ABF0  0102               	movlb	2	; () banked
  4319  00ABF2  5125               	movf	SavePacketNumber@saveSlotC& (0+255),w,b
  4320  00ABF4  0D02               	mullw	2
  4321  00ABF6  0EC2               	movlw	low (_packetNumbersUSAG+62)
  4322  00ABF8  24F3               	addwf	prodl,w,c
  4323  00ABFA  6ED9               	movwf	fsr2l,c
  4324  00ABFC  0E05               	movlw	high (_packetNumbersUSAG+62)
  4325  00ABFE  20F4               	addwfc	prodh,w,c
  4326  00AC00  6EDA               	movwf	fsr2h,c
  4327  00AC02  C220  FFDE         	movff	SavePacketNumber@srcSerialUS,postinc2
  4328  00AC06  C221  FFDD         	movff	SavePacketNumber@srcSerialUS+1,postdec2
  4329                           
  4330                           ; BSR set to: 2
  4331                           ;mastercomms.c: 259: packetNumbersUSAG[0][saveSlotC] = packetNumberUC;
  4332  00AC0A  0102               	movlb	2	; () banked
  4333  00AC0C  5122               	movf	SavePacketNumber@packetNumberUC& (0+255),w,b
  4334  00AC0E  0102               	movlb	2	; () banked
  4335  00AC10  6F23               	movwf	??_SavePacketNumber& (0+255),b
  4336  00AC12  6B24               	clrf	(??_SavePacketNumber+1)& (0+255),b
  4337  00AC14  0102               	movlb	2	; () banked
  4338  00AC16  5125               	movf	SavePacketNumber@saveSlotC& (0+255),w,b
  4339  00AC18  0D02               	mullw	2
  4340  00AC1A  0E84               	movlw	low _packetNumbersUSAG
  4341  00AC1C  24F3               	addwf	prodl,w,c
  4342  00AC1E  6ED9               	movwf	fsr2l,c
  4343  00AC20  0E05               	movlw	high _packetNumbersUSAG
  4344  00AC22  20F4               	addwfc	prodh,w,c
  4345  00AC24  6EDA               	movwf	fsr2h,c
  4346  00AC26  C223  FFDE         	movff	??_SavePacketNumber,postinc2
  4347  00AC2A  C224  FFDD         	movff	??_SavePacketNumber+1,postdec2
  4348                           
  4349                           ; BSR set to: 2
  4350  00AC2E  0012               	return		;funcret
  4351  00AC30                     __end_of_SavePacketNumber:
  4352                           	opt stack 0
  4353                           tblptru	equ	0xFF8
  4354                           tblptrh	equ	0xFF7
  4355                           tblptrl	equ	0xFF6
  4356                           tablat	equ	0xFF5
  4357                           prodh	equ	0xFF4
  4358                           prodl	equ	0xFF3
  4359                           intcon	equ	0xFF2
  4360                           postinc0	equ	0xFEE
  4361                           wreg	equ	0xFE8
  4362                           postinc1	equ	0xFE6
  4363                           postdec1	equ	0xFE5
  4364                           fsr1h	equ	0xFE2
  4365                           fsr1l	equ	0xFE1
  4366                           indf2	equ	0xFDF
  4367                           postinc2	equ	0xFDE
  4368                           postdec2	equ	0xFDD
  4369                           fsr2h	equ	0xFDA
  4370                           fsr2l	equ	0xFD9
  4371                           status	equ	0xFD8
  4372                           
  4373 ;; *************** function _IdlePacketSlot *****************
  4374 ;; Defined at:
  4375 ;;		line 224 in file "mastercomms.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;		None
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  iscCountC       1   28[BANK2 ] char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      char 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;Total ram usage:        3 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    7
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_SavePacketNumber
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text21
  4404  00B13C                     __ptext21:
  4405                           	opt stack 0
  4406  00B13C                     _IdlePacketSlot:
  4407                           	opt stack 20
  4408                           
  4409                           ;mastercomms.c: 225: signed char iscCountC;
  4410                           ;mastercomms.c: 227: for(iscCountC = 0; iscCountC < 31; iscCountC++){
  4411                           
  4412                           ; BSR set to: 2
  4413                           ;incstack = 0
  4414  00B13C  0E00               	movlw	0
  4415  00B13E  0102               	movlb	2	; () banked
  4416  00B140  6F1D               	movwf	IdlePacketSlot@iscCountC& (0+255),b
  4417  00B142                     l6371:
  4418                           
  4419                           ; BSR set to: 2
  4420  00B142  0102               	movlb	2	; () banked
  4421  00B144  511D               	movf	IdlePacketSlot@iscCountC& (0+255),w,b
  4422  00B146  0A80               	xorlw	128
  4423  00B148  0F61               	addlw	-159
  4424  00B14A  B0D8               	btfsc	status,0,c
  4425  00B14C  D013               	goto	l6385
  4426                           
  4427                           ; BSR set to: 2
  4428                           ;mastercomms.c: 228: if(!packetNumbersUSAG[1][iscCountC])
  4429                           
  4430                           ; BSR set to: 2
  4431                           
  4432                           ; BSR set to: 2
  4433  00B14E  0102               	movlb	2	; () banked
  4434  00B150  511D               	movf	IdlePacketSlot@iscCountC& (0+255),w,b
  4435  00B152  0D02               	mullw	2
  4436  00B154  0EC2               	movlw	low (_packetNumbersUSAG+62)
  4437  00B156  24F3               	addwf	prodl,w,c
  4438  00B158  6ED9               	movwf	fsr2l,c
  4439  00B15A  0E05               	movlw	high (_packetNumbersUSAG+62)
  4440  00B15C  20F4               	addwfc	prodh,w,c
  4441  00B15E  6EDA               	movwf	fsr2h,c
  4442  00B160  50DE               	movf	postinc2,w,c
  4443  00B162  10DE               	iorwf	postinc2,w,c
  4444  00B164  A4D8               	btfss	status,2,c
  4445  00B166  D003               	goto	l6381
  4446                           
  4447                           ; BSR set to: 2
  4448                           ;mastercomms.c: 229: return iscCountC;
  4449  00B168  0102               	movlb	2	; () banked
  4450  00B16A  511D               	movf	IdlePacketSlot@iscCountC& (0+255),w,b
  4451                           
  4452                           ; BSR set to: 2
  4453  00B16C  0012               	return	
  4454  00B16E                     l6381:
  4455                           
  4456                           ; BSR set to: 2
  4457  00B16E  0102               	movlb	2	; () banked
  4458  00B170  2B1D               	incf	IdlePacketSlot@iscCountC& (0+255),f,b
  4459  00B172  D7E7               	goto	l6371
  4460  00B174                     l6385:
  4461                           
  4462                           ; BSR set to: 2
  4463                           ;mastercomms.c: 230: }
  4464                           ;mastercomms.c: 232: return -1;
  4465  00B174  0EFF               	movlw	255
  4466  00B176  0012               	return	
  4467  00B178                     __end_of_IdlePacketSlot:
  4468                           	opt stack 0
  4469                           tblptru	equ	0xFF8
  4470                           tblptrh	equ	0xFF7
  4471                           tblptrl	equ	0xFF6
  4472                           tablat	equ	0xFF5
  4473                           prodh	equ	0xFF4
  4474                           prodl	equ	0xFF3
  4475                           intcon	equ	0xFF2
  4476                           postinc0	equ	0xFEE
  4477                           wreg	equ	0xFE8
  4478                           postinc1	equ	0xFE6
  4479                           postdec1	equ	0xFE5
  4480                           fsr1h	equ	0xFE2
  4481                           fsr1l	equ	0xFE1
  4482                           indf2	equ	0xFDF
  4483                           postinc2	equ	0xFDE
  4484                           postdec2	equ	0xFDD
  4485                           fsr2h	equ	0xFDA
  4486                           fsr2l	equ	0xFD9
  4487                           status	equ	0xFD8
  4488                           
  4489 ;; *************** function _GetPacketSlot *****************
  4490 ;; Defined at:
  4491 ;;		line 235 in file "mastercomms.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  srcSerialUS     2   26[BANK2 ] unsigned short 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  saveSlotC       1   30[BANK2 ] char 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      char 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;Total ram usage:        5 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    7
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_SavePacketNumber
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text22
  4520  00AFAA                     __ptext22:
  4521                           	opt stack 0
  4522  00AFAA                     _GetPacketSlot:
  4523                           	opt stack 20
  4524                           
  4525                           ;mastercomms.c: 236: signed char saveSlotC;
  4526                           ;mastercomms.c: 238: for(saveSlotC = 0; saveSlotC < 31; saveSlotC++){
  4527                           
  4528                           ; BSR set to: 2
  4529                           ;incstack = 0
  4530  00AFAA  0E00               	movlw	0
  4531  00AFAC  0102               	movlb	2	; () banked
  4532  00AFAE  6F1F               	movwf	GetPacketSlot@saveSlotC& (0+255),b
  4533  00AFB0                     l6391:
  4534                           
  4535                           ; BSR set to: 2
  4536  00AFB0  0102               	movlb	2	; () banked
  4537  00AFB2  511F               	movf	GetPacketSlot@saveSlotC& (0+255),w,b
  4538  00AFB4  0A80               	xorlw	128
  4539  00AFB6  0F61               	addlw	-159
  4540  00AFB8  B0D8               	btfsc	status,0,c
  4541  00AFBA  D018               	goto	l6405
  4542                           
  4543                           ; BSR set to: 2
  4544                           ;mastercomms.c: 239: if(packetNumbersUSAG[1][saveSlotC] == srcSerialUS)
  4545                           
  4546                           ; BSR set to: 2
  4547                           
  4548                           ; BSR set to: 2
  4549  00AFBC  0102               	movlb	2	; () banked
  4550  00AFBE  511F               	movf	GetPacketSlot@saveSlotC& (0+255),w,b
  4551  00AFC0  0D02               	mullw	2
  4552  00AFC2  0EC2               	movlw	low (_packetNumbersUSAG+62)
  4553  00AFC4  24F3               	addwf	prodl,w,c
  4554  00AFC6  6ED9               	movwf	fsr2l,c
  4555  00AFC8  0E05               	movlw	high (_packetNumbersUSAG+62)
  4556  00AFCA  20F4               	addwfc	prodh,w,c
  4557  00AFCC  6EDA               	movwf	fsr2h,c
  4558  00AFCE  0102               	movlb	2	; () banked
  4559  00AFD0  511B               	movf	GetPacketSlot@srcSerialUS& (0+255),w,b
  4560  00AFD2  18DE               	xorwf	postinc2,w,c
  4561  00AFD4  E108               	bnz	l6401
  4562  00AFD6  0102               	movlb	2	; () banked
  4563  00AFD8  511C               	movf	(GetPacketSlot@srcSerialUS+1)& (0+255),w,b
  4564  00AFDA  18DE               	xorwf	postinc2,w,c
  4565  00AFDC  A4D8               	btfss	status,2,c
  4566  00AFDE  D003               	goto	l6401
  4567                           
  4568                           ; BSR set to: 2
  4569                           ;mastercomms.c: 240: return saveSlotC;
  4570  00AFE0  0102               	movlb	2	; () banked
  4571  00AFE2  511F               	movf	GetPacketSlot@saveSlotC& (0+255),w,b
  4572                           
  4573                           ; BSR set to: 2
  4574  00AFE4  0012               	return	
  4575  00AFE6                     l6401:
  4576                           
  4577                           ; BSR set to: 2
  4578  00AFE6  0102               	movlb	2	; () banked
  4579  00AFE8  2B1F               	incf	GetPacketSlot@saveSlotC& (0+255),f,b
  4580  00AFEA  D7E2               	goto	l6391
  4581  00AFEC                     l6405:
  4582                           
  4583                           ; BSR set to: 2
  4584                           ;mastercomms.c: 241: }
  4585                           ;mastercomms.c: 243: return -1;
  4586  00AFEC  0EFF               	movlw	255
  4587  00AFEE  0012               	return	
  4588  00AFF0                     __end_of_GetPacketSlot:
  4589                           	opt stack 0
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           prodh	equ	0xFF4
  4595                           prodl	equ	0xFF3
  4596                           intcon	equ	0xFF2
  4597                           postinc0	equ	0xFEE
  4598                           wreg	equ	0xFE8
  4599                           postinc1	equ	0xFE6
  4600                           postdec1	equ	0xFE5
  4601                           fsr1h	equ	0xFE2
  4602                           fsr1l	equ	0xFE1
  4603                           indf2	equ	0xFDF
  4604                           postinc2	equ	0xFDE
  4605                           postdec2	equ	0xFDD
  4606                           fsr2h	equ	0xFDA
  4607                           fsr2l	equ	0xFD9
  4608                           status	equ	0xFD8
  4609                           
  4610 ;; *************** function _PacketReadParamST7540 *****************
  4611 ;; Defined at:
  4612 ;;		line 325 in file "ST7540.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  paramName       1    wreg     unsigned char 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  paramName       1   51[BANK2 ] unsigned char 
  4617 ;;  retValueUS      2   52[BANK2 ] unsigned short 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  2   47[BANK2 ] unsigned short 
  4620 ;; Registers used:
  4621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4627 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;Total ram usage:        7 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    9
  4634 ;; This function calls:
  4635 ;;		_CheckCRCST7540
  4636 ;; This function is called by:
  4637 ;;		_RetransmitMessageSt7540
  4638 ;;		_ProcessMasterComms
  4639 ;;		_CreateAndSend
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text23
  4644  00A192                     __ptext23:
  4645                           	opt stack 0
  4646  00A192                     _PacketReadParamST7540:
  4647                           	opt stack 18
  4648                           
  4649                           ; BSR set to: 2
  4650                           ;incstack = 0
  4651                           ;PacketReadParamST7540@paramName stored from wreg
  4652  00A192  0102               	movlb	2	; () banked
  4653  00A194  6F34               	movwf	PacketReadParamST7540@paramName& (0+255),b
  4654                           
  4655                           ;ST7540.c: 326: unsigned short retValueUS = 0;
  4656  00A196  0E00               	movlw	0
  4657  00A198  0102               	movlb	2	; () banked
  4658  00A19A  6F36               	movwf	(PacketReadParamST7540@retValueUS+1)& (0+255),b
  4659  00A19C  0E00               	movlw	0
  4660  00A19E  6F35               	movwf	PacketReadParamST7540@retValueUS& (0+255),b
  4661                           
  4662                           ;ST7540.c: 328: switch(paramName){
  4663  00A1A0  D04F               	goto	l6433
  4664  00A1A2                     l6411:
  4665                           
  4666                           ; BSR set to: 2
  4667                           ;ST7540.c: 330: return bufferRXST7540UCAG[0] - 9;
  4668  00A1A2  0EF7               	movlw	247
  4669  00A1A4  0103               	movlb	3	; () banked
  4670  00A1A6  259B               	addwf	_bufferRXST7540UCAG& (0+255),w,b
  4671  00A1A8  0102               	movlb	2	; () banked
  4672  00A1AA  6F30               	movwf	?_PacketReadParamST7540& (0+255),b
  4673  00A1AC  0102               	movlb	2	; () banked
  4674  00A1AE  6B31               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
  4675  00A1B0  0EFF               	movlw	255
  4676  00A1B2  2331               	addwfc	(?_PacketReadParamST7540+1)& (0+255),f,b
  4677                           
  4678                           ; BSR set to: 2
  4679  00A1B4  0012               	return	
  4680  00A1B6                     l6415:
  4681                           
  4682                           ; BSR set to: 2
  4683                           ;ST7540.c: 332: retValueUS |= ((unsigned short) bufferRXST7540UCAG[1] << 8);
  4684  00A1B6  0103               	movlb	3	; () banked
  4685  00A1B8  519C               	movf	(_bufferRXST7540UCAG+1)& (0+255),w,b
  4686  00A1BA  0102               	movlb	2	; () banked
  4687  00A1BC  6F33               	movwf	(??_PacketReadParamST7540+1)& (0+255),b
  4688  00A1BE  6B32               	clrf	??_PacketReadParamST7540& (0+255),b
  4689  00A1C0  0102               	movlb	2	; () banked
  4690  00A1C2  5132               	movf	??_PacketReadParamST7540& (0+255),w,b
  4691  00A1C4  0102               	movlb	2	; () banked
  4692  00A1C6  1335               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
  4693  00A1C8  0102               	movlb	2	; () banked
  4694  00A1CA  5133               	movf	(??_PacketReadParamST7540+1)& (0+255),w,b
  4695  00A1CC  0102               	movlb	2	; () banked
  4696  00A1CE  1336               	iorwf	(PacketReadParamST7540@retValueUS+1)& (0+255),f,b
  4697                           
  4698                           ;ST7540.c: 333: retValueUS |= bufferRXST7540UCAG[2];
  4699  00A1D0  0103               	movlb	3	; () banked
  4700  00A1D2  519D               	movf	(_bufferRXST7540UCAG+2)& (0+255),w,b
  4701  00A1D4  0102               	movlb	2	; () banked
  4702  00A1D6  1335               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
  4703                           
  4704                           ; BSR set to: 2
  4705                           ;ST7540.c: 334: return retValueUS;
  4706  00A1D8  C235  F230         	movff	PacketReadParamST7540@retValueUS,?_PacketReadParamST7540
  4707  00A1DC  C236  F231         	movff	PacketReadParamST7540@retValueUS+1,?_PacketReadParamST7540+1
  4708                           
  4709                           ; BSR set to: 2
  4710  00A1E0  0012               	return	
  4711  00A1E2                     l6421:
  4712                           
  4713                           ; BSR set to: 2
  4714                           ;ST7540.c: 336: retValueUS |= ((unsigned short) bufferRXST7540UCAG[3] << 8);
  4715  00A1E2  0103               	movlb	3	; () banked
  4716  00A1E4  519E               	movf	(_bufferRXST7540UCAG+3)& (0+255),w,b
  4717  00A1E6  0102               	movlb	2	; () banked
  4718  00A1E8  6F33               	movwf	(??_PacketReadParamST7540+1)& (0+255),b
  4719  00A1EA  6B32               	clrf	??_PacketReadParamST7540& (0+255),b
  4720  00A1EC  0102               	movlb	2	; () banked
  4721  00A1EE  5132               	movf	??_PacketReadParamST7540& (0+255),w,b
  4722  00A1F0  0102               	movlb	2	; () banked
  4723  00A1F2  1335               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
  4724  00A1F4  0102               	movlb	2	; () banked
  4725  00A1F6  5133               	movf	(??_PacketReadParamST7540+1)& (0+255),w,b
  4726  00A1F8  0102               	movlb	2	; () banked
  4727  00A1FA  1336               	iorwf	(PacketReadParamST7540@retValueUS+1)& (0+255),f,b
  4728                           
  4729                           ;ST7540.c: 337: retValueUS |= bufferRXST7540UCAG[4];
  4730  00A1FC  0103               	movlb	3	; () banked
  4731  00A1FE  519F               	movf	(_bufferRXST7540UCAG+4)& (0+255),w,b
  4732  00A200  0102               	movlb	2	; () banked
  4733  00A202  1335               	iorwf	PacketReadParamST7540@retValueUS& (0+255),f,b
  4734                           
  4735                           ; BSR set to: 2
  4736                           ;ST7540.c: 338: return retValueUS;
  4737  00A204  C235  F230         	movff	PacketReadParamST7540@retValueUS,?_PacketReadParamST7540
  4738  00A208  C236  F231         	movff	PacketReadParamST7540@retValueUS+1,?_PacketReadParamST7540+1
  4739                           
  4740                           ; BSR set to: 2
  4741  00A20C  0012               	return	
  4742  00A20E                     l154:
  4743                           
  4744                           ; BSR set to: 2
  4745                           ;ST7540.c: 340: return bufferRXST7540UCAG[5];
  4746  00A20E  C3A0  F230         	movff	_bufferRXST7540UCAG+5,?_PacketReadParamST7540
  4747  00A212  0102               	movlb	2	; () banked
  4748  00A214  6B31               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
  4749  00A216  0012               	return	
  4750  00A218                     l155:
  4751                           
  4752                           ; BSR set to: 2
  4753                           ;ST7540.c: 342: return bufferRXST7540UCAG[6];
  4754  00A218  C3A1  F230         	movff	_bufferRXST7540UCAG+6,?_PacketReadParamST7540
  4755  00A21C  0102               	movlb	2	; () banked
  4756  00A21E  6B31               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
  4757  00A220  0012               	return	
  4758  00A222                     l6427:
  4759                           
  4760                           ; BSR set to: 2
  4761                           ;ST7540.c: 344: return CheckCRCST7540();
  4762  00A222  ECDE  F052         	call	_CheckCRCST7540	;wreg free
  4763  00A226  0102               	movlb	2	; () banked
  4764  00A228  6F32               	movwf	??_PacketReadParamST7540& (0+255),b
  4765  00A22A  0102               	movlb	2	; () banked
  4766  00A22C  5132               	movf	??_PacketReadParamST7540& (0+255),w,b
  4767  00A22E  0102               	movlb	2	; () banked
  4768  00A230  6F30               	movwf	?_PacketReadParamST7540& (0+255),b
  4769  00A232  6B31               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
  4770                           
  4771                           ; BSR set to: 2
  4772  00A234  0012               	return	
  4773  00A236                     l157:
  4774                           
  4775                           ; BSR set to: 2
  4776                           ;ST7540.c: 346: return bufferTXST7540UCAG[9];
  4777  00A236  C355  F230         	movff	_bufferTXST7540UCAG+9,?_PacketReadParamST7540
  4778  00A23A  0102               	movlb	2	; () banked
  4779  00A23C  6B31               	clrf	(?_PacketReadParamST7540+1)& (0+255),b
  4780  00A23E  0012               	return	
  4781  00A240                     l6433:
  4782                           
  4783                           ; BSR set to: 2
  4784  00A240  0102               	movlb	2	; () banked
  4785  00A242  5134               	movf	PacketReadParamST7540@paramName& (0+255),w,b
  4786                           
  4787                           ; Switch size 1, requested type "space"
  4788                           ; Number of cases is 7, Range of values is 0 to 6
  4789                           ; switch strategies available:
  4790                           ; Name         Instructions Cycles
  4791                           ; simple_byte           22    12 (average)
  4792                           ;	Chosen strategy is simple_byte
  4793  00A244  0A00               	xorlw	0	; case 0
  4794  00A246  B4D8               	btfsc	status,2,c
  4795  00A248  D7AC               	goto	l6411
  4796  00A24A  0A01               	xorlw	1	; case 1
  4797  00A24C  B4D8               	btfsc	status,2,c
  4798  00A24E  D7B3               	goto	l6415
  4799  00A250  0A03               	xorlw	3	; case 2
  4800  00A252  B4D8               	btfsc	status,2,c
  4801  00A254  D7C6               	goto	l6421
  4802  00A256  0A01               	xorlw	1	; case 3
  4803  00A258  B4D8               	btfsc	status,2,c
  4804  00A25A  D7D9               	goto	l154
  4805  00A25C  0A07               	xorlw	7	; case 4
  4806  00A25E  B4D8               	btfsc	status,2,c
  4807  00A260  D7DB               	goto	l155
  4808  00A262  0A01               	xorlw	1	; case 5
  4809  00A264  B4D8               	btfsc	status,2,c
  4810  00A266  D7DD               	goto	l6427
  4811  00A268  0A03               	xorlw	3	; case 6
  4812  00A26A  B4D8               	btfsc	status,2,c
  4813  00A26C  D7E4               	goto	l157
  4814                           
  4815                           ; BSR set to: 2
  4816                           ;ST7540.c: 349: return 0;
  4817                           
  4818                           ; BSR set to: 2
  4819  00A26E  0E00               	movlw	0
  4820  00A270  0102               	movlb	2	; () banked
  4821  00A272  6F31               	movwf	(?_PacketReadParamST7540+1)& (0+255),b
  4822  00A274  0E00               	movlw	0
  4823  00A276  6F30               	movwf	?_PacketReadParamST7540& (0+255),b
  4824  00A278  0012               	return	
  4825  00A27A                     __end_of_PacketReadParamST7540:
  4826                           	opt stack 0
  4827                           tblptru	equ	0xFF8
  4828                           tblptrh	equ	0xFF7
  4829                           tblptrl	equ	0xFF6
  4830                           tablat	equ	0xFF5
  4831                           prodh	equ	0xFF4
  4832                           prodl	equ	0xFF3
  4833                           intcon	equ	0xFF2
  4834                           postinc0	equ	0xFEE
  4835                           wreg	equ	0xFE8
  4836                           postinc1	equ	0xFE6
  4837                           postdec1	equ	0xFE5
  4838                           fsr1h	equ	0xFE2
  4839                           fsr1l	equ	0xFE1
  4840                           indf2	equ	0xFDF
  4841                           postinc2	equ	0xFDE
  4842                           postdec2	equ	0xFDD
  4843                           fsr2h	equ	0xFDA
  4844                           fsr2l	equ	0xFD9
  4845                           status	equ	0xFD8
  4846                           
  4847 ;; *************** function _CheckCRCST7540 *****************
  4848 ;; Defined at:
  4849 ;;		line 360 in file "ST7540.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;		None
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  receivedCRCU    2   44[BANK2 ] unsigned short 
  4854 ;;  expectedCRCU    2   42[BANK2 ] unsigned short 
  4855 ;;  packetLenUC     1   46[BANK2 ] unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      unsigned char 
  4858 ;; Registers used:
  4859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  4865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;Total ram usage:        8 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    8
  4872 ;; This function calls:
  4873 ;;		_CRC16
  4874 ;; This function is called by:
  4875 ;;		_PacketReadParamST7540
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text24
  4880  00A5BC                     __ptext24:
  4881                           	opt stack 0
  4882  00A5BC                     _CheckCRCST7540:
  4883                           	opt stack 18
  4884                           
  4885                           ;ST7540.c: 361: unsigned short expectedCRCUS;
  4886                           ;ST7540.c: 362: unsigned short receivedCRCUS = 0;
  4887                           
  4888                           ; BSR set to: 2
  4889                           ;incstack = 0
  4890  00A5BC  0E00               	movlw	0
  4891  00A5BE  0102               	movlb	2	; () banked
  4892  00A5C0  6F2E               	movwf	(CheckCRCST7540@receivedCRCUS+1)& (0+255),b
  4893  00A5C2  0E00               	movlw	0
  4894  00A5C4  6F2D               	movwf	CheckCRCST7540@receivedCRCUS& (0+255),b
  4895                           
  4896                           ; BSR set to: 2
  4897                           ;ST7540.c: 363: unsigned char packetLenUC;
  4898                           ;ST7540.c: 365: packetLenUC = bufferRXST7540UCAG[0]-2;
  4899  00A5C6  0103               	movlb	3	; () banked
  4900  00A5C8  519B               	movf	_bufferRXST7540UCAG& (0+255),w,b
  4901  00A5CA  0FFE               	addlw	254
  4902  00A5CC  0102               	movlb	2	; () banked
  4903  00A5CE  6F2F               	movwf	CheckCRCST7540@packetLenUC& (0+255),b
  4904                           
  4905                           ; BSR set to: 2
  4906                           ;ST7540.c: 366: expectedCRCUS = CRC16(bufferRXST7540UCAG, packetLenUC);
  4907  00A5D0  0E9B               	movlw	low _bufferRXST7540UCAG
  4908  00A5D2  0102               	movlb	2	; () banked
  4909  00A5D4  6F1B               	movwf	CRC16@data_p& (0+255),b
  4910  00A5D6  0E03               	movlw	high _bufferRXST7540UCAG
  4911  00A5D8  0102               	movlb	2	; () banked
  4912  00A5DA  6F1C               	movwf	(CRC16@data_p+1)& (0+255),b
  4913  00A5DC  C22F  F21D         	movff	CheckCRCST7540@packetLenUC,CRC16@length
  4914  00A5E0  0102               	movlb	2	; () banked
  4915  00A5E2  6B1E               	clrf	(CRC16@length+1)& (0+255),b
  4916  00A5E4  EC8A  F04D         	call	_CRC16	;wreg free
  4917  00A5E8  C21B  F22B         	movff	?_CRC16,CheckCRCST7540@expectedCRCUS
  4918  00A5EC  C21C  F22C         	movff	?_CRC16+1,CheckCRCST7540@expectedCRCUS+1
  4919                           
  4920                           ;ST7540.c: 367: receivedCRCUS |= ((unsigned short) bufferRXST7540UCAG[packetLenUC] << 8)
      +                          ;
  4921  00A5F0  0102               	movlb	2	; () banked
  4922  00A5F2  512F               	movf	CheckCRCST7540@packetLenUC& (0+255),w,b
  4923  00A5F4  0D01               	mullw	1
  4924  00A5F6  0E9B               	movlw	low _bufferRXST7540UCAG
  4925  00A5F8  24F3               	addwf	prodl,w,c
  4926  00A5FA  6ED9               	movwf	fsr2l,c
  4927  00A5FC  0E03               	movlw	high _bufferRXST7540UCAG
  4928  00A5FE  20F4               	addwfc	prodh,w,c
  4929  00A600  6EDA               	movwf	fsr2h,c
  4930  00A602  50DF               	movf	indf2,w,c
  4931  00A604  0102               	movlb	2	; () banked
  4932  00A606  6F28               	movwf	??_CheckCRCST7540& (0+255),b
  4933  00A608  0102               	movlb	2	; () banked
  4934  00A60A  5128               	movf	??_CheckCRCST7540& (0+255),w,b
  4935  00A60C  0102               	movlb	2	; () banked
  4936  00A60E  6F2A               	movwf	(??_CheckCRCST7540+2)& (0+255),b
  4937  00A610  6B29               	clrf	(??_CheckCRCST7540+1)& (0+255),b
  4938  00A612  0102               	movlb	2	; () banked
  4939  00A614  5129               	movf	(??_CheckCRCST7540+1)& (0+255),w,b
  4940  00A616  0102               	movlb	2	; () banked
  4941  00A618  132D               	iorwf	CheckCRCST7540@receivedCRCUS& (0+255),f,b
  4942  00A61A  0102               	movlb	2	; () banked
  4943  00A61C  512A               	movf	(??_CheckCRCST7540+2)& (0+255),w,b
  4944  00A61E  0102               	movlb	2	; () banked
  4945  00A620  132E               	iorwf	(CheckCRCST7540@receivedCRCUS+1)& (0+255),f,b
  4946                           
  4947                           ; BSR set to: 2
  4948                           ;ST7540.c: 368: receivedCRCUS |= bufferRXST7540UCAG[packetLenUC+1];
  4949  00A622  0102               	movlb	2	; () banked
  4950  00A624  512F               	movf	CheckCRCST7540@packetLenUC& (0+255),w,b
  4951  00A626  0102               	movlb	2	; () banked
  4952  00A628  6F28               	movwf	??_CheckCRCST7540& (0+255),b
  4953  00A62A  6B29               	clrf	(??_CheckCRCST7540+1)& (0+255),b
  4954  00A62C  0E01               	movlw	1
  4955  00A62E  0102               	movlb	2	; () banked
  4956  00A630  2728               	addwf	??_CheckCRCST7540& (0+255),f,b
  4957  00A632  0E00               	movlw	0
  4958  00A634  2329               	addwfc	(??_CheckCRCST7540+1)& (0+255),f,b
  4959  00A636  0E9B               	movlw	low _bufferRXST7540UCAG
  4960  00A638  0102               	movlb	2	; () banked
  4961  00A63A  2528               	addwf	??_CheckCRCST7540& (0+255),w,b
  4962  00A63C  6ED9               	movwf	fsr2l,c
  4963  00A63E  0E03               	movlw	high _bufferRXST7540UCAG
  4964  00A640  0102               	movlb	2	; () banked
  4965  00A642  2129               	addwfc	(??_CheckCRCST7540+1)& (0+255),w,b
  4966  00A644  6EDA               	movwf	fsr2h,c
  4967  00A646  50DF               	movf	indf2,w,c
  4968  00A648  0102               	movlb	2	; () banked
  4969  00A64A  6F2A               	movwf	(??_CheckCRCST7540+2)& (0+255),b
  4970  00A64C  0102               	movlb	2	; () banked
  4971  00A64E  512A               	movf	(??_CheckCRCST7540+2)& (0+255),w,b
  4972  00A650  0102               	movlb	2	; () banked
  4973  00A652  132D               	iorwf	CheckCRCST7540@receivedCRCUS& (0+255),f,b
  4974                           
  4975                           ; BSR set to: 2
  4976                           ;ST7540.c: 370: return (expectedCRCUS == receivedCRCUS);
  4977  00A654  0102               	movlb	2	; () banked
  4978  00A656  512D               	movf	CheckCRCST7540@receivedCRCUS& (0+255),w,b
  4979  00A658  0102               	movlb	2	; () banked
  4980  00A65A  192B               	xorwf	CheckCRCST7540@expectedCRCUS& (0+255),w,b
  4981  00A65C  E108               	bnz	u6790
  4982  00A65E  0102               	movlb	2	; () banked
  4983  00A660  512E               	movf	(CheckCRCST7540@receivedCRCUS+1)& (0+255),w,b
  4984  00A662  0102               	movlb	2	; () banked
  4985  00A664  192C               	xorwf	(CheckCRCST7540@expectedCRCUS+1)& (0+255),w,b
  4986  00A666  A4D8               	btfss	status,2,c
  4987  00A668  D002               	goto	u6790
  4988  00A66A  0E01               	movlw	1
  4989  00A66C  0012               	return	
  4990  00A66E                     u6790:
  4991  00A66E  0E00               	movlw	0
  4992  00A670  0012               	return	
  4993  00A672                     __end_of_CheckCRCST7540:
  4994                           	opt stack 0
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           intcon	equ	0xFF2
  5002                           postinc0	equ	0xFEE
  5003                           wreg	equ	0xFE8
  5004                           postinc1	equ	0xFE6
  5005                           postdec1	equ	0xFE5
  5006                           fsr1h	equ	0xFE2
  5007                           fsr1l	equ	0xFE1
  5008                           indf2	equ	0xFDF
  5009                           postinc2	equ	0xFDE
  5010                           postdec2	equ	0xFDD
  5011                           fsr2h	equ	0xFDA
  5012                           fsr2l	equ	0xFD9
  5013                           status	equ	0xFD8
  5014                           
  5015 ;; *************** function _CreateMessageST7540 *****************
  5016 ;; Defined at:
  5017 ;;		line 273 in file "ST7540.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;  packetSource    2   39[BANK2 ] unsigned short 
  5020 ;;  packetDestUS    2   41[BANK2 ] unsigned short 
  5021 ;;  commandUC       1   43[BANK2 ] unsigned char 
  5022 ;;  dataLenUC       1   44[BANK2 ] unsigned char 
  5023 ;;  dataBuf         2   45[BANK2 ] PTR unsigned char 
  5024 ;;		 -> ProcessSerialCMD@serialListUSA(60), ReturnBoosterData@partRespUSA(62), ReturnBoosterData@allRespUSA(62), NULL(0)
      +, 
  5025 ;;		 -> iscSerialUSG(2), bufferRXST7540UCAG(75), 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  packetCRCUS     2   49[BANK2 ] unsigned short 
  5028 ;;  dataBufLocUC    1   51[BANK2 ] unsigned char 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      void 
  5031 ;; Registers used:
  5032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5038 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5039 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;Total ram usage:       13 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    8
  5045 ;; This function calls:
  5046 ;;		_CRC16
  5047 ;; This function is called by:
  5048 ;;		_RetransmitMessageSt7540
  5049 ;;		_CreateAndSend
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text25
  5054  009F92                     __ptext25:
  5055                           	opt stack 0
  5056  009F92                     _CreateMessageST7540:
  5057                           	opt stack 19
  5058                           
  5059                           ;ST7540.c: 274: unsigned char dataBufLocUC;
  5060                           ;ST7540.c: 275: unsigned short packetCRCUS;
  5061                           ;ST7540.c: 277: bufferTXST7540UCAG[0] = 0xAA;
  5062                           
  5063                           ; BSR set to: 2
  5064                           ;incstack = 0
  5065  009F92  0EAA               	movlw	170
  5066  009F94  0103               	movlb	3	; () banked
  5067  009F96  6F4C               	movwf	_bufferTXST7540UCAG& (0+255),b
  5068                           
  5069                           ;ST7540.c: 278: bufferTXST7540UCAG[1] = 0xAA;
  5070  009F98  0EAA               	movlw	170
  5071  009F9A  0103               	movlb	3	; () banked
  5072  009F9C  6F4D               	movwf	(_bufferTXST7540UCAG+1)& (0+255),b
  5073                           
  5074                           ;ST7540.c: 279: bufferTXST7540UCAG[2] = (unsigned long short) 0x9b58 >> 8;
  5075  009F9E  0E9B               	movlw	155
  5076  009FA0  0103               	movlb	3	; () banked
  5077  009FA2  6F4E               	movwf	(_bufferTXST7540UCAG+2)& (0+255),b
  5078                           
  5079                           ;ST7540.c: 280: bufferTXST7540UCAG[3] = (unsigned long short) 0x9b58;
  5080  009FA4  0E58               	movlw	88
  5081  009FA6  0103               	movlb	3	; () banked
  5082  009FA8  6F4F               	movwf	(_bufferTXST7540UCAG+3)& (0+255),b
  5083                           
  5084                           ; BSR set to: 3
  5085                           ;ST7540.c: 281: bufferTXST7540UCAG[4] = 9 + dataLenUC;
  5086  009FAA  0102               	movlb	2	; () banked
  5087  009FAC  512D               	movf	CreateMessageST7540@dataLenUC& (0+255),w,b
  5088  009FAE  0F09               	addlw	9
  5089  009FB0  0103               	movlb	3	; () banked
  5090  009FB2  6F50               	movwf	(_bufferTXST7540UCAG+4)& (0+255),b
  5091                           
  5092                           ; BSR set to: 3
  5093                           ;ST7540.c: 282: bufferTXST7540UCAG[5] = packetSourceUS >> 8;
  5094  009FB4  0102               	movlb	2	; () banked
  5095  009FB6  5129               	movf	(CreateMessageST7540@packetSourceUS+1)& (0+255),w,b
  5096  009FB8  0103               	movlb	3	; () banked
  5097  009FBA  6F51               	movwf	(_bufferTXST7540UCAG+5)& (0+255),b
  5098                           
  5099                           ; BSR set to: 3
  5100                           ;ST7540.c: 283: bufferTXST7540UCAG[6] = packetSourceUS;
  5101  009FBC  C228  F352         	movff	CreateMessageST7540@packetSourceUS,_bufferTXST7540UCAG+6
  5102                           
  5103                           ; BSR set to: 3
  5104                           ;ST7540.c: 284: bufferTXST7540UCAG[7] = packetDestUS >> 8;
  5105  009FC0  0102               	movlb	2	; () banked
  5106  009FC2  512B               	movf	(CreateMessageST7540@packetDestUS+1)& (0+255),w,b
  5107  009FC4  0103               	movlb	3	; () banked
  5108  009FC6  6F53               	movwf	(_bufferTXST7540UCAG+7)& (0+255),b
  5109                           
  5110                           ; BSR set to: 3
  5111                           ;ST7540.c: 285: bufferTXST7540UCAG[8] = packetDestUS;
  5112  009FC8  C22A  F354         	movff	CreateMessageST7540@packetDestUS,_bufferTXST7540UCAG+8
  5113                           
  5114                           ; BSR set to: 3
  5115                           ;ST7540.c: 286: bufferTXST7540UCAG[9] = packetNumberUCG++;
  5116  009FCC  C2A4  F355         	movff	_packetNumberUCG,_bufferTXST7540UCAG+9
  5117                           
  5118                           ; BSR set to: 3
  5119  009FD0  0102               	movlb	2	; () banked
  5120  009FD2  2BA4               	incf	_packetNumberUCG& (0+255),f,b
  5121                           
  5122                           ; BSR set to: 2
  5123                           ;ST7540.c: 287: bufferTXST7540UCAG[10] = commandUC;
  5124  009FD4  C22C  F356         	movff	CreateMessageST7540@commandUC,_bufferTXST7540UCAG+10
  5125                           
  5126                           ; BSR set to: 2
  5127                           ;ST7540.c: 289: for(dataBufLocUC = 0; dataBufLocUC < dataLenUC; dataBufLocUC++)
  5128  009FD8  0E00               	movlw	0
  5129  009FDA  0102               	movlb	2	; () banked
  5130  009FDC  6F34               	movwf	CreateMessageST7540@dataBufLocUC& (0+255),b
  5131  009FDE  D021               	goto	l6463
  5132  009FE0                     l6459:
  5133                           
  5134                           ; BSR set to: 2
  5135                           ;ST7540.c: 290: bufferTXST7540UCAG[dataBufLocUC + 11] = dataBuf[dataBufLocUC];
  5136  009FE0  0102               	movlb	2	; () banked
  5137  009FE2  5134               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5138  009FE4  0D01               	mullw	1
  5139  009FE6  50F3               	movf	prodl,w,c
  5140  009FE8  0102               	movlb	2	; () banked
  5141  009FEA  252E               	addwf	CreateMessageST7540@dataBuf& (0+255),w,b
  5142  009FEC  6ED9               	movwf	fsr2l,c
  5143  009FEE  50F4               	movf	prodh,w,c
  5144  009FF0  0102               	movlb	2	; () banked
  5145  009FF2  212F               	addwfc	(CreateMessageST7540@dataBuf+1)& (0+255),w,b
  5146  009FF4  6EDA               	movwf	fsr2h,c
  5147  009FF6  0102               	movlb	2	; () banked
  5148  009FF8  5134               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5149  009FFA  0102               	movlb	2	; () banked
  5150  009FFC  6F30               	movwf	??_CreateMessageST7540& (0+255),b
  5151  009FFE  6B31               	clrf	(??_CreateMessageST7540+1)& (0+255),b
  5152  00A000  0E0B               	movlw	11
  5153  00A002  0102               	movlb	2	; () banked
  5154  00A004  2730               	addwf	??_CreateMessageST7540& (0+255),f,b
  5155  00A006  0E00               	movlw	0
  5156  00A008  2331               	addwfc	(??_CreateMessageST7540+1)& (0+255),f,b
  5157  00A00A  0E4C               	movlw	low _bufferTXST7540UCAG
  5158  00A00C  0102               	movlb	2	; () banked
  5159  00A00E  2530               	addwf	??_CreateMessageST7540& (0+255),w,b
  5160  00A010  6EE1               	movwf	fsr1l,c
  5161  00A012  0E03               	movlw	high _bufferTXST7540UCAG
  5162  00A014  0102               	movlb	2	; () banked
  5163  00A016  2131               	addwfc	(??_CreateMessageST7540+1)& (0+255),w,b
  5164  00A018  6EE2               	movwf	fsr1h,c
  5165  00A01A  CFDF FFE7          	movff	indf2,indf1
  5166                           
  5167                           ; BSR set to: 2
  5168  00A01E  0102               	movlb	2	; () banked
  5169  00A020  2B34               	incf	CreateMessageST7540@dataBufLocUC& (0+255),f,b
  5170  00A022                     l6463:
  5171                           
  5172                           ; BSR set to: 2
  5173  00A022  0102               	movlb	2	; () banked
  5174  00A024  512D               	movf	CreateMessageST7540@dataLenUC& (0+255),w,b
  5175  00A026  0102               	movlb	2	; () banked
  5176  00A028  5D34               	subwf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5177  00A02A  A0D8               	btfss	status,0,c
  5178  00A02C  D7D9               	goto	l6459
  5179                           
  5180                           ; BSR set to: 2
  5181                           ;ST7540.c: 291: dataBufLocUC += 11;
  5182                           
  5183                           ; BSR set to: 2
  5184  00A02E  0E0B               	movlw	11
  5185  00A030  0102               	movlb	2	; () banked
  5186  00A032  2734               	addwf	CreateMessageST7540@dataBufLocUC& (0+255),f,b
  5187                           
  5188                           ; BSR set to: 2
  5189                           ;ST7540.c: 293: packetCRCUS = CRC16(bufferTXST7540UCAG + 4, 9 + dataLenUC - 2);
  5190  00A034  0E50               	movlw	low (_bufferTXST7540UCAG+4)
  5191  00A036  0102               	movlb	2	; () banked
  5192  00A038  6F1B               	movwf	CRC16@data_p& (0+255),b
  5193  00A03A  0E03               	movlw	high (_bufferTXST7540UCAG+4)
  5194  00A03C  0102               	movlb	2	; () banked
  5195  00A03E  6F1C               	movwf	(CRC16@data_p+1)& (0+255),b
  5196  00A040  0E07               	movlw	7
  5197  00A042  0102               	movlb	2	; () banked
  5198  00A044  252D               	addwf	CreateMessageST7540@dataLenUC& (0+255),w,b
  5199  00A046  0102               	movlb	2	; () banked
  5200  00A048  6F1D               	movwf	CRC16@length& (0+255),b
  5201  00A04A  0102               	movlb	2	; () banked
  5202  00A04C  6B1E               	clrf	(CRC16@length+1)& (0+255),b
  5203  00A04E  0E00               	movlw	0
  5204  00A050  231E               	addwfc	(CRC16@length+1)& (0+255),f,b
  5205  00A052  EC8A  F04D         	call	_CRC16	;wreg free
  5206  00A056  C21B  F232         	movff	?_CRC16,CreateMessageST7540@packetCRCUS
  5207  00A05A  C21C  F233         	movff	?_CRC16+1,CreateMessageST7540@packetCRCUS+1
  5208                           
  5209                           ;ST7540.c: 294: bufferTXST7540UCAG[dataBufLocUC++] = packetCRCUS >> 8;
  5210  00A05E  0102               	movlb	2	; () banked
  5211  00A060  5134               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5212  00A062  0D01               	mullw	1
  5213  00A064  0E4C               	movlw	low _bufferTXST7540UCAG
  5214  00A066  24F3               	addwf	prodl,w,c
  5215  00A068  6ED9               	movwf	fsr2l,c
  5216  00A06A  0E03               	movlw	high _bufferTXST7540UCAG
  5217  00A06C  20F4               	addwfc	prodh,w,c
  5218  00A06E  6EDA               	movwf	fsr2h,c
  5219  00A070  0102               	movlb	2	; () banked
  5220  00A072  5133               	movf	(CreateMessageST7540@packetCRCUS+1)& (0+255),w,b
  5221  00A074  6EDF               	movwf	indf2,c
  5222                           
  5223                           ; BSR set to: 2
  5224  00A076  0102               	movlb	2	; () banked
  5225  00A078  2B34               	incf	CreateMessageST7540@dataBufLocUC& (0+255),f,b
  5226                           
  5227                           ; BSR set to: 2
  5228                           ;ST7540.c: 295: bufferTXST7540UCAG[dataBufLocUC] = packetCRCUS;
  5229  00A07A  0102               	movlb	2	; () banked
  5230  00A07C  5134               	movf	CreateMessageST7540@dataBufLocUC& (0+255),w,b
  5231  00A07E  0D01               	mullw	1
  5232  00A080  0E4C               	movlw	low _bufferTXST7540UCAG
  5233  00A082  24F3               	addwf	prodl,w,c
  5234  00A084  6ED9               	movwf	fsr2l,c
  5235  00A086  0E03               	movlw	high _bufferTXST7540UCAG
  5236  00A088  20F4               	addwfc	prodh,w,c
  5237  00A08A  6EDA               	movwf	fsr2h,c
  5238  00A08C  C232  FFDF         	movff	CreateMessageST7540@packetCRCUS,indf2
  5239                           
  5240                           ; BSR set to: 2
  5241                           ;ST7540.c: 296: bufferTXLenUCG = dataBufLocUC;
  5242  00A090  C234  F2A7         	movff	CreateMessageST7540@dataBufLocUC,_bufferTXLenUCG
  5243                           
  5244                           ; BSR set to: 2
  5245  00A094  0012               	return		;funcret
  5246  00A096                     __end_of_CreateMessageST7540:
  5247                           	opt stack 0
  5248                           tblptru	equ	0xFF8
  5249                           tblptrh	equ	0xFF7
  5250                           tblptrl	equ	0xFF6
  5251                           tablat	equ	0xFF5
  5252                           prodh	equ	0xFF4
  5253                           prodl	equ	0xFF3
  5254                           intcon	equ	0xFF2
  5255                           postinc0	equ	0xFEE
  5256                           wreg	equ	0xFE8
  5257                           indf1	equ	0xFE7
  5258                           postinc1	equ	0xFE6
  5259                           postdec1	equ	0xFE5
  5260                           fsr1h	equ	0xFE2
  5261                           fsr1l	equ	0xFE1
  5262                           indf2	equ	0xFDF
  5263                           postinc2	equ	0xFDE
  5264                           postdec2	equ	0xFDD
  5265                           fsr2h	equ	0xFDA
  5266                           fsr2l	equ	0xFD9
  5267                           status	equ	0xFD8
  5268                           
  5269 ;; *************** function _CRC16 *****************
  5270 ;; Defined at:
  5271 ;;		line 19 in file "crc16.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  data_p          2   26[BANK2 ] PTR unsigned char 
  5274 ;;		 -> bufferRXST7540UCAG(75), bufferTXST7540UCAG(79), 
  5275 ;;  length          2   28[BANK2 ] unsigned short 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  crc             2   37[BANK2 ] unsigned int 
  5278 ;;  data            2   35[BANK2 ] unsigned int 
  5279 ;;  i               1   34[BANK2 ] unsigned char 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  2   26[BANK2 ] unsigned short 
  5282 ;; Registers used:
  5283 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5289 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5293 ;;Total ram usage:       13 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:    7
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_CreateMessageST7540
  5300 ;;		_CheckCRCST7540
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text26
  5305  009B14                     __ptext26:
  5306                           	opt stack 0
  5307  009B14                     _CRC16:
  5308                           	opt stack 18
  5309                           
  5310                           ;crc16.c: 21: unsigned char i;
  5311                           ;crc16.c: 22: unsigned int data;
  5312                           ;crc16.c: 23: unsigned int crc = 0xffff;
  5313                           
  5314                           ; BSR set to: 2
  5315                           ;incstack = 0
  5316  009B14  0102               	movlb	2	; () banked
  5317  009B16  6926               	setf	CRC16@crc& (0+255),b
  5318  009B18  6927               	setf	(CRC16@crc+1)& (0+255),b
  5319                           
  5320                           ; BSR set to: 2
  5321                           ;crc16.c: 25: if (length == 0)
  5322  009B1A  0102               	movlb	2	; () banked
  5323  009B1C  511D               	movf	CRC16@length& (0+255),w,b
  5324  009B1E  0102               	movlb	2	; () banked
  5325  009B20  111E               	iorwf	(CRC16@length+1)& (0+255),w,b
  5326  009B22  A4D8               	btfss	status,2,c
  5327  009B24  D009               	goto	l6265
  5328                           
  5329                           ; BSR set to: 2
  5330                           ;crc16.c: 26: return (~crc);
  5331  009B26  0102               	movlb	2	; () banked
  5332  009B28  1D26               	comf	CRC16@crc& (0+255),w,b
  5333  009B2A  0102               	movlb	2	; () banked
  5334  009B2C  6F1B               	movwf	?_CRC16& (0+255),b
  5335  009B2E  0102               	movlb	2	; () banked
  5336  009B30  1D27               	comf	(CRC16@crc+1)& (0+255),w,b
  5337  009B32  0102               	movlb	2	; () banked
  5338  009B34  6F1C               	movwf	(?_CRC16+1)& (0+255),b
  5339                           
  5340                           ; BSR set to: 2
  5341  009B36  0012               	return	
  5342  009B38                     l6265:
  5343                           
  5344                           ; BSR set to: 2
  5345                           ;crc16.c: 29: {
  5346                           ;crc16.c: 30: for (i=0, data=(unsigned int)0xff & *data_p++;
  5347  009B38  0E00               	movlw	0
  5348  009B3A  0102               	movlb	2	; () banked
  5349  009B3C  6F23               	movwf	CRC16@i& (0+255),b
  5350                           
  5351                           ; BSR set to: 2
  5352  009B3E  C21B  FFD9         	movff	CRC16@data_p,fsr2l
  5353  009B42  C21C  FFDA         	movff	CRC16@data_p+1,fsr2h
  5354  009B46  50DF               	movf	indf2,w,c
  5355  009B48  0102               	movlb	2	; () banked
  5356  009B4A  6F1F               	movwf	??_CRC16& (0+255),b
  5357  009B4C  0102               	movlb	2	; () banked
  5358  009B4E  511F               	movf	??_CRC16& (0+255),w,b
  5359  009B50  0102               	movlb	2	; () banked
  5360  009B52  6F24               	movwf	CRC16@data& (0+255),b
  5361  009B54  6B25               	clrf	(CRC16@data+1)& (0+255),b
  5362                           
  5363                           ; BSR set to: 2
  5364  009B56  0102               	movlb	2	; () banked
  5365  009B58  4B1B               	infsnz	CRC16@data_p& (0+255),f,b
  5366  009B5A  2B1C               	incf	(CRC16@data_p+1)& (0+255),f,b
  5367  009B5C                     l6271:
  5368                           
  5369                           ; BSR set to: 2
  5370                           ;crc16.c: 31: i < 8;
  5371                           ;crc16.c: 32: i++, data >>= 1)
  5372  009B5C  0E07               	movlw	7
  5373  009B5E  0102               	movlb	2	; () banked
  5374  009B60  6523               	cpfsgt	CRC16@i& (0+255),b
  5375  009B62  D001               	goto	l6275
  5376  009B64  D041               	goto	l6283
  5377  009B66                     l6275:
  5378                           
  5379                           ; BSR set to: 2
  5380                           ;crc16.c: 33: {
  5381                           ;crc16.c: 34: if ((crc & 0x0001) ^ (data & 0x0001))
  5382  009B66  0E01               	movlw	1
  5383  009B68  0102               	movlb	2	; () banked
  5384  009B6A  1524               	andwf	CRC16@data& (0+255),w,b
  5385  009B6C  0102               	movlb	2	; () banked
  5386  009B6E  6F1F               	movwf	??_CRC16& (0+255),b
  5387  009B70  0E00               	movlw	0
  5388  009B72  0102               	movlb	2	; () banked
  5389  009B74  1525               	andwf	(CRC16@data+1)& (0+255),w,b
  5390  009B76  0102               	movlb	2	; () banked
  5391  009B78  6F20               	movwf	(??_CRC16+1)& (0+255),b
  5392  009B7A  0E01               	movlw	1
  5393  009B7C  0102               	movlb	2	; () banked
  5394  009B7E  1526               	andwf	CRC16@crc& (0+255),w,b
  5395  009B80  0102               	movlb	2	; () banked
  5396  009B82  6F21               	movwf	(??_CRC16+2)& (0+255),b
  5397  009B84  0E00               	movlw	0
  5398  009B86  0102               	movlb	2	; () banked
  5399  009B88  1527               	andwf	(CRC16@crc+1)& (0+255),w,b
  5400  009B8A  0102               	movlb	2	; () banked
  5401  009B8C  6F22               	movwf	(??_CRC16+3)& (0+255),b
  5402  009B8E  0102               	movlb	2	; () banked
  5403  009B90  511F               	movf	??_CRC16& (0+255),w,b
  5404  009B92  0102               	movlb	2	; () banked
  5405  009B94  1B21               	xorwf	(??_CRC16+2)& (0+255),f,b
  5406  009B96  0102               	movlb	2	; () banked
  5407  009B98  5120               	movf	(??_CRC16+1)& (0+255),w,b
  5408  009B9A  0102               	movlb	2	; () banked
  5409  009B9C  1B22               	xorwf	(??_CRC16+3)& (0+255),f,b
  5410  009B9E  0102               	movlb	2	; () banked
  5411  009BA0  5121               	movf	(??_CRC16+2)& (0+255),w,b
  5412  009BA2  0102               	movlb	2	; () banked
  5413  009BA4  1122               	iorwf	(??_CRC16+3)& (0+255),w,b
  5414  009BA6  B4D8               	btfsc	status,2,c
  5415  009BA8  D014               	goto	l6279
  5416                           
  5417                           ; BSR set to: 2
  5418                           ;crc16.c: 35: crc = (crc >> 1) ^ 0x8408;
  5419  009BAA  90D8               	bcf	status,0,c
  5420  009BAC  0102               	movlb	2	; () banked
  5421  009BAE  3127               	rrcf	(CRC16@crc+1)& (0+255),w,b
  5422  009BB0  0102               	movlb	2	; () banked
  5423  009BB2  6F20               	movwf	(??_CRC16+1)& (0+255),b
  5424  009BB4  0102               	movlb	2	; () banked
  5425  009BB6  3126               	rrcf	CRC16@crc& (0+255),w,b
  5426  009BB8  0102               	movlb	2	; () banked
  5427  009BBA  6F1F               	movwf	??_CRC16& (0+255),b
  5428  009BBC  0E08               	movlw	8
  5429  009BBE  0102               	movlb	2	; () banked
  5430  009BC0  191F               	xorwf	??_CRC16& (0+255),w,b
  5431  009BC2  0102               	movlb	2	; () banked
  5432  009BC4  6F26               	movwf	CRC16@crc& (0+255),b
  5433  009BC6  0E84               	movlw	132
  5434  009BC8  0102               	movlb	2	; () banked
  5435  009BCA  1920               	xorwf	(??_CRC16+1)& (0+255),w,b
  5436  009BCC  0102               	movlb	2	; () banked
  5437  009BCE  6F27               	movwf	(CRC16@crc+1)& (0+255),b
  5438  009BD0  D004               	goto	l611
  5439  009BD2                     l6279:
  5440                           
  5441                           ; BSR set to: 2
  5442                           ;crc16.c: 36: else crc >>= 1;
  5443  009BD2  0102               	movlb	2	; () banked
  5444  009BD4  90D8               	bcf	status,0,c
  5445  009BD6  3327               	rrcf	(CRC16@crc+1)& (0+255),f,b
  5446  009BD8  3326               	rrcf	CRC16@crc& (0+255),f,b
  5447  009BDA                     l611:
  5448                           
  5449                           ; BSR set to: 2
  5450  009BDA  0102               	movlb	2	; () banked
  5451  009BDC  2B23               	incf	CRC16@i& (0+255),f,b
  5452  009BDE  0102               	movlb	2	; () banked
  5453  009BE0  90D8               	bcf	status,0,c
  5454  009BE2  3325               	rrcf	(CRC16@data+1)& (0+255),f,b
  5455  009BE4  3324               	rrcf	CRC16@data& (0+255),f,b
  5456  009BE6  D7BA               	goto	l6271
  5457  009BE8                     l6283:
  5458                           
  5459                           ; BSR set to: 2
  5460                           ;crc16.c: 37: }
  5461                           ;crc16.c: 38: } while (--length);
  5462  009BE8  0102               	movlb	2	; () banked
  5463  009BEA  071D               	decf	CRC16@length& (0+255),f,b
  5464  009BEC  A0D8               	btfss	status,0,c
  5465  009BEE  071E               	decf	(CRC16@length+1)& (0+255),f,b
  5466  009BF0  0102               	movlb	2	; () banked
  5467  009BF2  511D               	movf	CRC16@length& (0+255),w,b
  5468  009BF4  0102               	movlb	2	; () banked
  5469  009BF6  111E               	iorwf	(CRC16@length+1)& (0+255),w,b
  5470  009BF8  A4D8               	btfss	status,2,c
  5471  009BFA  D79E               	goto	l6265
  5472                           
  5473                           ; BSR set to: 2
  5474                           ;crc16.c: 40: crc = ~crc;
  5475                           
  5476                           ; BSR set to: 2
  5477  009BFC  0102               	movlb	2	; () banked
  5478  009BFE  1F26               	comf	CRC16@crc& (0+255),f,b
  5479  009C00  1F27               	comf	(CRC16@crc+1)& (0+255),f,b
  5480                           
  5481                           ; BSR set to: 2
  5482                           ;crc16.c: 41: data = crc;
  5483  009C02  C226  F224         	movff	CRC16@crc,CRC16@data
  5484  009C06  C227  F225         	movff	CRC16@crc+1,CRC16@data+1
  5485                           
  5486                           ; BSR set to: 2
  5487                           ;crc16.c: 42: crc = (crc << 8) | (data >> 8 & 0xff);
  5488  009C0A  C224  F21F         	movff	CRC16@data,??_CRC16
  5489  009C0E  C225  F220         	movff	CRC16@data+1,??_CRC16+1
  5490  009C12  C220  F21F         	movff	??_CRC16+1,??_CRC16
  5491  009C16  0102               	movlb	2	; () banked
  5492  009C18  6B20               	clrf	(??_CRC16+1)& (0+255),b
  5493  009C1A  0102               	movlb	2	; () banked
  5494  009C1C  511F               	movf	??_CRC16& (0+255),w,b
  5495  009C1E  C226  F221         	movff	CRC16@crc,??_CRC16+2
  5496  009C22  C227  F222         	movff	CRC16@crc+1,??_CRC16+3
  5497  009C26  C221  F222         	movff	??_CRC16+2,??_CRC16+3
  5498  009C2A  0102               	movlb	2	; () banked
  5499  009C2C  6B21               	clrf	(??_CRC16+2)& (0+255),b
  5500  009C2E  0102               	movlb	2	; () banked
  5501  009C30  1121               	iorwf	(??_CRC16+2)& (0+255),w,b
  5502  009C32  0102               	movlb	2	; () banked
  5503  009C34  6F26               	movwf	CRC16@crc& (0+255),b
  5504  009C36  0102               	movlb	2	; () banked
  5505  009C38  5122               	movf	(??_CRC16+3)& (0+255),w,b
  5506  009C3A  0102               	movlb	2	; () banked
  5507  009C3C  6F27               	movwf	(CRC16@crc+1)& (0+255),b
  5508                           
  5509                           ; BSR set to: 2
  5510                           ;crc16.c: 44: return (crc);
  5511  009C3E  C226  F21B         	movff	CRC16@crc,?_CRC16
  5512  009C42  C227  F21C         	movff	CRC16@crc+1,?_CRC16+1
  5513  009C46  0012               	return	
  5514  009C48                     __end_of_CRC16:
  5515                           	opt stack 0
  5516                           tblptru	equ	0xFF8
  5517                           tblptrh	equ	0xFF7
  5518                           tblptrl	equ	0xFF6
  5519                           tablat	equ	0xFF5
  5520                           prodh	equ	0xFF4
  5521                           prodl	equ	0xFF3
  5522                           intcon	equ	0xFF2
  5523                           postinc0	equ	0xFEE
  5524                           wreg	equ	0xFE8
  5525                           indf1	equ	0xFE7
  5526                           postinc1	equ	0xFE6
  5527                           postdec1	equ	0xFE5
  5528                           fsr1h	equ	0xFE2
  5529                           fsr1l	equ	0xFE1
  5530                           indf2	equ	0xFDF
  5531                           postinc2	equ	0xFDE
  5532                           postdec2	equ	0xFDD
  5533                           fsr2h	equ	0xFDA
  5534                           fsr2l	equ	0xFD9
  5535                           status	equ	0xFD8
  5536                           
  5537 ;; *************** function _CollisionCheck *****************
  5538 ;; Defined at:
  5539 ;;		line 206 in file "mastercomms.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;		None
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  delayValueUS    2   41[BANK2 ] unsigned short 
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, status,2, status,0, cstack
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;Total ram usage:        2 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:    9
  5560 ;; This function calls:
  5561 ;;		_LineIdleST7540
  5562 ;;		_MangleSerial
  5563 ;;		_WaitTickCount
  5564 ;; This function is called by:
  5565 ;;		_ProcessMasterComms
  5566 ;;		_CreateAndSend
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text27
  5571  00B1EE                     __ptext27:
  5572                           	opt stack 0
  5573  00B1EE                     _CollisionCheck:
  5574                           	opt stack 18
  5575                           
  5576                           ;mastercomms.c: 207: unsigned short delayValueUS;
  5577                           ;mastercomms.c: 209: delayValueUS = MangleSerial(iscSerialUSG) & 0b0000001111111111;
  5578                           
  5579                           ; BSR set to: 2
  5580                           ;incstack = 0
  5581  00B1EE  C2A9  F21B         	movff	_iscSerialUSG,MangleSerial@mangleValueUS
  5582  00B1F2  C2AA  F21C         	movff	_iscSerialUSG+1,MangleSerial@mangleValueUS+1
  5583  00B1F6  ECBE  F04E         	call	_MangleSerial	;wreg free
  5584  00B1FA  0EFF               	movlw	255
  5585  00B1FC  0102               	movlb	2	; () banked
  5586  00B1FE  151B               	andwf	?_MangleSerial& (0+255),w,b
  5587  00B200  0102               	movlb	2	; () banked
  5588  00B202  6F2A               	movwf	CollisionCheck@delayValueUS& (0+255),b
  5589  00B204  0E03               	movlw	3
  5590  00B206  0102               	movlb	2	; () banked
  5591  00B208  151C               	andwf	(?_MangleSerial+1)& (0+255),w,b
  5592  00B20A  0102               	movlb	2	; () banked
  5593  00B20C  6F2B               	movwf	(CollisionCheck@delayValueUS+1)& (0+255),b
  5594  00B20E                     l859:
  5595                           
  5596                           ;mastercomms.c: 211: WaitTickCount(delayValueUS);
  5597  00B20E  C22A  F21B         	movff	CollisionCheck@delayValueUS,WaitTickCount@tickCountUS
  5598  00B212  C22B  F21C         	movff	CollisionCheck@delayValueUS+1,WaitTickCount@tickCountUS+1
  5599  00B216  EC7D  F05A         	call	_WaitTickCount	;wreg free
  5600                           
  5601                           ;mastercomms.c: 212: }while(!LineIdleST7540());
  5602  00B21A  EC11  F05B         	call	_LineIdleST7540	;wreg free
  5603  00B21E  0900               	iorlw	0
  5604  00B220  A4D8               	btfss	status,2,c
  5605  00B222  0012               	return	
  5606  00B224  D7F4               	goto	l859
  5607  00B226                     __end_of_CollisionCheck:
  5608                           	opt stack 0
  5609                           tblptru	equ	0xFF8
  5610                           tblptrh	equ	0xFF7
  5611                           tblptrl	equ	0xFF6
  5612                           tablat	equ	0xFF5
  5613                           prodh	equ	0xFF4
  5614                           prodl	equ	0xFF3
  5615                           intcon	equ	0xFF2
  5616                           postinc0	equ	0xFEE
  5617                           wreg	equ	0xFE8
  5618                           indf1	equ	0xFE7
  5619                           postinc1	equ	0xFE6
  5620                           postdec1	equ	0xFE5
  5621                           fsr1h	equ	0xFE2
  5622                           fsr1l	equ	0xFE1
  5623                           indf2	equ	0xFDF
  5624                           postinc2	equ	0xFDE
  5625                           postdec2	equ	0xFDD
  5626                           fsr2h	equ	0xFDA
  5627                           fsr2l	equ	0xFD9
  5628                           status	equ	0xFD8
  5629                           
  5630 ;; *************** function _MangleSerial *****************
  5631 ;; Defined at:
  5632 ;;		line 180 in file "mastercomms.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  mangleValueU    2   26[BANK2 ] unsigned short 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  cycleCountUC    1   40[BANK2 ] unsigned char 
  5637 ;;  b12UC           1   37[BANK2 ] unsigned char 
  5638 ;;  b10UC           1   36[BANK2 ] unsigned char 
  5639 ;;  b6UC            1   35[BANK2 ] unsigned char 
  5640 ;;  b4UC            1   34[BANK2 ] unsigned char 
  5641 ;;  b2UC            1   33[BANK2 ] unsigned char 
  5642 ;;  b1UC            1   32[BANK2 ] unsigned char 
  5643 ;;  b0UC            1   31[BANK2 ] unsigned char 
  5644 ;;  xorOutputUC     1   30[BANK2 ] unsigned char 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  2   26[BANK2 ] unsigned short 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5654 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;Total ram usage:       15 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:    7
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_CollisionCheck
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text28
  5669  009D7C                     __ptext28:
  5670                           	opt stack 0
  5671  009D7C                     _MangleSerial:
  5672                           	opt stack 19
  5673                           
  5674                           ;mastercomms.c: 181: unsigned char cycleCountUC;
  5675                           ;mastercomms.c: 182: unsigned char xorOutputUC;
  5676                           ;mastercomms.c: 183: unsigned char b0UC, b1UC, b2UC, b4UC, b6UC, b10UC, b12UC;
  5677                           ;mastercomms.c: 185: __nop();
  5678                           
  5679                           ;incstack = 0
  5680  009D7C  F000               	nop	
  5681                           
  5682                           ;mastercomms.c: 187: for(cycleCountUC = 0; cycleCountUC < 160; cycleCountUC++){
  5683  009D7E  0E00               	movlw	0
  5684  009D80  0102               	movlb	2	; () banked
  5685  009D82  6F29               	movwf	MangleSerial@cycleCountUC& (0+255),b
  5686  009D84                     l6345:
  5687                           
  5688                           ; BSR set to: 2
  5689  009D84  0E9F               	movlw	159
  5690  009D86  0102               	movlb	2	; () banked
  5691  009D88  6529               	cpfsgt	MangleSerial@cycleCountUC& (0+255),b
  5692  009D8A  D001               	goto	l6349
  5693  009D8C  D077               	goto	l850
  5694  009D8E                     l6349:
  5695                           
  5696                           ; BSR set to: 2
  5697                           ;mastercomms.c: 188: b0UC = (mangleValueUS & 0b0000000000000001)?1:0;
  5698  009D8E  0102               	movlb	2	; () banked
  5699  009D90  A11B               	btfss	MangleSerial@mangleValueUS& (0+255),0,b
  5700  009D92  D002               	goto	u6840
  5701  009D94  0E01               	movlw	1
  5702  009D96  D001               	goto	u6850
  5703  009D98                     u6840:
  5704  009D98  0E00               	movlw	0
  5705  009D9A                     u6850:
  5706  009D9A  0102               	movlb	2	; () banked
  5707  009D9C  6F20               	movwf	MangleSerial@b0UC& (0+255),b
  5708                           
  5709                           ;mastercomms.c: 189: b1UC = (mangleValueUS & 0b0000000000000010)?1:0;
  5710  009D9E  0102               	movlb	2	; () banked
  5711  009DA0  A31B               	btfss	MangleSerial@mangleValueUS& (0+255),1,b
  5712  009DA2  D002               	goto	u6860
  5713  009DA4  0E01               	movlw	1
  5714  009DA6  D001               	goto	u6870
  5715  009DA8                     u6860:
  5716  009DA8  0E00               	movlw	0
  5717  009DAA                     u6870:
  5718  009DAA  0102               	movlb	2	; () banked
  5719  009DAC  6F21               	movwf	MangleSerial@b1UC& (0+255),b
  5720                           
  5721                           ;mastercomms.c: 190: b2UC = (mangleValueUS & 0b0000000000000100)?1:0;
  5722  009DAE  0102               	movlb	2	; () banked
  5723  009DB0  A51B               	btfss	MangleSerial@mangleValueUS& (0+255),2,b
  5724  009DB2  D002               	goto	u6880
  5725  009DB4  0E01               	movlw	1
  5726  009DB6  D001               	goto	u6890
  5727  009DB8                     u6880:
  5728  009DB8  0E00               	movlw	0
  5729  009DBA                     u6890:
  5730  009DBA  0102               	movlb	2	; () banked
  5731  009DBC  6F22               	movwf	MangleSerial@b2UC& (0+255),b
  5732                           
  5733                           ;mastercomms.c: 191: b4UC = (mangleValueUS & 0b0000000000010000)?1:0;
  5734  009DBE  0102               	movlb	2	; () banked
  5735  009DC0  A91B               	btfss	MangleSerial@mangleValueUS& (0+255),4,b
  5736  009DC2  D002               	goto	u6900
  5737  009DC4  0E01               	movlw	1
  5738  009DC6  D001               	goto	u6910
  5739  009DC8                     u6900:
  5740  009DC8  0E00               	movlw	0
  5741  009DCA                     u6910:
  5742  009DCA  0102               	movlb	2	; () banked
  5743  009DCC  6F23               	movwf	MangleSerial@b4UC& (0+255),b
  5744                           
  5745                           ;mastercomms.c: 192: b6UC = (mangleValueUS & 0b0000000001000000)?1:0;
  5746  009DCE  0102               	movlb	2	; () banked
  5747  009DD0  AD1B               	btfss	MangleSerial@mangleValueUS& (0+255),6,b
  5748  009DD2  D002               	goto	u6920
  5749  009DD4  0E01               	movlw	1
  5750  009DD6  D001               	goto	u6930
  5751  009DD8                     u6920:
  5752  009DD8  0E00               	movlw	0
  5753  009DDA                     u6930:
  5754  009DDA  0102               	movlb	2	; () banked
  5755  009DDC  6F24               	movwf	MangleSerial@b6UC& (0+255),b
  5756                           
  5757                           ;mastercomms.c: 193: b10UC = (mangleValueUS & 0b0000010000000000)?1:0;
  5758  009DDE  0102               	movlb	2	; () banked
  5759  009DE0  A51C               	btfss	(MangleSerial@mangleValueUS+1)& (0+255),2,b
  5760  009DE2  D002               	goto	u6940
  5761  009DE4  0E01               	movlw	1
  5762  009DE6  D001               	goto	u6950
  5763  009DE8                     u6940:
  5764  009DE8  0E00               	movlw	0
  5765  009DEA                     u6950:
  5766  009DEA  0102               	movlb	2	; () banked
  5767  009DEC  6F25               	movwf	MangleSerial@b10UC& (0+255),b
  5768                           
  5769                           ;mastercomms.c: 194: b12UC = (mangleValueUS & 0b0001000000000000)?1:0;
  5770  009DEE  0102               	movlb	2	; () banked
  5771  009DF0  A91C               	btfss	(MangleSerial@mangleValueUS+1)& (0+255),4,b
  5772  009DF2  D002               	goto	u6960
  5773  009DF4  0E01               	movlw	1
  5774  009DF6  D001               	goto	u6970
  5775  009DF8                     u6960:
  5776  009DF8  0E00               	movlw	0
  5777  009DFA                     u6970:
  5778  009DFA  0102               	movlb	2	; () banked
  5779  009DFC  6F26               	movwf	MangleSerial@b12UC& (0+255),b
  5780                           
  5781                           ; BSR set to: 2
  5782                           ;mastercomms.c: 195: xorOutputUC = b0UC ^ b1UC ^ b2UC ^ b4UC ^ b6UC ^ b10UC ^ b12UC;
  5783  009DFE  0102               	movlb	2	; () banked
  5784  009E00  5120               	movf	MangleSerial@b0UC& (0+255),w,b
  5785  009E02  0102               	movlb	2	; () banked
  5786  009E04  1921               	xorwf	MangleSerial@b1UC& (0+255),w,b
  5787  009E06  0102               	movlb	2	; () banked
  5788  009E08  1922               	xorwf	MangleSerial@b2UC& (0+255),w,b
  5789  009E0A  0102               	movlb	2	; () banked
  5790  009E0C  1923               	xorwf	MangleSerial@b4UC& (0+255),w,b
  5791  009E0E  0102               	movlb	2	; () banked
  5792  009E10  1924               	xorwf	MangleSerial@b6UC& (0+255),w,b
  5793  009E12  0102               	movlb	2	; () banked
  5794  009E14  1925               	xorwf	MangleSerial@b10UC& (0+255),w,b
  5795  009E16  0102               	movlb	2	; () banked
  5796  009E18  1926               	xorwf	MangleSerial@b12UC& (0+255),w,b
  5797  009E1A  0102               	movlb	2	; () banked
  5798  009E1C  6F1F               	movwf	MangleSerial@xorOutputUC& (0+255),b
  5799                           
  5800                           ; BSR set to: 2
  5801                           ;mastercomms.c: 196: mangleValueUS = (mangleValueUS >> 1) | (xorOutputUC?0b1000000000000
      +                          000:0);
  5802  009E1E  0102               	movlb	2	; () banked
  5803  009E20  511F               	movf	MangleSerial@xorOutputUC& (0+255),w,b
  5804  009E22  0102               	movlb	2	; () banked
  5805  009E24  A4D8               	btfss	status,2,c
  5806  009E26  D002               	goto	l6357
  5807                           
  5808                           ; BSR set to: 2
  5809  009E28  0E00               	movlw	0
  5810  009E2A  D001               	goto	L5
  5811  009E2C                     l6357:
  5812                           
  5813                           ; BSR set to: 2
  5814  009E2C  0E80               	movlw	128
  5815  009E2E                     L5:
  5816  009E2E  0102               	movlb	2	; () banked
  5817  009E30  6F28               	movwf	(_MangleSerial$2321+1)& (0+255),b
  5818  009E32  0E00               	movlw	0
  5819  009E34  6F27               	movwf	_MangleSerial$2321& (0+255),b
  5820                           
  5821                           ; BSR set to: 2
  5822                           
  5823                           ; BSR set to: 2
  5824  009E36  90D8               	bcf	status,0,c
  5825  009E38  0102               	movlb	2	; () banked
  5826  009E3A  311C               	rrcf	(MangleSerial@mangleValueUS+1)& (0+255),w,b
  5827  009E3C  0102               	movlb	2	; () banked
  5828  009E3E  6F1E               	movwf	(??_MangleSerial+1)& (0+255),b
  5829  009E40  0102               	movlb	2	; () banked
  5830  009E42  311B               	rrcf	MangleSerial@mangleValueUS& (0+255),w,b
  5831  009E44  0102               	movlb	2	; () banked
  5832  009E46  6F1D               	movwf	??_MangleSerial& (0+255),b
  5833  009E48  0102               	movlb	2	; () banked
  5834  009E4A  5127               	movf	_MangleSerial$2321& (0+255),w,b
  5835  009E4C  0102               	movlb	2	; () banked
  5836  009E4E  111D               	iorwf	??_MangleSerial& (0+255),w,b
  5837  009E50  0102               	movlb	2	; () banked
  5838  009E52  6F1B               	movwf	MangleSerial@mangleValueUS& (0+255),b
  5839  009E54  0102               	movlb	2	; () banked
  5840  009E56  5128               	movf	(_MangleSerial$2321+1)& (0+255),w,b
  5841  009E58  0102               	movlb	2	; () banked
  5842  009E5A  111E               	iorwf	(??_MangleSerial+1)& (0+255),w,b
  5843  009E5C  0102               	movlb	2	; () banked
  5844  009E5E  6F1C               	movwf	(MangleSerial@mangleValueUS+1)& (0+255),b
  5845                           
  5846                           ; BSR set to: 2
  5847                           ;mastercomms.c: 197: if(!mangleValueUS)
  5848  009E60  0102               	movlb	2	; () banked
  5849  009E62  511B               	movf	MangleSerial@mangleValueUS& (0+255),w,b
  5850  009E64  0102               	movlb	2	; () banked
  5851  009E66  111C               	iorwf	(MangleSerial@mangleValueUS+1)& (0+255),w,b
  5852  009E68  A4D8               	btfss	status,2,c
  5853  009E6A  D005               	goto	l6365
  5854                           
  5855                           ; BSR set to: 2
  5856                           ;mastercomms.c: 198: mangleValueUS = 1;
  5857  009E6C  0E00               	movlw	0
  5858  009E6E  0102               	movlb	2	; () banked
  5859  009E70  6F1C               	movwf	(MangleSerial@mangleValueUS+1)& (0+255),b
  5860  009E72  0E01               	movlw	1
  5861  009E74  6F1B               	movwf	MangleSerial@mangleValueUS& (0+255),b
  5862  009E76                     l6365:
  5863                           
  5864                           ; BSR set to: 2
  5865  009E76  0102               	movlb	2	; () banked
  5866  009E78  2B29               	incf	MangleSerial@cycleCountUC& (0+255),f,b
  5867  009E7A  D784               	goto	l6345
  5868  009E7C                     l850:
  5869                           
  5870                           ; BSR set to: 2
  5871                           ;mastercomms.c: 199: }
  5872                           ;mastercomms.c: 201: __nop();
  5873  009E7C  F000               	nop	
  5874                           
  5875                           ;mastercomms.c: 203: return mangleValueUS;
  5876  009E7E  C21B  F21B         	movff	MangleSerial@mangleValueUS,?_MangleSerial
  5877  009E82  C21C  F21C         	movff	MangleSerial@mangleValueUS+1,?_MangleSerial+1
  5878  009E86  0012               	return		;funcret
  5879  009E88                     __end_of_MangleSerial:
  5880                           	opt stack 0
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           prodh	equ	0xFF4
  5886                           prodl	equ	0xFF3
  5887                           intcon	equ	0xFF2
  5888                           postinc0	equ	0xFEE
  5889                           wreg	equ	0xFE8
  5890                           indf1	equ	0xFE7
  5891                           postinc1	equ	0xFE6
  5892                           postdec1	equ	0xFE5
  5893                           fsr1h	equ	0xFE2
  5894                           fsr1l	equ	0xFE1
  5895                           indf2	equ	0xFDF
  5896                           postinc2	equ	0xFDE
  5897                           postdec2	equ	0xFDD
  5898                           fsr2h	equ	0xFDA
  5899                           fsr2l	equ	0xFD9
  5900                           status	equ	0xFD8
  5901                           
  5902 ;; *************** function _LineIdleST7540 *****************
  5903 ;; Defined at:
  5904 ;;		line 242 in file "ST7540.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;		None
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;		None
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  1    wreg      unsigned char 
  5911 ;; Registers used:
  5912 ;;		wreg
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5922 ;;Total ram usage:        0 bytes
  5923 ;; Hardware stack levels used:    1
  5924 ;; Hardware stack levels required when called:    7
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_RetransmitMessageSt7540
  5929 ;;		_CollisionCheck
  5930 ;;		_CreateAndSend
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text29
  5935  00B622                     __ptext29:
  5936                           	opt stack 0
  5937  00B622                     _LineIdleST7540:
  5938                           	opt stack 20
  5939                           
  5940                           ;ST7540.c: 243: if(PORTCbits.RC2)
  5941                           
  5942                           ;incstack = 0
  5943  00B622  A482               	btfss	3970,2,c	;volatile
  5944  00B624  D002               	goto	l6311
  5945                           
  5946                           ;ST7540.c: 244: return 0;
  5947  00B626  0E00               	movlw	0
  5948  00B628  0012               	return	
  5949  00B62A                     l6311:
  5950                           
  5951                           ;ST7540.c: 245: return 1;
  5952  00B62A  0E01               	movlw	1
  5953  00B62C  0012               	return	
  5954  00B62E                     __end_of_LineIdleST7540:
  5955                           	opt stack 0
  5956                           tblptru	equ	0xFF8
  5957                           tblptrh	equ	0xFF7
  5958                           tblptrl	equ	0xFF6
  5959                           tablat	equ	0xFF5
  5960                           prodh	equ	0xFF4
  5961                           prodl	equ	0xFF3
  5962                           intcon	equ	0xFF2
  5963                           postinc0	equ	0xFEE
  5964                           wreg	equ	0xFE8
  5965                           indf1	equ	0xFE7
  5966                           postinc1	equ	0xFE6
  5967                           postdec1	equ	0xFE5
  5968                           fsr1h	equ	0xFE2
  5969                           fsr1l	equ	0xFE1
  5970                           indf2	equ	0xFDF
  5971                           postinc2	equ	0xFDE
  5972                           postdec2	equ	0xFDD
  5973                           fsr2h	equ	0xFDA
  5974                           fsr2l	equ	0xFD9
  5975                           status	equ	0xFD8
  5976                           
  5977 ;; *************** function _ForceFiringMode *****************
  5978 ;; Defined at:
  5979 ;;		line 147 in file "mastercomms.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;  forceModeUC     1    wreg     unsigned char 
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;  forceModeUC     1   28[BANK2 ] unsigned char 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      void 
  5986 ;; Registers used:
  5987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;Total ram usage:        1 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    9
  6000 ;; This function calls:
  6001 ;;		_ClearPastValues
  6002 ;;		_ResetBoosterStates
  6003 ;; This function is called by:
  6004 ;;		_ProcessMasterComms
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text30
  6009  00AFF0                     __ptext30:
  6010                           	opt stack 0
  6011  00AFF0                     _ForceFiringMode:
  6012                           	opt stack 20
  6013                           
  6014                           ;incstack = 0
  6015                           ;ForceFiringMode@forceModeUC stored from wreg
  6016  00AFF0  0102               	movlb	2	; () banked
  6017  00AFF2  6F1D               	movwf	ForceFiringMode@forceModeUC& (0+255),b
  6018                           
  6019                           ;mastercomms.c: 149: if(forceModeUC == 0 && !(statusFlagsUSLG & 0b0100000000000000000000
      +                          00)){
  6020  00AFF4  0102               	movlb	2	; () banked
  6021  00AFF6  511D               	movf	ForceFiringMode@forceModeUC& (0+255),w,b
  6022  00AFF8  0102               	movlb	2	; () banked
  6023  00AFFA  A4D8               	btfss	status,2,c
  6024  00AFFC  D009               	goto	l5245
  6025                           
  6026                           ; BSR set to: 2
  6027  00AFFE  0102               	movlb	2	; () banked
  6028  00B000  BD8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
  6029  00B002  D006               	goto	l5245
  6030                           
  6031                           ; BSR set to: 2
  6032                           ;mastercomms.c: 150: LATDbits.LATD7 = 0;
  6033  00B004  9E8C               	bcf	3980,7,c	;volatile
  6034                           
  6035                           ; BSR set to: 2
  6036                           ;mastercomms.c: 151: ResetBoosterStates();
  6037  00B006  EC6E  F05A         	call	_ResetBoosterStates	;wreg free
  6038                           
  6039                           ;mastercomms.c: 152: ClearPastValues();
  6040  00B00A  EC5F  F05A         	call	_ClearPastValues	;wreg free
  6041                           
  6042                           ;mastercomms.c: 153: }else{
  6043  00B00E  0012               	return	
  6044  00B010                     l5245:
  6045                           
  6046                           ;mastercomms.c: 154: statusFlagsUSLG |= 0b000000000000000000000010;
  6047  00B010  0102               	movlb	2	; () banked
  6048  00B012  838A               	bsf	_statusFlagsUSLG& (0+255),1,b	;volatile
  6049                           
  6050                           ;mastercomms.c: 155: statusFlagsUSLG &= ~0b001000000000000000000000;
  6051  00B014  0102               	movlb	2	; () banked
  6052  00B016  9B8C               	bcf	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
  6053                           
  6054                           ;mastercomms.c: 156: statusFlagsUSLG |= 0b000000001000000000000000;
  6055  00B018  0102               	movlb	2	; () banked
  6056  00B01A  8F8B               	bsf	(_statusFlagsUSLG+1)& (0+255),7,b	;volatile
  6057                           
  6058                           ; BSR set to: 2
  6059                           ;mastercomms.c: 157: if(!(statusFlagsUSLG & 0b000000000000000000100000) ||((statusFlagsU
      +                          SLG & 0b000000000000000000100000)&& (ISO_COUNTER >= 15)))
  6060  00B01C  0102               	movlb	2	; () banked
  6061  00B01E  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
  6062  00B020  D007               	goto	l839
  6063                           
  6064                           ; BSR set to: 2
  6065  00B022  0102               	movlb	2	; () banked
  6066  00B024  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
  6067  00B026  D005               	goto	l837
  6068                           
  6069                           ; BSR set to: 2
  6070  00B028  0E0E               	movlw	14
  6071  00B02A  0102               	movlb	2	; () banked
  6072  00B02C  65A1               	cpfsgt	_ISO_COUNTER& (0+255),b
  6073  00B02E  D001               	goto	l837
  6074  00B030                     l839:
  6075                           
  6076                           ; BSR set to: 2
  6077                           ;mastercomms.c: 158: LATDbits.LATD7 = 1;
  6078  00B030  8E8C               	bsf	3980,7,c	;volatile
  6079  00B032                     l837:
  6080                           
  6081                           ; BSR set to: 2
  6082                           ;mastercomms.c: 159: LATBbits.LATB3 = 0;
  6083  00B032  968A               	bcf	3978,3,c	;volatile
  6084  00B034  0012               	return	
  6085  00B036                     __end_of_ForceFiringMode:
  6086                           	opt stack 0
  6087                           tblptru	equ	0xFF8
  6088                           tblptrh	equ	0xFF7
  6089                           tblptrl	equ	0xFF6
  6090                           tablat	equ	0xFF5
  6091                           prodh	equ	0xFF4
  6092                           prodl	equ	0xFF3
  6093                           intcon	equ	0xFF2
  6094                           postinc0	equ	0xFEE
  6095                           wreg	equ	0xFE8
  6096                           indf1	equ	0xFE7
  6097                           postinc1	equ	0xFE6
  6098                           postdec1	equ	0xFE5
  6099                           fsr1h	equ	0xFE2
  6100                           fsr1l	equ	0xFE1
  6101                           indf2	equ	0xFDF
  6102                           postinc2	equ	0xFDE
  6103                           postdec2	equ	0xFDD
  6104                           fsr2h	equ	0xFDA
  6105                           fsr2l	equ	0xFD9
  6106                           status	equ	0xFD8
  6107                           
  6108 ;; *************** function _ClearPastValues *****************
  6109 ;; Defined at:
  6110 ;;		line 279 in file "mastercomms.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  boosterCount    1   27[BANK2 ] unsigned char 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;Total ram usage:        1 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    8
  6131 ;; This function calls:
  6132 ;;		_ClearPastValue
  6133 ;; This function is called by:
  6134 ;;		_ForceFiringMode
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text31
  6139  00B4BE                     __ptext31:
  6140                           	opt stack 0
  6141  00B4BE                     _ClearPastValues:
  6142                           	opt stack 20
  6143                           
  6144                           ;mastercomms.c: 280: unsigned char boosterCountUC;
  6145                           ;mastercomms.c: 282: for(boosterCountUC = 0; boosterCountUC < 31; boosterCountUC++)
  6146                           
  6147                           ;incstack = 0
  6148  00B4BE  0E00               	movlw	0
  6149  00B4C0  0102               	movlb	2	; () banked
  6150  00B4C2  6F1C               	movwf	ClearPastValues@boosterCountUC& (0+255),b
  6151  00B4C4                     l4641:
  6152                           
  6153                           ; BSR set to: 2
  6154  00B4C4  0E1E               	movlw	30
  6155  00B4C6  0102               	movlb	2	; () banked
  6156  00B4C8  651C               	cpfsgt	ClearPastValues@boosterCountUC& (0+255),b
  6157  00B4CA  D001               	goto	l4645
  6158  00B4CC  0012               	return	
  6159  00B4CE                     l4645:
  6160                           
  6161                           ; BSR set to: 2
  6162                           ;mastercomms.c: 283: ClearPastValue(boosterCountUC);
  6163  00B4CE  0102               	movlb	2	; () banked
  6164  00B4D0  511C               	movf	ClearPastValues@boosterCountUC& (0+255),w,b
  6165  00B4D2  EC18  F056         	call	_ClearPastValue
  6166  00B4D6  0102               	movlb	2	; () banked
  6167  00B4D8  2B1C               	incf	ClearPastValues@boosterCountUC& (0+255),f,b
  6168  00B4DA  D7F4               	goto	l4641
  6169  00B4DC                     __end_of_ClearPastValues:
  6170                           	opt stack 0
  6171                           tblptru	equ	0xFF8
  6172                           tblptrh	equ	0xFF7
  6173                           tblptrl	equ	0xFF6
  6174                           tablat	equ	0xFF5
  6175                           prodh	equ	0xFF4
  6176                           prodl	equ	0xFF3
  6177                           intcon	equ	0xFF2
  6178                           postinc0	equ	0xFEE
  6179                           wreg	equ	0xFE8
  6180                           indf1	equ	0xFE7
  6181                           postinc1	equ	0xFE6
  6182                           postdec1	equ	0xFE5
  6183                           fsr1h	equ	0xFE2
  6184                           fsr1l	equ	0xFE1
  6185                           indf2	equ	0xFDF
  6186                           postinc2	equ	0xFDE
  6187                           postdec2	equ	0xFDD
  6188                           fsr2h	equ	0xFDA
  6189                           fsr2l	equ	0xFD9
  6190                           status	equ	0xFD8
  6191                           
  6192 ;; *************** function _ClearPastValue *****************
  6193 ;; Defined at:
  6194 ;;		line 272 in file "mastercomms.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  valuePosUC      1    wreg     unsigned char 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  valuePosUC      1   26[BANK2 ] unsigned char 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  1    wreg      void 
  6201 ;; Registers used:
  6202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6211 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;Total ram usage:        1 bytes
  6213 ;; Hardware stack levels used:    1
  6214 ;; Hardware stack levels required when called:    7
  6215 ;; This function calls:
  6216 ;;		Nothing
  6217 ;; This function is called by:
  6218 ;;		_ClearPastValues
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           	psect	text32
  6223  00AC30                     __ptext32:
  6224                           	opt stack 0
  6225  00AC30                     _ClearPastValue:
  6226                           	opt stack 20
  6227                           
  6228                           ; BSR set to: 2
  6229                           ;incstack = 0
  6230                           ;ClearPastValue@valuePosUC stored from wreg
  6231  00AC30  0102               	movlb	2	; () banked
  6232  00AC32  6F1B               	movwf	ClearPastValue@valuePosUC& (0+255),b
  6233                           
  6234                           ;mastercomms.c: 273: pastBoosterValuesUSAG[0][valuePosUC] = 0;
  6235  00AC34  0102               	movlb	2	; () banked
  6236  00AC36  511B               	movf	ClearPastValue@valuePosUC& (0+255),w,b
  6237  00AC38  0D02               	mullw	2
  6238  00AC3A  0E00               	movlw	low _pastBoosterValuesUSAG
  6239  00AC3C  24F3               	addwf	prodl,w,c
  6240  00AC3E  6ED9               	movwf	fsr2l,c
  6241  00AC40  0E06               	movlw	high _pastBoosterValuesUSAG
  6242  00AC42  20F4               	addwfc	prodh,w,c
  6243  00AC44  6EDA               	movwf	fsr2h,c
  6244  00AC46  0E00               	movlw	0
  6245  00AC48  6EDE               	movwf	postinc2,c
  6246  00AC4A  0E00               	movlw	0
  6247  00AC4C  6EDD               	movwf	postdec2,c
  6248                           
  6249                           ;mastercomms.c: 274: pastBoosterValuesUSAG[1][valuePosUC] = 0;
  6250  00AC4E  0102               	movlb	2	; () banked
  6251  00AC50  511B               	movf	ClearPastValue@valuePosUC& (0+255),w,b
  6252  00AC52  0D02               	mullw	2
  6253  00AC54  0E3E               	movlw	low (_pastBoosterValuesUSAG+62)
  6254  00AC56  24F3               	addwf	prodl,w,c
  6255  00AC58  6ED9               	movwf	fsr2l,c
  6256  00AC5A  0E06               	movlw	high (_pastBoosterValuesUSAG+62)
  6257  00AC5C  20F4               	addwfc	prodh,w,c
  6258  00AC5E  6EDA               	movwf	fsr2h,c
  6259  00AC60  0E00               	movlw	0
  6260  00AC62  6EDE               	movwf	postinc2,c
  6261  00AC64  0E00               	movlw	0
  6262  00AC66  6EDD               	movwf	postdec2,c
  6263                           
  6264                           ;mastercomms.c: 275: pastBoosterValuesUSAG[2][valuePosUC] = 0;
  6265  00AC68  0102               	movlb	2	; () banked
  6266  00AC6A  511B               	movf	ClearPastValue@valuePosUC& (0+255),w,b
  6267  00AC6C  0D02               	mullw	2
  6268  00AC6E  0E7C               	movlw	low (_pastBoosterValuesUSAG+124)
  6269  00AC70  24F3               	addwf	prodl,w,c
  6270  00AC72  6ED9               	movwf	fsr2l,c
  6271  00AC74  0E06               	movlw	high (_pastBoosterValuesUSAG+124)
  6272  00AC76  20F4               	addwfc	prodh,w,c
  6273  00AC78  6EDA               	movwf	fsr2h,c
  6274  00AC7A  0E00               	movlw	0
  6275  00AC7C  6EDE               	movwf	postinc2,c
  6276  00AC7E  0E00               	movlw	0
  6277  00AC80  6EDD               	movwf	postdec2,c
  6278                           
  6279                           ;mastercomms.c: 276: pastBoosterValuesUSAG[3][valuePosUC] = 0;
  6280  00AC82  0102               	movlb	2	; () banked
  6281  00AC84  511B               	movf	ClearPastValue@valuePosUC& (0+255),w,b
  6282  00AC86  0D02               	mullw	2
  6283  00AC88  0EBA               	movlw	low (_pastBoosterValuesUSAG+186)
  6284  00AC8A  24F3               	addwf	prodl,w,c
  6285  00AC8C  6ED9               	movwf	fsr2l,c
  6286  00AC8E  0E06               	movlw	high (_pastBoosterValuesUSAG+186)
  6287  00AC90  20F4               	addwfc	prodh,w,c
  6288  00AC92  6EDA               	movwf	fsr2h,c
  6289  00AC94  0E00               	movlw	0
  6290  00AC96  6EDE               	movwf	postinc2,c
  6291  00AC98  0E00               	movlw	0
  6292  00AC9A  6EDD               	movwf	postdec2,c
  6293                           
  6294                           ; BSR set to: 2
  6295  00AC9C  0012               	return		;funcret
  6296  00AC9E                     __end_of_ClearPastValue:
  6297                           	opt stack 0
  6298                           tblptru	equ	0xFF8
  6299                           tblptrh	equ	0xFF7
  6300                           tblptrl	equ	0xFF6
  6301                           tablat	equ	0xFF5
  6302                           prodh	equ	0xFF4
  6303                           prodl	equ	0xFF3
  6304                           intcon	equ	0xFF2
  6305                           postinc0	equ	0xFEE
  6306                           wreg	equ	0xFE8
  6307                           indf1	equ	0xFE7
  6308                           postinc1	equ	0xFE6
  6309                           postdec1	equ	0xFE5
  6310                           fsr1h	equ	0xFE2
  6311                           fsr1l	equ	0xFE1
  6312                           indf2	equ	0xFDF
  6313                           postinc2	equ	0xFDE
  6314                           postdec2	equ	0xFDD
  6315                           fsr2h	equ	0xFDA
  6316                           fsr2l	equ	0xFD9
  6317                           status	equ	0xFD8
  6318                           
  6319 ;; *************** function _DataReadyST7540 *****************
  6320 ;; Defined at:
  6321 ;;		line 356 in file "ST7540.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      unsigned char 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    7
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_ProcessMasterComms
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text33
  6350  00B65A                     __ptext33:
  6351                           	opt stack 0
  6352  00B65A                     _DataReadyST7540:
  6353                           	opt stack 22
  6354                           
  6355                           ;ST7540.c: 357: return (flagST7540UCG & 4);
  6356                           
  6357                           ; BSR set to: 2
  6358                           ;incstack = 0
  6359  00B65A  0102               	movlb	2	; () banked
  6360  00B65C  51A8               	movf	_flagST7540UCG& (0+255),w,b
  6361  00B65E  0B04               	andlw	4
  6362  00B660  0012               	return	
  6363  00B662                     __end_of_DataReadyST7540:
  6364                           	opt stack 0
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           prodh	equ	0xFF4
  6370                           prodl	equ	0xFF3
  6371                           intcon	equ	0xFF2
  6372                           postinc0	equ	0xFEE
  6373                           wreg	equ	0xFE8
  6374                           indf1	equ	0xFE7
  6375                           postinc1	equ	0xFE6
  6376                           postdec1	equ	0xFE5
  6377                           fsr1h	equ	0xFE2
  6378                           fsr1l	equ	0xFE1
  6379                           indf2	equ	0xFDF
  6380                           postinc2	equ	0xFDE
  6381                           postdec2	equ	0xFDD
  6382                           fsr2h	equ	0xFDA
  6383                           fsr2l	equ	0xFD9
  6384                           status	equ	0xFD8
  6385                           
  6386 ;; *************** function _InitSystem *****************
  6387 ;; Defined at:
  6388 ;;		line 89 in file "main.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;		None
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		wreg, status,2, status,0
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6406 ;;Total ram usage:        0 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; Hardware stack levels required when called:    7
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_main
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text34
  6417  00AAC8                     __ptext34:
  6418                           	opt stack 0
  6419  00AAC8                     _InitSystem:
  6420                           	opt stack 23
  6421                           
  6422                           ;main.c: 94: OSCTUNEbits.PLLEN = 1;
  6423                           
  6424                           ; BSR set to: 2
  6425                           ;incstack = 0
  6426  00AAC8  8C9B               	bsf	3995,6,c	;volatile
  6427                           
  6428                           ;main.c: 95: OSCCONbits.IRCF = 0b110;
  6429  00AACA  50D3               	movf	4051,w,c	;volatile
  6430  00AACC  0B8F               	andlw	-113
  6431  00AACE  0960               	iorlw	96
  6432  00AAD0  6ED3               	movwf	4051,c	;volatile
  6433                           
  6434                           ;main.c: 98: PR2 = 150;
  6435  00AAD2  0E96               	movlw	150
  6436  00AAD4  6ECB               	movwf	4043,c	;volatile
  6437                           
  6438                           ;main.c: 99: T2CONbits.T2OUTPS = 0b0111;
  6439  00AAD6  50CA               	movf	4042,w,c	;volatile
  6440  00AAD8  0B87               	andlw	-121
  6441  00AADA  0938               	iorlw	56
  6442  00AADC  6ECA               	movwf	4042,c	;volatile
  6443                           
  6444                           ;main.c: 100: PIR1bits.TMR2IF = 0;
  6445  00AADE  929E               	bcf	3998,1,c	;volatile
  6446                           
  6447                           ;main.c: 101: PIE1bits.TMR2IE = 1;
  6448  00AAE0  829D               	bsf	3997,1,c	;volatile
  6449                           
  6450                           ;main.c: 102: T2CONbits.TMR2ON = 1;
  6451  00AAE2  84CA               	bsf	4042,2,c	;volatile
  6452                           
  6453                           ;main.c: 103: INTCONbits.PEIE = 1;
  6454  00AAE4  8CF2               	bsf	intcon,6,c	;volatile
  6455                           
  6456                           ;main.c: 104: INTCONbits.GIE = 1;
  6457  00AAE6  8EF2               	bsf	intcon,7,c	;volatile
  6458                           
  6459                           ;main.c: 107: ADCON1bits.ACQT = 0b001;
  6460  00AAE8  50C1               	movf	4033,w,c	;volatile
  6461  00AAEA  0BC7               	andlw	-57
  6462  00AAEC  0908               	iorlw	8
  6463  00AAEE  6EC1               	movwf	4033,c	;volatile
  6464                           
  6465                           ;main.c: 108: ADCON1bits.ADCS = 0b110;
  6466  00AAF0  50C1               	movf	4033,w,c	;volatile
  6467  00AAF2  0BF8               	andlw	-8
  6468  00AAF4  0906               	iorlw	6
  6469  00AAF6  6EC1               	movwf	4033,c	;volatile
  6470                           
  6471                           ;main.c: 109: ADCON1bits.ADFM = 1;
  6472  00AAF8  8EC1               	bsf	4033,7,c	;volatile
  6473                           
  6474                           ;main.c: 110: ADCON0bits.ADON = 1;
  6475  00AAFA  80C2               	bsf	4034,0,c	;volatile
  6476                           
  6477                           ;main.c: 112: TRISAbits.TRISA5 = 1;
  6478  00AAFC  8A92               	bsf	3986,5,c	;volatile
  6479                           
  6480                           ;main.c: 115: TRISBbits.TRISB7 =0;
  6481  00AAFE  9E93               	bcf	3987,7,c	;volatile
  6482                           
  6483                           ;main.c: 116: TRISBbits.TRISB6 =0;
  6484  00AB00  9C93               	bcf	3987,6,c	;volatile
  6485                           
  6486                           ;main.c: 117: LATBbits.LATB7 =0;
  6487  00AB02  9E8A               	bcf	3978,7,c	;volatile
  6488                           
  6489                           ;main.c: 118: LATBbits.LATB6 =0;
  6490  00AB04  9C8A               	bcf	3978,6,c	;volatile
  6491                           
  6492                           ;main.c: 121: TRISAbits.TRISA6 = 0;
  6493  00AB06  9C92               	bcf	3986,6,c	;volatile
  6494                           
  6495                           ;main.c: 122: TRISBbits.TRISB3 = 0;
  6496  00AB08  9693               	bcf	3987,3,c	;volatile
  6497                           
  6498                           ;main.c: 123: TRISCbits.TRISC0 = 0;
  6499  00AB0A  9094               	bcf	3988,0,c	;volatile
  6500                           
  6501                           ;main.c: 124: LATAbits.LATA6 = 0;
  6502  00AB0C  9C89               	bcf	3977,6,c	;volatile
  6503                           
  6504                           ;main.c: 125: LATBbits.LATB3 = 0;
  6505  00AB0E  968A               	bcf	3978,3,c	;volatile
  6506                           
  6507                           ;main.c: 126: LATCbits.LATC0 = 0;
  6508  00AB10  908B               	bcf	3979,0,c	;volatile
  6509                           
  6510                           ;main.c: 130: TRISCbits.TRISC4 = 0;
  6511  00AB12  9894               	bcf	3988,4,c	;volatile
  6512                           
  6513                           ;main.c: 131: LATCbits.LATC4 = 0;
  6514  00AB14  988B               	bcf	3979,4,c	;volatile
  6515                           
  6516                           ;main.c: 134: TRISDbits.TRISD7 = 0;
  6517  00AB16  9E95               	bcf	3989,7,c	;volatile
  6518                           
  6519                           ;main.c: 135: LATDbits.LATD7 = 0;
  6520  00AB18  9E8C               	bcf	3980,7,c	;volatile
  6521                           
  6522                           ;main.c: 137: TRISAbits.TRISA5 = 0;
  6523  00AB1A  9A92               	bcf	3986,5,c	;volatile
  6524                           
  6525                           ;main.c: 138: LATAbits.LATA5 = 0;
  6526  00AB1C  9A89               	bcf	3977,5,c	;volatile
  6527                           
  6528                           ;main.c: 139: statusFlagsUSLG |= 0b000000010000000000000000;
  6529  00AB1E  0102               	movlb	2	; () banked
  6530  00AB20  818C               	bsf	(_statusFlagsUSLG+2)& (0+255),0,b	;volatile
  6531                           
  6532                           ; BSR set to: 2
  6533                           ;main.c: 142: TRISAbits.TRISA2 = 0;
  6534  00AB22  9492               	bcf	3986,2,c	;volatile
  6535                           
  6536                           ; BSR set to: 2
  6537                           ;main.c: 143: LATAbits.LATA2 = 0;
  6538  00AB24  9489               	bcf	3977,2,c	;volatile
  6539                           
  6540                           ; BSR set to: 2
  6541                           ;main.c: 145: TRISBbits.TRISB2 = 0;
  6542  00AB26  9493               	bcf	3987,2,c	;volatile
  6543                           
  6544                           ; BSR set to: 2
  6545                           ;main.c: 146: LATBbits.LATB2 = 1;
  6546  00AB28  848A               	bsf	3978,2,c	;volatile
  6547                           
  6548                           ; BSR set to: 2
  6549                           ;main.c: 148: TRISDbits.TRISD1 = 0;
  6550  00AB2A  9295               	bcf	3989,1,c	;volatile
  6551                           
  6552                           ; BSR set to: 2
  6553                           ;main.c: 149: LATDbits.LATD1 = 1;
  6554  00AB2C  828C               	bsf	3980,1,c	;volatile
  6555                           
  6556                           ; BSR set to: 2
  6557                           ;main.c: 151: TRISBbits.TRISB1 = 1;
  6558  00AB2E  8293               	bsf	3987,1,c	;volatile
  6559                           
  6560                           ; BSR set to: 2
  6561                           ;main.c: 152: ANCON1bits.PCFG10 = 0;
  6562  00AB30  010F               	movlb	15	; () banked
  6563  00AB32  9549               	bcf	73,2,b	;volatile
  6564                           
  6565                           ; BSR set to: 15
  6566                           ;main.c: 155: TRISAbits.TRISA1 = 1;
  6567  00AB34  8292               	bsf	3986,1,c	;volatile
  6568                           
  6569                           ; BSR set to: 15
  6570                           ;main.c: 156: ANCON0bits.PCFG1 = 0;
  6571  00AB36  010F               	movlb	15	; () banked
  6572  00AB38  9348               	bcf	72,1,b	;volatile
  6573                           
  6574                           ; BSR set to: 15
  6575                           ;main.c: 158: TRISEbits.TRISE1 = 1;
  6576  00AB3A  8296               	bsf	3990,1,c	;volatile
  6577                           
  6578                           ; BSR set to: 15
  6579                           ;main.c: 159: ANCON0bits.PCFG6 = 0;
  6580  00AB3C  010F               	movlb	15	; () banked
  6581  00AB3E  9D48               	bcf	72,6,b	;volatile
  6582                           
  6583                           ; BSR set to: 15
  6584                           ;main.c: 162: TRISEbits.TRISE0 = 0;
  6585  00AB40  9096               	bcf	3990,0,c	;volatile
  6586                           
  6587                           ; BSR set to: 15
  6588                           ;main.c: 163: LATEbits.LATE0 = 0;
  6589  00AB42  908D               	bcf	3981,0,c	;volatile
  6590                           
  6591                           ; BSR set to: 15
  6592                           ;main.c: 166: LATDbits.LATD7 = 1;
  6593  00AB44  8E8C               	bsf	3980,7,c	;volatile
  6594                           
  6595                           ; BSR set to: 15
  6596  00AB46  0012               	return		;funcret
  6597  00AB48                     __end_of_InitSystem:
  6598                           	opt stack 0
  6599                           tblptru	equ	0xFF8
  6600                           tblptrh	equ	0xFF7
  6601                           tblptrl	equ	0xFF6
  6602                           tablat	equ	0xFF5
  6603                           prodh	equ	0xFF4
  6604                           prodl	equ	0xFF3
  6605                           intcon	equ	0xFF2
  6606                           postinc0	equ	0xFEE
  6607                           wreg	equ	0xFE8
  6608                           indf1	equ	0xFE7
  6609                           postinc1	equ	0xFE6
  6610                           postdec1	equ	0xFE5
  6611                           fsr1h	equ	0xFE2
  6612                           fsr1l	equ	0xFE1
  6613                           indf2	equ	0xFDF
  6614                           postinc2	equ	0xFDE
  6615                           postdec2	equ	0xFDD
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           
  6620 ;; *************** function _InitStates *****************
  6621 ;; Defined at:
  6622 ;;		line 169 in file "main.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;		None
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;Total ram usage:        0 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:   11
  6643 ;; This function calls:
  6644 ;;		_ClearPacketNumbers
  6645 ;;		_ReadFlashValues
  6646 ;;		_ResetBoosterStates
  6647 ;; This function is called by:
  6648 ;;		_main
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text35
  6653  00B606                     __ptext35:
  6654                           	opt stack 0
  6655  00B606                     _InitStates:
  6656                           	opt stack 19
  6657                           
  6658                           ;main.c: 171: ResetBoosterStates();
  6659                           
  6660                           ; BSR set to: 15
  6661                           ;incstack = 0
  6662  00B606  EC6E  F05A         	call	_ResetBoosterStates	;wreg free
  6663                           
  6664                           ;main.c: 172: ReadFlashValues();
  6665  00B60A  EC39  F053         	call	_ReadFlashValues	;wreg free
  6666                           
  6667                           ;main.c: 173: ClearPacketNumbers();
  6668  00B60E  ECB0  F057         	call	_ClearPacketNumbers	;wreg free
  6669  00B612  0012               	return		;funcret
  6670  00B614                     __end_of_InitStates:
  6671                           	opt stack 0
  6672                           tblptru	equ	0xFF8
  6673                           tblptrh	equ	0xFF7
  6674                           tblptrl	equ	0xFF6
  6675                           tablat	equ	0xFF5
  6676                           prodh	equ	0xFF4
  6677                           prodl	equ	0xFF3
  6678                           intcon	equ	0xFF2
  6679                           postinc0	equ	0xFEE
  6680                           wreg	equ	0xFE8
  6681                           indf1	equ	0xFE7
  6682                           postinc1	equ	0xFE6
  6683                           postdec1	equ	0xFE5
  6684                           fsr1h	equ	0xFE2
  6685                           fsr1l	equ	0xFE1
  6686                           indf2	equ	0xFDF
  6687                           postinc2	equ	0xFDE
  6688                           postdec2	equ	0xFDD
  6689                           fsr2h	equ	0xFDA
  6690                           fsr2l	equ	0xFD9
  6691                           status	equ	0xFD8
  6692                           
  6693 ;; *************** function _ResetBoosterStates *****************
  6694 ;; Defined at:
  6695 ;;		line 589 in file "boostercomms.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  boosterCount    1   27[BANK2 ] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;Total ram usage:        1 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:    8
  6716 ;; This function calls:
  6717 ;;		_ResetSingleBoosterState
  6718 ;; This function is called by:
  6719 ;;		_InitStates
  6720 ;;		_ForceFiringMode
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text36
  6725  00B4DC                     __ptext36:
  6726                           	opt stack 0
  6727  00B4DC                     _ResetBoosterStates:
  6728                           	opt stack 20
  6729                           
  6730                           ;boostercomms.c: 590: unsigned char boosterCountUC;
  6731                           ;boostercomms.c: 592: for(boosterCountUC = 0; boosterCountUC < 30; boosterCountUC++)
  6732                           
  6733                           ;incstack = 0
  6734  00B4DC  0E00               	movlw	0
  6735  00B4DE  0102               	movlb	2	; () banked
  6736  00B4E0  6F1C               	movwf	ResetBoosterStates@boosterCountUC& (0+255),b
  6737  00B4E2                     l4555:
  6738                           
  6739                           ; BSR set to: 2
  6740  00B4E2  0E1D               	movlw	29
  6741  00B4E4  0102               	movlb	2	; () banked
  6742  00B4E6  651C               	cpfsgt	ResetBoosterStates@boosterCountUC& (0+255),b
  6743  00B4E8  D001               	goto	l4559
  6744  00B4EA  0012               	return	
  6745  00B4EC                     l4559:
  6746                           
  6747                           ; BSR set to: 2
  6748                           ;boostercomms.c: 593: ResetSingleBoosterState(boosterCountUC);
  6749  00B4EC  0102               	movlb	2	; () banked
  6750  00B4EE  511C               	movf	ResetBoosterStates@boosterCountUC& (0+255),w,b
  6751  00B4F0  ECB1  F051         	call	_ResetSingleBoosterState
  6752  00B4F4  0102               	movlb	2	; () banked
  6753  00B4F6  2B1C               	incf	ResetBoosterStates@boosterCountUC& (0+255),f,b
  6754  00B4F8  D7F4               	goto	l4555
  6755  00B4FA                     __end_of_ResetBoosterStates:
  6756                           	opt stack 0
  6757                           tblptru	equ	0xFF8
  6758                           tblptrh	equ	0xFF7
  6759                           tblptrl	equ	0xFF6
  6760                           tablat	equ	0xFF5
  6761                           prodh	equ	0xFF4
  6762                           prodl	equ	0xFF3
  6763                           intcon	equ	0xFF2
  6764                           postinc0	equ	0xFEE
  6765                           wreg	equ	0xFE8
  6766                           indf1	equ	0xFE7
  6767                           postinc1	equ	0xFE6
  6768                           postdec1	equ	0xFE5
  6769                           fsr1h	equ	0xFE2
  6770                           fsr1l	equ	0xFE1
  6771                           indf2	equ	0xFDF
  6772                           postinc2	equ	0xFDE
  6773                           postdec2	equ	0xFDD
  6774                           fsr2h	equ	0xFDA
  6775                           fsr2l	equ	0xFD9
  6776                           status	equ	0xFD8
  6777                           
  6778 ;; *************** function _ResetSingleBoosterState *****************
  6779 ;; Defined at:
  6780 ;;		line 577 in file "boostercomms.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  boosterNumbe    1    wreg     unsigned char 
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;  boosterNumbe    1   26[BANK2 ] unsigned char 
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  1    wreg      void 
  6787 ;; Registers used:
  6788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;Total ram usage:        1 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; Hardware stack levels required when called:    7
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_ResetBoosterStates
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text37
  6809  00A362                     __ptext37:
  6810                           	opt stack 0
  6811  00A362                     _ResetSingleBoosterState:
  6812                           	opt stack 20
  6813                           
  6814                           ; BSR set to: 2
  6815                           ;incstack = 0
  6816                           ;ResetSingleBoosterState@boosterNumberUC stored from wreg
  6817  00A362  0102               	movlb	2	; () banked
  6818  00A364  6F1B               	movwf	ResetSingleBoosterState@boosterNumberUC& (0+255),b
  6819                           
  6820                           ;boostercomms.c: 578: boosterCommsData[4][boosterNumberUC] = 10;
  6821  00A366  0102               	movlb	2	; () banked
  6822  00A368  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6823  00A36A  0D01               	mullw	1
  6824  00A36C  0E78               	movlw	low (_boosterCommsData+120)
  6825  00A36E  24F3               	addwf	prodl,w,c
  6826  00A370  6ED9               	movwf	fsr2l,c
  6827  00A372  0E04               	movlw	high (_boosterCommsData+120)
  6828  00A374  20F4               	addwfc	prodh,w,c
  6829  00A376  6EDA               	movwf	fsr2h,c
  6830  00A378  0E0A               	movlw	10
  6831  00A37A  6EDF               	movwf	indf2,c
  6832                           
  6833                           ;boostercomms.c: 579: boosterCommsData[5][boosterNumberUC] = 0;
  6834  00A37C  0102               	movlb	2	; () banked
  6835  00A37E  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6836  00A380  0D01               	mullw	1
  6837  00A382  0E96               	movlw	low (_boosterCommsData+150)
  6838  00A384  24F3               	addwf	prodl,w,c
  6839  00A386  6ED9               	movwf	fsr2l,c
  6840  00A388  0E04               	movlw	high (_boosterCommsData+150)
  6841  00A38A  20F4               	addwfc	prodh,w,c
  6842  00A38C  6EDA               	movwf	fsr2h,c
  6843  00A38E  0E00               	movlw	0
  6844  00A390  6EDF               	movwf	indf2,c
  6845                           
  6846                           ;boostercomms.c: 580: boosterCommsData[6][boosterNumberUC] = 0;
  6847  00A392  0102               	movlb	2	; () banked
  6848  00A394  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6849  00A396  0D01               	mullw	1
  6850  00A398  0EB4               	movlw	low (_boosterCommsData+180)
  6851  00A39A  24F3               	addwf	prodl,w,c
  6852  00A39C  6ED9               	movwf	fsr2l,c
  6853  00A39E  0E04               	movlw	high (_boosterCommsData+180)
  6854  00A3A0  20F4               	addwfc	prodh,w,c
  6855  00A3A2  6EDA               	movwf	fsr2h,c
  6856  00A3A4  0E00               	movlw	0
  6857  00A3A6  6EDF               	movwf	indf2,c
  6858                           
  6859                           ;boostercomms.c: 581: boosterCommsData[7][boosterNumberUC] = 0;
  6860  00A3A8  0102               	movlb	2	; () banked
  6861  00A3AA  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6862  00A3AC  0D01               	mullw	1
  6863  00A3AE  0ED2               	movlw	low (_boosterCommsData+210)
  6864  00A3B0  24F3               	addwf	prodl,w,c
  6865  00A3B2  6ED9               	movwf	fsr2l,c
  6866  00A3B4  0E04               	movlw	high (_boosterCommsData+210)
  6867  00A3B6  20F4               	addwfc	prodh,w,c
  6868  00A3B8  6EDA               	movwf	fsr2h,c
  6869  00A3BA  0E00               	movlw	0
  6870  00A3BC  6EDF               	movwf	indf2,c
  6871                           
  6872                           ;boostercomms.c: 582: boosterCommsData[0][boosterNumberUC] = 0;
  6873  00A3BE  0102               	movlb	2	; () banked
  6874  00A3C0  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6875  00A3C2  0D01               	mullw	1
  6876  00A3C4  0E00               	movlw	low _boosterCommsData
  6877  00A3C6  24F3               	addwf	prodl,w,c
  6878  00A3C8  6ED9               	movwf	fsr2l,c
  6879  00A3CA  0E04               	movlw	high _boosterCommsData
  6880  00A3CC  20F4               	addwfc	prodh,w,c
  6881  00A3CE  6EDA               	movwf	fsr2h,c
  6882  00A3D0  0E00               	movlw	0
  6883  00A3D2  6EDF               	movwf	indf2,c
  6884                           
  6885                           ;boostercomms.c: 583: boosterCommsData[1][boosterNumberUC] = 0;
  6886  00A3D4  0102               	movlb	2	; () banked
  6887  00A3D6  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6888  00A3D8  0D01               	mullw	1
  6889  00A3DA  0E1E               	movlw	low (_boosterCommsData+30)
  6890  00A3DC  24F3               	addwf	prodl,w,c
  6891  00A3DE  6ED9               	movwf	fsr2l,c
  6892  00A3E0  0E04               	movlw	high (_boosterCommsData+30)
  6893  00A3E2  20F4               	addwfc	prodh,w,c
  6894  00A3E4  6EDA               	movwf	fsr2h,c
  6895  00A3E6  0E00               	movlw	0
  6896  00A3E8  6EDF               	movwf	indf2,c
  6897                           
  6898                           ;boostercomms.c: 584: boosterCommsData[2][boosterNumberUC] = 0;
  6899  00A3EA  0102               	movlb	2	; () banked
  6900  00A3EC  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6901  00A3EE  0D01               	mullw	1
  6902  00A3F0  0E3C               	movlw	low (_boosterCommsData+60)
  6903  00A3F2  24F3               	addwf	prodl,w,c
  6904  00A3F4  6ED9               	movwf	fsr2l,c
  6905  00A3F6  0E04               	movlw	high (_boosterCommsData+60)
  6906  00A3F8  20F4               	addwfc	prodh,w,c
  6907  00A3FA  6EDA               	movwf	fsr2h,c
  6908  00A3FC  0E00               	movlw	0
  6909  00A3FE  6EDF               	movwf	indf2,c
  6910                           
  6911                           ;boostercomms.c: 585: boosterCommsData[3][boosterNumberUC] = 0;
  6912  00A400  0102               	movlb	2	; () banked
  6913  00A402  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6914  00A404  0D01               	mullw	1
  6915  00A406  0E5A               	movlw	low (_boosterCommsData+90)
  6916  00A408  24F3               	addwf	prodl,w,c
  6917  00A40A  6ED9               	movwf	fsr2l,c
  6918  00A40C  0E04               	movlw	high (_boosterCommsData+90)
  6919  00A40E  20F4               	addwfc	prodh,w,c
  6920  00A410  6EDA               	movwf	fsr2h,c
  6921  00A412  0E00               	movlw	0
  6922  00A414  6EDF               	movwf	indf2,c
  6923                           
  6924                           ;boostercomms.c: 586: boosterCommsDataSerial[boosterNumberUC] = 0;
  6925  00A416  0102               	movlb	2	; () banked
  6926  00A418  511B               	movf	ResetSingleBoosterState@boosterNumberUC& (0+255),w,b
  6927  00A41A  0D02               	mullw	2
  6928  00A41C  0E00               	movlw	low _boosterCommsDataSerial
  6929  00A41E  24F3               	addwf	prodl,w,c
  6930  00A420  6ED9               	movwf	fsr2l,c
  6931  00A422  0E03               	movlw	high _boosterCommsDataSerial
  6932  00A424  20F4               	addwfc	prodh,w,c
  6933  00A426  6EDA               	movwf	fsr2h,c
  6934  00A428  0E00               	movlw	0
  6935  00A42A  6EDE               	movwf	postinc2,c
  6936  00A42C  0E00               	movlw	0
  6937  00A42E  6EDD               	movwf	postdec2,c
  6938                           
  6939                           ; BSR set to: 2
  6940  00A430  0012               	return		;funcret
  6941  00A432                     __end_of_ResetSingleBoosterState:
  6942                           	opt stack 0
  6943                           tblptru	equ	0xFF8
  6944                           tblptrh	equ	0xFF7
  6945                           tblptrl	equ	0xFF6
  6946                           tablat	equ	0xFF5
  6947                           prodh	equ	0xFF4
  6948                           prodl	equ	0xFF3
  6949                           intcon	equ	0xFF2
  6950                           postinc0	equ	0xFEE
  6951                           wreg	equ	0xFE8
  6952                           indf1	equ	0xFE7
  6953                           postinc1	equ	0xFE6
  6954                           postdec1	equ	0xFE5
  6955                           fsr1h	equ	0xFE2
  6956                           fsr1l	equ	0xFE1
  6957                           indf2	equ	0xFDF
  6958                           postinc2	equ	0xFDE
  6959                           postdec2	equ	0xFDD
  6960                           fsr2h	equ	0xFDA
  6961                           fsr2l	equ	0xFD9
  6962                           status	equ	0xFD8
  6963                           
  6964 ;; *************** function _ReadFlashValues *****************
  6965 ;; Defined at:
  6966 ;;		line 227 in file "peripherals.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;		None
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;		None
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  1    wreg      void 
  6973 ;; Registers used:
  6974 ;;		wreg, status,2, status,0, cstack
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  6980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6982 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6983 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;Total ram usage:        3 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:   10
  6987 ;; This function calls:
  6988 ;;		_FlashReadAddress
  6989 ;;		_WriteFlashValues
  6990 ;; This function is called by:
  6991 ;;		_InitStates
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text38
  6996  00A672                     __ptext38:
  6997                           	opt stack 0
  6998  00A672                     _ReadFlashValues:
  6999                           	opt stack 19
  7000                           
  7001                           ;peripherals.c: 228: nextSerialUSG = FlashReadAddress(0xFBFE);
  7002                           
  7003                           ; BSR set to: 2
  7004                           ;incstack = 0
  7005  00A672  0EFB               	movlw	251
  7006  00A674  0102               	movlb	2	; () banked
  7007  00A676  6F1C               	movwf	(FlashReadAddress@flashAddressUS+1)& (0+255),b
  7008  00A678  0EFE               	movlw	254
  7009  00A67A  6F1B               	movwf	FlashReadAddress@flashAddressUS& (0+255),b
  7010  00A67C  ECD8  F05A         	call	_FlashReadAddress	;wreg free
  7011  00A680  0102               	movlb	2	; () banked
  7012  00A682  6F20               	movwf	??_ReadFlashValues& (0+255),b
  7013  00A684  0102               	movlb	2	; () banked
  7014  00A686  5120               	movf	??_ReadFlashValues& (0+255),w,b
  7015  00A688  0102               	movlb	2	; () banked
  7016  00A68A  6F91               	movwf	_nextSerialUSG& (0+255),b
  7017  00A68C  6B92               	clrf	(_nextSerialUSG+1)& (0+255),b
  7018                           
  7019                           ;peripherals.c: 229: nextSerialUSG |= ((unsigned short) FlashReadAddress(0xFBFE+1)) << 8
      +                          ;
  7020  00A68E  0EFB               	movlw	251
  7021  00A690  0102               	movlb	2	; () banked
  7022  00A692  6F1C               	movwf	(FlashReadAddress@flashAddressUS+1)& (0+255),b
  7023  00A694  691B               	setf	FlashReadAddress@flashAddressUS& (0+255),b
  7024  00A696  ECD8  F05A         	call	_FlashReadAddress	;wreg free
  7025  00A69A  0102               	movlb	2	; () banked
  7026  00A69C  6F20               	movwf	??_ReadFlashValues& (0+255),b
  7027  00A69E  0102               	movlb	2	; () banked
  7028  00A6A0  5120               	movf	??_ReadFlashValues& (0+255),w,b
  7029  00A6A2  0102               	movlb	2	; () banked
  7030  00A6A4  6F22               	movwf	(??_ReadFlashValues+2)& (0+255),b
  7031  00A6A6  6B21               	clrf	(??_ReadFlashValues+1)& (0+255),b
  7032  00A6A8  0102               	movlb	2	; () banked
  7033  00A6AA  5121               	movf	(??_ReadFlashValues+1)& (0+255),w,b
  7034  00A6AC  0102               	movlb	2	; () banked
  7035  00A6AE  1391               	iorwf	_nextSerialUSG& (0+255),f,b
  7036  00A6B0  0102               	movlb	2	; () banked
  7037  00A6B2  5122               	movf	(??_ReadFlashValues+2)& (0+255),w,b
  7038  00A6B4  0102               	movlb	2	; () banked
  7039  00A6B6  1392               	iorwf	(_nextSerialUSG+1)& (0+255),f,b
  7040                           
  7041                           ;peripherals.c: 230: iscSerialUSG = FlashReadAddress(0xFBFD);
  7042  00A6B8  0EFB               	movlw	251
  7043  00A6BA  0102               	movlb	2	; () banked
  7044  00A6BC  6F1C               	movwf	(FlashReadAddress@flashAddressUS+1)& (0+255),b
  7045  00A6BE  0EFD               	movlw	253
  7046  00A6C0  6F1B               	movwf	FlashReadAddress@flashAddressUS& (0+255),b
  7047  00A6C2  ECD8  F05A         	call	_FlashReadAddress	;wreg free
  7048  00A6C6  0102               	movlb	2	; () banked
  7049  00A6C8  6F20               	movwf	??_ReadFlashValues& (0+255),b
  7050  00A6CA  0102               	movlb	2	; () banked
  7051  00A6CC  5120               	movf	??_ReadFlashValues& (0+255),w,b
  7052  00A6CE  0102               	movlb	2	; () banked
  7053  00A6D0  6FA9               	movwf	_iscSerialUSG& (0+255),b
  7054  00A6D2  6BAA               	clrf	(_iscSerialUSG+1)& (0+255),b
  7055                           
  7056                           ;peripherals.c: 231: iscSerialUSG |= ((unsigned short) FlashReadAddress(0xFBFD+1)) << 8;
  7057  00A6D4  0EFB               	movlw	251
  7058  00A6D6  0102               	movlb	2	; () banked
  7059  00A6D8  6F1C               	movwf	(FlashReadAddress@flashAddressUS+1)& (0+255),b
  7060  00A6DA  0EFE               	movlw	254
  7061  00A6DC  6F1B               	movwf	FlashReadAddress@flashAddressUS& (0+255),b
  7062  00A6DE  ECD8  F05A         	call	_FlashReadAddress	;wreg free
  7063  00A6E2  0102               	movlb	2	; () banked
  7064  00A6E4  6F20               	movwf	??_ReadFlashValues& (0+255),b
  7065  00A6E6  0102               	movlb	2	; () banked
  7066  00A6E8  5120               	movf	??_ReadFlashValues& (0+255),w,b
  7067  00A6EA  0102               	movlb	2	; () banked
  7068  00A6EC  6F22               	movwf	(??_ReadFlashValues+2)& (0+255),b
  7069  00A6EE  6B21               	clrf	(??_ReadFlashValues+1)& (0+255),b
  7070  00A6F0  0102               	movlb	2	; () banked
  7071  00A6F2  5121               	movf	(??_ReadFlashValues+1)& (0+255),w,b
  7072  00A6F4  0102               	movlb	2	; () banked
  7073  00A6F6  13A9               	iorwf	_iscSerialUSG& (0+255),f,b
  7074  00A6F8  0102               	movlb	2	; () banked
  7075  00A6FA  5122               	movf	(??_ReadFlashValues+2)& (0+255),w,b
  7076  00A6FC  0102               	movlb	2	; () banked
  7077  00A6FE  13AA               	iorwf	(_iscSerialUSG+1)& (0+255),f,b
  7078                           
  7079                           ; BSR set to: 2
  7080                           ;peripherals.c: 233: if(nextSerialUSG == 0xFFFF){
  7081  00A700  0102               	movlb	2	; () banked
  7082  00A702  2991               	incf	_nextSerialUSG& (0+255),w,b
  7083  00A704  E10C               	bnz	l1085
  7084  00A706  0102               	movlb	2	; () banked
  7085  00A708  2992               	incf	(_nextSerialUSG+1)& (0+255),w,b
  7086  00A70A  A4D8               	btfss	status,2,c
  7087  00A70C  0012               	return	
  7088                           
  7089                           ; BSR set to: 2
  7090                           ;peripherals.c: 234: nextSerialUSG = 1;
  7091  00A70E  0E00               	movlw	0
  7092  00A710  0102               	movlb	2	; () banked
  7093  00A712  6F92               	movwf	(_nextSerialUSG+1)& (0+255),b
  7094  00A714  0E01               	movlw	1
  7095  00A716  6F91               	movwf	_nextSerialUSG& (0+255),b
  7096                           
  7097                           ; BSR set to: 2
  7098                           ;peripherals.c: 235: WriteFlashValues();
  7099  00A718  EC1B  F058         	call	_WriteFlashValues	;wreg free
  7100  00A71C  0012               	return	
  7101  00A71E                     l1085:
  7102  00A71E  0012               	return		;funcret
  7103  00A720                     __end_of_ReadFlashValues:
  7104                           	opt stack 0
  7105                           tblptru	equ	0xFF8
  7106                           tblptrh	equ	0xFF7
  7107                           tblptrl	equ	0xFF6
  7108                           tablat	equ	0xFF5
  7109                           prodh	equ	0xFF4
  7110                           prodl	equ	0xFF3
  7111                           intcon	equ	0xFF2
  7112                           postinc0	equ	0xFEE
  7113                           wreg	equ	0xFE8
  7114                           indf1	equ	0xFE7
  7115                           postinc1	equ	0xFE6
  7116                           postdec1	equ	0xFE5
  7117                           fsr1h	equ	0xFE2
  7118                           fsr1l	equ	0xFE1
  7119                           indf2	equ	0xFDF
  7120                           postinc2	equ	0xFDE
  7121                           postdec2	equ	0xFDD
  7122                           fsr2h	equ	0xFDA
  7123                           fsr2l	equ	0xFD9
  7124                           status	equ	0xFD8
  7125                           
  7126 ;; *************** function _WriteFlashValues *****************
  7127 ;; Defined at:
  7128 ;;		line 221 in file "peripherals.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;		None
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      void 
  7135 ;; Registers used:
  7136 ;;		wreg, status,2, status,0, cstack
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;Total ram usage:        0 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    9
  7149 ;; This function calls:
  7150 ;;		_FlashEraseBlock
  7151 ;;		_FlashWriteWord
  7152 ;; This function is called by:
  7153 ;;		_SetSerialNumber
  7154 ;;		_ReadFlashValues
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text39
  7159  00B036                     __ptext39:
  7160                           	opt stack 0
  7161  00B036                     _WriteFlashValues:
  7162                           	opt stack 19
  7163                           
  7164                           ;peripherals.c: 222: FlashEraseBlock(0xFBFE);
  7165                           
  7166                           ;incstack = 0
  7167  00B036  0EFB               	movlw	251
  7168  00B038  0102               	movlb	2	; () banked
  7169  00B03A  6F1C               	movwf	(FlashEraseBlock@flashAddressUS+1)& (0+255),b
  7170  00B03C  0EFE               	movlw	254
  7171  00B03E  6F1B               	movwf	FlashEraseBlock@flashAddressUS& (0+255),b
  7172  00B040  EC2F  F059         	call	_FlashEraseBlock	;wreg free
  7173                           
  7174                           ;peripherals.c: 223: FlashWriteWord(0xFBFE, nextSerialUSG, nextSerialUSG >> 8);
  7175  00B044  0EFB               	movlw	251
  7176  00B046  0102               	movlb	2	; () banked
  7177  00B048  6F1C               	movwf	(FlashWriteWord@flashAddressUS+1)& (0+255),b
  7178  00B04A  0EFE               	movlw	254
  7179  00B04C  6F1B               	movwf	FlashWriteWord@flashAddressUS& (0+255),b
  7180  00B04E  C291  F21D         	movff	_nextSerialUSG,FlashWriteWord@lsbUC
  7181  00B052  0102               	movlb	2	; () banked
  7182  00B054  5192               	movf	(_nextSerialUSG+1)& (0+255),w,b
  7183  00B056  0102               	movlb	2	; () banked
  7184  00B058  6F1E               	movwf	FlashWriteWord@msbUC& (0+255),b
  7185  00B05A  EC5E  F058         	call	_FlashWriteWord	;wreg free
  7186                           
  7187                           ;peripherals.c: 224: FlashWriteWord(0xFBFD, iscSerialUSG, iscSerialUSG >> 8);
  7188  00B05E  0EFB               	movlw	251
  7189  00B060  0102               	movlb	2	; () banked
  7190  00B062  6F1C               	movwf	(FlashWriteWord@flashAddressUS+1)& (0+255),b
  7191  00B064  0EFD               	movlw	253
  7192  00B066  6F1B               	movwf	FlashWriteWord@flashAddressUS& (0+255),b
  7193  00B068  C2A9  F21D         	movff	_iscSerialUSG,FlashWriteWord@lsbUC
  7194  00B06C  0102               	movlb	2	; () banked
  7195  00B06E  51AA               	movf	(_iscSerialUSG+1)& (0+255),w,b
  7196  00B070  0102               	movlb	2	; () banked
  7197  00B072  6F1E               	movwf	FlashWriteWord@msbUC& (0+255),b
  7198  00B074  EC5E  F058         	call	_FlashWriteWord	;wreg free
  7199  00B078  0012               	return		;funcret
  7200  00B07A                     __end_of_WriteFlashValues:
  7201                           	opt stack 0
  7202                           tblptru	equ	0xFF8
  7203                           tblptrh	equ	0xFF7
  7204                           tblptrl	equ	0xFF6
  7205                           tablat	equ	0xFF5
  7206                           prodh	equ	0xFF4
  7207                           prodl	equ	0xFF3
  7208                           intcon	equ	0xFF2
  7209                           postinc0	equ	0xFEE
  7210                           wreg	equ	0xFE8
  7211                           indf1	equ	0xFE7
  7212                           postinc1	equ	0xFE6
  7213                           postdec1	equ	0xFE5
  7214                           fsr1h	equ	0xFE2
  7215                           fsr1l	equ	0xFE1
  7216                           indf2	equ	0xFDF
  7217                           postinc2	equ	0xFDE
  7218                           postdec2	equ	0xFDD
  7219                           fsr2h	equ	0xFDA
  7220                           fsr2l	equ	0xFD9
  7221                           status	equ	0xFD8
  7222                           
  7223 ;; *************** function _FlashWriteWord *****************
  7224 ;; Defined at:
  7225 ;;		line 189 in file "peripherals.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  flashAddress    2   26[BANK2 ] unsigned short 
  7228 ;;  lsbUC           1   28[BANK2 ] unsigned char 
  7229 ;;  msbUC           1   29[BANK2 ] unsigned char 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  intStatusUC     1   30[BANK2 ] unsigned char 
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  1    wreg      void 
  7234 ;; Registers used:
  7235 ;;		wreg, status,2, cstack
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7241 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;Total ram usage:        5 bytes
  7246 ;; Hardware stack levels used:    1
  7247 ;; Hardware stack levels required when called:    8
  7248 ;; This function calls:
  7249 ;;		_FlashUnlockSequence
  7250 ;; This function is called by:
  7251 ;;		_WriteFlashValues
  7252 ;;		_writeExecutableState
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text40
  7257  00B0BC                     __ptext40:
  7258                           	opt stack 0
  7259  00B0BC                     _FlashWriteWord:
  7260                           	opt stack 19
  7261                           
  7262                           ;peripherals.c: 190: unsigned char intStatusUC;
  7263                           ;peripherals.c: 192: intStatusUC = INTCONbits.GIE;
  7264                           
  7265                           ;incstack = 0
  7266  00B0BC  0E00               	movlw	0
  7267  00B0BE  BEF2               	btfsc	intcon,7,c	;volatile
  7268  00B0C0  0E01               	movlw	1
  7269  00B0C2  0102               	movlb	2	; () banked
  7270  00B0C4  6F1F               	movwf	FlashWriteWord@intStatusUC& (0+255),b
  7271                           
  7272                           ; BSR set to: 2
  7273                           ;peripherals.c: 193: INTCONbits.GIE = 0;
  7274  00B0C6  9EF2               	bcf	intcon,7,c	;volatile
  7275                           
  7276                           ; BSR set to: 2
  7277                           ;peripherals.c: 195: TBLPTRU = 0;
  7278  00B0C8  0E00               	movlw	0
  7279  00B0CA  6EF8               	movwf	tblptru,c	;volatile
  7280                           
  7281                           ; BSR set to: 2
  7282                           ;peripherals.c: 196: TBLPTRH = flashAddressUS >> 8;
  7283  00B0CC  0102               	movlb	2	; () banked
  7284  00B0CE  511C               	movf	(FlashWriteWord@flashAddressUS+1)& (0+255),w,b
  7285  00B0D0  6EF7               	movwf	tblptrh,c	;volatile
  7286                           
  7287                           ; BSR set to: 2
  7288                           ;peripherals.c: 197: TBLPTRL = flashAddressUS;
  7289  00B0D2  C21B  FFF6         	movff	FlashWriteWord@flashAddressUS,tblptrl	;volatile
  7290                           
  7291                           ; BSR set to: 2
  7292                           ;peripherals.c: 199: TABLAT = lsbUC;
  7293  00B0D6  C21D  FFF5         	movff	FlashWriteWord@lsbUC,tablat	;volatile
  7294  00B0DA  000D               	tblwt		*+	;# 
  7295                           
  7296                           ;peripherals.c: 205: TABLAT = msbUC;
  7297  00B0DC  C21E  FFF5         	movff	FlashWriteWord@msbUC,tablat	;volatile
  7298  00B0E0  000C               	tblwt		*	;# 
  7299                           
  7300                           ;peripherals.c: 211: EECON1bits.WPROG = 1;
  7301  00B0E2  8AA6               	bsf	4006,5,c	;volatile
  7302                           
  7303                           ;peripherals.c: 212: EECON1bits.WREN = 1;
  7304  00B0E4  84A6               	bsf	4006,2,c	;volatile
  7305                           
  7306                           ;peripherals.c: 213: FlashUnlockSequence();
  7307  00B0E6  EC17  F05B         	call	_FlashUnlockSequence	;wreg free
  7308                           
  7309                           ;peripherals.c: 214: EECON1bits.WPROG = 0;
  7310  00B0EA  9AA6               	bcf	4006,5,c	;volatile
  7311                           
  7312                           ;peripherals.c: 215: EECON1bits.WREN = 0;
  7313  00B0EC  94A6               	bcf	4006,2,c	;volatile
  7314                           
  7315                           ;peripherals.c: 217: if(intStatusUC)
  7316  00B0EE  0102               	movlb	2	; () banked
  7317  00B0F0  511F               	movf	FlashWriteWord@intStatusUC& (0+255),w,b
  7318  00B0F2  0102               	movlb	2	; () banked
  7319  00B0F4  B4D8               	btfsc	status,2,c
  7320  00B0F6  0012               	return	
  7321                           
  7322                           ; BSR set to: 2
  7323                           ;peripherals.c: 218: INTCONbits.GIE = 1;
  7324  00B0F8  8EF2               	bsf	intcon,7,c	;volatile
  7325  00B0FA  0012               	return	
  7326  00B0FC                     __end_of_FlashWriteWord:
  7327                           	opt stack 0
  7328                           tblptru	equ	0xFF8
  7329                           tblptrh	equ	0xFF7
  7330                           tblptrl	equ	0xFF6
  7331                           tablat	equ	0xFF5
  7332                           prodh	equ	0xFF4
  7333                           prodl	equ	0xFF3
  7334                           intcon	equ	0xFF2
  7335                           postinc0	equ	0xFEE
  7336                           wreg	equ	0xFE8
  7337                           indf1	equ	0xFE7
  7338                           postinc1	equ	0xFE6
  7339                           postdec1	equ	0xFE5
  7340                           fsr1h	equ	0xFE2
  7341                           fsr1l	equ	0xFE1
  7342                           indf2	equ	0xFDF
  7343                           postinc2	equ	0xFDE
  7344                           postdec2	equ	0xFDD
  7345                           fsr2h	equ	0xFDA
  7346                           fsr2l	equ	0xFD9
  7347                           status	equ	0xFD8
  7348                           
  7349 ;; *************** function _FlashEraseBlock *****************
  7350 ;; Defined at:
  7351 ;;		line 164 in file "peripherals.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  flashAddress    2   26[BANK2 ] unsigned short 
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;  intStatusUC     1   28[BANK2 ] unsigned char 
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  1    wreg      void 
  7358 ;; Registers used:
  7359 ;;		wreg, status,2, status,0, cstack
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7369 ;;Total ram usage:        3 bytes
  7370 ;; Hardware stack levels used:    1
  7371 ;; Hardware stack levels required when called:    8
  7372 ;; This function calls:
  7373 ;;		_FlashUnlockSequence
  7374 ;; This function is called by:
  7375 ;;		_WriteFlashValues
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           	psect	text41
  7380  00B25E                     __ptext41:
  7381                           	opt stack 0
  7382  00B25E                     _FlashEraseBlock:
  7383                           	opt stack 19
  7384                           
  7385                           ;peripherals.c: 165: unsigned char intStatusUC;
  7386                           ;peripherals.c: 167: intStatusUC = INTCONbits.GIE;
  7387                           
  7388                           ; BSR set to: 2
  7389                           ;incstack = 0
  7390  00B25E  0E00               	movlw	0
  7391  00B260  BEF2               	btfsc	intcon,7,c	;volatile
  7392  00B262  0E01               	movlw	1
  7393  00B264  0102               	movlb	2	; () banked
  7394  00B266  6F1D               	movwf	FlashEraseBlock@intStatusUC& (0+255),b
  7395                           
  7396                           ; BSR set to: 2
  7397                           ;peripherals.c: 168: INTCONbits.GIE = 0;
  7398  00B268  9EF2               	bcf	intcon,7,c	;volatile
  7399                           
  7400                           ; BSR set to: 2
  7401                           ;peripherals.c: 170: TBLPTRU = 0;
  7402  00B26A  0E00               	movlw	0
  7403  00B26C  6EF8               	movwf	tblptru,c	;volatile
  7404                           
  7405                           ; BSR set to: 2
  7406                           ;peripherals.c: 171: TBLPTRH = (flashAddressUS >> 8) & ~0b11;
  7407  00B26E  0102               	movlb	2	; () banked
  7408  00B270  511C               	movf	(FlashEraseBlock@flashAddressUS+1)& (0+255),w,b
  7409  00B272  0BFC               	andlw	252
  7410  00B274  6EF7               	movwf	tblptrh,c	;volatile
  7411                           
  7412                           ; BSR set to: 2
  7413                           ;peripherals.c: 172: TBLPTRU = 0;
  7414  00B276  0E00               	movlw	0
  7415  00B278  6EF8               	movwf	tblptru,c	;volatile
  7416                           
  7417                           ; BSR set to: 2
  7418                           ;peripherals.c: 174: EECON1bits.WREN = 1;
  7419  00B27A  84A6               	bsf	4006,2,c	;volatile
  7420                           
  7421                           ; BSR set to: 2
  7422                           ;peripherals.c: 175: EECON1bits.FREE = 1;
  7423  00B27C  88A6               	bsf	4006,4,c	;volatile
  7424                           
  7425                           ; BSR set to: 2
  7426                           ;peripherals.c: 176: FlashUnlockSequence();
  7427  00B27E  EC17  F05B         	call	_FlashUnlockSequence	;wreg free
  7428                           
  7429                           ;peripherals.c: 177: EECON1bits.WREN = 0;
  7430  00B282  94A6               	bcf	4006,2,c	;volatile
  7431                           
  7432                           ;peripherals.c: 179: if(intStatusUC)
  7433  00B284  0102               	movlb	2	; () banked
  7434  00B286  511D               	movf	FlashEraseBlock@intStatusUC& (0+255),w,b
  7435  00B288  0102               	movlb	2	; () banked
  7436  00B28A  B4D8               	btfsc	status,2,c
  7437  00B28C  0012               	return	
  7438                           
  7439                           ; BSR set to: 2
  7440                           ;peripherals.c: 180: INTCONbits.GIE = 1;
  7441  00B28E  8EF2               	bsf	intcon,7,c	;volatile
  7442  00B290  0012               	return	
  7443  00B292                     __end_of_FlashEraseBlock:
  7444                           	opt stack 0
  7445                           tblptru	equ	0xFF8
  7446                           tblptrh	equ	0xFF7
  7447                           tblptrl	equ	0xFF6
  7448                           tablat	equ	0xFF5
  7449                           prodh	equ	0xFF4
  7450                           prodl	equ	0xFF3
  7451                           intcon	equ	0xFF2
  7452                           postinc0	equ	0xFEE
  7453                           wreg	equ	0xFE8
  7454                           indf1	equ	0xFE7
  7455                           postinc1	equ	0xFE6
  7456                           postdec1	equ	0xFE5
  7457                           fsr1h	equ	0xFE2
  7458                           fsr1l	equ	0xFE1
  7459                           indf2	equ	0xFDF
  7460                           postinc2	equ	0xFDE
  7461                           postdec2	equ	0xFDD
  7462                           fsr2h	equ	0xFDA
  7463                           fsr2l	equ	0xFD9
  7464                           status	equ	0xFD8
  7465                           
  7466 ;; *************** function _FlashUnlockSequence *****************
  7467 ;; Defined at:
  7468 ;;		line 183 in file "peripherals.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;		None
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;		None
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  1    wreg      void 
  7475 ;; Registers used:
  7476 ;;		wreg, status,2
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7486 ;;Total ram usage:        0 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:    7
  7489 ;; This function calls:
  7490 ;;		Nothing
  7491 ;; This function is called by:
  7492 ;;		_FlashEraseBlock
  7493 ;;		_FlashWriteWord
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text42
  7498  00B62E                     __ptext42:
  7499                           	opt stack 0
  7500  00B62E                     _FlashUnlockSequence:
  7501                           	opt stack 19
  7502                           
  7503                           ;peripherals.c: 184: EECON2 = 0x55;
  7504                           
  7505                           ; BSR set to: 2
  7506                           ;incstack = 0
  7507  00B62E  0E55               	movlw	85
  7508  00B630  6EA7               	movwf	4007,c	;volatile
  7509                           
  7510                           ;peripherals.c: 185: EECON2 = 0xAA;
  7511  00B632  0EAA               	movlw	170
  7512  00B634  6EA7               	movwf	4007,c	;volatile
  7513                           
  7514                           ;peripherals.c: 186: EECON1bits.WR = 1;
  7515  00B636  82A6               	bsf	4006,1,c	;volatile
  7516  00B638  0012               	return		;funcret
  7517  00B63A                     __end_of_FlashUnlockSequence:
  7518                           	opt stack 0
  7519                           tblptru	equ	0xFF8
  7520                           tblptrh	equ	0xFF7
  7521                           tblptrl	equ	0xFF6
  7522                           tablat	equ	0xFF5
  7523                           prodh	equ	0xFF4
  7524                           prodl	equ	0xFF3
  7525                           intcon	equ	0xFF2
  7526                           postinc0	equ	0xFEE
  7527                           wreg	equ	0xFE8
  7528                           indf1	equ	0xFE7
  7529                           postinc1	equ	0xFE6
  7530                           postdec1	equ	0xFE5
  7531                           fsr1h	equ	0xFE2
  7532                           fsr1l	equ	0xFE1
  7533                           indf2	equ	0xFDF
  7534                           postinc2	equ	0xFDE
  7535                           postdec2	equ	0xFDD
  7536                           fsr2h	equ	0xFDA
  7537                           fsr2l	equ	0xFD9
  7538                           status	equ	0xFD8
  7539                           
  7540 ;; *************** function _FlashReadAddress *****************
  7541 ;; Defined at:
  7542 ;;		line 151 in file "peripherals.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;  flashAddress    2   26[BANK2 ] unsigned short 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;		None
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      unsigned char 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7556 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7559 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7560 ;;Total ram usage:        2 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    7
  7563 ;; This function calls:
  7564 ;;		Nothing
  7565 ;; This function is called by:
  7566 ;;		_ReadFlashValues
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text43
  7571  00B5B0                     __ptext43:
  7572                           	opt stack 0
  7573  00B5B0                     _FlashReadAddress:
  7574                           	opt stack 21
  7575                           
  7576                           ;peripherals.c: 153: TBLPTRU = 0;
  7577                           
  7578                           ;incstack = 0
  7579  00B5B0  0E00               	movlw	0
  7580  00B5B2  6EF8               	movwf	tblptru,c	;volatile
  7581                           
  7582                           ;peripherals.c: 154: TBLPTRH = flashAddressUS >> 8;
  7583  00B5B4  0102               	movlb	2	; () banked
  7584  00B5B6  511C               	movf	(FlashReadAddress@flashAddressUS+1)& (0+255),w,b
  7585  00B5B8  6EF7               	movwf	tblptrh,c	;volatile
  7586                           
  7587                           ; BSR set to: 2
  7588                           ;peripherals.c: 155: TBLPTRL = flashAddressUS;
  7589  00B5BA  C21B  FFF6         	movff	FlashReadAddress@flashAddressUS,tblptrl	;volatile
  7590  00B5BE  0008               	tblrd		*	;# 
  7591                           
  7592                           ;peripherals.c: 161: return TABLAT;
  7593  00B5C0  50F5               	movf	tablat,w,c	;volatile
  7594  00B5C2  0012               	return	
  7595  00B5C4                     __end_of_FlashReadAddress:
  7596                           	opt stack 0
  7597                           tblptru	equ	0xFF8
  7598                           tblptrh	equ	0xFF7
  7599                           tblptrl	equ	0xFF6
  7600                           tablat	equ	0xFF5
  7601                           prodh	equ	0xFF4
  7602                           prodl	equ	0xFF3
  7603                           intcon	equ	0xFF2
  7604                           postinc0	equ	0xFEE
  7605                           wreg	equ	0xFE8
  7606                           indf1	equ	0xFE7
  7607                           postinc1	equ	0xFE6
  7608                           postdec1	equ	0xFE5
  7609                           fsr1h	equ	0xFE2
  7610                           fsr1l	equ	0xFE1
  7611                           indf2	equ	0xFDF
  7612                           postinc2	equ	0xFDE
  7613                           postdec2	equ	0xFDD
  7614                           fsr2h	equ	0xFDA
  7615                           fsr2l	equ	0xFD9
  7616                           status	equ	0xFD8
  7617                           
  7618 ;; *************** function _ClearPacketNumbers *****************
  7619 ;; Defined at:
  7620 ;;		line 215 in file "mastercomms.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;		None
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;  iscCountUC      1   26[BANK2 ] unsigned char 
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  1    wreg      void 
  7627 ;; Registers used:
  7628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7637 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;Total ram usage:        1 bytes
  7639 ;; Hardware stack levels used:    1
  7640 ;; Hardware stack levels required when called:    7
  7641 ;; This function calls:
  7642 ;;		Nothing
  7643 ;; This function is called by:
  7644 ;;		_InitStates
  7645 ;;		_SavePacketNumber
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text44
  7650  00AF60                     __ptext44:
  7651                           	opt stack 0
  7652  00AF60                     _ClearPacketNumbers:
  7653                           	opt stack 20
  7654                           
  7655                           ;mastercomms.c: 216: unsigned char iscCountUC;
  7656                           ;mastercomms.c: 218: for(iscCountUC = 0; iscCountUC < 31; iscCountUC++){
  7657                           
  7658                           ;incstack = 0
  7659  00AF60  0E00               	movlw	0
  7660  00AF62  0102               	movlb	2	; () banked
  7661  00AF64  6F1B               	movwf	ClearPacketNumbers@iscCountUC& (0+255),b
  7662  00AF66                     l6331:
  7663                           
  7664                           ; BSR set to: 2
  7665  00AF66  0E1E               	movlw	30
  7666  00AF68  0102               	movlb	2	; () banked
  7667  00AF6A  651B               	cpfsgt	ClearPacketNumbers@iscCountUC& (0+255),b
  7668  00AF6C  D001               	goto	l6335
  7669  00AF6E  0012               	return	
  7670  00AF70                     l6335:
  7671                           
  7672                           ; BSR set to: 2
  7673                           ;mastercomms.c: 219: packetNumbersUSAG[1][iscCountUC] = 0;
  7674  00AF70  0102               	movlb	2	; () banked
  7675  00AF72  511B               	movf	ClearPacketNumbers@iscCountUC& (0+255),w,b
  7676  00AF74  0D02               	mullw	2
  7677  00AF76  0EC2               	movlw	low (_packetNumbersUSAG+62)
  7678  00AF78  24F3               	addwf	prodl,w,c
  7679  00AF7A  6ED9               	movwf	fsr2l,c
  7680  00AF7C  0E05               	movlw	high (_packetNumbersUSAG+62)
  7681  00AF7E  20F4               	addwfc	prodh,w,c
  7682  00AF80  6EDA               	movwf	fsr2h,c
  7683  00AF82  0E00               	movlw	0
  7684  00AF84  6EDE               	movwf	postinc2,c
  7685  00AF86  0E00               	movlw	0
  7686  00AF88  6EDD               	movwf	postdec2,c
  7687                           
  7688                           ;mastercomms.c: 220: packetNumbersUSAG[0][iscCountUC] = 0;
  7689  00AF8A  0102               	movlb	2	; () banked
  7690  00AF8C  511B               	movf	ClearPacketNumbers@iscCountUC& (0+255),w,b
  7691  00AF8E  0D02               	mullw	2
  7692  00AF90  0E84               	movlw	low _packetNumbersUSAG
  7693  00AF92  24F3               	addwf	prodl,w,c
  7694  00AF94  6ED9               	movwf	fsr2l,c
  7695  00AF96  0E05               	movlw	high _packetNumbersUSAG
  7696  00AF98  20F4               	addwfc	prodh,w,c
  7697  00AF9A  6EDA               	movwf	fsr2h,c
  7698  00AF9C  0E00               	movlw	0
  7699  00AF9E  6EDE               	movwf	postinc2,c
  7700  00AFA0  0E00               	movlw	0
  7701  00AFA2  6EDD               	movwf	postdec2,c
  7702                           
  7703                           ; BSR set to: 2
  7704  00AFA4  0102               	movlb	2	; () banked
  7705  00AFA6  2B1B               	incf	ClearPacketNumbers@iscCountUC& (0+255),f,b
  7706  00AFA8  D7DE               	goto	l6331
  7707  00AFAA                     __end_of_ClearPacketNumbers:
  7708                           	opt stack 0
  7709                           tblptru	equ	0xFF8
  7710                           tblptrh	equ	0xFF7
  7711                           tblptrl	equ	0xFF6
  7712                           tablat	equ	0xFF5
  7713                           prodh	equ	0xFF4
  7714                           prodl	equ	0xFF3
  7715                           intcon	equ	0xFF2
  7716                           postinc0	equ	0xFEE
  7717                           wreg	equ	0xFE8
  7718                           indf1	equ	0xFE7
  7719                           postinc1	equ	0xFE6
  7720                           postdec1	equ	0xFE5
  7721                           fsr1h	equ	0xFE2
  7722                           fsr1l	equ	0xFE1
  7723                           indf2	equ	0xFDF
  7724                           postinc2	equ	0xFDE
  7725                           postdec2	equ	0xFDD
  7726                           fsr2h	equ	0xFDA
  7727                           fsr2l	equ	0xFD9
  7728                           status	equ	0xFD8
  7729                           
  7730 ;; *************** function _InitST7540Wrapper *****************
  7731 ;; Defined at:
  7732 ;;		line 176 in file "main.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;		None
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  initCountUC     1   51[BANK2 ] unsigned char 
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  1    wreg      void 
  7739 ;; Registers used:
  7740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;Total ram usage:        1 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; Hardware stack levels required when called:   11
  7753 ;; This function calls:
  7754 ;;		_InitST7540
  7755 ;; This function is called by:
  7756 ;;		_main
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text45
  7761  00B40E                     __ptext45:
  7762                           	opt stack 0
  7763  00B40E                     _InitST7540Wrapper:
  7764                           	opt stack 19
  7765                           
  7766                           ;main.c: 177: unsigned char initCountUC;
  7767                           ;main.c: 179: for(initCountUC = 0; initCountUC < 5; initCountUC++){
  7768                           
  7769                           ; BSR set to: 2
  7770                           ;incstack = 0
  7771  00B40E  0E00               	movlw	0
  7772  00B410  0102               	movlb	2	; () banked
  7773  00B412  6F34               	movwf	InitST7540Wrapper@initCountUC& (0+255),b
  7774  00B414                     l6781:
  7775                           
  7776                           ; BSR set to: 2
  7777  00B414  0E04               	movlw	4
  7778  00B416  0102               	movlb	2	; () banked
  7779  00B418  6534               	cpfsgt	InitST7540Wrapper@initCountUC& (0+255),b
  7780  00B41A  D001               	goto	l6785
  7781  00B41C  0012               	return	
  7782  00B41E                     l6785:
  7783                           
  7784                           ; BSR set to: 2
  7785                           ;main.c: 180: if(InitST7540()){
  7786  00B41E  EC4B  F050         	call	_InitST7540	;wreg free
  7787  00B422  0900               	iorlw	0
  7788  00B424  B4D8               	btfsc	status,2,c
  7789  00B426  D003               	goto	l6789
  7790                           
  7791                           ;main.c: 182: statusFlagsUSLG |= 0b000000000000000000000010;
  7792  00B428  0102               	movlb	2	; () banked
  7793  00B42A  838A               	bsf	_statusFlagsUSLG& (0+255),1,b	;volatile
  7794                           
  7795                           ;main.c: 183: break;
  7796  00B42C  0012               	return	
  7797  00B42E                     l6789:
  7798  00B42E  0102               	movlb	2	; () banked
  7799  00B430  2B34               	incf	InitST7540Wrapper@initCountUC& (0+255),f,b
  7800  00B432  D7F0               	goto	l6781
  7801  00B434                     __end_of_InitST7540Wrapper:
  7802                           	opt stack 0
  7803                           tblptru	equ	0xFF8
  7804                           tblptrh	equ	0xFF7
  7805                           tblptrl	equ	0xFF6
  7806                           tablat	equ	0xFF5
  7807                           prodh	equ	0xFF4
  7808                           prodl	equ	0xFF3
  7809                           intcon	equ	0xFF2
  7810                           postinc0	equ	0xFEE
  7811                           wreg	equ	0xFE8
  7812                           indf1	equ	0xFE7
  7813                           postinc1	equ	0xFE6
  7814                           postdec1	equ	0xFE5
  7815                           fsr1h	equ	0xFE2
  7816                           fsr1l	equ	0xFE1
  7817                           indf2	equ	0xFDF
  7818                           postinc2	equ	0xFDE
  7819                           postdec2	equ	0xFDD
  7820                           fsr2h	equ	0xFDA
  7821                           fsr2l	equ	0xFD9
  7822                           status	equ	0xFD8
  7823                           
  7824 ;; *************** function _InitST7540 *****************
  7825 ;; Defined at:
  7826 ;;		line 88 in file "ST7540.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;		None
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  configDataRX    3   48[BANK2 ] unsigned um
  7831 ;;  frameDataRXU    3   45[BANK2 ] unsigned um
  7832 ;;  configDataTX    3   42[BANK2 ] unsigned um
  7833 ;;  frameDataTXU    3   39[BANK2 ] unsigned um
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  1    wreg      unsigned char 
  7836 ;; Registers used:
  7837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  7843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7844 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7846 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;Total ram usage:       12 bytes
  7848 ;; Hardware stack levels used:    1
  7849 ;; Hardware stack levels required when called:   10
  7850 ;; This function calls:
  7851 ;;		_InitST7540Pins
  7852 ;;		_ReadConfigST7540
  7853 ;;		_WriteConfigST7540
  7854 ;; This function is called by:
  7855 ;;		_InitST7540Wrapper
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	text46
  7860  00A096                     __ptext46:
  7861                           	opt stack 0
  7862  00A096                     _InitST7540:
  7863                           	opt stack 19
  7864                           
  7865                           ;ST7540.c: 89: unsigned long short frameDataTXUS;
  7866                           ;ST7540.c: 90: unsigned long short frameDataRXUS = 0;
  7867                           
  7868                           ; BSR set to: 2
  7869                           ;incstack = 0
  7870  00A096  0E00               	movlw	0
  7871  00A098  0102               	movlb	2	; () banked
  7872  00A09A  6F2E               	movwf	InitST7540@frameDataRXUS& (0+255),b
  7873  00A09C  0E00               	movlw	0
  7874  00A09E  0102               	movlb	2	; () banked
  7875  00A0A0  6F2F               	movwf	(InitST7540@frameDataRXUS+1)& (0+255),b
  7876  00A0A2  0E00               	movlw	0
  7877  00A0A4  0102               	movlb	2	; () banked
  7878  00A0A6  6F30               	movwf	(InitST7540@frameDataRXUS+2)& (0+255),b
  7879                           
  7880                           ;ST7540.c: 91: unsigned long short configDataTXUS;
  7881                           ;ST7540.c: 92: unsigned long short configDataRXUS = 0;
  7882  00A0A8  0E00               	movlw	0
  7883  00A0AA  0102               	movlb	2	; () banked
  7884  00A0AC  6F31               	movwf	InitST7540@configDataRXUS& (0+255),b
  7885  00A0AE  0E00               	movlw	0
  7886  00A0B0  0102               	movlb	2	; () banked
  7887  00A0B2  6F32               	movwf	(InitST7540@configDataRXUS+1)& (0+255),b
  7888  00A0B4  0E00               	movlw	0
  7889  00A0B6  0102               	movlb	2	; () banked
  7890  00A0B8  6F33               	movwf	(InitST7540@configDataRXUS+2)& (0+255),b
  7891                           
  7892                           ; BSR set to: 2
  7893                           ;ST7540.c: 94: InitST7540Pins();
  7894  00A0BA  ECBC  F058         	call	_InitST7540Pins	;wreg free
  7895                           
  7896                           ;ST7540.c: 96: frameDataTXUS = (unsigned long short) 0x9b58;
  7897  00A0BE  0E58               	movlw	88
  7898  00A0C0  0102               	movlb	2	; () banked
  7899  00A0C2  6F28               	movwf	InitST7540@frameDataTXUS& (0+255),b
  7900  00A0C4  0E9B               	movlw	155
  7901  00A0C6  0102               	movlb	2	; () banked
  7902  00A0C8  6F29               	movwf	(InitST7540@frameDataTXUS+1)& (0+255),b
  7903  00A0CA  0E00               	movlw	0
  7904  00A0CC  0102               	movlb	2	; () banked
  7905  00A0CE  6F2A               	movwf	(InitST7540@frameDataTXUS+2)& (0+255),b
  7906                           
  7907                           ; BSR set to: 2
  7908                           ;ST7540.c: 97: configDataTXUS = 0b000000000000000000000110 |
  7909                           ;ST7540.c: 98: 0b000000000000000000010000 |
  7910                           ;ST7540.c: 99: 0b000000000000000000000000 |
  7911                           ;ST7540.c: 100: 0b000000000000000000000000 |
  7912                           ;ST7540.c: 101: 0b000000000000000010000000 |
  7913                           ;ST7540.c: 102: 0b000000000000001000000000 |
  7914                           ;ST7540.c: 103: 0b000000000001000000000000 |
  7915                           ;ST7540.c: 104: 0b000000000000000000000000 |
  7916                           ;ST7540.c: 105: 0b000000001000000000000000 |
  7917                           ;ST7540.c: 106: 0b000000100000000000000000 |
  7918                           ;ST7540.c: 107: 0b000001000000000000000000 |
  7919                           ;ST7540.c: 108: 0b000000000000000000000000 |
  7920  00A0D0  0E96               	movlw	150
  7921  00A0D2  0102               	movlb	2	; () banked
  7922  00A0D4  6F2B               	movwf	InitST7540@configDataTXUS& (0+255),b
  7923  00A0D6  0E92               	movlw	146
  7924  00A0D8  0102               	movlb	2	; () banked
  7925  00A0DA  6F2C               	movwf	(InitST7540@configDataTXUS+1)& (0+255),b
  7926  00A0DC  0E76               	movlw	118
  7927  00A0DE  0102               	movlb	2	; () banked
  7928  00A0E0  6F2D               	movwf	(InitST7540@configDataTXUS+2)& (0+255),b
  7929                           
  7930                           ; BSR set to: 2
  7931                           ;ST7540.c: 114: SSP2STATbits.SMP = 0;
  7932  00A0E2  9E73               	bcf	3955,7,c	;volatile
  7933                           
  7934                           ; BSR set to: 2
  7935                           ;ST7540.c: 115: SSP2STATbits.CKE = 1;
  7936  00A0E4  8C73               	bsf	3955,6,c	;volatile
  7937                           
  7938                           ; BSR set to: 2
  7939                           ;ST7540.c: 116: SSP2CON1bits.CKP = 0;
  7940  00A0E6  9872               	bcf	3954,4,c	;volatile
  7941                           
  7942                           ; BSR set to: 2
  7943                           ;ST7540.c: 117: SSP2CON1bits.SSPM = 0b0100;
  7944  00A0E8  5072               	movf	3954,w,c	;volatile
  7945  00A0EA  0BF0               	andlw	-16
  7946  00A0EC  0904               	iorlw	4
  7947  00A0EE  6E72               	movwf	3954,c	;volatile
  7948                           
  7949                           ; BSR set to: 2
  7950                           ;ST7540.c: 127: WriteConfigST7540(frameDataTXUS, configDataTXUS);
  7951  00A0F0  C228  F21D         	movff	InitST7540@frameDataTXUS,WriteConfigST7540@frameDataUS
  7952  00A0F4  C229  F21E         	movff	InitST7540@frameDataTXUS+1,WriteConfigST7540@frameDataUS+1
  7953  00A0F8  C22A  F21F         	movff	InitST7540@frameDataTXUS+2,WriteConfigST7540@frameDataUS+2
  7954  00A0FC  C22B  F220         	movff	InitST7540@configDataTXUS,WriteConfigST7540@configDataUS
  7955  00A100  C22C  F221         	movff	InitST7540@configDataTXUS+1,WriteConfigST7540@configDataUS+1
  7956  00A104  C22D  F222         	movff	InitST7540@configDataTXUS+2,WriteConfigST7540@configDataUS+2
  7957  00A108  EC90  F053         	call	_WriteConfigST7540	;wreg free
  7958                           
  7959                           ;ST7540.c: 128: WriteConfigST7540(frameDataTXUS, configDataTXUS);
  7960  00A10C  C228  F21D         	movff	InitST7540@frameDataTXUS,WriteConfigST7540@frameDataUS
  7961  00A110  C229  F21E         	movff	InitST7540@frameDataTXUS+1,WriteConfigST7540@frameDataUS+1
  7962  00A114  C22A  F21F         	movff	InitST7540@frameDataTXUS+2,WriteConfigST7540@frameDataUS+2
  7963  00A118  C22B  F220         	movff	InitST7540@configDataTXUS,WriteConfigST7540@configDataUS
  7964  00A11C  C22C  F221         	movff	InitST7540@configDataTXUS+1,WriteConfigST7540@configDataUS+1
  7965  00A120  C22D  F222         	movff	InitST7540@configDataTXUS+2,WriteConfigST7540@configDataUS+2
  7966  00A124  EC90  F053         	call	_WriteConfigST7540	;wreg free
  7967                           
  7968                           ;ST7540.c: 129: ReadConfigST7540(&frameDataRXUS, &configDataRXUS);
  7969  00A128  0E2E               	movlw	low InitST7540@frameDataRXUS
  7970  00A12A  0102               	movlb	2	; () banked
  7971  00A12C  6F1B               	movwf	ReadConfigST7540@frameDataUS& (0+255),b
  7972  00A12E  0E02               	movlw	high InitST7540@frameDataRXUS
  7973  00A130  0102               	movlb	2	; () banked
  7974  00A132  6F1C               	movwf	(ReadConfigST7540@frameDataUS+1)& (0+255),b
  7975  00A134  0E31               	movlw	low InitST7540@configDataRXUS
  7976  00A136  0102               	movlb	2	; () banked
  7977  00A138  6F1D               	movwf	ReadConfigST7540@configDataUS& (0+255),b
  7978  00A13A  0E02               	movlw	high InitST7540@configDataRXUS
  7979  00A13C  0102               	movlb	2	; () banked
  7980  00A13E  6F1E               	movwf	(ReadConfigST7540@configDataUS+1)& (0+255),b
  7981  00A140  ECDE  F04C         	call	_ReadConfigST7540	;wreg free
  7982                           
  7983                           ;ST7540.c: 131: if((frameDataTXUS != frameDataRXUS) && (configDataTXUS != configDataRXUS
      +                          ))
  7984  00A144  0102               	movlb	2	; () banked
  7985  00A146  512E               	movf	InitST7540@frameDataRXUS& (0+255),w,b
  7986  00A148  0102               	movlb	2	; () banked
  7987  00A14A  1928               	xorwf	InitST7540@frameDataTXUS& (0+255),w,b
  7988  00A14C  E10B               	bnz	u7210
  7989  00A14E  0102               	movlb	2	; () banked
  7990  00A150  512F               	movf	(InitST7540@frameDataRXUS+1)& (0+255),w,b
  7991  00A152  0102               	movlb	2	; () banked
  7992  00A154  1929               	xorwf	(InitST7540@frameDataTXUS+1)& (0+255),w,b
  7993  00A156  E106               	bnz	u7210
  7994  00A158  0102               	movlb	2	; () banked
  7995  00A15A  5130               	movf	(InitST7540@frameDataRXUS+2)& (0+255),w,b
  7996  00A15C  0102               	movlb	2	; () banked
  7997  00A15E  192A               	xorwf	(InitST7540@frameDataTXUS+2)& (0+255),w,b
  7998  00A160  B4D8               	btfsc	status,2,c
  7999  00A162  D012               	goto	l81
  8000  00A164                     u7210:
  8001                           
  8002                           ; BSR set to: 2
  8003  00A164  0102               	movlb	2	; () banked
  8004  00A166  5131               	movf	InitST7540@configDataRXUS& (0+255),w,b
  8005  00A168  0102               	movlb	2	; () banked
  8006  00A16A  192B               	xorwf	InitST7540@configDataTXUS& (0+255),w,b
  8007  00A16C  E10B               	bnz	u7220
  8008  00A16E  0102               	movlb	2	; () banked
  8009  00A170  5132               	movf	(InitST7540@configDataRXUS+1)& (0+255),w,b
  8010  00A172  0102               	movlb	2	; () banked
  8011  00A174  192C               	xorwf	(InitST7540@configDataTXUS+1)& (0+255),w,b
  8012  00A176  E106               	bnz	u7220
  8013  00A178  0102               	movlb	2	; () banked
  8014  00A17A  5133               	movf	(InitST7540@configDataRXUS+2)& (0+255),w,b
  8015  00A17C  0102               	movlb	2	; () banked
  8016  00A17E  192D               	xorwf	(InitST7540@configDataTXUS+2)& (0+255),w,b
  8017  00A180  B4D8               	btfsc	status,2,c
  8018  00A182  D002               	goto	l81
  8019  00A184                     u7220:
  8020                           
  8021                           ; BSR set to: 2
  8022                           ;ST7540.c: 132: return 0;
  8023  00A184  0E00               	movlw	0
  8024                           
  8025                           ; BSR set to: 2
  8026  00A186  0012               	return	
  8027  00A188                     l81:
  8028                           
  8029                           ; BSR set to: 2
  8030                           ;ST7540.c: 134: PIR3bits.SSP2IF = 0;
  8031  00A188  9EA4               	bcf	4004,7,c	;volatile
  8032                           
  8033                           ;ST7540.c: 135: PIE3bits.SSP2IE = 1;
  8034  00A18A  8EA3               	bsf	4003,7,c	;volatile
  8035                           
  8036                           ;ST7540.c: 136: INTCONbits.PEIE = 1;
  8037  00A18C  8CF2               	bsf	intcon,6,c	;volatile
  8038                           
  8039                           ; BSR set to: 2
  8040                           ;ST7540.c: 138: return 1;
  8041  00A18E  0E01               	movlw	1
  8042  00A190  0012               	return	
  8043  00A192                     __end_of_InitST7540:
  8044                           	opt stack 0
  8045                           tblptru	equ	0xFF8
  8046                           tblptrh	equ	0xFF7
  8047                           tblptrl	equ	0xFF6
  8048                           tablat	equ	0xFF5
  8049                           prodh	equ	0xFF4
  8050                           prodl	equ	0xFF3
  8051                           intcon	equ	0xFF2
  8052                           postinc0	equ	0xFEE
  8053                           wreg	equ	0xFE8
  8054                           indf1	equ	0xFE7
  8055                           postinc1	equ	0xFE6
  8056                           postdec1	equ	0xFE5
  8057                           fsr1h	equ	0xFE2
  8058                           fsr1l	equ	0xFE1
  8059                           indf2	equ	0xFDF
  8060                           postinc2	equ	0xFDE
  8061                           postdec2	equ	0xFDD
  8062                           fsr2h	equ	0xFDA
  8063                           fsr2l	equ	0xFD9
  8064                           status	equ	0xFD8
  8065                           
  8066 ;; *************** function _WriteConfigST7540 *****************
  8067 ;; Defined at:
  8068 ;;		line 141 in file "ST7540.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;  frameDataUS     3   28[BANK2 ] unsigned um
  8071 ;;  configDataUS    3   31[BANK2 ] unsigned um
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  bitsSentUC      1   38[BANK2 ] unsigned char 
  8074 ;;  discardUC       1   37[BANK2 ] unsigned char 
  8075 ;; Return value:  Size  Location     Type
  8076 ;;                  1    wreg      void 
  8077 ;; Registers used:
  8078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8084 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;Total ram usage:       11 bytes
  8089 ;; Hardware stack levels used:    1
  8090 ;; Hardware stack levels required when called:    9
  8091 ;; This function calls:
  8092 ;;		_WaitTickCount
  8093 ;; This function is called by:
  8094 ;;		_InitST7540
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text47
  8099  00A720                     __ptext47:
  8100                           	opt stack 0
  8101  00A720                     _WriteConfigST7540:
  8102                           	opt stack 19
  8103                           
  8104                           ;ST7540.c: 142: unsigned char discardUC;
  8105                           ;ST7540.c: 143: unsigned char bitsSentUC;
  8106                           ;ST7540.c: 145: bufferTXST7540UCAG[0] = (frameDataUS & 0b111111110000000000000000) >> 16
      +                          ;
  8107                           
  8108                           ; BSR set to: 2
  8109                           ;incstack = 0
  8110  00A720  C21F  F34C         	movff	WriteConfigST7540@frameDataUS+2,_bufferTXST7540UCAG
  8111                           
  8112                           ;ST7540.c: 146: bufferTXST7540UCAG[1] = (frameDataUS & 0b000000001111111100000000) >> 8;
  8113  00A724  C21D  F223         	movff	WriteConfigST7540@frameDataUS,??_WriteConfigST7540
  8114  00A728  C21E  F224         	movff	WriteConfigST7540@frameDataUS+1,??_WriteConfigST7540+1
  8115  00A72C  C21F  F225         	movff	WriteConfigST7540@frameDataUS+2,??_WriteConfigST7540+2
  8116  00A730  C224  F223         	movff	??_WriteConfigST7540+1,??_WriteConfigST7540
  8117  00A734  C225  F224         	movff	??_WriteConfigST7540+2,??_WriteConfigST7540+1
  8118  00A738  0102               	movlb	2	; () banked
  8119  00A73A  6B25               	clrf	(??_WriteConfigST7540+2)& (0+255),b
  8120  00A73C  0102               	movlb	2	; () banked
  8121  00A73E  5123               	movf	??_WriteConfigST7540& (0+255),w,b
  8122  00A740  0103               	movlb	3	; () banked
  8123  00A742  6F4D               	movwf	(_bufferTXST7540UCAG+1)& (0+255),b
  8124                           
  8125                           ; BSR set to: 3
  8126                           ;ST7540.c: 147: bufferTXST7540UCAG[2] = frameDataUS & 0b000000000000000011111111;
  8127  00A744  C21D  F34E         	movff	WriteConfigST7540@frameDataUS,_bufferTXST7540UCAG+2
  8128                           
  8129                           ; BSR set to: 3
  8130                           ;ST7540.c: 148: bufferTXST7540UCAG[3] = (configDataUS & 0b111111110000000000000000) >> 1
      +                          6;
  8131  00A748  C222  F34F         	movff	WriteConfigST7540@configDataUS+2,_bufferTXST7540UCAG+3
  8132                           
  8133                           ;ST7540.c: 149: bufferTXST7540UCAG[4] = (configDataUS & 0b000000001111111100000000) >> 8
      +                          ;
  8134  00A74C  C220  F223         	movff	WriteConfigST7540@configDataUS,??_WriteConfigST7540
  8135  00A750  C221  F224         	movff	WriteConfigST7540@configDataUS+1,??_WriteConfigST7540+1
  8136  00A754  C222  F225         	movff	WriteConfigST7540@configDataUS+2,??_WriteConfigST7540+2
  8137  00A758  C224  F223         	movff	??_WriteConfigST7540+1,??_WriteConfigST7540
  8138  00A75C  C225  F224         	movff	??_WriteConfigST7540+2,??_WriteConfigST7540+1
  8139  00A760  0102               	movlb	2	; () banked
  8140  00A762  6B25               	clrf	(??_WriteConfigST7540+2)& (0+255),b
  8141  00A764  0102               	movlb	2	; () banked
  8142  00A766  5123               	movf	??_WriteConfigST7540& (0+255),w,b
  8143  00A768  0103               	movlb	3	; () banked
  8144  00A76A  6F50               	movwf	(_bufferTXST7540UCAG+4)& (0+255),b
  8145                           
  8146                           ; BSR set to: 3
  8147                           ;ST7540.c: 150: bufferTXST7540UCAG[5] = configDataUS & 0b000000000000000011111111;
  8148  00A76C  C220  F351         	movff	WriteConfigST7540@configDataUS,_bufferTXST7540UCAG+5
  8149                           
  8150                           ; BSR set to: 3
  8151                           ;ST7540.c: 152: LATDbits.LATD2 = 1;
  8152  00A770  848C               	bsf	3980,2,c	;volatile
  8153                           
  8154                           ; BSR set to: 3
  8155                           ;ST7540.c: 153: LATCbits.LATC3 = 0;
  8156  00A772  968B               	bcf	3979,3,c	;volatile
  8157  00A774                     l85:
  8158  00A774  BA83               	btfsc	3971,5,c	;volatile
  8159  00A776  D7FE               	goto	l85
  8160                           
  8161                           ;ST7540.c: 155: SSP2CON1bits.SSPEN = 1;
  8162  00A778  8A72               	bsf	3954,5,c	;volatile
  8163                           
  8164                           ;ST7540.c: 157: for(bitsSentUC = 0; bitsSentUC < 6; bitsSentUC++){
  8165  00A77A  0E00               	movlw	0
  8166  00A77C  0102               	movlb	2	; () banked
  8167  00A77E  6F27               	movwf	WriteConfigST7540@bitsSentUC& (0+255),b
  8168  00A780                     l6521:
  8169                           
  8170                           ; BSR set to: 2
  8171  00A780  0E05               	movlw	5
  8172  00A782  0102               	movlb	2	; () banked
  8173  00A784  6527               	cpfsgt	WriteConfigST7540@bitsSentUC& (0+255),b
  8174  00A786  D001               	goto	l88
  8175  00A788  D012               	goto	l89
  8176  00A78A                     l88:
  8177                           
  8178                           ; BSR set to: 2
  8179                           ;ST7540.c: 158: discardUC = SSP2BUF;
  8180  00A78A  CF75 F226          	movff	3957,WriteConfigST7540@discardUC	;volatile
  8181                           
  8182                           ; BSR set to: 2
  8183                           ;ST7540.c: 159: SSP2BUF = bufferTXST7540UCAG[bitsSentUC];
  8184  00A78E  0102               	movlb	2	; () banked
  8185  00A790  5127               	movf	WriteConfigST7540@bitsSentUC& (0+255),w,b
  8186  00A792  0D01               	mullw	1
  8187  00A794  0E4C               	movlw	low _bufferTXST7540UCAG
  8188  00A796  24F3               	addwf	prodl,w,c
  8189  00A798  6ED9               	movwf	fsr2l,c
  8190  00A79A  0E03               	movlw	high _bufferTXST7540UCAG
  8191  00A79C  20F4               	addwfc	prodh,w,c
  8192  00A79E  6EDA               	movwf	fsr2h,c
  8193  00A7A0  50DF               	movf	indf2,w,c
  8194  00A7A2  6E75               	movwf	3957,c	;volatile
  8195  00A7A4                     l90:
  8196  00A7A4  A073               	btfss	3955,0,c	;volatile
  8197  00A7A6  D7FE               	goto	l90
  8198  00A7A8  0102               	movlb	2	; () banked
  8199  00A7AA  2B27               	incf	WriteConfigST7540@bitsSentUC& (0+255),f,b
  8200  00A7AC  D7E9               	goto	l6521
  8201  00A7AE                     l89:
  8202                           
  8203                           ; BSR set to: 2
  8204                           ;ST7540.c: 161: }
  8205                           ;ST7540.c: 163: LATDbits.LATD2 = 0;
  8206  00A7AE  948C               	bcf	3980,2,c	;volatile
  8207                           
  8208                           ;ST7540.c: 164: LATCbits.LATC3 = 1;
  8209  00A7B0  868B               	bsf	3979,3,c	;volatile
  8210                           
  8211                           ;ST7540.c: 165: SSP2CON1bits.SSPEN = 0;
  8212  00A7B2  9A72               	bcf	3954,5,c	;volatile
  8213                           
  8214                           ; BSR set to: 2
  8215                           ;ST7540.c: 166: WaitTickCount(20);
  8216  00A7B4  0E00               	movlw	0
  8217  00A7B6  0102               	movlb	2	; () banked
  8218  00A7B8  6F1C               	movwf	(WaitTickCount@tickCountUS+1)& (0+255),b
  8219  00A7BA  0E14               	movlw	20
  8220  00A7BC  6F1B               	movwf	WaitTickCount@tickCountUS& (0+255),b
  8221  00A7BE  EC7D  F05A         	call	_WaitTickCount	;wreg free
  8222  00A7C2  0012               	return		;funcret
  8223  00A7C4                     __end_of_WriteConfigST7540:
  8224                           	opt stack 0
  8225                           tblptru	equ	0xFF8
  8226                           tblptrh	equ	0xFF7
  8227                           tblptrl	equ	0xFF6
  8228                           tablat	equ	0xFF5
  8229                           prodh	equ	0xFF4
  8230                           prodl	equ	0xFF3
  8231                           intcon	equ	0xFF2
  8232                           postinc0	equ	0xFEE
  8233                           wreg	equ	0xFE8
  8234                           indf1	equ	0xFE7
  8235                           postinc1	equ	0xFE6
  8236                           postdec1	equ	0xFE5
  8237                           fsr1h	equ	0xFE2
  8238                           fsr1l	equ	0xFE1
  8239                           indf2	equ	0xFDF
  8240                           postinc2	equ	0xFDE
  8241                           postdec2	equ	0xFDD
  8242                           fsr2h	equ	0xFDA
  8243                           fsr2l	equ	0xFD9
  8244                           status	equ	0xFD8
  8245                           
  8246 ;; *************** function _WaitTickCount *****************
  8247 ;; Defined at:
  8248 ;;		line 25 in file "peripherals.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;  tickCountUS     2   26[BANK2 ] unsigned short 
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;		None
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  1    wreg      void 
  8255 ;; Registers used:
  8256 ;;		wreg, status,2, status,0, cstack
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8262 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8265 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8266 ;;Total ram usage:        2 bytes
  8267 ;; Hardware stack levels used:    1
  8268 ;; Hardware stack levels required when called:    8
  8269 ;; This function calls:
  8270 ;;		_WaitNewTick
  8271 ;; This function is called by:
  8272 ;;		_WriteConfigST7540
  8273 ;;		_CollisionCheck
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           
  8277                           	psect	text48
  8278  00B4FA                     __ptext48:
  8279                           	opt stack 0
  8280  00B4FA                     _WaitTickCount:
  8281                           	opt stack 18
  8282                           
  8283                           ;peripherals.c: 26: while(tickCountUS--)
  8284                           
  8285                           ;incstack = 0
  8286  00B4FA  D002               	goto	l6303
  8287  00B4FC                     l6301:
  8288                           
  8289                           ;peripherals.c: 27: WaitNewTick();
  8290  00B4FC  EC1D  F05B         	call	_WaitNewTick	;wreg free
  8291  00B500                     l6303:
  8292  00B500  0102               	movlb	2	; () banked
  8293  00B502  071B               	decf	WaitTickCount@tickCountUS& (0+255),f,b
  8294  00B504  A0D8               	btfss	status,0,c
  8295  00B506  071C               	decf	(WaitTickCount@tickCountUS+1)& (0+255),f,b
  8296  00B508  0102               	movlb	2	; () banked
  8297  00B50A  291B               	incf	WaitTickCount@tickCountUS& (0+255),w,b
  8298  00B50C  E1F7               	bnz	l6301
  8299  00B50E  0102               	movlb	2	; () banked
  8300  00B510  291C               	incf	(WaitTickCount@tickCountUS+1)& (0+255),w,b
  8301  00B512  B4D8               	btfsc	status,2,c
  8302  00B514  0012               	return	
  8303  00B516  D7F2               	goto	l6301
  8304  00B518                     __end_of_WaitTickCount:
  8305                           	opt stack 0
  8306                           tblptru	equ	0xFF8
  8307                           tblptrh	equ	0xFF7
  8308                           tblptrl	equ	0xFF6
  8309                           tablat	equ	0xFF5
  8310                           prodh	equ	0xFF4
  8311                           prodl	equ	0xFF3
  8312                           intcon	equ	0xFF2
  8313                           postinc0	equ	0xFEE
  8314                           wreg	equ	0xFE8
  8315                           indf1	equ	0xFE7
  8316                           postinc1	equ	0xFE6
  8317                           postdec1	equ	0xFE5
  8318                           fsr1h	equ	0xFE2
  8319                           fsr1l	equ	0xFE1
  8320                           indf2	equ	0xFDF
  8321                           postinc2	equ	0xFDE
  8322                           postdec2	equ	0xFDD
  8323                           fsr2h	equ	0xFDA
  8324                           fsr2l	equ	0xFD9
  8325                           status	equ	0xFD8
  8326                           
  8327 ;; *************** function _WaitNewTick *****************
  8328 ;; Defined at:
  8329 ;;		line 20 in file "peripherals.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;		None
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;		None
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      void 
  8336 ;; Registers used:
  8337 ;;		status,2, status,0
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;Total ram usage:        0 bytes
  8348 ;; Hardware stack levels used:    1
  8349 ;; Hardware stack levels required when called:    7
  8350 ;; This function calls:
  8351 ;;		Nothing
  8352 ;; This function is called by:
  8353 ;;		_WaitTickCount
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text49
  8358  00B63A                     __ptext49:
  8359                           	opt stack 0
  8360  00B63A                     _WaitNewTick:
  8361                           	opt stack 18
  8362  00B63A                     l1006:
  8363  00B63A  0102               	movlb	2	; () banked
  8364  00B63C  A18A               	btfss	_statusFlagsUSLG& (0+255),0,b	;volatile
  8365  00B63E  D7FD               	goto	l1006
  8366                           
  8367                           ; BSR set to: 2
  8368                           ;peripherals.c: 22: statusFlagsUSLG &= ~0b000000000000000000000001;
  8369                           
  8370                           ; BSR set to: 2
  8371  00B640  0102               	movlb	2	; () banked
  8372  00B642  918A               	bcf	_statusFlagsUSLG& (0+255),0,b	;volatile
  8373                           
  8374                           ; BSR set to: 2
  8375  00B644  0012               	return		;funcret
  8376  00B646                     __end_of_WaitNewTick:
  8377                           	opt stack 0
  8378                           tblptru	equ	0xFF8
  8379                           tblptrh	equ	0xFF7
  8380                           tblptrl	equ	0xFF6
  8381                           tablat	equ	0xFF5
  8382                           prodh	equ	0xFF4
  8383                           prodl	equ	0xFF3
  8384                           intcon	equ	0xFF2
  8385                           postinc0	equ	0xFEE
  8386                           wreg	equ	0xFE8
  8387                           indf1	equ	0xFE7
  8388                           postinc1	equ	0xFE6
  8389                           postdec1	equ	0xFE5
  8390                           fsr1h	equ	0xFE2
  8391                           fsr1l	equ	0xFE1
  8392                           indf2	equ	0xFDF
  8393                           postinc2	equ	0xFDE
  8394                           postdec2	equ	0xFDD
  8395                           fsr2h	equ	0xFDA
  8396                           fsr2l	equ	0xFD9
  8397                           status	equ	0xFD8
  8398                           
  8399 ;; *************** function _ReadConfigST7540 *****************
  8400 ;; Defined at:
  8401 ;;		line 169 in file "ST7540.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  frameDataUS     2   26[BANK2 ] PTR unsigned um
  8404 ;;		 -> InitST7540@frameDataRXUS(3), 
  8405 ;;  configDataUS    2   28[BANK2 ] PTR unsigned um
  8406 ;;		 -> InitST7540@configDataRXUS(3), 
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  bitsReceived    1   34[BANK2 ] unsigned char 
  8409 ;;  discardUC       1   33[BANK2 ] unsigned char 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  1    wreg      void 
  8412 ;; Registers used:
  8413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8422 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8423 ;;Total ram usage:        9 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:    7
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_InitST7540
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           
  8433                           	psect	text50
  8434  0099BC                     __ptext50:
  8435                           	opt stack 0
  8436  0099BC                     _ReadConfigST7540:
  8437                           	opt stack 21
  8438                           
  8439                           ;ST7540.c: 170: unsigned char bitsReceivedUC;
  8440                           ;ST7540.c: 171: unsigned char discardUC;
  8441                           ;ST7540.c: 173: LATDbits.LATD2 = 1;
  8442                           
  8443                           ; BSR set to: 2
  8444                           ;incstack = 0
  8445  0099BC  848C               	bsf	3980,2,c	;volatile
  8446                           
  8447                           ;ST7540.c: 174: LATCbits.LATC3 = 1;
  8448  0099BE  868B               	bsf	3979,3,c	;volatile
  8449  0099C0                     l96:
  8450  0099C0  BA83               	btfsc	3971,5,c	;volatile
  8451  0099C2  D7FE               	goto	l96
  8452                           
  8453                           ;ST7540.c: 176: SSP2CON1bits.SSPEN = 1;
  8454  0099C4  8A72               	bsf	3954,5,c	;volatile
  8455                           
  8456                           ;ST7540.c: 178: discardUC = SSP2BUF;
  8457  0099C6  CF75 F222          	movff	3957,ReadConfigST7540@discardUC	;volatile
  8458                           
  8459                           ;ST7540.c: 179: SSP2BUF = 0;
  8460  0099CA  0E00               	movlw	0
  8461  0099CC  6E75               	movwf	3957,c	;volatile
  8462                           
  8463                           ;ST7540.c: 180: for(bitsReceivedUC = 0; bitsReceivedUC < 6; bitsReceivedUC++){
  8464  0099CE  0E00               	movlw	0
  8465  0099D0  0102               	movlb	2	; () banked
  8466  0099D2  6F23               	movwf	ReadConfigST7540@bitsReceivedUC& (0+255),b
  8467  0099D4                     l4515:
  8468                           
  8469                           ; BSR set to: 2
  8470  0099D4  0E05               	movlw	5
  8471  0099D6  0102               	movlb	2	; () banked
  8472  0099D8  6523               	cpfsgt	ReadConfigST7540@bitsReceivedUC& (0+255),b
  8473  0099DA  D001               	goto	l101
  8474  0099DC  D012               	goto	l100
  8475  0099DE                     l101:
  8476  0099DE  A073               	btfss	3955,0,c	;volatile
  8477  0099E0  D7FE               	goto	l101
  8478                           
  8479                           ;ST7540.c: 182: bufferRXST7540UCAG[bitsReceivedUC] = SSP2BUF;
  8480  0099E2  0102               	movlb	2	; () banked
  8481  0099E4  5123               	movf	ReadConfigST7540@bitsReceivedUC& (0+255),w,b
  8482  0099E6  0D01               	mullw	1
  8483  0099E8  0E9B               	movlw	low _bufferRXST7540UCAG
  8484  0099EA  24F3               	addwf	prodl,w,c
  8485  0099EC  6ED9               	movwf	fsr2l,c
  8486  0099EE  0E03               	movlw	high _bufferRXST7540UCAG
  8487  0099F0  20F4               	addwfc	prodh,w,c
  8488  0099F2  6EDA               	movwf	fsr2h,c
  8489  0099F4  CF75 FFDF          	movff	3957,indf2	;volatile
  8490                           
  8491                           ; BSR set to: 2
  8492                           ;ST7540.c: 183: SSP2BUF = 0;
  8493  0099F8  0E00               	movlw	0
  8494  0099FA  6E75               	movwf	3957,c	;volatile
  8495                           
  8496                           ; BSR set to: 2
  8497  0099FC  0102               	movlb	2	; () banked
  8498  0099FE  2B23               	incf	ReadConfigST7540@bitsReceivedUC& (0+255),f,b
  8499  009A00  D7E9               	goto	l4515
  8500  009A02                     l100:
  8501                           
  8502                           ; BSR set to: 2
  8503                           ;ST7540.c: 184: }
  8504                           ;ST7540.c: 186: LATDbits.LATD2 = 0;
  8505  009A02  948C               	bcf	3980,2,c	;volatile
  8506                           
  8507                           ;ST7540.c: 187: SSP2CON1bits.SSPEN = 0;
  8508  009A04  9A72               	bcf	3954,5,c	;volatile
  8509                           
  8510                           ; BSR set to: 2
  8511                           ;ST7540.c: 189: *frameDataUS = 0;
  8512  009A06  C21B  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
  8513  009A0A  C21C  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
  8514  009A0E  0E00               	movlw	0
  8515  009A10  6EDE               	movwf	postinc2,c
  8516  009A12  0E00               	movlw	0
  8517  009A14  6EDE               	movwf	postinc2,c
  8518  009A16  0E00               	movlw	0
  8519  009A18  6EDE               	movwf	postinc2,c
  8520                           
  8521                           ;ST7540.c: 190: *configDataUS = 0;
  8522  009A1A  C21D  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
  8523  009A1E  C21E  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
  8524  009A22  0E00               	movlw	0
  8525  009A24  6EDE               	movwf	postinc2,c
  8526  009A26  0E00               	movlw	0
  8527  009A28  6EDE               	movwf	postinc2,c
  8528  009A2A  0E00               	movlw	0
  8529  009A2C  6EDE               	movwf	postinc2,c
  8530                           
  8531                           ;ST7540.c: 192: *frameDataUS |= ((unsigned long short) bufferRXST7540UCAG[0] << 16);
  8532  009A2E  0103               	movlb	3	; () banked
  8533  009A30  519B               	movf	_bufferRXST7540UCAG& (0+255),w,b
  8534  009A32  0102               	movlb	2	; () banked
  8535  009A34  6F21               	movwf	(??_ReadConfigST7540+2)& (0+255),b
  8536  009A36  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8537  009A38  6B1F               	clrf	??_ReadConfigST7540& (0+255),b
  8538  009A3A  C21B  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
  8539  009A3E  C21C  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
  8540  009A42  0102               	movlb	2	; () banked
  8541  009A44  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8542  009A46  12DE               	iorwf	postinc2,f,c
  8543  009A48  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8544  009A4A  12DE               	iorwf	postinc2,f,c
  8545  009A4C  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8546  009A4E  12DE               	iorwf	postinc2,f,c
  8547                           
  8548                           ; BSR set to: 2
  8549                           ;ST7540.c: 193: *frameDataUS |= ((unsigned long short) bufferRXST7540UCAG[1] << 8);
  8550  009A50  0103               	movlb	3	; () banked
  8551  009A52  519C               	movf	(_bufferRXST7540UCAG+1)& (0+255),w,b
  8552  009A54  0102               	movlb	2	; () banked
  8553  009A56  6F1F               	movwf	??_ReadConfigST7540& (0+255),b
  8554  009A58  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8555  009A5A  6B21               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  8556  009A5C  C220  F221         	movff	??_ReadConfigST7540+1,??_ReadConfigST7540+2
  8557  009A60  C21F  F220         	movff	??_ReadConfigST7540,??_ReadConfigST7540+1
  8558  009A64  0102               	movlb	2	; () banked
  8559  009A66  6B1F               	clrf	??_ReadConfigST7540& (0+255),b
  8560  009A68  C21B  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
  8561  009A6C  C21C  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
  8562  009A70  0102               	movlb	2	; () banked
  8563  009A72  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8564  009A74  12DE               	iorwf	postinc2,f,c
  8565  009A76  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8566  009A78  12DE               	iorwf	postinc2,f,c
  8567  009A7A  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8568  009A7C  12DE               	iorwf	postinc2,f,c
  8569                           
  8570                           ; BSR set to: 2
  8571                           ;ST7540.c: 194: *frameDataUS |= bufferRXST7540UCAG[2];
  8572  009A7E  0103               	movlb	3	; () banked
  8573  009A80  519D               	movf	(_bufferRXST7540UCAG+2)& (0+255),w,b
  8574  009A82  0102               	movlb	2	; () banked
  8575  009A84  6F1F               	movwf	??_ReadConfigST7540& (0+255),b
  8576  009A86  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8577  009A88  6B21               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  8578  009A8A  C21B  FFD9         	movff	ReadConfigST7540@frameDataUS,fsr2l
  8579  009A8E  C21C  FFDA         	movff	ReadConfigST7540@frameDataUS+1,fsr2h
  8580  009A92  0102               	movlb	2	; () banked
  8581  009A94  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8582  009A96  12DE               	iorwf	postinc2,f,c
  8583  009A98  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8584  009A9A  12DE               	iorwf	postinc2,f,c
  8585  009A9C  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8586  009A9E  12DE               	iorwf	postinc2,f,c
  8587                           
  8588                           ;ST7540.c: 195: *configDataUS |= ((unsigned long short) bufferRXST7540UCAG[3] << 16);
  8589  009AA0  0103               	movlb	3	; () banked
  8590  009AA2  519E               	movf	(_bufferRXST7540UCAG+3)& (0+255),w,b
  8591  009AA4  0102               	movlb	2	; () banked
  8592  009AA6  6F21               	movwf	(??_ReadConfigST7540+2)& (0+255),b
  8593  009AA8  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8594  009AAA  6B1F               	clrf	??_ReadConfigST7540& (0+255),b
  8595  009AAC  C21D  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
  8596  009AB0  C21E  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
  8597  009AB4  0102               	movlb	2	; () banked
  8598  009AB6  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8599  009AB8  12DE               	iorwf	postinc2,f,c
  8600  009ABA  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8601  009ABC  12DE               	iorwf	postinc2,f,c
  8602  009ABE  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8603  009AC0  12DE               	iorwf	postinc2,f,c
  8604                           
  8605                           ; BSR set to: 2
  8606                           ;ST7540.c: 196: *configDataUS |= ((unsigned long short) bufferRXST7540UCAG[4] << 8);
  8607  009AC2  0103               	movlb	3	; () banked
  8608  009AC4  519F               	movf	(_bufferRXST7540UCAG+4)& (0+255),w,b
  8609  009AC6  0102               	movlb	2	; () banked
  8610  009AC8  6F1F               	movwf	??_ReadConfigST7540& (0+255),b
  8611  009ACA  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8612  009ACC  6B21               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  8613  009ACE  C220  F221         	movff	??_ReadConfigST7540+1,??_ReadConfigST7540+2
  8614  009AD2  C21F  F220         	movff	??_ReadConfigST7540,??_ReadConfigST7540+1
  8615  009AD6  0102               	movlb	2	; () banked
  8616  009AD8  6B1F               	clrf	??_ReadConfigST7540& (0+255),b
  8617  009ADA  C21D  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
  8618  009ADE  C21E  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
  8619  009AE2  0102               	movlb	2	; () banked
  8620  009AE4  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8621  009AE6  12DE               	iorwf	postinc2,f,c
  8622  009AE8  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8623  009AEA  12DE               	iorwf	postinc2,f,c
  8624  009AEC  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8625  009AEE  12DE               	iorwf	postinc2,f,c
  8626                           
  8627                           ; BSR set to: 2
  8628                           ;ST7540.c: 197: *configDataUS |= bufferRXST7540UCAG[5];
  8629  009AF0  0103               	movlb	3	; () banked
  8630  009AF2  51A0               	movf	(_bufferRXST7540UCAG+5)& (0+255),w,b
  8631  009AF4  0102               	movlb	2	; () banked
  8632  009AF6  6F1F               	movwf	??_ReadConfigST7540& (0+255),b
  8633  009AF8  6B20               	clrf	(??_ReadConfigST7540+1)& (0+255),b
  8634  009AFA  6B21               	clrf	(??_ReadConfigST7540+2)& (0+255),b
  8635  009AFC  C21D  FFD9         	movff	ReadConfigST7540@configDataUS,fsr2l
  8636  009B00  C21E  FFDA         	movff	ReadConfigST7540@configDataUS+1,fsr2h
  8637  009B04  0102               	movlb	2	; () banked
  8638  009B06  511F               	movf	??_ReadConfigST7540& (0+255),w,b
  8639  009B08  12DE               	iorwf	postinc2,f,c
  8640  009B0A  5120               	movf	(??_ReadConfigST7540+1)& (0+255),w,b
  8641  009B0C  12DE               	iorwf	postinc2,f,c
  8642  009B0E  5121               	movf	(??_ReadConfigST7540+2)& (0+255),w,b
  8643  009B10  12DE               	iorwf	postinc2,f,c
  8644                           
  8645                           ; BSR set to: 2
  8646  009B12  0012               	return		;funcret
  8647  009B14                     __end_of_ReadConfigST7540:
  8648                           	opt stack 0
  8649                           tblptru	equ	0xFF8
  8650                           tblptrh	equ	0xFF7
  8651                           tblptrl	equ	0xFF6
  8652                           tablat	equ	0xFF5
  8653                           prodh	equ	0xFF4
  8654                           prodl	equ	0xFF3
  8655                           intcon	equ	0xFF2
  8656                           postinc0	equ	0xFEE
  8657                           wreg	equ	0xFE8
  8658                           indf1	equ	0xFE7
  8659                           postinc1	equ	0xFE6
  8660                           postdec1	equ	0xFE5
  8661                           fsr1h	equ	0xFE2
  8662                           fsr1l	equ	0xFE1
  8663                           indf2	equ	0xFDF
  8664                           postinc2	equ	0xFDE
  8665                           postdec2	equ	0xFDD
  8666                           fsr2h	equ	0xFDA
  8667                           fsr2l	equ	0xFD9
  8668                           status	equ	0xFD8
  8669                           
  8670 ;; *************** function _InitST7540Pins *****************
  8671 ;; Defined at:
  8672 ;;		line 373 in file "ST7540.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;		None
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      void 
  8679 ;; Registers used:
  8680 ;;		wreg, status,2, cstack
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8690 ;;Total ram usage:        0 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:    8
  8693 ;; This function calls:
  8694 ;;		_PPSLockFunc
  8695 ;;		_PPSUnlockFunc
  8696 ;; This function is called by:
  8697 ;;		_InitST7540
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text51
  8702  00B178                     __ptext51:
  8703                           	opt stack 0
  8704  00B178                     _InitST7540Pins:
  8705                           	opt stack 20
  8706                           
  8707                           ;ST7540.c: 375: PPSUnlockFunc();
  8708                           
  8709                           ; BSR set to: 2
  8710                           ;incstack = 0
  8711  00B178  ECE2  F05A         	call	_PPSUnlockFunc	;wreg free
  8712                           
  8713                           ;ST7540.c: 378: RPINR21 = 23;
  8714  00B17C  0E17               	movlw	23
  8715  00B17E  010E               	movlb	14	; () banked
  8716  00B180  6FFC               	movwf	252,b	;volatile
  8717                           
  8718                           ; BSR set to: 14
  8719                           ;ST7540.c: 379: RPINR22 = 22;
  8720  00B182  0E16               	movlw	22
  8721  00B184  010E               	movlb	14	; () banked
  8722  00B186  6FFD               	movwf	253,b	;volatile
  8723                           
  8724                           ; BSR set to: 14
  8725                           ;ST7540.c: 385: RPOR21 = 10;
  8726  00B188  0E0A               	movlw	10
  8727  00B18A  010E               	movlb	14	; () banked
  8728  00B18C  6FD5               	movwf	213,b	;volatile
  8729                           
  8730                           ; BSR set to: 14
  8731                           ;ST7540.c: 388: PPSLockFunc();
  8732  00B18E  ECEB  F05A         	call	_PPSLockFunc	;wreg free
  8733                           
  8734                           ;ST7540.c: 391: TRISDbits.TRISD3 = 1;
  8735  00B192  8695               	bsf	3989,3,c	;volatile
  8736                           
  8737                           ;ST7540.c: 395: TRISBbits.TRISB4 = 1;
  8738  00B194  8893               	bsf	3987,4,c	;volatile
  8739                           
  8740                           ;ST7540.c: 399: INTCONbits.RBIE = 1;
  8741  00B196  86F2               	bsf	intcon,3,c	;volatile
  8742                           
  8743                           ;ST7540.c: 402: TRISDbits.TRISD2 = 0;
  8744  00B198  9495               	bcf	3989,2,c	;volatile
  8745                           
  8746                           ;ST7540.c: 404: LATDbits.LATD2 = 0;
  8747  00B19A  948C               	bcf	3980,2,c	;volatile
  8748                           
  8749                           ;ST7540.c: 407: TRISDbits.TRISD6 = 1;
  8750  00B19C  8C95               	bsf	3989,6,c	;volatile
  8751                           
  8752                           ;ST7540.c: 411: TRISDbits.TRISD4 = 0;
  8753  00B19E  9895               	bcf	3989,4,c	;volatile
  8754                           
  8755                           ;ST7540.c: 413: LATDbits.LATD4 = 0;
  8756  00B1A0  988C               	bcf	3980,4,c	;volatile
  8757                           
  8758                           ;ST7540.c: 416: TRISCbits.TRISC3 = 0;
  8759  00B1A2  9694               	bcf	3988,3,c	;volatile
  8760                           
  8761                           ;ST7540.c: 418: LATCbits.LATC3 = 1;
  8762  00B1A4  868B               	bsf	3979,3,c	;volatile
  8763                           
  8764                           ;ST7540.c: 421: TRISCbits.TRISC2 = 1;
  8765  00B1A6  8494               	bsf	3988,2,c	;volatile
  8766                           
  8767                           ;ST7540.c: 422: ANCON1bits.PCFG11 = 1;
  8768  00B1A8  010F               	movlb	15	; () banked
  8769  00B1AA  8749               	bsf	73,3,b	;volatile
  8770                           
  8771                           ; BSR set to: 15
  8772                           ;ST7540.c: 425: TRISDbits.TRISD5 = 1;
  8773  00B1AC  8A95               	bsf	3989,5,c	;volatile
  8774                           
  8775                           ; BSR set to: 15
  8776                           ;ST7540.c: 429: TRISCbits.TRISC1 = 0;
  8777  00B1AE  9294               	bcf	3988,1,c	;volatile
  8778                           
  8779                           ; BSR set to: 15
  8780                           ;ST7540.c: 431: LATCbits.LATC1 = 0;
  8781  00B1B0  928B               	bcf	3979,1,c	;volatile
  8782                           
  8783                           ; BSR set to: 15
  8784  00B1B2  0012               	return		;funcret
  8785  00B1B4                     __end_of_InitST7540Pins:
  8786                           	opt stack 0
  8787                           tblptru	equ	0xFF8
  8788                           tblptrh	equ	0xFF7
  8789                           tblptrl	equ	0xFF6
  8790                           tablat	equ	0xFF5
  8791                           prodh	equ	0xFF4
  8792                           prodl	equ	0xFF3
  8793                           intcon	equ	0xFF2
  8794                           postinc0	equ	0xFEE
  8795                           wreg	equ	0xFE8
  8796                           indf1	equ	0xFE7
  8797                           postinc1	equ	0xFE6
  8798                           postdec1	equ	0xFE5
  8799                           fsr1h	equ	0xFE2
  8800                           fsr1l	equ	0xFE1
  8801                           indf2	equ	0xFDF
  8802                           postinc2	equ	0xFDE
  8803                           postdec2	equ	0xFDD
  8804                           fsr2h	equ	0xFDA
  8805                           fsr2l	equ	0xFD9
  8806                           status	equ	0xFD8
  8807                           
  8808 ;; *************** function _PPSUnlockFunc *****************
  8809 ;; Defined at:
  8810 ;;		line 30 in file "peripherals.c"
  8811 ;; Parameters:    Size  Location     Type
  8812 ;;		None
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;		None
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  1    wreg      void 
  8817 ;; Registers used:
  8818 ;;		wreg, status,2
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8828 ;;Total ram usage:        0 bytes
  8829 ;; Hardware stack levels used:    1
  8830 ;; Hardware stack levels required when called:    7
  8831 ;; This function calls:
  8832 ;;		Nothing
  8833 ;; This function is called by:
  8834 ;;		_InitST7540Pins
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text52
  8839  00B5C4                     __ptext52:
  8840                           	opt stack 0
  8841  00B5C4                     _PPSUnlockFunc:
  8842                           	opt stack 20
  8843                           
  8844                           ;peripherals.c: 31: INTCONbits.GIE = 0;
  8845                           
  8846                           ; BSR set to: 15
  8847                           ;incstack = 0
  8848  00B5C4  9EF2               	bcf	intcon,7,c	;volatile
  8849                           
  8850                           ;peripherals.c: 32: EECON2 = 0x55;
  8851  00B5C6  0E55               	movlw	85
  8852  00B5C8  6EA7               	movwf	4007,c	;volatile
  8853                           
  8854                           ;peripherals.c: 33: EECON2 = 0xAA;
  8855  00B5CA  0EAA               	movlw	170
  8856  00B5CC  6EA7               	movwf	4007,c	;volatile
  8857                           
  8858                           ;peripherals.c: 34: PPSCONbits.IOLOCK = 0;
  8859  00B5CE  010E               	movlb	14	; () banked
  8860  00B5D0  91BF               	bcf	191,0,b	;volatile
  8861                           
  8862                           ; BSR set to: 14
  8863                           ;peripherals.c: 35: INTCONbits.GIE = 1;
  8864  00B5D2  8EF2               	bsf	intcon,7,c	;volatile
  8865                           
  8866                           ; BSR set to: 14
  8867  00B5D4  0012               	return		;funcret
  8868  00B5D6                     __end_of_PPSUnlockFunc:
  8869                           	opt stack 0
  8870                           tblptru	equ	0xFF8
  8871                           tblptrh	equ	0xFF7
  8872                           tblptrl	equ	0xFF6
  8873                           tablat	equ	0xFF5
  8874                           prodh	equ	0xFF4
  8875                           prodl	equ	0xFF3
  8876                           intcon	equ	0xFF2
  8877                           postinc0	equ	0xFEE
  8878                           wreg	equ	0xFE8
  8879                           indf1	equ	0xFE7
  8880                           postinc1	equ	0xFE6
  8881                           postdec1	equ	0xFE5
  8882                           fsr1h	equ	0xFE2
  8883                           fsr1l	equ	0xFE1
  8884                           indf2	equ	0xFDF
  8885                           postinc2	equ	0xFDE
  8886                           postdec2	equ	0xFDD
  8887                           fsr2h	equ	0xFDA
  8888                           fsr2l	equ	0xFD9
  8889                           status	equ	0xFD8
  8890                           
  8891 ;; *************** function _PPSLockFunc *****************
  8892 ;; Defined at:
  8893 ;;		line 38 in file "peripherals.c"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;		None
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;		None
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      void 
  8900 ;; Registers used:
  8901 ;;		wreg, status,2
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;Total ram usage:        0 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:    7
  8914 ;; This function calls:
  8915 ;;		Nothing
  8916 ;; This function is called by:
  8917 ;;		_InitST7540Pins
  8918 ;; This function uses a non-reentrant model
  8919 ;;
  8920                           
  8921                           	psect	text53
  8922  00B5D6                     __ptext53:
  8923                           	opt stack 0
  8924  00B5D6                     _PPSLockFunc:
  8925                           	opt stack 20
  8926                           
  8927                           ;peripherals.c: 39: INTCONbits.GIE = 0;
  8928                           
  8929                           ; BSR set to: 14
  8930                           ;incstack = 0
  8931  00B5D6  9EF2               	bcf	intcon,7,c	;volatile
  8932                           
  8933                           ;peripherals.c: 40: EECON2 = 0x55;
  8934  00B5D8  0E55               	movlw	85
  8935  00B5DA  6EA7               	movwf	4007,c	;volatile
  8936                           
  8937                           ;peripherals.c: 41: EECON2 = 0xAA;
  8938  00B5DC  0EAA               	movlw	170
  8939  00B5DE  6EA7               	movwf	4007,c	;volatile
  8940                           
  8941                           ;peripherals.c: 42: PPSCONbits.IOLOCK = 1;
  8942  00B5E0  010E               	movlb	14	; () banked
  8943  00B5E2  81BF               	bsf	191,0,b	;volatile
  8944                           
  8945                           ; BSR set to: 14
  8946                           ;peripherals.c: 43: INTCONbits.GIE = 1;
  8947  00B5E4  8EF2               	bsf	intcon,7,c	;volatile
  8948                           
  8949                           ; BSR set to: 14
  8950  00B5E6  0012               	return		;funcret
  8951  00B5E8                     __end_of_PPSLockFunc:
  8952                           	opt stack 0
  8953                           tblptru	equ	0xFF8
  8954                           tblptrh	equ	0xFF7
  8955                           tblptrl	equ	0xFF6
  8956                           tablat	equ	0xFF5
  8957                           prodh	equ	0xFF4
  8958                           prodl	equ	0xFF3
  8959                           intcon	equ	0xFF2
  8960                           postinc0	equ	0xFEE
  8961                           wreg	equ	0xFE8
  8962                           indf1	equ	0xFE7
  8963                           postinc1	equ	0xFE6
  8964                           postdec1	equ	0xFE5
  8965                           fsr1h	equ	0xFE2
  8966                           fsr1l	equ	0xFE1
  8967                           indf2	equ	0xFDF
  8968                           postinc2	equ	0xFDE
  8969                           postdec2	equ	0xFDD
  8970                           fsr2h	equ	0xFDA
  8971                           fsr2l	equ	0xFD9
  8972                           status	equ	0xFD8
  8973                           
  8974 ;; *************** function _isr *****************
  8975 ;; Defined at:
  8976 ;;		line 30 in file "main.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;		None
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  discardUC       1   25[BANK2 ] unsigned char 
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  8990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8991 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8992 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8994 ;;Total ram usage:       15 bytes
  8995 ;; Hardware stack levels used:    1
  8996 ;; Hardware stack levels required when called:    6
  8997 ;; This function calls:
  8998 ;;		_BoosterCommsDispatcher
  8999 ;;		_BoosterDataCommandComms
  9000 ;;		_RXReadyISRHandlerST7540
  9001 ;;		_SPIISRHandlerST7540
  9002 ;;		i2_ForceFiringMode
  9003 ;; This function is called by:
  9004 ;;		Interrupt level 2
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	intcode
  9009  008108                     __pintcode:
  9010                           	opt stack 0
  9011  008108                     _isr:
  9012                           	opt stack 18
  9013                           
  9014                           ; BSR set to: 14
  9015                           ;incstack = 0
  9016  008108  821E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9017  00810A  CFFA F20C          	movff	pclath,??_isr
  9018  00810E  CFFB F20D          	movff	pclatu,??_isr+1
  9019  008112  CFE9 F20E          	movff	fsr0l,??_isr+2
  9020  008116  CFEA F20F          	movff	fsr0h,??_isr+3
  9021  00811A  CFE1 F210          	movff	fsr1l,??_isr+4
  9022  00811E  CFE2 F211          	movff	fsr1h,??_isr+5
  9023  008122  CFD9 F212          	movff	fsr2l,??_isr+6
  9024  008126  CFDA F213          	movff	fsr2h,??_isr+7
  9025  00812A  CFF3 F214          	movff	prodl,??_isr+8
  9026  00812E  CFF4 F215          	movff	prodh,??_isr+9
  9027  008132  CFF6 F216          	movff	tblptrl,??_isr+10
  9028  008136  CFF7 F217          	movff	tblptrh,??_isr+11
  9029  00813A  CFF8 F218          	movff	tblptru,??_isr+12
  9030  00813E  CFF5 F219          	movff	tablat,??_isr+13
  9031                           
  9032                           ;main.c: 31: unsigned char discardUC;
  9033                           ;main.c: 33: if(PIR1bits.TMR2IF){
  9034  008142  A29E               	btfss	3998,1,c	;volatile
  9035  008144  D01D               	goto	i2l6229
  9036                           
  9037                           ;main.c: 34: PIR1bits.TMR2IF = 0;
  9038  008146  929E               	bcf	3998,1,c	;volatile
  9039                           
  9040                           ;main.c: 37: if(++masterCommsTimeoutUSG == 40000){
  9041  008148  0103               	movlb	3	; () banked
  9042  00814A  4B3F               	infsnz	_masterCommsTimeoutUSG& (0+255),f,b
  9043  00814C  2B40               	incf	(_masterCommsTimeoutUSG+1)& (0+255),f,b
  9044  00814E  0E40               	movlw	64
  9045  008150  0103               	movlb	3	; () banked
  9046  008152  193F               	xorwf	_masterCommsTimeoutUSG& (0+255),w,b
  9047  008154  E10F               	bnz	i2l6223
  9048  008156  0E9C               	movlw	156
  9049  008158  0103               	movlb	3	; () banked
  9050  00815A  1940               	xorwf	(_masterCommsTimeoutUSG+1)& (0+255),w,b
  9051  00815C  A4D8               	btfss	status,2,c
  9052  00815E  D00A               	goto	i2l6223
  9053                           
  9054                           ; BSR set to: 3
  9055                           ;main.c: 38: ForceFiringMode(0);
  9056  008160  0E00               	movlw	0
  9057  008162  EC7E  F058         	call	i2_ForceFiringMode
  9058                           
  9059                           ;main.c: 41: statusFlagsUSLG &= ~0b000000000000000000000010;
  9060  008166  0102               	movlb	2	; () banked
  9061  008168  938A               	bcf	_statusFlagsUSLG& (0+255),1,b	;volatile
  9062                           
  9063                           ; BSR set to: 2
  9064                           ;main.c: 42: masterCommsTimeoutUSG = 0;
  9065  00816A  0E00               	movlw	0
  9066  00816C  0103               	movlb	3	; () banked
  9067  00816E  6F40               	movwf	(_masterCommsTimeoutUSG+1)& (0+255),b
  9068  008170  0E00               	movlw	0
  9069  008172  6F3F               	movwf	_masterCommsTimeoutUSG& (0+255),b
  9070  008174                     i2l6223:
  9071                           
  9072                           ; BSR set to: 3
  9073                           ;main.c: 43: }
  9074                           ;main.c: 49: statusFlagsUSLG |= 0b000000000000000000000001;
  9075  008174  0102               	movlb	2	; () banked
  9076  008176  818A               	bsf	_statusFlagsUSLG& (0+255),0,b	;volatile
  9077                           
  9078                           ; BSR set to: 2
  9079                           ;main.c: 50: BoosterDataCommandComms();
  9080  008178  ECED  F040         	call	_BoosterDataCommandComms	;wreg free
  9081                           
  9082                           ;main.c: 51: BoosterCommsDispatcher();
  9083  00817C  EC3D  F051         	call	_BoosterCommsDispatcher	;wreg free
  9084  008180                     i2l6229:
  9085                           
  9086                           ;main.c: 53: }
  9087                           ;main.c: 55: if(PIR3bits.SSP2IF){
  9088  008180  BEA4               	btfsc	4004,7,c	;volatile
  9089                           
  9090                           ;main.c: 56: SPIISRHandlerST7540();
  9091  008182  ECD0  F054         	call	_SPIISRHandlerST7540	;wreg free
  9092                           
  9093                           ;main.c: 57: }
  9094                           ;main.c: 59: if(INTCONbits.RBIF){
  9095  008186  A0F2               	btfss	intcon,0,c	;volatile
  9096  008188  D008               	goto	i2l701
  9097                           
  9098                           ;main.c: 60: discardUC = PORTBbits.RP4;
  9099  00818A  0E00               	movlw	0
  9100  00818C  B281               	btfsc	3969,1,c	;volatile
  9101  00818E  0E01               	movlw	1
  9102  008190  0102               	movlb	2	; () banked
  9103  008192  6F1A               	movwf	isr@discardUC& (0+255),b
  9104                           
  9105                           ; BSR set to: 2
  9106                           ;main.c: 61: RXReadyISRHandlerST7540();
  9107  008194  EC0A  F05B         	call	_RXReadyISRHandlerST7540	;wreg free
  9108                           
  9109                           ;main.c: 62: INTCONbits.RBIF = 0;
  9110  008198  90F2               	bcf	intcon,0,c	;volatile
  9111  00819A                     i2l701:
  9112  00819A  C219  FFF5         	movff	??_isr+13,tablat
  9113  00819E  C218  FFF8         	movff	??_isr+12,tblptru
  9114  0081A2  C217  FFF7         	movff	??_isr+11,tblptrh
  9115  0081A6  C216  FFF6         	movff	??_isr+10,tblptrl
  9116  0081AA  C215  FFF4         	movff	??_isr+9,prodh
  9117  0081AE  C214  FFF3         	movff	??_isr+8,prodl
  9118  0081B2  C213  FFDA         	movff	??_isr+7,fsr2h
  9119  0081B6  C212  FFD9         	movff	??_isr+6,fsr2l
  9120  0081BA  C211  FFE2         	movff	??_isr+5,fsr1h
  9121  0081BE  C210  FFE1         	movff	??_isr+4,fsr1l
  9122  0081C2  C20F  FFEA         	movff	??_isr+3,fsr0h
  9123  0081C6  C20E  FFE9         	movff	??_isr+2,fsr0l
  9124  0081CA  C20D  FFFB         	movff	??_isr+1,pclatu
  9125  0081CE  C20C  FFFA         	movff	??_isr,pclath
  9126  0081D2  921E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9127  0081D4  0011               	retfie		f
  9128  0081D6                     __end_of_isr:
  9129                           	opt stack 0
  9130                           pclatu	equ	0xFFB
  9131                           pclath	equ	0xFFA
  9132                           tblptru	equ	0xFF8
  9133                           tblptrh	equ	0xFF7
  9134                           tblptrl	equ	0xFF6
  9135                           tablat	equ	0xFF5
  9136                           prodh	equ	0xFF4
  9137                           prodl	equ	0xFF3
  9138                           intcon	equ	0xFF2
  9139                           postinc0	equ	0xFEE
  9140                           fsr0h	equ	0xFEA
  9141                           fsr0l	equ	0xFE9
  9142                           wreg	equ	0xFE8
  9143                           indf1	equ	0xFE7
  9144                           postinc1	equ	0xFE6
  9145                           postdec1	equ	0xFE5
  9146                           fsr1h	equ	0xFE2
  9147                           fsr1l	equ	0xFE1
  9148                           indf2	equ	0xFDF
  9149                           postinc2	equ	0xFDE
  9150                           postdec2	equ	0xFDD
  9151                           fsr2h	equ	0xFDA
  9152                           fsr2l	equ	0xFD9
  9153                           status	equ	0xFD8
  9154                           
  9155 ;; *************** function i2_ForceFiringMode *****************
  9156 ;; Defined at:
  9157 ;;		line 147 in file "mastercomms.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;  forceModeUC     1    wreg     unsigned char 
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;  forceModeUC     1    2[COMRAM] unsigned char 
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  1    wreg      void 
  9164 ;; Registers used:
  9165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  9171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;Total ram usage:        1 bytes
  9176 ;; Hardware stack levels used:    1
  9177 ;; Hardware stack levels required when called:    2
  9178 ;; This function calls:
  9179 ;;		i2_ClearPastValues
  9180 ;;		i2_ResetBoosterStates
  9181 ;; This function is called by:
  9182 ;;		_isr
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           	psect	text55
  9187  00B0FC                     __ptext55:
  9188                           	opt stack 0
  9189  00B0FC                     i2_ForceFiringMode:
  9190                           	opt stack 21
  9191                           
  9192                           ;incstack = 0
  9193                           ;i2ForceFiringMode@forceModeUC stored from wreg
  9194  00B0FC  6E03               	movwf	i2ForceFiringMode@forceModeUC,c
  9195                           
  9196                           ;mastercomms.c: 149: if(forceModeUC == 0 && !(statusFlagsUSLG & 0b0100000000000000000000
      +                          00)){
  9197  00B0FE  5003               	movf	i2ForceFiringMode@forceModeUC,w,c
  9198  00B100  A4D8               	btfss	status,2,c
  9199  00B102  D009               	goto	i2l6201
  9200  00B104  0102               	movlb	2	; () banked
  9201  00B106  BD8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
  9202  00B108  D006               	goto	i2l6201
  9203                           
  9204                           ; BSR set to: 2
  9205                           ;mastercomms.c: 150: LATDbits.LATD7 = 0;
  9206  00B10A  9E8C               	bcf	3980,7,c	;volatile
  9207                           
  9208                           ; BSR set to: 2
  9209                           ;mastercomms.c: 151: ResetBoosterStates();
  9210  00B10C  ECCD  F05A         	call	i2_ResetBoosterStates	;wreg free
  9211                           
  9212                           ;mastercomms.c: 152: ClearPastValues();
  9213  00B110  ECC2  F05A         	call	i2_ClearPastValues	;wreg free
  9214                           
  9215                           ;mastercomms.c: 153: }else{
  9216  00B114  0012               	return	
  9217  00B116                     i2l6201:
  9218                           
  9219                           ;mastercomms.c: 154: statusFlagsUSLG |= 0b000000000000000000000010;
  9220  00B116  0102               	movlb	2	; () banked
  9221  00B118  838A               	bsf	_statusFlagsUSLG& (0+255),1,b	;volatile
  9222                           
  9223                           ;mastercomms.c: 155: statusFlagsUSLG &= ~0b001000000000000000000000;
  9224  00B11A  0102               	movlb	2	; () banked
  9225  00B11C  9B8C               	bcf	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
  9226                           
  9227                           ;mastercomms.c: 156: statusFlagsUSLG |= 0b000000001000000000000000;
  9228  00B11E  0102               	movlb	2	; () banked
  9229  00B120  8F8B               	bsf	(_statusFlagsUSLG+1)& (0+255),7,b	;volatile
  9230                           
  9231                           ; BSR set to: 2
  9232                           ;mastercomms.c: 157: if(!(statusFlagsUSLG & 0b000000000000000000100000) ||((statusFlagsU
      +                          SLG & 0b000000000000000000100000)&& (ISO_COUNTER >= 15)))
  9233  00B122  0102               	movlb	2	; () banked
  9234  00B124  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
  9235  00B126  D007               	goto	i2l839
  9236                           
  9237                           ; BSR set to: 2
  9238  00B128  0102               	movlb	2	; () banked
  9239  00B12A  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
  9240  00B12C  D005               	goto	i2l837
  9241                           
  9242                           ; BSR set to: 2
  9243  00B12E  0E0E               	movlw	14
  9244  00B130  0102               	movlb	2	; () banked
  9245  00B132  65A1               	cpfsgt	_ISO_COUNTER& (0+255),b
  9246  00B134  D001               	goto	i2l837
  9247  00B136                     i2l839:
  9248                           
  9249                           ; BSR set to: 2
  9250                           ;mastercomms.c: 158: LATDbits.LATD7 = 1;
  9251  00B136  8E8C               	bsf	3980,7,c	;volatile
  9252  00B138                     i2l837:
  9253                           
  9254                           ; BSR set to: 2
  9255                           ;mastercomms.c: 159: LATBbits.LATB3 = 0;
  9256  00B138  968A               	bcf	3978,3,c	;volatile
  9257  00B13A  0012               	return	
  9258  00B13C                     __end_ofi2_ForceFiringMode:
  9259                           	opt stack 0
  9260                           pclatu	equ	0xFFB
  9261                           pclath	equ	0xFFA
  9262                           tblptru	equ	0xFF8
  9263                           tblptrh	equ	0xFF7
  9264                           tblptrl	equ	0xFF6
  9265                           tablat	equ	0xFF5
  9266                           prodh	equ	0xFF4
  9267                           prodl	equ	0xFF3
  9268                           intcon	equ	0xFF2
  9269                           postinc0	equ	0xFEE
  9270                           fsr0h	equ	0xFEA
  9271                           fsr0l	equ	0xFE9
  9272                           wreg	equ	0xFE8
  9273                           indf1	equ	0xFE7
  9274                           postinc1	equ	0xFE6
  9275                           postdec1	equ	0xFE5
  9276                           fsr1h	equ	0xFE2
  9277                           fsr1l	equ	0xFE1
  9278                           indf2	equ	0xFDF
  9279                           postinc2	equ	0xFDE
  9280                           postdec2	equ	0xFDD
  9281                           fsr2h	equ	0xFDA
  9282                           fsr2l	equ	0xFD9
  9283                           status	equ	0xFD8
  9284                           
  9285 ;; *************** function _SPIISRHandlerST7540 *****************
  9286 ;; Defined at:
  9287 ;;		line 200 in file "ST7540.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;		None
  9290 ;; Auto vars:     Size  Location     Type
  9291 ;;  dataReadUC      1    0[COMRAM] unsigned char 
  9292 ;; Return value:  Size  Location     Type
  9293 ;;                  1    wreg      void 
  9294 ;; Registers used:
  9295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9296 ;; Tracked objects:
  9297 ;;		On entry : 0/0
  9298 ;;		On exit  : 0/0
  9299 ;;		Unchanged: 0/0
  9300 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  9301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9305 ;;Total ram usage:        1 bytes
  9306 ;; Hardware stack levels used:    1
  9307 ;; This function calls:
  9308 ;;		Nothing
  9309 ;; This function is called by:
  9310 ;;		_isr
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           	psect	text56
  9315  00A9A0                     __ptext56:
  9316                           	opt stack 0
  9317  00A9A0                     _SPIISRHandlerST7540:
  9318                           	opt stack 23
  9319                           
  9320                           ;ST7540.c: 201: unsigned char dataReadUC;
  9321                           ;ST7540.c: 203: if(!PIE3bits.SSP2IE){
  9322                           
  9323                           ;incstack = 0
  9324  00A9A0  BEA3               	btfsc	4003,7,c	;volatile
  9325  00A9A2  D002               	goto	i2l107
  9326                           
  9327                           ;ST7540.c: 204: PIR3bits.SSP2IF = 0;
  9328  00A9A4  9EA4               	bcf	4004,7,c	;volatile
  9329                           
  9330                           ;ST7540.c: 205: return;
  9331  00A9A6  0012               	return	
  9332  00A9A8                     i2l107:
  9333                           
  9334                           ;ST7540.c: 206: }
  9335                           ;ST7540.c: 208: dataReadUC = SSP2BUF;
  9336  00A9A8  CF75 F001          	movff	3957,SPIISRHandlerST7540@dataReadUC	;volatile
  9337                           
  9338                           ;ST7540.c: 209: SSP2BUF = 0;
  9339  00A9AC  0E00               	movlw	0
  9340  00A9AE  6E75               	movwf	3957,c	;volatile
  9341                           
  9342                           ;ST7540.c: 211: if(flagST7540UCG & 1){
  9343  00A9B0  0102               	movlb	2	; () banked
  9344  00A9B2  A1A8               	btfss	_flagST7540UCG& (0+255),0,b
  9345  00A9B4  D01A               	goto	i2l109
  9346                           
  9347                           ; BSR set to: 2
  9348                           ;ST7540.c: 212: if(bufferTXNextUCG > bufferTXLenUCG){
  9349  00A9B6  0102               	movlb	2	; () banked
  9350  00A9B8  51A6               	movf	_bufferTXNextUCG& (0+255),w,b
  9351  00A9BA  0102               	movlb	2	; () banked
  9352  00A9BC  5DA7               	subwf	_bufferTXLenUCG& (0+255),w,b
  9353  00A9BE  B0D8               	btfsc	status,0,c
  9354  00A9C0  D006               	goto	i2l5505
  9355                           
  9356                           ; BSR set to: 2
  9357                           ;ST7540.c: 213: flagST7540UCG &= ~1;
  9358  00A9C2  0102               	movlb	2	; () banked
  9359  00A9C4  91A8               	bcf	_flagST7540UCG& (0+255),0,b
  9360                           
  9361                           ; BSR set to: 2
  9362                           ;ST7540.c: 214: SSP2CON1bits.SSPEN = 0;
  9363  00A9C6  9A72               	bcf	3954,5,c	;volatile
  9364                           
  9365                           ; BSR set to: 2
  9366                           ;ST7540.c: 215: PIR3bits.SSP2IF = 0;
  9367  00A9C8  9EA4               	bcf	4004,7,c	;volatile
  9368                           
  9369                           ; BSR set to: 2
  9370                           ;ST7540.c: 216: LATCbits.LATC3 = 1;
  9371  00A9CA  868B               	bsf	3979,3,c	;volatile
  9372                           
  9373                           ; BSR set to: 2
  9374                           ;ST7540.c: 217: return;
  9375  00A9CC  0012               	return	
  9376  00A9CE                     i2l5505:
  9377                           
  9378                           ; BSR set to: 2
  9379                           ;ST7540.c: 218: }
  9380                           ;ST7540.c: 219: SSP2BUF = bufferTXST7540UCAG[bufferTXNextUCG++];
  9381  00A9CE  0102               	movlb	2	; () banked
  9382  00A9D0  51A6               	movf	_bufferTXNextUCG& (0+255),w,b
  9383  00A9D2  0D01               	mullw	1
  9384  00A9D4  0E4C               	movlw	low _bufferTXST7540UCAG
  9385  00A9D6  24F3               	addwf	prodl,w,c
  9386  00A9D8  6ED9               	movwf	fsr2l,c
  9387  00A9DA  0E03               	movlw	high _bufferTXST7540UCAG
  9388  00A9DC  20F4               	addwfc	prodh,w,c
  9389  00A9DE  6EDA               	movwf	fsr2h,c
  9390  00A9E0  50DF               	movf	indf2,w,c
  9391  00A9E2  6E75               	movwf	3957,c	;volatile
  9392                           
  9393                           ; BSR set to: 2
  9394  00A9E4  0102               	movlb	2	; () banked
  9395  00A9E6  2BA6               	incf	_bufferTXNextUCG& (0+255),f,b
  9396                           
  9397                           ;ST7540.c: 220: }else if(flagST7540UCG & 2){
  9398  00A9E8  D025               	goto	i2l111
  9399  00A9EA                     i2l109:
  9400                           
  9401                           ; BSR set to: 2
  9402  00A9EA  0102               	movlb	2	; () banked
  9403  00A9EC  A3A8               	btfss	_flagST7540UCG& (0+255),1,b
  9404  00A9EE  D022               	goto	i2l111
  9405                           
  9406                           ; BSR set to: 2
  9407                           ;ST7540.c: 221: bufferRXST7540UCAG[bufferRXNextUCG++] = dataReadUC;
  9408  00A9F0  0102               	movlb	2	; () banked
  9409  00A9F2  51A5               	movf	_bufferRXNextUCG& (0+255),w,b
  9410  00A9F4  0D01               	mullw	1
  9411  00A9F6  0E9B               	movlw	low _bufferRXST7540UCAG
  9412  00A9F8  24F3               	addwf	prodl,w,c
  9413  00A9FA  6ED9               	movwf	fsr2l,c
  9414  00A9FC  0E03               	movlw	high _bufferRXST7540UCAG
  9415  00A9FE  20F4               	addwfc	prodh,w,c
  9416  00AA00  6EDA               	movwf	fsr2h,c
  9417  00AA02  C001  FFDF         	movff	SPIISRHandlerST7540@dataReadUC,indf2
  9418                           
  9419                           ; BSR set to: 2
  9420  00AA06  0102               	movlb	2	; () banked
  9421  00AA08  2BA5               	incf	_bufferRXNextUCG& (0+255),f,b
  9422                           
  9423                           ; BSR set to: 2
  9424                           ;ST7540.c: 222: if(bufferRXST7540UCAG[0] == bufferRXNextUCG){
  9425  00AA0A  0102               	movlb	2	; () banked
  9426  00AA0C  51A5               	movf	_bufferRXNextUCG& (0+255),w,b
  9427  00AA0E  0103               	movlb	3	; () banked
  9428  00AA10  199B               	xorwf	_bufferRXST7540UCAG& (0+255),w,b
  9429  00AA12  A4D8               	btfss	status,2,c
  9430  00AA14  D00F               	goto	i2l111
  9431                           
  9432                           ; BSR set to: 3
  9433                           ;ST7540.c: 223: if(bufferRXST7540UCAG[6] == 0x31)
  9434  00AA16  0E31               	movlw	49
  9435  00AA18  0103               	movlb	3	; () banked
  9436  00AA1A  19A1               	xorwf	(_bufferRXST7540UCAG+6)& (0+255),w,b
  9437  00AA1C  A4D8               	btfss	status,2,c
  9438  00AA1E  D003               	goto	i2l5519
  9439                           
  9440                           ; BSR set to: 3
  9441                           ;ST7540.c: 224: bufferRXST7540UCAG[0] = 9;
  9442  00AA20  0E09               	movlw	9
  9443  00AA22  0103               	movlb	3	; () banked
  9444  00AA24  6F9B               	movwf	_bufferRXST7540UCAG& (0+255),b
  9445  00AA26                     i2l5519:
  9446                           
  9447                           ; BSR set to: 3
  9448                           ;ST7540.c: 225: flagST7540UCG |= 4;
  9449  00AA26  0102               	movlb	2	; () banked
  9450  00AA28  85A8               	bsf	_flagST7540UCG& (0+255),2,b
  9451                           
  9452                           ; BSR set to: 2
  9453                           ;ST7540.c: 226: flagST7540UCG &= ~2;
  9454  00AA2A  0102               	movlb	2	; () banked
  9455  00AA2C  93A8               	bcf	_flagST7540UCG& (0+255),1,b
  9456                           
  9457                           ; BSR set to: 2
  9458                           ;ST7540.c: 227: SSP2CON1bits.SSPEN = 0;
  9459  00AA2E  9A72               	bcf	3954,5,c	;volatile
  9460                           
  9461                           ; BSR set to: 2
  9462                           ;ST7540.c: 228: PIR3bits.SSP2IF = 0;
  9463  00AA30  9EA4               	bcf	4004,7,c	;volatile
  9464                           
  9465                           ; BSR set to: 2
  9466                           ;ST7540.c: 229: return;
  9467  00AA32  0012               	return	
  9468  00AA34                     i2l111:
  9469                           
  9470                           ;ST7540.c: 230: }
  9471                           ;ST7540.c: 231: }
  9472                           ;ST7540.c: 233: PIR3bits.SSP2IF = 0;
  9473  00AA34  9EA4               	bcf	4004,7,c	;volatile
  9474  00AA36  0012               	return		;funcret
  9475  00AA38                     __end_of_SPIISRHandlerST7540:
  9476                           	opt stack 0
  9477                           pclatu	equ	0xFFB
  9478                           pclath	equ	0xFFA
  9479                           tblptru	equ	0xFF8
  9480                           tblptrh	equ	0xFF7
  9481                           tblptrl	equ	0xFF6
  9482                           tablat	equ	0xFF5
  9483                           prodh	equ	0xFF4
  9484                           prodl	equ	0xFF3
  9485                           intcon	equ	0xFF2
  9486                           postinc0	equ	0xFEE
  9487                           fsr0h	equ	0xFEA
  9488                           fsr0l	equ	0xFE9
  9489                           wreg	equ	0xFE8
  9490                           indf1	equ	0xFE7
  9491                           postinc1	equ	0xFE6
  9492                           postdec1	equ	0xFE5
  9493                           fsr1h	equ	0xFE2
  9494                           fsr1l	equ	0xFE1
  9495                           indf2	equ	0xFDF
  9496                           postinc2	equ	0xFDE
  9497                           postdec2	equ	0xFDD
  9498                           fsr2h	equ	0xFDA
  9499                           fsr2l	equ	0xFD9
  9500                           status	equ	0xFD8
  9501                           
  9502 ;; *************** function _RXReadyISRHandlerST7540 *****************
  9503 ;; Defined at:
  9504 ;;		line 236 in file "ST7540.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;		None
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;		None
  9509 ;; Return value:  Size  Location     Type
  9510 ;;                  1    wreg      void 
  9511 ;; Registers used:
  9512 ;;		None
  9513 ;; Tracked objects:
  9514 ;;		On entry : 0/0
  9515 ;;		On exit  : 0/0
  9516 ;;		Unchanged: 0/0
  9517 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  9518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9522 ;;Total ram usage:        0 bytes
  9523 ;; Hardware stack levels used:    1
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_isr
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           	psect	text57
  9532  00B614                     __ptext57:
  9533                           	opt stack 0
  9534  00B614                     _RXReadyISRHandlerST7540:
  9535                           	opt stack 23
  9536                           
  9537                           ;ST7540.c: 237: if((flagST7540UCG & 2) && !PORTBbits.RP4){
  9538                           
  9539                           ;incstack = 0
  9540  00B614  0102               	movlb	2	; () banked
  9541  00B616  A3A8               	btfss	_flagST7540UCG& (0+255),1,b
  9542  00B618  0012               	return	
  9543                           
  9544                           ; BSR set to: 2
  9545  00B61A  B281               	btfsc	3969,1,c	;volatile
  9546  00B61C  0012               	return	
  9547                           
  9548                           ; BSR set to: 2
  9549                           ;ST7540.c: 238: SSP2CON1bits.SSPEN = 1;
  9550  00B61E  8A72               	bsf	3954,5,c	;volatile
  9551  00B620  0012               	return	
  9552  00B622                     __end_of_RXReadyISRHandlerST7540:
  9553                           	opt stack 0
  9554                           pclatu	equ	0xFFB
  9555                           pclath	equ	0xFFA
  9556                           tblptru	equ	0xFF8
  9557                           tblptrh	equ	0xFF7
  9558                           tblptrl	equ	0xFF6
  9559                           tablat	equ	0xFF5
  9560                           prodh	equ	0xFF4
  9561                           prodl	equ	0xFF3
  9562                           intcon	equ	0xFF2
  9563                           postinc0	equ	0xFEE
  9564                           fsr0h	equ	0xFEA
  9565                           fsr0l	equ	0xFE9
  9566                           wreg	equ	0xFE8
  9567                           indf1	equ	0xFE7
  9568                           postinc1	equ	0xFE6
  9569                           postdec1	equ	0xFE5
  9570                           fsr1h	equ	0xFE2
  9571                           fsr1l	equ	0xFE1
  9572                           indf2	equ	0xFDF
  9573                           postinc2	equ	0xFDE
  9574                           postdec2	equ	0xFDD
  9575                           fsr2h	equ	0xFDA
  9576                           fsr2l	equ	0xFD9
  9577                           status	equ	0xFD8
  9578                           
  9579 ;; *************** function _BoosterDataCommandComms *****************
  9580 ;; Defined at:
  9581 ;;		line 48 in file "boostercomms.c"
  9582 ;; Parameters:    Size  Location     Type
  9583 ;;		None
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;  commsADCValu    2   19[COMRAM] unsigned short 
  9586 ;; Return value:  Size  Location     Type
  9587 ;;                  1    wreg      void 
  9588 ;; Registers used:
  9589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9590 ;; Tracked objects:
  9591 ;;		On entry : 0/0
  9592 ;;		On exit  : 0/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
  9595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;Total ram usage:        4 bytes
  9600 ;; Hardware stack levels used:    1
  9601 ;; Hardware stack levels required when called:    2
  9602 ;; This function calls:
  9603 ;;		_CheckLineFault
  9604 ;;		_InitEarthLeakage
  9605 ;;		_ProcessRXFrame
  9606 ;;		_ReadAnalogVoltage
  9607 ;;		_ReadEarthLeakage
  9608 ;;		_ReadKeySwitch
  9609 ;;		_SetCommsLow
  9610 ;;		i2_SetCommsHigh
  9611 ;; This function is called by:
  9612 ;;		_isr
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           	psect	text58
  9617  0081DA                     __ptext58:
  9618                           	opt stack 0
  9619  0081DA                     _BoosterDataCommandComms:
  9620                           	opt stack 21
  9621                           
  9622                           ;boostercomms.c: 49: static unsigned short counterCommsStatusUSS;
  9623                           ;boostercomms.c: 50: static unsigned short counterSyncStatusUSS;
  9624                           ;boostercomms.c: 51: static unsigned char commsBitsSentUCS;
  9625                           ;boostercomms.c: 52: static unsigned char framesReceivedPhaseUCS;
  9626                           ;boostercomms.c: 54: unsigned short commsADCValueUS;
  9627                           ;boostercomms.c: 55: static unsigned char syncModeUCS;
  9628                           ;boostercomms.c: 56: static unsigned char bitsReadUCS;
  9629                           ;boostercomms.c: 57: static unsigned char lvlCountUCS;
  9630                           ;boostercomms.c: 58: static unsigned short recvFrameUSS;
  9631                           
  9632                           ; BSR set to: 2
  9633                           ;incstack = 0
  9634  0081DA  0102               	movlb	2	; () banked
  9635  0081DC  4B8D               	infsnz	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),f,b
  9636  0081DE  2B8E               	incf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),f,b
  9637                           
  9638                           ;boostercomms.c: 64: counterSyncStatusUSS++;
  9639  0081E0  0103               	movlb	3	; () banked
  9640  0081E2  4B43               	infsnz	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),f,b
  9641  0081E4  2B44               	incf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),f,b
  9642                           
  9643                           ;boostercomms.c: 65: switch(commsStatusUCG){
  9644  0081E6  D3E8               	goto	i2l5939
  9645  0081E8                     i2l270:
  9646                           
  9647                           ; BSR set to: 2
  9648                           ;boostercomms.c: 69: if(!(statusFlagsUSLG & 0b000000000000000000001000)){
  9649  0081E8  0102               	movlb	2	; () banked
  9650  0081EA  B78A               	btfsc	_statusFlagsUSLG& (0+255),3,b	;volatile
  9651  0081EC  D00A               	goto	i2l271
  9652                           
  9653                           ; BSR set to: 2
  9654                           ;boostercomms.c: 70: statusFlagsUSLG |= 0b000000000000000000001000;
  9655  0081EE  0102               	movlb	2	; () banked
  9656  0081F0  878A               	bsf	_statusFlagsUSLG& (0+255),3,b	;volatile
  9657                           
  9658                           ; BSR set to: 2
  9659                           ;boostercomms.c: 71: counterCommsStatusUSS = 0;
  9660  0081F2  0E00               	movlw	0
  9661  0081F4  0102               	movlb	2	; () banked
  9662  0081F6  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
  9663  0081F8  0E00               	movlw	0
  9664  0081FA  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
  9665                           
  9666                           ; BSR set to: 2
  9667                           ;boostercomms.c: 73: SetCommsLow();
  9668  0081FC  EC37  F05B         	call	_SetCommsLow	;wreg free
  9669                           
  9670                           ;boostercomms.c: 74: }else if(((statusFlagsUSLG & 0b000000000000000000000100) && (counte
      +                          rCommsStatusUSS == 200)) ||
  9671  008200  0012               	return	
  9672  008202                     i2l271:
  9673                           
  9674                           ; BSR set to: 2
  9675                           ;boostercomms.c: 75: (!(statusFlagsUSLG & 0b000000000000000000000100) && (counterCommsSt
      +                          atusUSS == 250))){
  9676  008202  0102               	movlb	2	; () banked
  9677  008204  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
  9678  008206  D007               	goto	i2l277
  9679                           
  9680                           ; BSR set to: 2
  9681  008208  0EC8               	movlw	200
  9682  00820A  0102               	movlb	2	; () banked
  9683  00820C  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9684  00820E  0102               	movlb	2	; () banked
  9685  008210  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9686  008212  B4D8               	btfsc	status,2,c
  9687  008214  D00A               	goto	i2l5547
  9688  008216                     i2l277:
  9689                           
  9690                           ; BSR set to: 2
  9691  008216  0102               	movlb	2	; () banked
  9692  008218  B58A               	btfsc	_statusFlagsUSLG& (0+255),2,b	;volatile
  9693  00821A  0012               	return	
  9694                           
  9695                           ; BSR set to: 2
  9696  00821C  0EFA               	movlw	250
  9697  00821E  0102               	movlb	2	; () banked
  9698  008220  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9699  008222  0102               	movlb	2	; () banked
  9700  008224  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9701  008226  A4D8               	btfss	status,2,c
  9702  008228  0012               	return	
  9703  00822A                     i2l5547:
  9704                           
  9705                           ; BSR set to: 2
  9706                           ;boostercomms.c: 76: commsStatusUCG = 2;
  9707  00822A  0E02               	movlw	2
  9708  00822C  0102               	movlb	2	; () banked
  9709  00822E  6FA3               	movwf	_commsStatusUCG& (0+255),b
  9710                           
  9711                           ; BSR set to: 2
  9712                           ;boostercomms.c: 77: statusFlagsUSLG &= ~0b000000000000000000001000;
  9713  008230  0102               	movlb	2	; () banked
  9714  008232  978A               	bcf	_statusFlagsUSLG& (0+255),3,b	;volatile
  9715                           
  9716                           ; BSR set to: 2
  9717                           ;boostercomms.c: 78: counterCommsStatusUSS = 0;
  9718  008234  0E00               	movlw	0
  9719  008236  0102               	movlb	2	; () banked
  9720  008238  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
  9721  00823A  0E00               	movlw	0
  9722  00823C  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
  9723                           
  9724                           ; BSR set to: 2
  9725                           ;boostercomms.c: 79: SetCommsHigh();
  9726  00823E  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
  9727                           
  9728                           ;boostercomms.c: 80: }
  9729                           ;boostercomms.c: 81: break;
  9730  008242  0012               	return	
  9731  008244                     i2l279:
  9732                           
  9733                           ; BSR set to: 2
  9734                           ;boostercomms.c: 83: if(!(statusFlagsUSLG & 0b000000000000000000001000)){
  9735  008244  0102               	movlb	2	; () banked
  9736  008246  B78A               	btfsc	_statusFlagsUSLG& (0+255),3,b	;volatile
  9737  008248  D011               	goto	i2l5563
  9738                           
  9739                           ; BSR set to: 2
  9740                           ;boostercomms.c: 84: statusFlagsUSLG |= 0b000000000000000000001000;
  9741  00824A  0102               	movlb	2	; () banked
  9742  00824C  878A               	bsf	_statusFlagsUSLG& (0+255),3,b	;volatile
  9743                           
  9744                           ; BSR set to: 2
  9745                           ;boostercomms.c: 85: if(statusFlagsUSLG & 0b000000000000000000000100)
  9746  00824E  0102               	movlb	2	; () banked
  9747  008250  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
  9748  008252  D008               	goto	i2l5561
  9749                           
  9750                           ; BSR set to: 2
  9751                           ;boostercomms.c: 86: commsTXBitsUSLG <<= 21;
  9752  008254  0103               	movlb	3	; () banked
  9753  008256  0E15               	movlw	21
  9754  008258                     i2u565_45:
  9755  008258  90D8               	bcf	status,0,c
  9756  00825A  373C               	rlcf	_commsTXBitsUSLG& (0+255),f,b
  9757  00825C  373D               	rlcf	(_commsTXBitsUSLG+1)& (0+255),f,b
  9758  00825E  373E               	rlcf	(_commsTXBitsUSLG+2)& (0+255),f,b
  9759  008260  2EE8               	decfsz	wreg,f,c
  9760  008262  D7FA               	goto	i2u565_45
  9761  008264                     i2l5561:
  9762                           
  9763                           ;boostercomms.c: 87: commsBitsSentUCS = 0;
  9764  008264  0E00               	movlw	0
  9765  008266  0102               	movlb	2	; () banked
  9766  008268  6F9A               	movwf	BoosterDataCommandComms@commsBitsSentUCS& (0+255),b
  9767                           
  9768                           ;boostercomms.c: 88: }else{
  9769  00826A  0012               	return	
  9770  00826C                     i2l5563:
  9771                           
  9772                           ; BSR set to: 2
  9773                           ;boostercomms.c: 89: if(counterCommsStatusUSS == 65){
  9774  00826C  0E41               	movlw	65
  9775  00826E  0102               	movlb	2	; () banked
  9776  008270  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9777  008272  0102               	movlb	2	; () banked
  9778  008274  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9779  008276  A4D8               	btfss	status,2,c
  9780  008278  D006               	goto	i2l5569
  9781                           
  9782                           ; BSR set to: 2
  9783                           ;boostercomms.c: 90: if(!(commsTXBitsUSLG & 0b100000000000000000000000))
  9784  00827A  0103               	movlb	3	; () banked
  9785  00827C  BF3E               	btfsc	(_commsTXBitsUSLG+2)& (0+255),7,b
  9786  00827E  0012               	return	
  9787                           
  9788                           ; BSR set to: 3
  9789                           ;boostercomms.c: 91: SetCommsLow();
  9790  008280  EC37  F05B         	call	_SetCommsLow	;wreg free
  9791                           
  9792                           ;boostercomms.c: 92: }else if(counterCommsStatusUSS == 75){
  9793  008284  0012               	return	
  9794  008286                     i2l5569:
  9795  008286  0E4B               	movlw	75
  9796  008288  0102               	movlb	2	; () banked
  9797  00828A  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9798  00828C  0102               	movlb	2	; () banked
  9799  00828E  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9800  008290  A4D8               	btfss	status,2,c
  9801  008292  D003               	goto	i2l5573
  9802                           
  9803                           ; BSR set to: 2
  9804                           ;boostercomms.c: 93: SetCommsLow();
  9805  008294  EC37  F05B         	call	_SetCommsLow	;wreg free
  9806                           
  9807                           ;boostercomms.c: 94: }else if(counterCommsStatusUSS == 100){
  9808  008298  0012               	return	
  9809  00829A                     i2l5573:
  9810  00829A  0E64               	movlw	100
  9811  00829C  0102               	movlb	2	; () banked
  9812  00829E  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9813  0082A0  0102               	movlb	2	; () banked
  9814  0082A2  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9815  0082A4  A4D8               	btfss	status,2,c
  9816  0082A6  0012               	return	
  9817                           
  9818                           ; BSR set to: 2
  9819                           ;boostercomms.c: 95: commsTXBitsUSLG <<= 1;
  9820  0082A8  0103               	movlb	3	; () banked
  9821  0082AA  90D8               	bcf	status,0,c
  9822  0082AC  373C               	rlcf	_commsTXBitsUSLG& (0+255),f,b
  9823  0082AE  373D               	rlcf	(_commsTXBitsUSLG+1)& (0+255),f,b
  9824  0082B0  373E               	rlcf	(_commsTXBitsUSLG+2)& (0+255),f,b
  9825                           
  9826                           ;boostercomms.c: 96: commsBitsSentUCS++;
  9827  0082B2  0102               	movlb	2	; () banked
  9828  0082B4  2B9A               	incf	BoosterDataCommandComms@commsBitsSentUCS& (0+255),f,b
  9829                           
  9830                           ; BSR set to: 2
  9831                           ;boostercomms.c: 97: SetCommsHigh();
  9832  0082B6  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
  9833                           
  9834                           ;boostercomms.c: 98: if((statusFlagsUSLG & 0b000000000000000000000100) && (commsBitsSent
      +                          UCS == 3)){
  9835  0082BA  0102               	movlb	2	; () banked
  9836  0082BC  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
  9837  0082BE  D00B               	goto	i2l289
  9838                           
  9839                           ; BSR set to: 2
  9840  0082C0  0E03               	movlw	3
  9841  0082C2  0102               	movlb	2	; () banked
  9842  0082C4  199A               	xorwf	BoosterDataCommandComms@commsBitsSentUCS& (0+255),w,b
  9843  0082C6  A4D8               	btfss	status,2,c
  9844  0082C8  D006               	goto	i2l289
  9845                           
  9846                           ; BSR set to: 2
  9847                           ;boostercomms.c: 99: commsStatusUCG = 4;
  9848  0082CA  0E04               	movlw	4
  9849  0082CC  0102               	movlb	2	; () banked
  9850  0082CE  6FA3               	movwf	_commsStatusUCG& (0+255),b
  9851                           
  9852                           ; BSR set to: 2
  9853                           ;boostercomms.c: 100: statusFlagsUSLG &= ~0b000000000000000000001000;
  9854  0082D0  0102               	movlb	2	; () banked
  9855  0082D2  978A               	bcf	_statusFlagsUSLG& (0+255),3,b	;volatile
  9856                           
  9857                           ;boostercomms.c: 101: }else if(!(statusFlagsUSLG & 0b000000000000000000000100) && (comms
      +                          BitsSentUCS == 24)){
  9858  0082D4  D013               	goto	i2l5597
  9859  0082D6                     i2l289:
  9860                           
  9861                           ; BSR set to: 2
  9862  0082D6  0102               	movlb	2	; () banked
  9863  0082D8  B58A               	btfsc	_statusFlagsUSLG& (0+255),2,b	;volatile
  9864  0082DA  D010               	goto	i2l5597
  9865                           
  9866                           ; BSR set to: 2
  9867  0082DC  0E18               	movlw	24
  9868  0082DE  0102               	movlb	2	; () banked
  9869  0082E0  199A               	xorwf	BoosterDataCommandComms@commsBitsSentUCS& (0+255),w,b
  9870  0082E2  A4D8               	btfss	status,2,c
  9871  0082E4  D00B               	goto	i2l5597
  9872                           
  9873                           ; BSR set to: 2
  9874                           ;boostercomms.c: 102: commsStatusUCG = 3;
  9875  0082E6  0E03               	movlw	3
  9876  0082E8  0102               	movlb	2	; () banked
  9877  0082EA  6FA3               	movwf	_commsStatusUCG& (0+255),b
  9878                           
  9879                           ; BSR set to: 2
  9880                           ;boostercomms.c: 103: statusFlagsUSLG &= ~0b000000000000000000001000;
  9881  0082EC  0102               	movlb	2	; () banked
  9882  0082EE  978A               	bcf	_statusFlagsUSLG& (0+255),3,b	;volatile
  9883                           
  9884                           ; BSR set to: 2
  9885                           ;boostercomms.c: 104: framesReceivedPhaseUCS = 0;
  9886  0082F0  0E00               	movlw	0
  9887  0082F2  0102               	movlb	2	; () banked
  9888  0082F4  6F99               	movwf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),b
  9889                           
  9890                           ; BSR set to: 2
  9891                           ;boostercomms.c: 105: syncModeUCS = 5;
  9892  0082F6  0E05               	movlw	5
  9893  0082F8  0102               	movlb	2	; () banked
  9894  0082FA  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
  9895  0082FC                     i2l5597:
  9896                           
  9897                           ; BSR set to: 2
  9898                           ;boostercomms.c: 106: }
  9899                           ;boostercomms.c: 107: counterCommsStatusUSS = 0;
  9900  0082FC  0E00               	movlw	0
  9901  0082FE  0102               	movlb	2	; () banked
  9902  008300  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
  9903  008302  0E00               	movlw	0
  9904  008304  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
  9905                           
  9906                           ; BSR set to: 2
  9907                           ;boostercomms.c: 108: }
  9908                           ;boostercomms.c: 109: }
  9909                           ;boostercomms.c: 110: break;
  9910                           
  9911                           ; BSR set to: 2
  9912                           
  9913                           ; BSR set to: 2
  9914                           
  9915                           ; BSR set to: 2
  9916  008306  0012               	return	
  9917  008308                     i2l5599:
  9918                           
  9919                           ; BSR set to: 2
  9920                           ;boostercomms.c: 112: commsADCValueUS = ReadAnalogVoltage(2);
  9921  008308  0E02               	movlw	2
  9922  00830A  EC3D  F058         	call	_ReadAnalogVoltage
  9923  00830E  C001  F014         	movff	?_ReadAnalogVoltage,BoosterDataCommandComms@commsADCValueUS
  9924  008312  C002  F015         	movff	?_ReadAnalogVoltage+1,BoosterDataCommandComms@commsADCValueUS+1
  9925                           
  9926                           ;boostercomms.c: 113: switch(syncModeUCS){
  9927  008316  D148               	goto	i2l5715
  9928  008318                     i2l5601:
  9929                           
  9930                           ;boostercomms.c: 115: if(counterCommsStatusUSS > (75 - 10) && (framesReceivedPhaseUCS ==
      +                           0))
  9931  008318  0102               	movlb	2	; () banked
  9932  00831A  518E               	movf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
  9933  00831C  E105               	bnz	i2u574_40
  9934  00831E  0E42               	movlw	66
  9935  008320  0102               	movlb	2	; () banked
  9936  008322  5D8D               	subwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
  9937  008324  A0D8               	btfss	status,0,c
  9938  008326  D008               	goto	i2l5607
  9939  008328                     i2u574_40:
  9940                           
  9941                           ; BSR set to: 2
  9942  008328  0102               	movlb	2	; () banked
  9943  00832A  5199               	movf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),w,b
  9944  00832C  A4D8               	btfss	status,2,c
  9945  00832E  D004               	goto	i2l5607
  9946                           
  9947                           ; BSR set to: 2
  9948                           ;boostercomms.c: 116: syncModeUCS = 0;
  9949  008330  0E00               	movlw	0
  9950  008332  0102               	movlb	2	; () banked
  9951  008334  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
  9952  008336  0012               	return	
  9953  008338                     i2l5607:
  9954                           
  9955                           ; BSR set to: 2
  9956                           ;boostercomms.c: 117: else if(framesReceivedPhaseUCS != 0)
  9957  008338  0102               	movlb	2	; () banked
  9958  00833A  5199               	movf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),w,b
  9959  00833C  B4D8               	btfsc	status,2,c
  9960  00833E  0012               	return	
  9961                           
  9962                           ; BSR set to: 2
  9963                           ;boostercomms.c: 118: syncModeUCS = 0;
  9964  008340  0E00               	movlw	0
  9965  008342  0102               	movlb	2	; () banked
  9966  008344  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
  9967                           
  9968                           ; BSR set to: 2
  9969                           ;boostercomms.c: 119: break;
  9970                           
  9971                           ; BSR set to: 2
  9972  008346  0012               	return	
  9973  008348                     i2l5611:
  9974                           
  9975                           ; BSR set to: 2
  9976                           ;boostercomms.c: 123: if((commsADCValueUS-commsOffsetADCValueUS) > 310){
  9977  008348  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
  9978  00834C  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
  9979  008350  1E12               	comf	??_BoosterDataCommandComms,f,c
  9980  008352  1E13               	comf	??_BoosterDataCommandComms+1,f,c
  9981  008354  4A12               	infsnz	??_BoosterDataCommandComms,f,c
  9982  008356  2A13               	incf	??_BoosterDataCommandComms+1,f,c
  9983  008358  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
  9984  00835A  2612               	addwf	??_BoosterDataCommandComms,f,c
  9985  00835C  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
  9986  00835E  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
  9987  008360  0E37               	movlw	55
  9988  008362  5C12               	subwf	??_BoosterDataCommandComms,w,c
  9989  008364  0E01               	movlw	1
  9990  008366  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
  9991  008368  A0D8               	btfss	status,0,c
  9992  00836A  D00E               	goto	i2l5621
  9993                           
  9994                           ; BSR set to: 2
  9995                           ;boostercomms.c: 124: syncModeUCS = 1;
  9996  00836C  0E01               	movlw	1
  9997  00836E  0102               	movlb	2	; () banked
  9998  008370  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
  9999                           
 10000                           ; BSR set to: 2
 10001                           ;boostercomms.c: 125: statusFlagsUSLG |= 0b000000000000001000000000;
 10002  008372  0102               	movlb	2	; () banked
 10003  008374  838B               	bsf	(_statusFlagsUSLG+1)& (0+255),1,b	;volatile
 10004                           
 10005                           ; BSR set to: 2
 10006                           ;boostercomms.c: 126: counterSyncStatusUSS = 0;
 10007  008376  0E00               	movlw	0
 10008  008378  0103               	movlb	3	; () banked
 10009  00837A  6F44               	movwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),b
 10010  00837C  0E00               	movlw	0
 10011  00837E  6F43               	movwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),b
 10012                           
 10013                           ; BSR set to: 3
 10014                           ;boostercomms.c: 127: lvlCountUCS = 1;
 10015  008380  0E01               	movlw	1
 10016  008382  0102               	movlb	2	; () banked
 10017  008384  6F96               	movwf	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10018                           
 10019                           ;boostercomms.c: 128: }else if(counterCommsStatusUSS > (75 + 50))
 10020  008386  0012               	return	
 10021  008388                     i2l5621:
 10022                           
 10023                           ; BSR set to: 2
 10024  008388  0102               	movlb	2	; () banked
 10025  00838A  518E               	movf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10026  00838C  E105               	bnz	i2u578_40
 10027  00838E  0E7E               	movlw	126
 10028  008390  0102               	movlb	2	; () banked
 10029  008392  5D8D               	subwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10030  008394  A0D8               	btfss	status,0,c
 10031  008396  0012               	return	
 10032  008398                     i2u578_40:
 10033                           
 10034                           ; BSR set to: 2
 10035                           ;boostercomms.c: 129: syncModeUCS = 4;
 10036  008398  0E04               	movlw	4
 10037  00839A  0102               	movlb	2	; () banked
 10038  00839C  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10039                           
 10040                           ; BSR set to: 2
 10041                           ;boostercomms.c: 130: break;
 10042                           
 10043                           ; BSR set to: 2
 10044  00839E  0012               	return	
 10045  0083A0                     i2l5625:
 10046                           
 10047                           ; BSR set to: 2
 10048                           ;boostercomms.c: 132: if((commsADCValueUS-commsOffsetADCValueUS) > 310)
 10049  0083A0  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
 10050  0083A4  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
 10051  0083A8  1E12               	comf	??_BoosterDataCommandComms,f,c
 10052  0083AA  1E13               	comf	??_BoosterDataCommandComms+1,f,c
 10053  0083AC  4A12               	infsnz	??_BoosterDataCommandComms,f,c
 10054  0083AE  2A13               	incf	??_BoosterDataCommandComms+1,f,c
 10055  0083B0  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
 10056  0083B2  2612               	addwf	??_BoosterDataCommandComms,f,c
 10057  0083B4  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
 10058  0083B6  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
 10059  0083B8  0E37               	movlw	55
 10060  0083BA  5C12               	subwf	??_BoosterDataCommandComms,w,c
 10061  0083BC  0E01               	movlw	1
 10062  0083BE  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
 10063  0083C0  A0D8               	btfss	status,0,c
 10064  0083C2  D002               	goto	i2l5629
 10065                           
 10066                           ; BSR set to: 2
 10067                           ;boostercomms.c: 133: lvlCountUCS++;
 10068  0083C4  0102               	movlb	2	; () banked
 10069  0083C6  2B96               	incf	BoosterDataCommandComms@lvlCountUCS& (0+255),f,b
 10070  0083C8                     i2l5629:
 10071                           
 10072                           ; BSR set to: 2
 10073                           ;boostercomms.c: 134: if((commsADCValueUS-commsOffsetADCValueUS) > 620){
 10074  0083C8  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
 10075  0083CC  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
 10076  0083D0  1E12               	comf	??_BoosterDataCommandComms,f,c
 10077  0083D2  1E13               	comf	??_BoosterDataCommandComms+1,f,c
 10078  0083D4  4A12               	infsnz	??_BoosterDataCommandComms,f,c
 10079  0083D6  2A13               	incf	??_BoosterDataCommandComms+1,f,c
 10080  0083D8  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
 10081  0083DA  2612               	addwf	??_BoosterDataCommandComms,f,c
 10082  0083DC  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
 10083  0083DE  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
 10084  0083E0  0E6D               	movlw	109
 10085  0083E2  5C12               	subwf	??_BoosterDataCommandComms,w,c
 10086  0083E4  0E02               	movlw	2
 10087  0083E6  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
 10088  0083E8  A0D8               	btfss	status,0,c
 10089  0083EA  D005               	goto	i2l5635
 10090                           
 10091                           ; BSR set to: 2
 10092                           ;boostercomms.c: 135: syncModeUCS = 4;
 10093  0083EC  0E04               	movlw	4
 10094  0083EE  0102               	movlb	2	; () banked
 10095  0083F0  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10096                           
 10097                           ; BSR set to: 2
 10098                           ;boostercomms.c: 136: statusFlagsUSLG |= 0b000000000000010000000000;
 10099  0083F2  0102               	movlb	2	; () banked
 10100  0083F4  858B               	bsf	(_statusFlagsUSLG+1)& (0+255),2,b	;volatile
 10101  0083F6                     i2l5635:
 10102                           
 10103                           ; BSR set to: 2
 10104                           ;boostercomms.c: 137: }
 10105                           ;boostercomms.c: 138: if(counterSyncStatusUSS == 80){
 10106  0083F6  0E50               	movlw	80
 10107  0083F8  0103               	movlb	3	; () banked
 10108  0083FA  1943               	xorwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),w,b
 10109  0083FC  0103               	movlb	3	; () banked
 10110  0083FE  1144               	iorwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),w,b
 10111  008400  A4D8               	btfss	status,2,c
 10112  008402  0012               	return	
 10113                           
 10114                           ; BSR set to: 3
 10115                           ;boostercomms.c: 139: if(lvlCountUCS < 80 - 10){
 10116  008404  0E46               	movlw	70
 10117  008406  0102               	movlb	2	; () banked
 10118  008408  6196               	cpfslt	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10119  00840A  D007               	goto	i2l5645
 10120                           
 10121                           ; BSR set to: 2
 10122                           ;boostercomms.c: 140: LATAbits.LATA6 = 1;
 10123  00840C  8C89               	bsf	3977,6,c	;volatile
 10124                           
 10125                           ; BSR set to: 2
 10126                           ;boostercomms.c: 141: syncModeUCS = 4;
 10127  00840E  0E04               	movlw	4
 10128  008410  0102               	movlb	2	; () banked
 10129  008412  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10130                           
 10131                           ; BSR set to: 2
 10132                           ;boostercomms.c: 142: statusFlagsUSLG |= 0b000000000000000100000000;
 10133  008414  0102               	movlb	2	; () banked
 10134  008416  818B               	bsf	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 10135                           
 10136                           ;boostercomms.c: 143: }else{
 10137  008418  0012               	return	
 10138  00841A                     i2l5645:
 10139                           
 10140                           ; BSR set to: 2
 10141                           ;boostercomms.c: 144: syncModeUCS = 2;
 10142  00841A  0E02               	movlw	2
 10143  00841C  0102               	movlb	2	; () banked
 10144  00841E  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10145                           
 10146                           ;boostercomms.c: 145: counterSyncStatusUSS = 0;
 10147  008420  0E00               	movlw	0
 10148  008422  0103               	movlb	3	; () banked
 10149  008424  6F44               	movwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),b
 10150  008426  0E00               	movlw	0
 10151  008428  6F43               	movwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),b
 10152                           
 10153                           ;boostercomms.c: 146: recvFrameUSS = 0;
 10154  00842A  0E00               	movlw	0
 10155  00842C  0103               	movlb	3	; () banked
 10156  00842E  6F42               	movwf	(BoosterDataCommandComms@recvFrameUSS+1)& (0+255),b
 10157  008430  0E00               	movlw	0
 10158  008432  6F41               	movwf	BoosterDataCommandComms@recvFrameUSS& (0+255),b
 10159                           
 10160                           ;boostercomms.c: 147: bitsReadUCS = 0;
 10161  008434  0E00               	movlw	0
 10162  008436  0102               	movlb	2	; () banked
 10163  008438  6F97               	movwf	BoosterDataCommandComms@bitsReadUCS& (0+255),b
 10164                           
 10165                           ;boostercomms.c: 148: lvlCountUCS = 0;
 10166  00843A  0E00               	movlw	0
 10167  00843C  0102               	movlb	2	; () banked
 10168  00843E  6F96               	movwf	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10169                           
 10170                           ; BSR set to: 2
 10171                           ;boostercomms.c: 149: }
 10172                           ;boostercomms.c: 150: }
 10173                           ;boostercomms.c: 151: break;
 10174                           
 10175                           ; BSR set to: 2
 10176  008440  0012               	return	
 10177  008442                     i2l5647:
 10178                           
 10179                           ; BSR set to: 2
 10180                           ;boostercomms.c: 153: if((commsADCValueUS-commsOffsetADCValueUS) > 310)
 10181  008442  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
 10182  008446  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
 10183  00844A  1E12               	comf	??_BoosterDataCommandComms,f,c
 10184  00844C  1E13               	comf	??_BoosterDataCommandComms+1,f,c
 10185  00844E  4A12               	infsnz	??_BoosterDataCommandComms,f,c
 10186  008450  2A13               	incf	??_BoosterDataCommandComms+1,f,c
 10187  008452  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
 10188  008454  2612               	addwf	??_BoosterDataCommandComms,f,c
 10189  008456  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
 10190  008458  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
 10191  00845A  0E37               	movlw	55
 10192  00845C  5C12               	subwf	??_BoosterDataCommandComms,w,c
 10193  00845E  0E01               	movlw	1
 10194  008460  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
 10195  008462  A0D8               	btfss	status,0,c
 10196  008464  D002               	goto	i2l5651
 10197                           
 10198                           ; BSR set to: 2
 10199                           ;boostercomms.c: 154: lvlCountUCS++;
 10200  008466  0102               	movlb	2	; () banked
 10201  008468  2B96               	incf	BoosterDataCommandComms@lvlCountUCS& (0+255),f,b
 10202  00846A                     i2l5651:
 10203                           
 10204                           ; BSR set to: 2
 10205                           ;boostercomms.c: 155: if(counterSyncStatusUSS == 60){
 10206  00846A  0E3C               	movlw	60
 10207  00846C  0103               	movlb	3	; () banked
 10208  00846E  1943               	xorwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),w,b
 10209  008470  0103               	movlb	3	; () banked
 10210  008472  1144               	iorwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),w,b
 10211  008474  A4D8               	btfss	status,2,c
 10212  008476  0012               	return	
 10213                           
 10214                           ; BSR set to: 3
 10215                           ;boostercomms.c: 156: recvFrameUSS <<= 1;
 10216  008478  0103               	movlb	3	; () banked
 10217  00847A  90D8               	bcf	status,0,c
 10218  00847C  3741               	rlcf	BoosterDataCommandComms@recvFrameUSS& (0+255),f,b
 10219  00847E  3742               	rlcf	(BoosterDataCommandComms@recvFrameUSS+1)& (0+255),f,b
 10220                           
 10221                           ; BSR set to: 3
 10222                           ;boostercomms.c: 157: if((lvlCountUCS < 10) || (lvlCountUCS > 50)){
 10223  008480  0E09               	movlw	9
 10224  008482  0102               	movlb	2	; () banked
 10225  008484  6596               	cpfsgt	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10226  008486  D004               	goto	i2l5659
 10227                           
 10228                           ; BSR set to: 2
 10229  008488  0E32               	movlw	50
 10230  00848A  0102               	movlb	2	; () banked
 10231  00848C  6596               	cpfsgt	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10232  00848E  D006               	goto	i2l5663
 10233  008490                     i2l5659:
 10234                           
 10235                           ; BSR set to: 2
 10236                           ;boostercomms.c: 158: syncModeUCS = 4;
 10237  008490  0E04               	movlw	4
 10238  008492  0102               	movlb	2	; () banked
 10239  008494  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10240                           
 10241                           ; BSR set to: 2
 10242                           ;boostercomms.c: 159: statusFlagsUSLG |= 0b000000000000000100000000;
 10243  008496  0102               	movlb	2	; () banked
 10244  008498  818B               	bsf	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 10245                           
 10246                           ;boostercomms.c: 160: }else if(lvlCountUCS < 30){
 10247  00849A  D006               	goto	i2l5667
 10248  00849C                     i2l5663:
 10249                           
 10250                           ; BSR set to: 2
 10251  00849C  0E1E               	movlw	30
 10252  00849E  0102               	movlb	2	; () banked
 10253  0084A0  6196               	cpfslt	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10254  0084A2  D002               	goto	i2l5667
 10255                           
 10256                           ; BSR set to: 2
 10257                           ;boostercomms.c: 161: recvFrameUSS |= 1;
 10258  0084A4  0103               	movlb	3	; () banked
 10259  0084A6  8141               	bsf	BoosterDataCommandComms@recvFrameUSS& (0+255),0,b
 10260  0084A8                     i2l5667:
 10261                           
 10262                           ;boostercomms.c: 162: }
 10263                           ;boostercomms.c: 163: if(++bitsReadUCS == 16)
 10264  0084A8  0102               	movlb	2	; () banked
 10265  0084AA  2B97               	incf	BoosterDataCommandComms@bitsReadUCS& (0+255),f,b
 10266  0084AC  0E10               	movlw	16
 10267  0084AE  0102               	movlb	2	; () banked
 10268  0084B0  1997               	xorwf	BoosterDataCommandComms@bitsReadUCS& (0+255),w,b
 10269  0084B2  A4D8               	btfss	status,2,c
 10270  0084B4  D003               	goto	i2l317
 10271                           
 10272                           ; BSR set to: 2
 10273                           ;boostercomms.c: 164: syncModeUCS = 3;
 10274  0084B6  0E03               	movlw	3
 10275  0084B8  0102               	movlb	2	; () banked
 10276  0084BA  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10277  0084BC                     i2l317:
 10278                           
 10279                           ; BSR set to: 2
 10280                           ;boostercomms.c: 165: lvlCountUCS = 0;
 10281  0084BC  0E00               	movlw	0
 10282  0084BE  0102               	movlb	2	; () banked
 10283  0084C0  6F96               	movwf	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10284                           
 10285                           ;boostercomms.c: 166: counterSyncStatusUSS = 0;
 10286  0084C2  0E00               	movlw	0
 10287  0084C4  0103               	movlb	3	; () banked
 10288  0084C6  6F44               	movwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),b
 10289  0084C8  0E00               	movlw	0
 10290  0084CA  6F43               	movwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),b
 10291                           
 10292                           ; BSR set to: 3
 10293                           ;boostercomms.c: 167: }
 10294                           ;boostercomms.c: 168: break;
 10295  0084CC  0012               	return	
 10296  0084CE                     i2l5671:
 10297                           
 10298                           ;boostercomms.c: 170: if((commsADCValueUS-commsOffsetADCValueUS) > 310)
 10299  0084CE  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
 10300  0084D2  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
 10301  0084D6  1E12               	comf	??_BoosterDataCommandComms,f,c
 10302  0084D8  1E13               	comf	??_BoosterDataCommandComms+1,f,c
 10303  0084DA  4A12               	infsnz	??_BoosterDataCommandComms,f,c
 10304  0084DC  2A13               	incf	??_BoosterDataCommandComms+1,f,c
 10305  0084DE  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
 10306  0084E0  2612               	addwf	??_BoosterDataCommandComms,f,c
 10307  0084E2  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
 10308  0084E4  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
 10309  0084E6  0E37               	movlw	55
 10310  0084E8  5C12               	subwf	??_BoosterDataCommandComms,w,c
 10311  0084EA  0E01               	movlw	1
 10312  0084EC  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
 10313  0084EE  A0D8               	btfss	status,0,c
 10314  0084F0  D002               	goto	i2l5675
 10315                           
 10316                           ;boostercomms.c: 171: lvlCountUCS++;
 10317  0084F2  0102               	movlb	2	; () banked
 10318  0084F4  2B96               	incf	BoosterDataCommandComms@lvlCountUCS& (0+255),f,b
 10319  0084F6                     i2l5675:
 10320                           
 10321                           ;boostercomms.c: 172: if((commsADCValueUS-commsOffsetADCValueUS) > 620){
 10322  0084F6  C28F  F012         	movff	_commsOffsetADCValueUS,??_BoosterDataCommandComms
 10323  0084FA  C290  F013         	movff	_commsOffsetADCValueUS+1,??_BoosterDataCommandComms+1
 10324  0084FE  1E12               	comf	??_BoosterDataCommandComms,f,c
 10325  008500  1E13               	comf	??_BoosterDataCommandComms+1,f,c
 10326  008502  4A12               	infsnz	??_BoosterDataCommandComms,f,c
 10327  008504  2A13               	incf	??_BoosterDataCommandComms+1,f,c
 10328  008506  5014               	movf	BoosterDataCommandComms@commsADCValueUS,w,c
 10329  008508  2612               	addwf	??_BoosterDataCommandComms,f,c
 10330  00850A  5015               	movf	BoosterDataCommandComms@commsADCValueUS+1,w,c
 10331  00850C  2213               	addwfc	??_BoosterDataCommandComms+1,f,c
 10332  00850E  0E6D               	movlw	109
 10333  008510  5C12               	subwf	??_BoosterDataCommandComms,w,c
 10334  008512  0E02               	movlw	2
 10335  008514  5813               	subwfb	??_BoosterDataCommandComms+1,w,c
 10336  008516  A0D8               	btfss	status,0,c
 10337  008518  D005               	goto	i2l5681
 10338                           
 10339                           ;boostercomms.c: 173: syncModeUCS = 4;
 10340  00851A  0E04               	movlw	4
 10341  00851C  0102               	movlb	2	; () banked
 10342  00851E  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10343                           
 10344                           ; BSR set to: 2
 10345                           ;boostercomms.c: 174: statusFlagsUSLG |= 0b000000000000010000000000;
 10346  008520  0102               	movlb	2	; () banked
 10347  008522  858B               	bsf	(_statusFlagsUSLG+1)& (0+255),2,b	;volatile
 10348  008524                     i2l5681:
 10349                           
 10350                           ;boostercomms.c: 175: }
 10351                           ;boostercomms.c: 176: if(counterSyncStatusUSS == 110){
 10352  008524  0E6E               	movlw	110
 10353  008526  0103               	movlb	3	; () banked
 10354  008528  1943               	xorwf	BoosterDataCommandComms@counterSyncStatusUSS& (0+255),w,b
 10355  00852A  0103               	movlb	3	; () banked
 10356  00852C  1144               	iorwf	(BoosterDataCommandComms@counterSyncStatusUSS+1)& (0+255),w,b
 10357  00852E  A4D8               	btfss	status,2,c
 10358  008530  0012               	return	
 10359                           
 10360                           ; BSR set to: 3
 10361                           ;boostercomms.c: 177: if(lvlCountUCS < 110 - 10)
 10362  008532  0E64               	movlw	100
 10363  008534  0102               	movlb	2	; () banked
 10364  008536  6196               	cpfslt	BoosterDataCommandComms@lvlCountUCS& (0+255),b
 10365  008538  D002               	goto	i2l5687
 10366                           
 10367                           ; BSR set to: 2
 10368                           ;boostercomms.c: 178: statusFlagsUSLG |= 0b000000000000000100000000;
 10369  00853A  0102               	movlb	2	; () banked
 10370  00853C  818B               	bsf	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 10371  00853E                     i2l5687:
 10372                           
 10373                           ; BSR set to: 2
 10374                           ;boostercomms.c: 179: syncModeUCS = 4;
 10375  00853E  0E04               	movlw	4
 10376  008540  0102               	movlb	2	; () banked
 10377  008542  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10378                           
 10379                           ; BSR set to: 2
 10380                           ;boostercomms.c: 180: }
 10381                           ;boostercomms.c: 181: break;
 10382  008544  0012               	return	
 10383  008546                     i2l5689:
 10384                           
 10385                           ; BSR set to: 2
 10386                           ;boostercomms.c: 183: if(counterCommsStatusUSS == 1300){
 10387  008546  0E14               	movlw	20
 10388  008548  0102               	movlb	2	; () banked
 10389  00854A  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10390  00854C  E104               	bnz	i2u593_41
 10391  00854E  0E05               	movlw	5
 10392  008550  0102               	movlb	2	; () banked
 10393  008552  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10394  008554  A4D8               	btfss	status,2,c
 10395  008556                     i2u593_41:
 10396  008556  0012               	return	
 10397                           
 10398                           ; BSR set to: 2
 10399                           ;boostercomms.c: 184: ProcessRXFrame(recvFrameUSS, framesReceivedPhaseUCS+1);
 10400  008558  C341  F007         	movff	BoosterDataCommandComms@recvFrameUSS,ProcessRXFrame@recvFrameUS
 10401  00855C  C342  F008         	movff	BoosterDataCommandComms@recvFrameUSS+1,ProcessRXFrame@recvFrameUS+1
 10402  008560  0102               	movlb	2	; () banked
 10403  008562  2999               	incf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),w,b
 10404  008564  6E09               	movwf	ProcessRXFrame@frameNumUC,c
 10405  008566  EC01  F047         	call	_ProcessRXFrame	;wreg free
 10406                           
 10407                           ;boostercomms.c: 185: if(statusFlagsUSLG & 0b000000000000000000000100){
 10408  00856A  0102               	movlb	2	; () banked
 10409  00856C  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
 10410  00856E  D004               	goto	i2l5697
 10411                           
 10412                           ; BSR set to: 2
 10413                           ;boostercomms.c: 186: commsStatusUCG = 4;
 10414  008570  0E04               	movlw	4
 10415  008572  0102               	movlb	2	; () banked
 10416  008574  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10417                           
 10418                           ;boostercomms.c: 187: }else{
 10419  008576  D005               	goto	i2l5701
 10420  008578                     i2l5697:
 10421                           
 10422                           ; BSR set to: 2
 10423                           ;boostercomms.c: 188: commsStatusUCG = 6;
 10424  008578  0E06               	movlw	6
 10425  00857A  0102               	movlb	2	; () banked
 10426  00857C  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10427                           
 10428                           ; BSR set to: 2
 10429                           ;boostercomms.c: 189: SetCommsLow();
 10430  00857E  EC37  F05B         	call	_SetCommsLow	;wreg free
 10431  008582                     i2l5701:
 10432                           
 10433                           ;boostercomms.c: 190: }
 10434                           ;boostercomms.c: 191: counterCommsStatusUSS = 0;
 10435  008582  0E00               	movlw	0
 10436  008584  0102               	movlb	2	; () banked
 10437  008586  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 10438  008588  0E00               	movlw	0
 10439  00858A  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 10440                           
 10441                           ; BSR set to: 2
 10442                           ;boostercomms.c: 192: recvFrameUSS = 0;
 10443  00858C  0E00               	movlw	0
 10444  00858E  0103               	movlb	3	; () banked
 10445  008590  6F42               	movwf	(BoosterDataCommandComms@recvFrameUSS+1)& (0+255),b
 10446  008592  0E00               	movlw	0
 10447  008594  6F41               	movwf	BoosterDataCommandComms@recvFrameUSS& (0+255),b
 10448                           
 10449                           ; BSR set to: 3
 10450                           ;boostercomms.c: 193: framesReceivedPhaseUCS++;
 10451  008596  0102               	movlb	2	; () banked
 10452  008598  2B99               	incf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),f,b
 10453                           
 10454                           ; BSR set to: 2
 10455                           ;boostercomms.c: 194: statusFlagsUSLG &= ~0b000000000000001000000000;
 10456  00859A  0102               	movlb	2	; () banked
 10457  00859C  938B               	bcf	(_statusFlagsUSLG+1)& (0+255),1,b	;volatile
 10458                           
 10459                           ; BSR set to: 2
 10460                           ;boostercomms.c: 195: statusFlagsUSLG &= ~0b000000000000000100000000;
 10461  00859E  0102               	movlb	2	; () banked
 10462  0085A0  918B               	bcf	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 10463                           
 10464                           ; BSR set to: 2
 10465                           ;boostercomms.c: 196: statusFlagsUSLG &= ~0b000000000000010000000000;
 10466  0085A2  0102               	movlb	2	; () banked
 10467  0085A4  958B               	bcf	(_statusFlagsUSLG+1)& (0+255),2,b	;volatile
 10468                           
 10469                           ; BSR set to: 2
 10470                           ;boostercomms.c: 199: }
 10471                           
 10472                           ; BSR set to: 2
 10473                           ;boostercomms.c: 197: }
 10474                           ;boostercomms.c: 198: break;
 10475  0085A6  0012               	return	
 10476  0085A8                     i2l5715:
 10477  0085A8  0102               	movlb	2	; () banked
 10478  0085AA  5198               	movf	BoosterDataCommandComms@syncModeUCS& (0+255),w,b
 10479                           
 10480                           ; Switch size 1, requested type "space"
 10481                           ; Number of cases is 6, Range of values is 0 to 5
 10482                           ; switch strategies available:
 10483                           ; Name         Instructions Cycles
 10484                           ; simple_byte           19    10 (average)
 10485                           ;	Chosen strategy is simple_byte
 10486  0085AC  0A00               	xorlw	0	; case 0
 10487  0085AE  B4D8               	btfsc	status,2,c
 10488  0085B0  D6CB               	goto	i2l5611
 10489  0085B2  0A01               	xorlw	1	; case 1
 10490  0085B4  B4D8               	btfsc	status,2,c
 10491  0085B6  D6F4               	goto	i2l5625
 10492  0085B8  0A03               	xorlw	3	; case 2
 10493  0085BA  B4D8               	btfsc	status,2,c
 10494  0085BC  D742               	goto	i2l5647
 10495  0085BE  0A01               	xorlw	1	; case 3
 10496  0085C0  B4D8               	btfsc	status,2,c
 10497  0085C2  D785               	goto	i2l5671
 10498  0085C4  0A07               	xorlw	7	; case 4
 10499  0085C6  B4D8               	btfsc	status,2,c
 10500  0085C8  D7BE               	goto	i2l5689
 10501  0085CA  0A01               	xorlw	1	; case 5
 10502  0085CC  A4D8               	btfss	status,2,c
 10503                           
 10504                           ; BSR set to: 2
 10505                           ;boostercomms.c: 200: break;
 10506  0085CE  0012               	return	
 10507  0085D0  D6A3               	goto	i2l5601
 10508  0085D2                     i2l327:
 10509                           
 10510                           ; BSR set to: 2
 10511                           ;boostercomms.c: 202: if(!(statusFlagsUSLG & 0b000000000000000000001000)){
 10512  0085D2  0102               	movlb	2	; () banked
 10513  0085D4  B78A               	btfsc	_statusFlagsUSLG& (0+255),3,b	;volatile
 10514  0085D6  D006               	goto	i2l5721
 10515                           
 10516                           ; BSR set to: 2
 10517                           ;boostercomms.c: 203: statusFlagsUSLG |= 0b000000000000000000001000;
 10518  0085D8  0102               	movlb	2	; () banked
 10519  0085DA  878A               	bsf	_statusFlagsUSLG& (0+255),3,b	;volatile
 10520                           
 10521                           ; BSR set to: 2
 10522                           ;boostercomms.c: 204: framesReceivedPhaseUCS = 0;
 10523  0085DC  0E00               	movlw	0
 10524  0085DE  0102               	movlb	2	; () banked
 10525  0085E0  6F99               	movwf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),b
 10526                           
 10527                           ;boostercomms.c: 205: }else{
 10528  0085E2  0012               	return	
 10529  0085E4                     i2l5721:
 10530                           
 10531                           ; BSR set to: 2
 10532                           ;boostercomms.c: 206: if(framesReceivedPhaseUCS == 15){
 10533  0085E4  0E0F               	movlw	15
 10534  0085E6  0102               	movlb	2	; () banked
 10535  0085E8  1999               	xorwf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),w,b
 10536  0085EA  A4D8               	btfss	status,2,c
 10537  0085EC  D014               	goto	i2l5735
 10538                           
 10539                           ; BSR set to: 2
 10540                           ;boostercomms.c: 207: if(statusFlagsUSLG & 0b000000000000000010000000){
 10541  0085EE  0102               	movlb	2	; () banked
 10542  0085F0  AF8A               	btfss	_statusFlagsUSLG& (0+255),7,b	;volatile
 10543  0085F2  D00A               	goto	i2l5733
 10544                           
 10545                           ; BSR set to: 2
 10546                           ;boostercomms.c: 208: commsStatusUCG = 6;
 10547  0085F4  0E06               	movlw	6
 10548  0085F6  0102               	movlb	2	; () banked
 10549  0085F8  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10550                           
 10551                           ; BSR set to: 2
 10552                           ;boostercomms.c: 209: statusFlagsUSLG &= ~0b000000000000000000001000;
 10553  0085FA  0102               	movlb	2	; () banked
 10554  0085FC  978A               	bcf	_statusFlagsUSLG& (0+255),3,b	;volatile
 10555                           
 10556                           ; BSR set to: 2
 10557                           ;boostercomms.c: 210: statusFlagsUSLG &= ~0b000000000000000010000000;
 10558  0085FE  0102               	movlb	2	; () banked
 10559  008600  9F8A               	bcf	_statusFlagsUSLG& (0+255),7,b	;volatile
 10560                           
 10561                           ; BSR set to: 2
 10562                           ;boostercomms.c: 211: SetCommsLow();
 10563  008602  EC37  F05B         	call	_SetCommsLow	;wreg free
 10564                           
 10565                           ;boostercomms.c: 212: }else{
 10566  008606  0012               	return	
 10567  008608                     i2l5733:
 10568                           
 10569                           ;boostercomms.c: 213: commsStatusUCG = 5;
 10570  008608  0E05               	movlw	5
 10571  00860A  0102               	movlb	2	; () banked
 10572  00860C  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10573                           
 10574                           ;boostercomms.c: 214: framesReceivedPhaseUCS = 0;
 10575  00860E  0E00               	movlw	0
 10576  008610  0102               	movlb	2	; () banked
 10577  008612  6F99               	movwf	BoosterDataCommandComms@framesReceivedPhaseUCS& (0+255),b
 10578                           
 10579                           ; BSR set to: 2
 10580                           ;boostercomms.c: 215: }
 10581                           ;boostercomms.c: 216: }else{
 10582  008614  0012               	return	
 10583  008616                     i2l5735:
 10584                           
 10585                           ; BSR set to: 2
 10586                           ;boostercomms.c: 217: commsStatusUCG = 3;
 10587  008616  0E03               	movlw	3
 10588  008618  0102               	movlb	2	; () banked
 10589  00861A  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10590                           
 10591                           ;boostercomms.c: 218: syncModeUCS = 5;
 10592  00861C  0E05               	movlw	5
 10593  00861E  0102               	movlb	2	; () banked
 10594  008620  6F98               	movwf	BoosterDataCommandComms@syncModeUCS& (0+255),b
 10595                           
 10596                           ; BSR set to: 2
 10597                           ;boostercomms.c: 219: }
 10598                           ;boostercomms.c: 220: }
 10599                           ;boostercomms.c: 221: break;
 10600                           
 10601                           ; BSR set to: 2
 10602  008622  0012               	return	
 10603  008624                     i2l5737:
 10604                           
 10605                           ; BSR set to: 2
 10606                           ;boostercomms.c: 223: if(counterCommsStatusUSS == 2){
 10607  008624  0E02               	movlw	2
 10608  008626  0102               	movlb	2	; () banked
 10609  008628  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10610  00862A  0102               	movlb	2	; () banked
 10611  00862C  118E               	iorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10612  00862E  A4D8               	btfss	status,2,c
 10613  008630  D021               	goto	i2l5755
 10614                           
 10615                           ; BSR set to: 2
 10616                           ;boostercomms.c: 224: if(statusFlagsUSLG & 0b001000000000000000000000)
 10617  008632  0102               	movlb	2	; () banked
 10618  008634  BB8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
 10619  008636  0012               	return	
 10620                           
 10621                           ; BSR set to: 2
 10622                           ;boostercomms.c: 228: else if(!(statusFlagsUSLG & 0b000000000000000001000000) && (status
      +                          FlagsUSLG & 0b000000000000000000000010)&&!(statusFlagsUSLG & 0b000000000000000000100000)
      +                          &&!(statusFlagsUSLG & 0b000000000000000000010000)){
 10623                           
 10624                           ; BSR set to: 2
 10625  008638  0102               	movlb	2	; () banked
 10626  00863A  BD8A               	btfsc	_statusFlagsUSLG& (0+255),6,b	;volatile
 10627  00863C  D00B               	goto	i2l338
 10628                           
 10629                           ; BSR set to: 2
 10630  00863E  0102               	movlb	2	; () banked
 10631  008640  A38A               	btfss	_statusFlagsUSLG& (0+255),1,b	;volatile
 10632  008642  D008               	goto	i2l338
 10633                           
 10634                           ; BSR set to: 2
 10635  008644  0102               	movlb	2	; () banked
 10636  008646  BB8A               	btfsc	_statusFlagsUSLG& (0+255),5,b	;volatile
 10637  008648  D005               	goto	i2l338
 10638                           
 10639                           ; BSR set to: 2
 10640  00864A  0102               	movlb	2	; () banked
 10641  00864C  B98A               	btfsc	_statusFlagsUSLG& (0+255),4,b	;volatile
 10642  00864E  D002               	goto	i2l338
 10643                           
 10644                           ; BSR set to: 2
 10645                           ;boostercomms.c: 229: LATAbits.LATA6 = 1;
 10646  008650  8C89               	bsf	3977,6,c	;volatile
 10647                           
 10648                           ;boostercomms.c: 230: }
 10649  008652  0012               	return	
 10650  008654                     i2l338:
 10651                           
 10652                           ; BSR set to: 2
 10653                           ;boostercomms.c: 231: else if((statusFlagsUSLG & 0b000000000000000001000000) || (statusF
      +                          lagsUSLG & 0b000000000000000000010000)){
 10654  008654  0102               	movlb	2	; () banked
 10655  008656  BD8A               	btfsc	_statusFlagsUSLG& (0+255),6,b	;volatile
 10656  008658  D003               	goto	i2l342
 10657                           
 10658                           ; BSR set to: 2
 10659  00865A  0102               	movlb	2	; () banked
 10660  00865C  A98A               	btfss	_statusFlagsUSLG& (0+255),4,b	;volatile
 10661  00865E  D002               	goto	i2l340
 10662  008660                     i2l342:
 10663                           
 10664                           ; BSR set to: 2
 10665                           ;boostercomms.c: 232: LATBbits.LATB3 = 1;
 10666  008660  868A               	bsf	3978,3,c	;volatile
 10667                           
 10668                           ;boostercomms.c: 234: }
 10669  008662  0012               	return	
 10670  008664                     i2l340:
 10671                           
 10672                           ; BSR set to: 2
 10673                           ;boostercomms.c: 235: else if (!(statusFlagsUSLG & 0b000000000000000000000010)||(statusF
      +                          lagsUSLG & 0b000000000000000000100000)){
 10674  008664  0102               	movlb	2	; () banked
 10675  008666  A38A               	btfss	_statusFlagsUSLG& (0+255),1,b	;volatile
 10676  008668  D003               	goto	i2l346
 10677                           
 10678                           ; BSR set to: 2
 10679  00866A  0102               	movlb	2	; () banked
 10680  00866C  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
 10681  00866E  0012               	return	
 10682  008670                     i2l346:
 10683                           
 10684                           ; BSR set to: 2
 10685                           ;boostercomms.c: 236: LATCbits.LATC0 = 1;
 10686  008670  808B               	bsf	3979,0,c	;volatile
 10687                           
 10688                           ; BSR set to: 2
 10689                           ;boostercomms.c: 237: }
 10690                           ;boostercomms.c: 238: }else if(counterCommsStatusUSS == 500){
 10691                           
 10692                           ; BSR set to: 2
 10693                           
 10694                           ; BSR set to: 2
 10695                           
 10696                           ; BSR set to: 2
 10697  008672  0012               	return	
 10698  008674                     i2l5755:
 10699                           
 10700                           ; BSR set to: 2
 10701  008674  0EF4               	movlw	244
 10702  008676  0102               	movlb	2	; () banked
 10703  008678  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10704  00867A  E103               	bnz	i2u608_41
 10705  00867C  0102               	movlb	2	; () banked
 10706  00867E  058E               	decf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10707  008680  A4D8               	btfss	status,2,c
 10708  008682                     i2u608_41:
 10709  008682  0012               	return	
 10710                           
 10711                           ; BSR set to: 2
 10712                           ;boostercomms.c: 239: commsStatusUCG = 4;
 10713  008684  0E04               	movlw	4
 10714  008686  0102               	movlb	2	; () banked
 10715  008688  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10716                           
 10717                           ; BSR set to: 2
 10718                           ;boostercomms.c: 240: statusFlagsUSLG |= 0b000000000000000010000000;
 10719  00868A  0102               	movlb	2	; () banked
 10720  00868C  8F8A               	bsf	_statusFlagsUSLG& (0+255),7,b	;volatile
 10721                           
 10722                           ; BSR set to: 2
 10723                           ;boostercomms.c: 241: counterCommsStatusUSS = 0;
 10724  00868E  0E00               	movlw	0
 10725  008690  0102               	movlb	2	; () banked
 10726  008692  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 10727  008694  0E00               	movlw	0
 10728  008696  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 10729                           
 10730                           ; BSR set to: 2
 10731                           ;boostercomms.c: 242: if(!(statusFlagsUSLG & 0b001000000000000000000000)){
 10732  008698  0102               	movlb	2	; () banked
 10733  00869A  BB8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
 10734  00869C  0012               	return	
 10735                           
 10736                           ; BSR set to: 2
 10737                           ;boostercomms.c: 243: LATAbits.LATA6 = 0;
 10738  00869E  9C89               	bcf	3977,6,c	;volatile
 10739                           
 10740                           ;boostercomms.c: 244: LATBbits.LATB3 = 0;
 10741  0086A0  968A               	bcf	3978,3,c	;volatile
 10742                           
 10743                           ;boostercomms.c: 245: LATCbits.LATC0 = 0;
 10744  0086A2  908B               	bcf	3979,0,c	;volatile
 10745                           
 10746                           ; BSR set to: 2
 10747                           ;boostercomms.c: 246: }
 10748                           ;boostercomms.c: 247: }
 10749                           ;boostercomms.c: 248: break;
 10750                           
 10751                           ; BSR set to: 2
 10752                           
 10753                           ; BSR set to: 2
 10754  0086A4  0012               	return	
 10755  0086A6                     i2l5767:
 10756                           
 10757                           ; BSR set to: 2
 10758                           ;boostercomms.c: 250: if(counterCommsStatusUSS == 300){
 10759  0086A6  0E2C               	movlw	44
 10760  0086A8  0102               	movlb	2	; () banked
 10761  0086AA  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10762  0086AC  E103               	bnz	i2u610_41
 10763  0086AE  0102               	movlb	2	; () banked
 10764  0086B0  058E               	decf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10765  0086B2  A4D8               	btfss	status,2,c
 10766  0086B4                     i2u610_41:
 10767  0086B4  0012               	return	
 10768                           
 10769                           ; BSR set to: 2
 10770                           ;boostercomms.c: 251: commsStatusUCG = 7;
 10771  0086B6  0E07               	movlw	7
 10772  0086B8  0102               	movlb	2	; () banked
 10773  0086BA  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10774                           
 10775                           ;boostercomms.c: 252: counterCommsStatusUSS = 0;
 10776  0086BC  0E00               	movlw	0
 10777  0086BE  0102               	movlb	2	; () banked
 10778  0086C0  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 10779  0086C2  0E00               	movlw	0
 10780  0086C4  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 10781                           
 10782                           ; BSR set to: 2
 10783                           ;boostercomms.c: 253: SetCommsHigh();
 10784  0086C6  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
 10785                           
 10786                           ;boostercomms.c: 254: }
 10787                           ;boostercomms.c: 255: break;
 10788  0086CA  0012               	return	
 10789  0086CC                     i2l352:
 10790                           
 10791                           ; BSR set to: 2
 10792                           ;boostercomms.c: 257: if(!(statusFlagsUSLG & 0b000000000000000000001000)){
 10793  0086CC  0102               	movlb	2	; () banked
 10794  0086CE  B78A               	btfsc	_statusFlagsUSLG& (0+255),3,b	;volatile
 10795  0086D0  D021               	goto	i2l5791
 10796                           
 10797                           ; BSR set to: 2
 10798                           ;boostercomms.c: 258: statusFlagsUSLG |= 0b000000000000000000001000;
 10799  0086D2  0102               	movlb	2	; () banked
 10800  0086D4  878A               	bsf	_statusFlagsUSLG& (0+255),3,b	;volatile
 10801                           
 10802                           ; BSR set to: 2
 10803                           ;boostercomms.c: 259: if(statusFlagsUSLG & 0b001000000000000000000000)
 10804  0086D6  0102               	movlb	2	; () banked
 10805  0086D8  BB8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
 10806  0086DA  D014               	goto	i2l5787
 10807                           
 10808                           ; BSR set to: 2
 10809                           ;boostercomms.c: 263: else if((statusFlagsUSLG & 0b000000000000000001000000) || (statusF
      +                          lagsUSLG & 0b000000000000000000010000) || !(statusFlagsUSLG & 0b000000000000000000000010
      +                          )){
 10810                           
 10811                           ; BSR set to: 2
 10812  0086DC  0102               	movlb	2	; () banked
 10813  0086DE  BD8A               	btfsc	_statusFlagsUSLG& (0+255),6,b	;volatile
 10814  0086E0  D006               	goto	i2l358
 10815                           
 10816                           ; BSR set to: 2
 10817  0086E2  0102               	movlb	2	; () banked
 10818  0086E4  B98A               	btfsc	_statusFlagsUSLG& (0+255),4,b	;volatile
 10819  0086E6  D003               	goto	i2l358
 10820                           
 10821                           ; BSR set to: 2
 10822  0086E8  0102               	movlb	2	; () banked
 10823  0086EA  B38A               	btfsc	_statusFlagsUSLG& (0+255),1,b	;volatile
 10824  0086EC  D005               	goto	i2l356
 10825  0086EE                     i2l358:
 10826                           
 10827                           ; BSR set to: 2
 10828                           ;boostercomms.c: 265: if (statusFlagsUSLG & 0b000000000000000000000100){
 10829  0086EE  0102               	movlb	2	; () banked
 10830  0086F0  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
 10831  0086F2  D005               	goto	i2l5785
 10832                           
 10833                           ; BSR set to: 2
 10834                           ;boostercomms.c: 266: LATBbits.LATB3 = 1;
 10835  0086F4  868A               	bsf	3978,3,c	;volatile
 10836                           
 10837                           ;boostercomms.c: 267: }
 10838  0086F6  D006               	goto	i2l5787
 10839  0086F8                     i2l356:
 10840                           
 10841                           ; BSR set to: 2
 10842                           ;boostercomms.c: 271: else if(!(statusFlagsUSLG & 0b000000000000000000000100))
 10843  0086F8  0102               	movlb	2	; () banked
 10844  0086FA  B58A               	btfsc	_statusFlagsUSLG& (0+255),2,b	;volatile
 10845  0086FC  D002               	goto	i2l362
 10846  0086FE                     i2l5785:
 10847                           
 10848                           ; BSR set to: 2
 10849                           ;boostercomms.c: 272: LATCbits.LATC0 = 1;
 10850  0086FE  808B               	bsf	3979,0,c	;volatile
 10851  008700  D001               	goto	i2l5787
 10852  008702                     i2l362:
 10853                           
 10854                           ; BSR set to: 2
 10855                           ;boostercomms.c: 273: else{
 10856                           ;boostercomms.c: 274: LATAbits.LATA6 = 1;
 10857  008702  8C89               	bsf	3977,6,c	;volatile
 10858  008704                     i2l5787:
 10859                           
 10860                           ; BSR set to: 2
 10861                           ;boostercomms.c: 275: }
 10862                           ;boostercomms.c: 278: InitEarthLeakage();
 10863  008704  ECA9  F05A         	call	_InitEarthLeakage	;wreg free
 10864                           
 10865                           ;boostercomms.c: 279: counterELTTests =0;
 10866  008708  0E00               	movlw	0
 10867  00870A  0103               	movlb	3	; () banked
 10868  00870C  6F48               	movwf	(_counterELTTests+1)& (0+255),b
 10869  00870E  0E00               	movlw	0
 10870  008710  6F47               	movwf	_counterELTTests& (0+255),b
 10871                           
 10872                           ;boostercomms.c: 281: }else if(counterCommsStatusUSS >= 245 && counterELTTests <=5){
 10873  008712  0012               	return	
 10874  008714                     i2l5791:
 10875  008714  0102               	movlb	2	; () banked
 10876  008716  518E               	movf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10877  008718  E105               	bnz	i2u618_40
 10878  00871A  0EF5               	movlw	245
 10879  00871C  0102               	movlb	2	; () banked
 10880  00871E  5D8D               	subwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10881  008720  A0D8               	btfss	status,0,c
 10882  008722  D00B               	goto	i2l5797
 10883  008724                     i2u618_40:
 10884                           
 10885                           ; BSR set to: 2
 10886  008724  0103               	movlb	3	; () banked
 10887  008726  5148               	movf	(_counterELTTests+1)& (0+255),w,b
 10888  008728  E108               	bnz	i2l5797
 10889  00872A  0E06               	movlw	6
 10890  00872C  0103               	movlb	3	; () banked
 10891  00872E  5D47               	subwf	_counterELTTests& (0+255),w,b
 10892  008730  B0D8               	btfsc	status,0,c
 10893  008732  D003               	goto	i2l5797
 10894                           
 10895                           ; BSR set to: 3
 10896                           ;boostercomms.c: 282: ReadEarthLeakage();
 10897  008734  ECB2  F056         	call	_ReadEarthLeakage	;wreg free
 10898                           
 10899                           ;boostercomms.c: 283: }else if(counterCommsStatusUSS == 500){
 10900  008738  0012               	return	
 10901  00873A                     i2l5797:
 10902  00873A  0EF4               	movlw	244
 10903  00873C  0102               	movlb	2	; () banked
 10904  00873E  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10905  008740  E103               	bnz	i2u620_41
 10906  008742  0102               	movlb	2	; () banked
 10907  008744  058E               	decf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 10908  008746  A4D8               	btfss	status,2,c
 10909  008748                     i2u620_41:
 10910  008748  0012               	return	
 10911                           
 10912                           ; BSR set to: 2
 10913                           ;boostercomms.c: 284: statusFlagsUSLG &= ~0b000000000000000000001000;
 10914  00874A  0102               	movlb	2	; () banked
 10915  00874C  978A               	bcf	_statusFlagsUSLG& (0+255),3,b	;volatile
 10916                           
 10917                           ; BSR set to: 2
 10918                           ;boostercomms.c: 285: commsStatusUCG = 9;
 10919  00874E  0E09               	movlw	9
 10920  008750  0102               	movlb	2	; () banked
 10921  008752  6FA3               	movwf	_commsStatusUCG& (0+255),b
 10922                           
 10923                           ; BSR set to: 2
 10924                           ;boostercomms.c: 286: cableTestUCS = 0;
 10925  008754  0E00               	movlw	0
 10926  008756  0102               	movlb	2	; () banked
 10927  008758  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 10928                           
 10929                           ; BSR set to: 2
 10930                           ;boostercomms.c: 287: counterCommsStatusUSS = 0;
 10931  00875A  0E00               	movlw	0
 10932  00875C  0102               	movlb	2	; () banked
 10933  00875E  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 10934  008760  0E00               	movlw	0
 10935  008762  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 10936                           
 10937                           ; BSR set to: 2
 10938                           ;boostercomms.c: 288: if(!(statusFlagsUSLG & 0b001000000000000000000000)){
 10939  008764  0102               	movlb	2	; () banked
 10940  008766  BB8C               	btfsc	(_statusFlagsUSLG+2)& (0+255),5,b	;volatile
 10941  008768  0012               	return	
 10942                           
 10943                           ; BSR set to: 2
 10944                           ;boostercomms.c: 289: LATAbits.LATA6 = 0;
 10945  00876A  9C89               	bcf	3977,6,c	;volatile
 10946                           
 10947                           ;boostercomms.c: 290: LATBbits.LATB3 = 0;
 10948  00876C  968A               	bcf	3978,3,c	;volatile
 10949                           
 10950                           ;boostercomms.c: 291: LATCbits.LATC0 = 0;
 10951  00876E  908B               	bcf	3979,0,c	;volatile
 10952                           
 10953                           ; BSR set to: 2
 10954                           ;boostercomms.c: 292: }
 10955                           ;boostercomms.c: 302: }
 10956                           ;boostercomms.c: 303: break;
 10957                           
 10958                           ; BSR set to: 2
 10959                           
 10960                           ; BSR set to: 2
 10961                           
 10962                           ; BSR set to: 2
 10963  008770  0012               	return	
 10964  008772                     i2l5811:
 10965                           
 10966                           ; BSR set to: 2
 10967                           ;boostercomms.c: 305: counterCommsStatusUSS++;
 10968  008772  0102               	movlb	2	; () banked
 10969  008774  4B8D               	infsnz	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),f,b
 10970  008776  2B8E               	incf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),f,b
 10971                           
 10972                           ;boostercomms.c: 306: switch(cableFaultModeUCS){
 10973  008778  D064               	goto	i2l5857
 10974  00877A                     i2l5813:
 10975                           
 10976                           ; BSR set to: 2
 10977                           ;boostercomms.c: 308: counterCommsStatusUSS = 0;
 10978  00877A  0E00               	movlw	0
 10979  00877C  0102               	movlb	2	; () banked
 10980  00877E  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 10981  008780  0E00               	movlw	0
 10982  008782  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 10983                           
 10984                           ;boostercomms.c: 309: cableFaultModeUCS = 4;
 10985  008784  0E04               	movlw	4
 10986  008786  0102               	movlb	2	; () banked
 10987  008788  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 10988                           
 10989                           ;boostercomms.c: 310: break;
 10990  00878A  0012               	return	
 10991  00878C                     i2l5815:
 10992                           
 10993                           ; BSR set to: 2
 10994                           ;boostercomms.c: 312: if(counterCommsStatusUSS == 39500){
 10995  00878C  0E4C               	movlw	76
 10996  00878E  0102               	movlb	2	; () banked
 10997  008790  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 10998  008792  E104               	bnz	i2u622_41
 10999  008794  0E9A               	movlw	154
 11000  008796  0102               	movlb	2	; () banked
 11001  008798  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11002  00879A  A4D8               	btfss	status,2,c
 11003  00879C                     i2u622_41:
 11004  00879C  0012               	return	
 11005                           
 11006                           ; BSR set to: 2
 11007                           ;boostercomms.c: 313: cableFaultModeUCS = 6;
 11008  00879E  0E06               	movlw	6
 11009  0087A0  0102               	movlb	2	; () banked
 11010  0087A2  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11011                           
 11012                           ; BSR set to: 2
 11013                           ;boostercomms.c: 314: LATBbits.LATB3 = 1;
 11014  0087A4  868A               	bsf	3978,3,c	;volatile
 11015                           
 11016                           ; BSR set to: 2
 11017                           ;boostercomms.c: 315: }
 11018                           ;boostercomms.c: 316: break;
 11019  0087A6  0012               	return	
 11020  0087A8                     i2l5821:
 11021                           
 11022                           ; BSR set to: 2
 11023                           ;boostercomms.c: 318: if(counterCommsStatusUSS == 40000){
 11024  0087A8  0E40               	movlw	64
 11025  0087AA  0102               	movlb	2	; () banked
 11026  0087AC  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11027  0087AE  E104               	bnz	i2u623_41
 11028  0087B0  0E9C               	movlw	156
 11029  0087B2  0102               	movlb	2	; () banked
 11030  0087B4  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11031  0087B6  A4D8               	btfss	status,2,c
 11032  0087B8                     i2u623_41:
 11033  0087B8  0012               	return	
 11034                           
 11035                           ; BSR set to: 2
 11036                           ;boostercomms.c: 319: cableFaultModeUCS = 5;
 11037  0087BA  0E05               	movlw	5
 11038  0087BC  0102               	movlb	2	; () banked
 11039  0087BE  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11040                           
 11041                           ; BSR set to: 2
 11042                           ;boostercomms.c: 320: LATBbits.LATB3 = 0;
 11043  0087C0  968A               	bcf	3978,3,c	;volatile
 11044                           
 11045                           ;boostercomms.c: 321: counterCommsStatusUSS=0;
 11046  0087C2  0E00               	movlw	0
 11047  0087C4  0102               	movlb	2	; () banked
 11048  0087C6  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 11049  0087C8  0E00               	movlw	0
 11050  0087CA  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 11051                           
 11052                           ; BSR set to: 2
 11053                           ;boostercomms.c: 322: }
 11054                           ;boostercomms.c: 323: break;
 11055  0087CC  0012               	return	
 11056  0087CE                     i2l5827:
 11057                           
 11058                           ; BSR set to: 2
 11059                           ;boostercomms.c: 325: if(counterCommsStatusUSS == 35000)
 11060  0087CE  0EB8               	movlw	184
 11061  0087D0  0102               	movlb	2	; () banked
 11062  0087D2  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11063  0087D4  E104               	bnz	i2u624_41
 11064  0087D6  0E88               	movlw	136
 11065  0087D8  0102               	movlb	2	; () banked
 11066  0087DA  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11067  0087DC  A4D8               	btfss	status,2,c
 11068  0087DE                     i2u624_41:
 11069  0087DE  0012               	return	
 11070                           
 11071                           ; BSR set to: 2
 11072                           ;boostercomms.c: 326: cableFaultModeUCS = 1;
 11073  0087E0  0E01               	movlw	1
 11074  0087E2  0102               	movlb	2	; () banked
 11075  0087E4  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11076                           
 11077                           ; BSR set to: 2
 11078                           ;boostercomms.c: 327: break;
 11079  0087E6  0012               	return	
 11080  0087E8                     i2l5831:
 11081                           
 11082                           ; BSR set to: 2
 11083                           ;boostercomms.c: 329: SetCommsHigh();
 11084  0087E8  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
 11085                           
 11086                           ;boostercomms.c: 330: cableFaultModeUCS = 2;
 11087  0087EC  0E02               	movlw	2
 11088  0087EE  0102               	movlb	2	; () banked
 11089  0087F0  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11090                           
 11091                           ;boostercomms.c: 331: break;
 11092  0087F2  0012               	return	
 11093  0087F4                     i2l5835:
 11094                           
 11095                           ; BSR set to: 2
 11096                           ;boostercomms.c: 333: if(counterCommsStatusUSS == 40000){
 11097  0087F4  0E40               	movlw	64
 11098  0087F6  0102               	movlb	2	; () banked
 11099  0087F8  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11100  0087FA  E104               	bnz	i2u625_41
 11101  0087FC  0E9C               	movlw	156
 11102  0087FE  0102               	movlb	2	; () banked
 11103  008800  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11104  008802  A4D8               	btfss	status,2,c
 11105  008804                     i2u625_41:
 11106  008804  0012               	return	
 11107                           
 11108                           ; BSR set to: 2
 11109                           ;boostercomms.c: 334: CheckLineFault();
 11110  008806  EC24  F04E         	call	_CheckLineFault	;wreg free
 11111                           
 11112                           ;boostercomms.c: 335: cableFaultModeUCS = 3;
 11113  00880A  0E03               	movlw	3
 11114  00880C  0102               	movlb	2	; () banked
 11115  00880E  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11116                           
 11117                           ; BSR set to: 2
 11118                           ;boostercomms.c: 336: LATBbits.LATB3 = 1;
 11119  008810  868A               	bsf	3978,3,c	;volatile
 11120                           
 11121                           ; BSR set to: 2
 11122                           ;boostercomms.c: 337: }
 11123                           ;boostercomms.c: 338: break;
 11124  008812  0012               	return	
 11125  008814                     i2l5843:
 11126                           
 11127                           ; BSR set to: 2
 11128                           ;boostercomms.c: 340: if(counterCommsStatusUSS == 40500){
 11129  008814  0E34               	movlw	52
 11130  008816  0102               	movlb	2	; () banked
 11131  008818  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11132  00881A  E104               	bnz	i2u626_41
 11133  00881C  0E9E               	movlw	158
 11134  00881E  0102               	movlb	2	; () banked
 11135  008820  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11136  008822  A4D8               	btfss	status,2,c
 11137  008824                     i2u626_41:
 11138  008824  0012               	return	
 11139                           
 11140                           ; BSR set to: 2
 11141                           ;boostercomms.c: 341: LATBbits.LATB3 = 0;
 11142  008826  968A               	bcf	3978,3,c	;volatile
 11143                           
 11144                           ; BSR set to: 2
 11145                           ;boostercomms.c: 342: cableFaultModeUCS = 0;
 11146  008828  0E00               	movlw	0
 11147  00882A  0102               	movlb	2	; () banked
 11148  00882C  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11149                           
 11150                           ; BSR set to: 2
 11151                           ;boostercomms.c: 343: if(statusFlagsUSLG & 0b010000000000000000000000)
 11152  00882E  0102               	movlb	2	; () banked
 11153  008830  AD8C               	btfss	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
 11154  008832  D003               	goto	i2l5853
 11155                           
 11156                           ; BSR set to: 2
 11157                           ;boostercomms.c: 344: SetCommsLow();
 11158  008834  EC37  F05B         	call	_SetCommsLow	;wreg free
 11159  008838  0012               	return	
 11160  00883A                     i2l5853:
 11161                           
 11162                           ;boostercomms.c: 345: else
 11163                           ;boostercomms.c: 346: commsStatusUCG = 0;
 11164  00883A  0E00               	movlw	0
 11165  00883C  0102               	movlb	2	; () banked
 11166  00883E  6FA3               	movwf	_commsStatusUCG& (0+255),b
 11167                           
 11168                           ; BSR set to: 2
 11169                           ;boostercomms.c: 350: }
 11170                           
 11171                           ; BSR set to: 2
 11172                           ;boostercomms.c: 348: }
 11173                           ;boostercomms.c: 349: break;
 11174                           
 11175                           ; BSR set to: 2
 11176  008840  0012               	return	
 11177  008842                     i2l5857:
 11178                           
 11179                           ; BSR set to: 2
 11180  008842  0102               	movlb	2	; () banked
 11181  008844  5195               	movf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),w,b
 11182                           
 11183                           ; Switch size 1, requested type "space"
 11184                           ; Number of cases is 7, Range of values is 0 to 6
 11185                           ; switch strategies available:
 11186                           ; Name         Instructions Cycles
 11187                           ; simple_byte           22    12 (average)
 11188                           ;	Chosen strategy is simple_byte
 11189  008846  0A00               	xorlw	0	; case 0
 11190  008848  B4D8               	btfsc	status,2,c
 11191  00884A  D797               	goto	i2l5813
 11192  00884C  0A01               	xorlw	1	; case 1
 11193  00884E  B4D8               	btfsc	status,2,c
 11194  008850  D7CB               	goto	i2l5831
 11195  008852  0A03               	xorlw	3	; case 2
 11196  008854  B4D8               	btfsc	status,2,c
 11197  008856  D7CE               	goto	i2l5835
 11198  008858  0A01               	xorlw	1	; case 3
 11199  00885A  B4D8               	btfsc	status,2,c
 11200  00885C  D7DB               	goto	i2l5843
 11201  00885E  0A07               	xorlw	7	; case 4
 11202  008860  B4D8               	btfsc	status,2,c
 11203  008862  D794               	goto	i2l5815
 11204  008864  0A01               	xorlw	1	; case 5
 11205  008866  B4D8               	btfsc	status,2,c
 11206  008868  D7B2               	goto	i2l5827
 11207  00886A  0A03               	xorlw	3	; case 6
 11208  00886C  A4D8               	btfss	status,2,c
 11209                           
 11210                           ; BSR set to: 2
 11211                           ;boostercomms.c: 351: break;
 11212  00886E  0012               	return	
 11213  008870  D79B               	goto	i2l5821
 11214  008872                     i2l5859:
 11215                           
 11216                           ; BSR set to: 2
 11217                           ;boostercomms.c: 353: counterCommsStatusUSS++;
 11218  008872  0102               	movlb	2	; () banked
 11219  008874  4B8D               	infsnz	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),f,b
 11220  008876  2B8E               	incf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),f,b
 11221                           
 11222                           ;boostercomms.c: 354: switch(cableTestUCS){
 11223  008878  D093               	goto	i2l5935
 11224  00887A                     i2l5861:
 11225                           
 11226                           ; BSR set to: 2
 11227                           ;boostercomms.c: 356: if(counterCommsStatusUSS == 1000){
 11228  00887A  0EE8               	movlw	232
 11229  00887C  0102               	movlb	2	; () banked
 11230  00887E  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11231  008880  E104               	bnz	i2u628_41
 11232  008882  0E03               	movlw	3
 11233  008884  0102               	movlb	2	; () banked
 11234  008886  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11235  008888  A4D8               	btfss	status,2,c
 11236  00888A                     i2u628_41:
 11237  00888A  0012               	return	
 11238                           
 11239                           ; BSR set to: 2
 11240                           ;boostercomms.c: 357: if((statusFlagsUSLG & 0b000000000000000000000100)){
 11241  00888C  0102               	movlb	2	; () banked
 11242  00888E  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
 11243  008890  D004               	goto	i2l5869
 11244                           
 11245                           ; BSR set to: 2
 11246                           ;boostercomms.c: 358: ReadKeySwitch();
 11247  008892  EC62  F059         	call	_ReadKeySwitch	;wreg free
 11248                           
 11249                           ;boostercomms.c: 359: CheckLineFault();
 11250  008896  EC24  F04E         	call	_CheckLineFault	;wreg free
 11251  00889A                     i2l5869:
 11252                           
 11253                           ;boostercomms.c: 360: }
 11254                           ;boostercomms.c: 361: if ((statusFlagsUSLG & 0b000000000000000000100000) && ISO_COUNTER 
      +                          == 0){
 11255  00889A  0102               	movlb	2	; () banked
 11256  00889C  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
 11257  00889E  D010               	goto	i2l391
 11258                           
 11259                           ; BSR set to: 2
 11260  0088A0  0102               	movlb	2	; () banked
 11261  0088A2  51A1               	movf	_ISO_COUNTER& (0+255),w,b
 11262  0088A4  A4D8               	btfss	status,2,c
 11263  0088A6  D00C               	goto	i2l391
 11264                           
 11265                           ; BSR set to: 2
 11266                           ;boostercomms.c: 362: counterCommsStatusUSS = 0;
 11267  0088A8  0E00               	movlw	0
 11268  0088AA  0102               	movlb	2	; () banked
 11269  0088AC  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 11270  0088AE  0E00               	movlw	0
 11271  0088B0  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 11272                           
 11273                           ;boostercomms.c: 363: cableTestUCS = 1;
 11274  0088B2  0E01               	movlw	1
 11275  0088B4  0102               	movlb	2	; () banked
 11276  0088B6  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 11277                           
 11278                           ; BSR set to: 2
 11279                           ;boostercomms.c: 364: SetCommsLow();
 11280  0088B8  EC37  F05B         	call	_SetCommsLow	;wreg free
 11281                           
 11282                           ;boostercomms.c: 365: LATDbits.LATD7 = 0;
 11283  0088BC  9E8C               	bcf	3980,7,c	;volatile
 11284                           
 11285                           ;boostercomms.c: 366: }
 11286  0088BE  0012               	return	
 11287  0088C0                     i2l391:
 11288                           
 11289                           ; BSR set to: 2
 11290                           ;boostercomms.c: 367: else if(statusFlagsUSLG & 0b010000000000000000000000){
 11291  0088C0  0102               	movlb	2	; () banked
 11292  0088C2  AD8C               	btfss	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
 11293  0088C4  D009               	goto	i2l5885
 11294                           
 11295                           ; BSR set to: 2
 11296                           ;boostercomms.c: 368: SetCommsLow();
 11297  0088C6  EC37  F05B         	call	_SetCommsLow	;wreg free
 11298                           
 11299                           ;boostercomms.c: 369: commsStatusUCG = 8;
 11300  0088CA  0E08               	movlw	8
 11301  0088CC  0102               	movlb	2	; () banked
 11302  0088CE  6FA3               	movwf	_commsStatusUCG& (0+255),b
 11303                           
 11304                           ; BSR set to: 2
 11305                           ;boostercomms.c: 370: cableFaultModeUCS = 0;
 11306  0088D0  0E00               	movlw	0
 11307  0088D2  0102               	movlb	2	; () banked
 11308  0088D4  6F95               	movwf	BoosterDataCommandComms@cableFaultModeUCS& (0+255),b
 11309                           
 11310                           ;boostercomms.c: 371: }
 11311  0088D6  0012               	return	
 11312  0088D8                     i2l5885:
 11313                           
 11314                           ; BSR set to: 2
 11315                           ;boostercomms.c: 372: else
 11316                           ;boostercomms.c: 373: commsStatusUCG = 0;
 11317  0088D8  0E00               	movlw	0
 11318  0088DA  0102               	movlb	2	; () banked
 11319  0088DC  6FA3               	movwf	_commsStatusUCG& (0+255),b
 11320                           
 11321                           ; BSR set to: 2
 11322                           ;boostercomms.c: 374: }
 11323                           ;boostercomms.c: 375: break;
 11324                           
 11325                           ; BSR set to: 2
 11326                           
 11327                           ; BSR set to: 2
 11328  0088DE  0012               	return	
 11329  0088E0                     i2l5887:
 11330                           
 11331                           ; BSR set to: 2
 11332                           ;boostercomms.c: 377: if(counterCommsStatusUSS == 39600){
 11333  0088E0  0EB0               	movlw	176
 11334  0088E2  0102               	movlb	2	; () banked
 11335  0088E4  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11336  0088E6  E116               	bnz	i2l5901
 11337  0088E8  0E9A               	movlw	154
 11338  0088EA  0102               	movlb	2	; () banked
 11339  0088EC  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11340  0088EE  A4D8               	btfss	status,2,c
 11341  0088F0  D011               	goto	i2l5901
 11342                           
 11343                           ; BSR set to: 2
 11344                           ;boostercomms.c: 378: ReadKeySwitch();
 11345  0088F2  EC62  F059         	call	_ReadKeySwitch	;wreg free
 11346                           
 11347                           ;boostercomms.c: 379: if((statusFlagsUSLG & 0b000000000000000000100000))
 11348  0088F6  0102               	movlb	2	; () banked
 11349  0088F8  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
 11350  0088FA  D002               	goto	i2l5895
 11351                           
 11352                           ; BSR set to: 2
 11353                           ;boostercomms.c: 380: LATAbits.LATA6 = 1;
 11354  0088FC  8C89               	bsf	3977,6,c	;volatile
 11355  0088FE  0012               	return	
 11356  008900                     i2l5895:
 11357                           
 11358                           ; BSR set to: 2
 11359                           ;boostercomms.c: 381: else{
 11360                           ;boostercomms.c: 382: commsStatusUCG = 0;
 11361  008900  0E00               	movlw	0
 11362  008902  0102               	movlb	2	; () banked
 11363  008904  6FA3               	movwf	_commsStatusUCG& (0+255),b
 11364                           
 11365                           ;boostercomms.c: 383: cableTestUCS = 0;
 11366  008906  0E00               	movlw	0
 11367  008908  0102               	movlb	2	; () banked
 11368  00890A  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 11369                           
 11370                           ; BSR set to: 2
 11371                           ;boostercomms.c: 384: LATDbits.LATD7 = 1;
 11372  00890C  8E8C               	bsf	3980,7,c	;volatile
 11373                           
 11374                           ; BSR set to: 2
 11375                           ;boostercomms.c: 385: SetCommsHigh();
 11376  00890E  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
 11377                           
 11378                           ;boostercomms.c: 386: }
 11379                           ;boostercomms.c: 387: }
 11380  008912  0012               	return	
 11381  008914                     i2l5901:
 11382                           
 11383                           ;boostercomms.c: 388: else if(counterCommsStatusUSS == 40000){
 11384  008914  0E40               	movlw	64
 11385  008916  0102               	movlb	2	; () banked
 11386  008918  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11387  00891A  E104               	bnz	i2u635_41
 11388  00891C  0E9C               	movlw	156
 11389  00891E  0102               	movlb	2	; () banked
 11390  008920  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11391  008922  A4D8               	btfss	status,2,c
 11392  008924                     i2u635_41:
 11393  008924  0012               	return	
 11394                           
 11395                           ; BSR set to: 2
 11396                           ;boostercomms.c: 389: LATAbits.LATA6 = 0;
 11397  008926  9C89               	bcf	3977,6,c	;volatile
 11398                           
 11399                           ; BSR set to: 2
 11400                           ;boostercomms.c: 390: counterCommsStatusUSS = 0;
 11401  008928  0E00               	movlw	0
 11402  00892A  0102               	movlb	2	; () banked
 11403  00892C  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 11404  00892E  0E00               	movlw	0
 11405  008930  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 11406                           
 11407                           ;boostercomms.c: 391: cableTestUCS = 3;
 11408  008932  0E03               	movlw	3
 11409  008934  0102               	movlb	2	; () banked
 11410  008936  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 11411                           
 11412                           ; BSR set to: 2
 11413                           ;boostercomms.c: 392: }
 11414                           ;boostercomms.c: 393: break;
 11415                           
 11416                           ; BSR set to: 2
 11417  008938  0012               	return	
 11418  00893A                     i2l5907:
 11419                           
 11420                           ; BSR set to: 2
 11421                           ;boostercomms.c: 395: if(counterCommsStatusUSS == 39600){
 11422  00893A  0EB0               	movlw	176
 11423  00893C  0102               	movlb	2	; () banked
 11424  00893E  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11425  008940  E11A               	bnz	i2l5923
 11426  008942  0E9A               	movlw	154
 11427  008944  0102               	movlb	2	; () banked
 11428  008946  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11429  008948  A4D8               	btfss	status,2,c
 11430  00894A  D015               	goto	i2l5923
 11431                           
 11432                           ; BSR set to: 2
 11433                           ;boostercomms.c: 396: ReadKeySwitch();
 11434  00894C  EC62  F059         	call	_ReadKeySwitch	;wreg free
 11435                           
 11436                           ;boostercomms.c: 397: if((statusFlagsUSLG & 0b000000000000000000100000) && (ISO_COUNTER 
      +                          < 15))
 11437  008950  0102               	movlb	2	; () banked
 11438  008952  AB8A               	btfss	_statusFlagsUSLG& (0+255),5,b	;volatile
 11439  008954  D006               	goto	i2l5917
 11440                           
 11441                           ; BSR set to: 2
 11442  008956  0E0F               	movlw	15
 11443  008958  0102               	movlb	2	; () banked
 11444  00895A  61A1               	cpfslt	_ISO_COUNTER& (0+255),b
 11445  00895C  D002               	goto	i2l5917
 11446                           
 11447                           ; BSR set to: 2
 11448                           ;boostercomms.c: 398: LATCbits.LATC0 = 1;
 11449  00895E  808B               	bsf	3979,0,c	;volatile
 11450  008960  0012               	return	
 11451  008962                     i2l5917:
 11452                           
 11453                           ; BSR set to: 2
 11454                           ;boostercomms.c: 399: else{
 11455                           ;boostercomms.c: 400: commsStatusUCG = 0;
 11456  008962  0E00               	movlw	0
 11457  008964  0102               	movlb	2	; () banked
 11458  008966  6FA3               	movwf	_commsStatusUCG& (0+255),b
 11459                           
 11460                           ;boostercomms.c: 401: cableTestUCS = 0;
 11461  008968  0E00               	movlw	0
 11462  00896A  0102               	movlb	2	; () banked
 11463  00896C  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 11464                           
 11465                           ; BSR set to: 2
 11466                           ;boostercomms.c: 402: LATDbits.LATD7 = 1;
 11467  00896E  8E8C               	bsf	3980,7,c	;volatile
 11468                           
 11469                           ; BSR set to: 2
 11470                           ;boostercomms.c: 403: SetCommsHigh();
 11471  008970  EC34  F05B         	call	i2_SetCommsHigh	;wreg free
 11472                           
 11473                           ;boostercomms.c: 404: }
 11474                           ;boostercomms.c: 405: }
 11475  008974  0012               	return	
 11476  008976                     i2l5923:
 11477                           
 11478                           ;boostercomms.c: 406: else if(counterCommsStatusUSS == 40000){
 11479  008976  0E40               	movlw	64
 11480  008978  0102               	movlb	2	; () banked
 11481  00897A  198D               	xorwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),w,b
 11482  00897C  E13E               	bnz	i2l269
 11483  00897E  0E9C               	movlw	156
 11484  008980  0102               	movlb	2	; () banked
 11485  008982  198E               	xorwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),w,b
 11486  008984  A4D8               	btfss	status,2,c
 11487  008986  0012               	return	
 11488                           
 11489                           ; BSR set to: 2
 11490                           ;boostercomms.c: 407: LATCbits.LATC0 = 0;
 11491  008988  908B               	bcf	3979,0,c	;volatile
 11492                           
 11493                           ; BSR set to: 2
 11494                           ;boostercomms.c: 408: cableTestUCS = 1;
 11495  00898A  0E01               	movlw	1
 11496  00898C  0102               	movlb	2	; () banked
 11497  00898E  6F94               	movwf	BoosterDataCommandComms@cableTestUCS& (0+255),b
 11498                           
 11499                           ; BSR set to: 2
 11500                           ;boostercomms.c: 409: ISO_COUNTER++;
 11501  008990  0102               	movlb	2	; () banked
 11502  008992  2BA1               	incf	_ISO_COUNTER& (0+255),f,b
 11503                           
 11504                           ; BSR set to: 2
 11505                           ;boostercomms.c: 410: counterCommsStatusUSS = 0;
 11506  008994  0E00               	movlw	0
 11507  008996  0102               	movlb	2	; () banked
 11508  008998  6F8E               	movwf	(BoosterDataCommandComms@counterCommsStatusUSS+1)& (0+255),b
 11509  00899A  0E00               	movlw	0
 11510  00899C  6F8D               	movwf	BoosterDataCommandComms@counterCommsStatusUSS& (0+255),b
 11511                           
 11512                           ; BSR set to: 2
 11513                           ;boostercomms.c: 413: }
 11514                           
 11515                           ; BSR set to: 2
 11516                           ;boostercomms.c: 411: }
 11517                           ;boostercomms.c: 412: break;
 11518                           
 11519                           ; BSR set to: 2
 11520  00899E  0012               	return	
 11521  0089A0                     i2l5935:
 11522                           
 11523                           ; BSR set to: 2
 11524  0089A0  0102               	movlb	2	; () banked
 11525  0089A2  5194               	movf	BoosterDataCommandComms@cableTestUCS& (0+255),w,b
 11526                           
 11527                           ; Switch size 1, requested type "space"
 11528                           ; Number of cases is 3, Range of values is 0 to 3
 11529                           ; switch strategies available:
 11530                           ; Name         Instructions Cycles
 11531                           ; simple_byte           10     6 (average)
 11532                           ;	Chosen strategy is simple_byte
 11533  0089A4  0A00               	xorlw	0	; case 0
 11534  0089A6  B4D8               	btfsc	status,2,c
 11535  0089A8  D768               	goto	i2l5861
 11536  0089AA  0A01               	xorlw	1	; case 1
 11537  0089AC  B4D8               	btfsc	status,2,c
 11538  0089AE  D798               	goto	i2l5887
 11539  0089B0  0A02               	xorlw	2	; case 3
 11540  0089B2  A4D8               	btfss	status,2,c
 11541                           
 11542                           ; BSR set to: 2
 11543                           ;boostercomms.c: 415: }
 11544                           
 11545                           ; BSR set to: 2
 11546                           ;boostercomms.c: 414: break;
 11547  0089B4  0012               	return	
 11548  0089B6  D7C1               	goto	i2l5907
 11549  0089B8                     i2l5939:
 11550  0089B8  0102               	movlb	2	; () banked
 11551  0089BA  51A3               	movf	_commsStatusUCG& (0+255),w,b
 11552                           
 11553                           ; Switch size 1, requested type "space"
 11554                           ; Number of cases is 10, Range of values is 0 to 9
 11555                           ; switch strategies available:
 11556                           ; Name         Instructions Cycles
 11557                           ; simple_byte           31    16 (average)
 11558                           ;	Chosen strategy is simple_byte
 11559  0089BC  0A00               	xorlw	0	; case 0
 11560  0089BE  B4D8               	btfsc	status,2,c
 11561  0089C0  0012               	return	
 11562  0089C2  0A01               	xorlw	1	; case 1
 11563  0089C4  B4D8               	btfsc	status,2,c
 11564  0089C6  D410               	goto	i2l270
 11565  0089C8  0A03               	xorlw	3	; case 2
 11566  0089CA  B4D8               	btfsc	status,2,c
 11567  0089CC  D43B               	goto	i2l279
 11568  0089CE  0A01               	xorlw	1	; case 3
 11569  0089D0  B4D8               	btfsc	status,2,c
 11570  0089D2  D49A               	goto	i2l5599
 11571  0089D4  0A07               	xorlw	7	; case 4
 11572  0089D6  B4D8               	btfsc	status,2,c
 11573  0089D8  D5FC               	goto	i2l327
 11574  0089DA  0A01               	xorlw	1	; case 5
 11575  0089DC  B4D8               	btfsc	status,2,c
 11576  0089DE  D622               	goto	i2l5737
 11577  0089E0  0A03               	xorlw	3	; case 6
 11578  0089E2  B4D8               	btfsc	status,2,c
 11579  0089E4  D660               	goto	i2l5767
 11580  0089E6  0A01               	xorlw	1	; case 7
 11581  0089E8  B4D8               	btfsc	status,2,c
 11582  0089EA  D670               	goto	i2l352
 11583  0089EC  0A0F               	xorlw	15	; case 8
 11584  0089EE  B4D8               	btfsc	status,2,c
 11585  0089F0  D6C0               	goto	i2l5811
 11586  0089F2  0A01               	xorlw	1	; case 9
 11587  0089F4  A4D8               	btfss	status,2,c
 11588  0089F6  0012               	return	
 11589  0089F8  D73C               	goto	i2l5859
 11590  0089FA                     i2l269:
 11591  0089FA  0012               	return		;funcret
 11592  0089FC                     __end_of_BoosterDataCommandComms:
 11593                           	opt stack 0
 11594                           pclatu	equ	0xFFB
 11595                           pclath	equ	0xFFA
 11596                           tblptru	equ	0xFF8
 11597                           tblptrh	equ	0xFF7
 11598                           tblptrl	equ	0xFF6
 11599                           tablat	equ	0xFF5
 11600                           prodh	equ	0xFF4
 11601                           prodl	equ	0xFF3
 11602                           intcon	equ	0xFF2
 11603                           postinc0	equ	0xFEE
 11604                           fsr0h	equ	0xFEA
 11605                           fsr0l	equ	0xFE9
 11606                           wreg	equ	0xFE8
 11607                           indf1	equ	0xFE7
 11608                           postinc1	equ	0xFE6
 11609                           postdec1	equ	0xFE5
 11610                           fsr1h	equ	0xFE2
 11611                           fsr1l	equ	0xFE1
 11612                           indf2	equ	0xFDF
 11613                           postinc2	equ	0xFDE
 11614                           postdec2	equ	0xFDD
 11615                           fsr2h	equ	0xFDA
 11616                           fsr2l	equ	0xFD9
 11617                           status	equ	0xFD8
 11618                           
 11619 ;; *************** function i2_SetCommsHigh *****************
 11620 ;; Defined at:
 11621 ;;		line 488 in file "boostercomms.c"
 11622 ;; Parameters:    Size  Location     Type
 11623 ;;		None
 11624 ;; Auto vars:     Size  Location     Type
 11625 ;;		None
 11626 ;; Return value:  Size  Location     Type
 11627 ;;                  1    wreg      void 
 11628 ;; Registers used:
 11629 ;;		None
 11630 ;; Tracked objects:
 11631 ;;		On entry : 0/0
 11632 ;;		On exit  : 0/0
 11633 ;;		Unchanged: 0/0
 11634 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 11635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11639 ;;Total ram usage:        0 bytes
 11640 ;; Hardware stack levels used:    1
 11641 ;; This function calls:
 11642 ;;		Nothing
 11643 ;; This function is called by:
 11644 ;;		_BoosterDataCommandComms
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648                           	psect	text59
 11649  00B668                     __ptext59:
 11650                           	opt stack 0
 11651  00B668                     i2_SetCommsHigh:
 11652                           	opt stack 22
 11653                           
 11654                           ;boostercomms.c: 489: LATBbits.LATB2 = 0;
 11655                           
 11656                           ;incstack = 0
 11657  00B668  948A               	bcf	3978,2,c	;volatile
 11658                           
 11659                           ;boostercomms.c: 490: LATAbits.LATA2 = 1;
 11660  00B66A  8489               	bsf	3977,2,c	;volatile
 11661  00B66C  0012               	return		;funcret
 11662  00B66E                     __end_ofi2_SetCommsHigh:
 11663                           	opt stack 0
 11664                           pclatu	equ	0xFFB
 11665                           pclath	equ	0xFFA
 11666                           tblptru	equ	0xFF8
 11667                           tblptrh	equ	0xFF7
 11668                           tblptrl	equ	0xFF6
 11669                           tablat	equ	0xFF5
 11670                           prodh	equ	0xFF4
 11671                           prodl	equ	0xFF3
 11672                           intcon	equ	0xFF2
 11673                           postinc0	equ	0xFEE
 11674                           fsr0h	equ	0xFEA
 11675                           fsr0l	equ	0xFE9
 11676                           wreg	equ	0xFE8
 11677                           indf1	equ	0xFE7
 11678                           postinc1	equ	0xFE6
 11679                           postdec1	equ	0xFE5
 11680                           fsr1h	equ	0xFE2
 11681                           fsr1l	equ	0xFE1
 11682                           indf2	equ	0xFDF
 11683                           postinc2	equ	0xFDE
 11684                           postdec2	equ	0xFDD
 11685                           fsr2h	equ	0xFDA
 11686                           fsr2l	equ	0xFD9
 11687                           status	equ	0xFD8
 11688                           
 11689 ;; *************** function _SetCommsLow *****************
 11690 ;; Defined at:
 11691 ;;		line 483 in file "boostercomms.c"
 11692 ;; Parameters:    Size  Location     Type
 11693 ;;		None
 11694 ;; Auto vars:     Size  Location     Type
 11695 ;;		None
 11696 ;; Return value:  Size  Location     Type
 11697 ;;                  1    wreg      void 
 11698 ;; Registers used:
 11699 ;;		None
 11700 ;; Tracked objects:
 11701 ;;		On entry : 0/0
 11702 ;;		On exit  : 0/0
 11703 ;;		Unchanged: 0/0
 11704 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 11705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11709 ;;Total ram usage:        0 bytes
 11710 ;; Hardware stack levels used:    1
 11711 ;; This function calls:
 11712 ;;		Nothing
 11713 ;; This function is called by:
 11714 ;;		_BoosterDataCommandComms
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718                           	psect	text60
 11719  00B66E                     __ptext60:
 11720                           	opt stack 0
 11721  00B66E                     _SetCommsLow:
 11722                           	opt stack 22
 11723                           
 11724                           ;boostercomms.c: 484: LATAbits.LATA2 = 0;
 11725                           
 11726                           ;incstack = 0
 11727  00B66E  9489               	bcf	3977,2,c	;volatile
 11728                           
 11729                           ;boostercomms.c: 485: LATBbits.LATB2 = 1;
 11730  00B670  848A               	bsf	3978,2,c	;volatile
 11731  00B672  0012               	return		;funcret
 11732  00B674                     __end_of_SetCommsLow:
 11733                           	opt stack 0
 11734                           pclatu	equ	0xFFB
 11735                           pclath	equ	0xFFA
 11736                           tblptru	equ	0xFF8
 11737                           tblptrh	equ	0xFF7
 11738                           tblptrl	equ	0xFF6
 11739                           tablat	equ	0xFF5
 11740                           prodh	equ	0xFF4
 11741                           prodl	equ	0xFF3
 11742                           intcon	equ	0xFF2
 11743                           postinc0	equ	0xFEE
 11744                           fsr0h	equ	0xFEA
 11745                           fsr0l	equ	0xFE9
 11746                           wreg	equ	0xFE8
 11747                           indf1	equ	0xFE7
 11748                           postinc1	equ	0xFE6
 11749                           postdec1	equ	0xFE5
 11750                           fsr1h	equ	0xFE2
 11751                           fsr1l	equ	0xFE1
 11752                           indf2	equ	0xFDF
 11753                           postinc2	equ	0xFDE
 11754                           postdec2	equ	0xFDD
 11755                           fsr2h	equ	0xFDA
 11756                           fsr2l	equ	0xFD9
 11757                           status	equ	0xFD8
 11758                           
 11759 ;; *************** function _ReadKeySwitch *****************
 11760 ;; Defined at:
 11761 ;;		line 95 in file "peripherals.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;		None
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;  keySwitchVal    2    3[COMRAM] unsigned short 
 11766 ;; Return value:  Size  Location     Type
 11767 ;;                  1    wreg      void 
 11768 ;; Registers used:
 11769 ;;		wreg, status,2, status,0, cstack
 11770 ;; Tracked objects:
 11771 ;;		On entry : 0/0
 11772 ;;		On exit  : 0/0
 11773 ;;		Unchanged: 0/0
 11774 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 11775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11779 ;;Total ram usage:        2 bytes
 11780 ;; Hardware stack levels used:    1
 11781 ;; Hardware stack levels required when called:    1
 11782 ;; This function calls:
 11783 ;;		_ReadAnalogVoltage
 11784 ;; This function is called by:
 11785 ;;		_BoosterDataCommandComms
 11786 ;; This function uses a non-reentrant model
 11787 ;;
 11788                           
 11789                           	psect	text61
 11790  00B2C4                     __ptext61:
 11791                           	opt stack 0
 11792  00B2C4                     _ReadKeySwitch:
 11793                           	opt stack 21
 11794                           
 11795                           ;peripherals.c: 96: unsigned short keySwitchValueUS;
 11796                           ;peripherals.c: 98: LATEbits.LATE0 = 1;
 11797                           
 11798                           ;incstack = 0
 11799  00B2C4  808D               	bsf	3981,0,c	;volatile
 11800                           
 11801                           ;peripherals.c: 99: keySwitchValueUS = ReadAnalogVoltage(0);
 11802  00B2C6  0E00               	movlw	0
 11803  00B2C8  EC3D  F058         	call	_ReadAnalogVoltage
 11804  00B2CC  C001  F004         	movff	?_ReadAnalogVoltage,ReadKeySwitch@keySwitchValueUS
 11805  00B2D0  C002  F005         	movff	?_ReadAnalogVoltage+1,ReadKeySwitch@keySwitchValueUS+1
 11806                           
 11807                           ;peripherals.c: 100: LATEbits.LATE0 = 0;
 11808  00B2D4  908D               	bcf	3981,0,c	;volatile
 11809                           
 11810                           ;peripherals.c: 102: __nop();
 11811  00B2D6  F000               	nop	
 11812                           
 11813                           ;peripherals.c: 104: if(keySwitchValueUS > 80){
 11814  00B2D8  5005               	movf	ReadKeySwitch@keySwitchValueUS+1,w,c
 11815  00B2DA  E104               	bnz	i2u466_40
 11816  00B2DC  0E51               	movlw	81
 11817  00B2DE  5C04               	subwf	ReadKeySwitch@keySwitchValueUS,w,c
 11818  00B2E0  A0D8               	btfss	status,0,c
 11819  00B2E2  D006               	goto	i2l4983
 11820  00B2E4                     i2u466_40:
 11821                           
 11822                           ;peripherals.c: 105: ISO_COUNTER = 0;
 11823  00B2E4  0E00               	movlw	0
 11824  00B2E6  0102               	movlb	2	; () banked
 11825  00B2E8  6FA1               	movwf	_ISO_COUNTER& (0+255),b
 11826                           
 11827                           ; BSR set to: 2
 11828                           ;peripherals.c: 106: statusFlagsUSLG &= ~0b000000000000000000100000;
 11829  00B2EA  0102               	movlb	2	; () banked
 11830  00B2EC  9B8A               	bcf	_statusFlagsUSLG& (0+255),5,b	;volatile
 11831                           
 11832                           ;peripherals.c: 107: }
 11833  00B2EE  0012               	return	
 11834  00B2F0                     i2l4983:
 11835                           
 11836                           ;peripherals.c: 108: else
 11837                           ;peripherals.c: 109: statusFlagsUSLG |= 0b000000000000000000100000;
 11838  00B2F0  0102               	movlb	2	; () banked
 11839  00B2F2  8B8A               	bsf	_statusFlagsUSLG& (0+255),5,b	;volatile
 11840  00B2F4  0012               	return	
 11841  00B2F6                     __end_of_ReadKeySwitch:
 11842                           	opt stack 0
 11843                           pclatu	equ	0xFFB
 11844                           pclath	equ	0xFFA
 11845                           tblptru	equ	0xFF8
 11846                           tblptrh	equ	0xFF7
 11847                           tblptrl	equ	0xFF6
 11848                           tablat	equ	0xFF5
 11849                           prodh	equ	0xFF4
 11850                           prodl	equ	0xFF3
 11851                           intcon	equ	0xFF2
 11852                           postinc0	equ	0xFEE
 11853                           fsr0h	equ	0xFEA
 11854                           fsr0l	equ	0xFE9
 11855                           wreg	equ	0xFE8
 11856                           indf1	equ	0xFE7
 11857                           postinc1	equ	0xFE6
 11858                           postdec1	equ	0xFE5
 11859                           fsr1h	equ	0xFE2
 11860                           fsr1l	equ	0xFE1
 11861                           indf2	equ	0xFDF
 11862                           postinc2	equ	0xFDE
 11863                           postdec2	equ	0xFDD
 11864                           fsr2h	equ	0xFDA
 11865                           fsr2l	equ	0xFD9
 11866                           status	equ	0xFD8
 11867                           
 11868 ;; *************** function _ReadEarthLeakage *****************
 11869 ;; Defined at:
 11870 ;;		line 73 in file "peripherals.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;		None
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;  earthLeakage    2    3[COMRAM] unsigned short 
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      void 
 11877 ;; Registers used:
 11878 ;;		wreg, status,2, status,0, cstack
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 11884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11888 ;;Total ram usage:        2 bytes
 11889 ;; Hardware stack levels used:    1
 11890 ;; Hardware stack levels required when called:    1
 11891 ;; This function calls:
 11892 ;;		_ReadAnalogVoltage
 11893 ;; This function is called by:
 11894 ;;		_BoosterDataCommandComms
 11895 ;; This function uses a non-reentrant model
 11896 ;;
 11897                           
 11898                           	psect	text62
 11899  00AD64                     __ptext62:
 11900                           	opt stack 0
 11901  00AD64                     _ReadEarthLeakage:
 11902                           	opt stack 21
 11903                           
 11904                           ;peripherals.c: 74: unsigned short earthLeakageValueUS;
 11905                           ;peripherals.c: 76: counterELTTests++;
 11906                           
 11907                           ; BSR set to: 2
 11908                           ;incstack = 0
 11909  00AD64  0103               	movlb	3	; () banked
 11910  00AD66  4B47               	infsnz	_counterELTTests& (0+255),f,b
 11911  00AD68  2B48               	incf	(_counterELTTests+1)& (0+255),f,b
 11912                           
 11913                           ; BSR set to: 3
 11914                           ;peripherals.c: 77: earthLeakageValueUS = ReadAnalogVoltage(1);
 11915  00AD6A  0E01               	movlw	1
 11916  00AD6C  EC3D  F058         	call	_ReadAnalogVoltage
 11917  00AD70  C001  F004         	movff	?_ReadAnalogVoltage,ReadEarthLeakage@earthLeakageValueUS
 11918  00AD74  C002  F005         	movff	?_ReadAnalogVoltage+1,ReadEarthLeakage@earthLeakageValueUS+1
 11919                           
 11920                           ;peripherals.c: 79: if(earthLeakageValueUS > 620)
 11921  00AD78  0E6D               	movlw	109
 11922  00AD7A  5C04               	subwf	ReadEarthLeakage@earthLeakageValueUS,w,c
 11923  00AD7C  0E02               	movlw	2
 11924  00AD7E  5805               	subwfb	ReadEarthLeakage@earthLeakageValueUS+1,w,c
 11925  00AD80  A0D8               	btfss	status,0,c
 11926  00AD82  D003               	goto	i2l4905
 11927                           
 11928                           ;peripherals.c: 80: counterELTFailures++;
 11929  00AD84  0103               	movlb	3	; () banked
 11930  00AD86  4B45               	infsnz	_counterELTFailures& (0+255),f,b
 11931  00AD88  2B46               	incf	(_counterELTFailures+1)& (0+255),f,b
 11932  00AD8A                     i2l4905:
 11933                           
 11934                           ;peripherals.c: 84: if(counterELTTests == 5){
 11935  00AD8A  0E05               	movlw	5
 11936  00AD8C  0103               	movlb	3	; () banked
 11937  00AD8E  1947               	xorwf	_counterELTTests& (0+255),w,b
 11938  00AD90  0103               	movlb	3	; () banked
 11939  00AD92  1148               	iorwf	(_counterELTTests+1)& (0+255),w,b
 11940  00AD94  A4D8               	btfss	status,2,c
 11941  00AD96  0012               	return	
 11942                           
 11943                           ; BSR set to: 3
 11944                           ;peripherals.c: 85: LATCbits.LATC4 = 0;
 11945  00AD98  988B               	bcf	3979,4,c	;volatile
 11946                           
 11947                           ;peripherals.c: 86: LATDbits.LATD1 = 1;
 11948  00AD9A  828C               	bsf	3980,1,c	;volatile
 11949                           
 11950                           ; BSR set to: 3
 11951                           ;peripherals.c: 88: if(counterELTFailures == counterELTTests)
 11952  00AD9C  0103               	movlb	3	; () banked
 11953  00AD9E  5147               	movf	_counterELTTests& (0+255),w,b
 11954  00ADA0  0103               	movlb	3	; () banked
 11955  00ADA2  1945               	xorwf	_counterELTFailures& (0+255),w,b
 11956  00ADA4  E109               	bnz	i2l4913
 11957  00ADA6  0103               	movlb	3	; () banked
 11958  00ADA8  5148               	movf	(_counterELTTests+1)& (0+255),w,b
 11959  00ADAA  0103               	movlb	3	; () banked
 11960  00ADAC  1946               	xorwf	(_counterELTFailures+1)& (0+255),w,b
 11961  00ADAE  A4D8               	btfss	status,2,c
 11962  00ADB0  D003               	goto	i2l4913
 11963                           
 11964                           ; BSR set to: 3
 11965                           ;peripherals.c: 89: statusFlagsUSLG |= 0b000000000000000000010000;
 11966  00ADB2  0102               	movlb	2	; () banked
 11967  00ADB4  898A               	bsf	_statusFlagsUSLG& (0+255),4,b	;volatile
 11968  00ADB6  0012               	return	
 11969  00ADB8                     i2l4913:
 11970                           
 11971                           ;peripherals.c: 90: else
 11972                           ;peripherals.c: 91: statusFlagsUSLG &= ~0b000000000000000000010000;
 11973  00ADB8  0102               	movlb	2	; () banked
 11974  00ADBA  998A               	bcf	_statusFlagsUSLG& (0+255),4,b	;volatile
 11975                           
 11976                           ; BSR set to: 2
 11977  00ADBC  0012               	return	
 11978  00ADBE                     __end_of_ReadEarthLeakage:
 11979                           	opt stack 0
 11980                           pclatu	equ	0xFFB
 11981                           pclath	equ	0xFFA
 11982                           tblptru	equ	0xFF8
 11983                           tblptrh	equ	0xFF7
 11984                           tblptrl	equ	0xFF6
 11985                           tablat	equ	0xFF5
 11986                           prodh	equ	0xFF4
 11987                           prodl	equ	0xFF3
 11988                           intcon	equ	0xFF2
 11989                           postinc0	equ	0xFEE
 11990                           fsr0h	equ	0xFEA
 11991                           fsr0l	equ	0xFE9
 11992                           wreg	equ	0xFE8
 11993                           indf1	equ	0xFE7
 11994                           postinc1	equ	0xFE6
 11995                           postdec1	equ	0xFE5
 11996                           fsr1h	equ	0xFE2
 11997                           fsr1l	equ	0xFE1
 11998                           indf2	equ	0xFDF
 11999                           postinc2	equ	0xFDE
 12000                           postdec2	equ	0xFDD
 12001                           fsr2h	equ	0xFDA
 12002                           fsr2l	equ	0xFD9
 12003                           status	equ	0xFD8
 12004                           
 12005 ;; *************** function _ProcessRXFrame *****************
 12006 ;; Defined at:
 12007 ;;		line 509 in file "boostercomms.c"
 12008 ;; Parameters:    Size  Location     Type
 12009 ;;  recvFrameUS     2    6[COMRAM] unsigned short 
 12010 ;;  frameNumUC      1    8[COMRAM] unsigned char 
 12011 ;; Auto vars:     Size  Location     Type
 12012 ;;  parityCheckU    1   16[COMRAM] unsigned char 
 12013 ;; Return value:  Size  Location     Type
 12014 ;;                  1    wreg      void 
 12015 ;; Registers used:
 12016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12017 ;; Tracked objects:
 12018 ;;		On entry : 0/0
 12019 ;;		On exit  : 0/0
 12020 ;;		Unchanged: 0/0
 12021 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 12022 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12024 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12025 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12026 ;;Total ram usage:       11 bytes
 12027 ;; Hardware stack levels used:    1
 12028 ;; Hardware stack levels required when called:    1
 12029 ;; This function calls:
 12030 ;;		_CheckBoosterRXParity
 12031 ;;		i2_ClearPastValue
 12032 ;;		i2_ResetSingleBoosterState
 12033 ;; This function is called by:
 12034 ;;		_BoosterDataCommandComms
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038                           	psect	text63
 12039  008E02                     __ptext63:
 12040                           	opt stack 0
 12041  008E02                     _ProcessRXFrame:
 12042                           	opt stack 21
 12043                           
 12044                           ;boostercomms.c: 510: unsigned char parityCheckUC;
 12045                           ;boostercomms.c: 512: if(statusFlagsUSLG & 0b000000000000000000000100){
 12046                           
 12047                           ;incstack = 0
 12048  008E02  0102               	movlb	2	; () banked
 12049  008E04  A58A               	btfss	_statusFlagsUSLG& (0+255),2,b	;volatile
 12050  008E06  D1C0               	goto	i2l456
 12051                           
 12052                           ; BSR set to: 2
 12053                           ;boostercomms.c: 513: if(statusFlagsUSLG & 0b000000000000000010000000)
 12054  008E08  0102               	movlb	2	; () banked
 12055  008E0A  AF8A               	btfss	_statusFlagsUSLG& (0+255),7,b	;volatile
 12056  008E0C  D002               	goto	i2l4815
 12057                           
 12058                           ; BSR set to: 2
 12059                           ;boostercomms.c: 514: frameNumUC += 15;
 12060  008E0E  0E0F               	movlw	15
 12061  008E10  2609               	addwf	ProcessRXFrame@frameNumUC,f,c
 12062  008E12                     i2l4815:
 12063                           
 12064                           ; BSR set to: 2
 12065                           ;boostercomms.c: 516: boosterCommsData[6][frameNumUC-1] = 0b00000000;
 12066  008E12  0EFF               	movlw	255
 12067  008E14  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12068  008E16  0EFF               	movlw	255
 12069  008E18  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12070  008E1A  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12071  008E1C  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12072  008E1E  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12073  008E20  500A               	movf	??_ProcessRXFrame,w,c
 12074  008E22  260C               	addwf	??_ProcessRXFrame+2,f,c
 12075  008E24  500B               	movf	??_ProcessRXFrame+1,w,c
 12076  008E26  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12077  008E28  0EB4               	movlw	low (_boosterCommsData+180)
 12078  008E2A  240C               	addwf	??_ProcessRXFrame+2,w,c
 12079  008E2C  6ED9               	movwf	fsr2l,c
 12080  008E2E  0E04               	movlw	high (_boosterCommsData+180)
 12081  008E30  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12082  008E32  6EDA               	movwf	fsr2h,c
 12083  008E34  0E00               	movlw	0
 12084  008E36  6EDF               	movwf	indf2,c
 12085                           
 12086                           ; BSR set to: 2
 12087                           ;boostercomms.c: 517: if(statusFlagsUSLG & 0b000000000000001000000000)
 12088  008E38  0102               	movlb	2	; () banked
 12089  008E3A  A38B               	btfss	(_statusFlagsUSLG+1)& (0+255),1,b	;volatile
 12090  008E3C  D013               	goto	i2l4821
 12091                           
 12092                           ; BSR set to: 2
 12093                           ;boostercomms.c: 518: boosterCommsData[6][frameNumUC-1] |= 0b00000001;
 12094  008E3E  0EFF               	movlw	255
 12095  008E40  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12096  008E42  0EFF               	movlw	255
 12097  008E44  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12098  008E46  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12099  008E48  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12100  008E4A  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12101  008E4C  500A               	movf	??_ProcessRXFrame,w,c
 12102  008E4E  260C               	addwf	??_ProcessRXFrame+2,f,c
 12103  008E50  500B               	movf	??_ProcessRXFrame+1,w,c
 12104  008E52  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12105  008E54  0EB4               	movlw	low (_boosterCommsData+180)
 12106  008E56  240C               	addwf	??_ProcessRXFrame+2,w,c
 12107  008E58  6ED9               	movwf	fsr2l,c
 12108  008E5A  0E04               	movlw	high (_boosterCommsData+180)
 12109  008E5C  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12110  008E5E  6EDA               	movwf	fsr2h,c
 12111  008E60  0E00               	movlw	0
 12112  008E62  80DB               	bsf	plusw2,0,c
 12113  008E64                     i2l4821:
 12114                           
 12115                           ; BSR set to: 2
 12116                           ;boostercomms.c: 519: if(!(parityCheckUC = CheckBoosterRXParity(recvFrameUS)))
 12117  008E64  C007  F001         	movff	ProcessRXFrame@recvFrameUS,CheckBoosterRXParity@recvFrameUS
 12118  008E68  C008  F002         	movff	ProcessRXFrame@recvFrameUS+1,CheckBoosterRXParity@recvFrameUS+1
 12119  008E6C  EC7B  F059         	call	_CheckBoosterRXParity	;wreg free
 12120  008E70  6E11               	movwf	ProcessRXFrame@parityCheckUC,c
 12121  008E72  5011               	movf	ProcessRXFrame@parityCheckUC,w,c
 12122  008E74  A4D8               	btfss	status,2,c
 12123  008E76  D013               	goto	i2l4825
 12124                           
 12125                           ;boostercomms.c: 520: boosterCommsData[6][frameNumUC-1] |= 0b00000010;
 12126  008E78  0EFF               	movlw	255
 12127  008E7A  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12128  008E7C  0EFF               	movlw	255
 12129  008E7E  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12130  008E80  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12131  008E82  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12132  008E84  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12133  008E86  500A               	movf	??_ProcessRXFrame,w,c
 12134  008E88  260C               	addwf	??_ProcessRXFrame+2,f,c
 12135  008E8A  500B               	movf	??_ProcessRXFrame+1,w,c
 12136  008E8C  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12137  008E8E  0EB4               	movlw	low (_boosterCommsData+180)
 12138  008E90  240C               	addwf	??_ProcessRXFrame+2,w,c
 12139  008E92  6ED9               	movwf	fsr2l,c
 12140  008E94  0E04               	movlw	high (_boosterCommsData+180)
 12141  008E96  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12142  008E98  6EDA               	movwf	fsr2h,c
 12143  008E9A  0E00               	movlw	0
 12144  008E9C  82DB               	bsf	plusw2,1,c
 12145  008E9E                     i2l4825:
 12146                           
 12147                           ;boostercomms.c: 521: if(statusFlagsUSLG & 0b000000000000000100000000)
 12148  008E9E  0102               	movlb	2	; () banked
 12149  008EA0  A18B               	btfss	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 12150  008EA2  D013               	goto	i2l4829
 12151                           
 12152                           ; BSR set to: 2
 12153                           ;boostercomms.c: 522: boosterCommsData[6][frameNumUC-1] |= 0b00000100;
 12154  008EA4  0EFF               	movlw	255
 12155  008EA6  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12156  008EA8  0EFF               	movlw	255
 12157  008EAA  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12158  008EAC  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12159  008EAE  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12160  008EB0  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12161  008EB2  500A               	movf	??_ProcessRXFrame,w,c
 12162  008EB4  260C               	addwf	??_ProcessRXFrame+2,f,c
 12163  008EB6  500B               	movf	??_ProcessRXFrame+1,w,c
 12164  008EB8  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12165  008EBA  0EB4               	movlw	low (_boosterCommsData+180)
 12166  008EBC  240C               	addwf	??_ProcessRXFrame+2,w,c
 12167  008EBE  6ED9               	movwf	fsr2l,c
 12168  008EC0  0E04               	movlw	high (_boosterCommsData+180)
 12169  008EC2  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12170  008EC4  6EDA               	movwf	fsr2h,c
 12171  008EC6  0E00               	movlw	0
 12172  008EC8  84DB               	bsf	plusw2,2,c
 12173  008ECA                     i2l4829:
 12174                           
 12175                           ; BSR set to: 2
 12176                           ;boostercomms.c: 523: if(statusFlagsUSLG & 0b000000000000010000000000)
 12177  008ECA  0102               	movlb	2	; () banked
 12178  008ECC  A58B               	btfss	(_statusFlagsUSLG+1)& (0+255),2,b	;volatile
 12179  008ECE  D013               	goto	i2l4833
 12180                           
 12181                           ; BSR set to: 2
 12182                           ;boostercomms.c: 524: boosterCommsData[6][frameNumUC-1] |= 0b00001000;
 12183  008ED0  0EFF               	movlw	255
 12184  008ED2  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12185  008ED4  0EFF               	movlw	255
 12186  008ED6  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12187  008ED8  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12188  008EDA  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12189  008EDC  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12190  008EDE  500A               	movf	??_ProcessRXFrame,w,c
 12191  008EE0  260C               	addwf	??_ProcessRXFrame+2,f,c
 12192  008EE2  500B               	movf	??_ProcessRXFrame+1,w,c
 12193  008EE4  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12194  008EE6  0EB4               	movlw	low (_boosterCommsData+180)
 12195  008EE8  240C               	addwf	??_ProcessRXFrame+2,w,c
 12196  008EEA  6ED9               	movwf	fsr2l,c
 12197  008EEC  0E04               	movlw	high (_boosterCommsData+180)
 12198  008EEE  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12199  008EF0  6EDA               	movwf	fsr2h,c
 12200  008EF2  0E00               	movlw	0
 12201  008EF4  86DB               	bsf	plusw2,3,c
 12202  008EF6                     i2l4833:
 12203                           
 12204                           ; BSR set to: 2
 12205                           ;boostercomms.c: 526: if(!(statusFlagsUSLG & 0b000000000000001000000000)){
 12206  008EF6  0102               	movlb	2	; () banked
 12207  008EF8  B38B               	btfsc	(_statusFlagsUSLG+1)& (0+255),1,b	;volatile
 12208  008EFA  D048               	goto	i2l4849
 12209                           
 12210                           ; BSR set to: 2
 12211                           ;boostercomms.c: 527: if(boosterCommsDataSerial[frameNumUC-1]){
 12212  008EFC  0EFE               	movlw	254
 12213  008EFE  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12214  008F00  0EFF               	movlw	255
 12215  008F02  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12216  008F04  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12217  008F06  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12218  008F08  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12219  008F0A  90D8               	bcf	status,0,c
 12220  008F0C  360C               	rlcf	??_ProcessRXFrame+2,f,c
 12221  008F0E  360D               	rlcf	??_ProcessRXFrame+3,f,c
 12222  008F10  500A               	movf	??_ProcessRXFrame,w,c
 12223  008F12  260C               	addwf	??_ProcessRXFrame+2,f,c
 12224  008F14  500B               	movf	??_ProcessRXFrame+1,w,c
 12225  008F16  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12226  008F18  0E00               	movlw	low _boosterCommsDataSerial
 12227  008F1A  240C               	addwf	??_ProcessRXFrame+2,w,c
 12228  008F1C  6ED9               	movwf	fsr2l,c
 12229  008F1E  0E03               	movlw	high _boosterCommsDataSerial
 12230  008F20  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12231  008F22  6EDA               	movwf	fsr2h,c
 12232  008F24  50DE               	movf	postinc2,w,c
 12233  008F26  10DE               	iorwf	postinc2,w,c
 12234  008F28  B4D8               	btfsc	status,2,c
 12235  008F2A  0012               	return	
 12236                           
 12237                           ; BSR set to: 2
 12238                           ;boostercomms.c: 528: boosterCommsData[4][frameNumUC-1]++;
 12239  008F2C  0EFF               	movlw	255
 12240  008F2E  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12241  008F30  0EFF               	movlw	255
 12242  008F32  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12243  008F34  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12244  008F36  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12245  008F38  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12246  008F3A  500A               	movf	??_ProcessRXFrame,w,c
 12247  008F3C  260C               	addwf	??_ProcessRXFrame+2,f,c
 12248  008F3E  500B               	movf	??_ProcessRXFrame+1,w,c
 12249  008F40  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12250  008F42  0E78               	movlw	low (_boosterCommsData+120)
 12251  008F44  240C               	addwf	??_ProcessRXFrame+2,w,c
 12252  008F46  6ED9               	movwf	fsr2l,c
 12253  008F48  0E04               	movlw	high (_boosterCommsData+120)
 12254  008F4A  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12255  008F4C  6EDA               	movwf	fsr2h,c
 12256  008F4E  2ADF               	incf	indf2,f,c
 12257                           
 12258                           ;boostercomms.c: 529: if(boosterCommsData[4][frameNumUC-1] == 10){
 12259  008F50  0EFF               	movlw	255
 12260  008F52  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12261  008F54  0EFF               	movlw	255
 12262  008F56  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12263  008F58  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12264  008F5A  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12265  008F5C  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12266  008F5E  500A               	movf	??_ProcessRXFrame,w,c
 12267  008F60  260C               	addwf	??_ProcessRXFrame+2,f,c
 12268  008F62  500B               	movf	??_ProcessRXFrame+1,w,c
 12269  008F64  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12270  008F66  0E78               	movlw	low (_boosterCommsData+120)
 12271  008F68  240C               	addwf	??_ProcessRXFrame+2,w,c
 12272  008F6A  6ED9               	movwf	fsr2l,c
 12273  008F6C  0E04               	movlw	high (_boosterCommsData+120)
 12274  008F6E  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12275  008F70  6EDA               	movwf	fsr2h,c
 12276  008F72  0E0A               	movlw	10
 12277  008F74  18DE               	xorwf	postinc2,w,c
 12278  008F76  A4D8               	btfss	status,2,c
 12279  008F78  0012               	return	
 12280                           
 12281                           ; BSR set to: 2
 12282                           ;boostercomms.c: 530: ResetSingleBoosterState(frameNumUC-1);
 12283  008F7A  0409               	decf	ProcessRXFrame@frameNumUC,w,c
 12284  008F7C  EC80  F052         	call	i2_ResetSingleBoosterState
 12285                           
 12286                           ;boostercomms.c: 531: statusFlagsUSLG |= 0b000001000000000000000000;
 12287  008F80  0102               	movlb	2	; () banked
 12288  008F82  858C               	bsf	(_statusFlagsUSLG+2)& (0+255),2,b	;volatile
 12289                           
 12290                           ; BSR set to: 2
 12291                           ;boostercomms.c: 532: ClearPastValue(frameNumUC);
 12292  008F84  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12293  008F86  EC4F  F056         	call	i2_ClearPastValue
 12294                           
 12295                           ;boostercomms.c: 533: }
 12296                           ;boostercomms.c: 534: }
 12297                           ;boostercomms.c: 535: return;
 12298  008F8A  0012               	return	
 12299  008F8C                     i2l4849:
 12300                           
 12301                           ;boostercomms.c: 537: parityCheckUC ||
 12302                           ;boostercomms.c: 538: (statusFlagsUSLG & 0b000000000000000100000000)){
 12303  008F8C  C007  F00A         	movff	ProcessRXFrame@recvFrameUS,??_ProcessRXFrame
 12304  008F90  C008  F00B         	movff	ProcessRXFrame@recvFrameUS+1,??_ProcessRXFrame+1
 12305  008F94  0E09               	movlw	9
 12306  008F96  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12307  008F98                     i2u443_45:
 12308  008F98  90D8               	bcf	status,0,c
 12309  008F9A  320B               	rrcf	??_ProcessRXFrame+1,f,c
 12310  008F9C  320A               	rrcf	??_ProcessRXFrame,f,c
 12311  008F9E  2E0C               	decfsz	(??_ProcessRXFrame+2)& (0+255),f,c
 12312  008FA0  D7FB               	goto	i2u443_45
 12313  008FA2  0E1F               	movlw	31
 12314  008FA4  160A               	andwf	??_ProcessRXFrame,f,c
 12315  008FA6  0E00               	movlw	0
 12316  008FA8  160B               	andwf	??_ProcessRXFrame+1,f,c
 12317  008FAA  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12318  008FAC  6E0D               	movwf	(??_ProcessRXFrame+3)& (0+255),c
 12319  008FAE  6A0E               	clrf	(??_ProcessRXFrame+4)& (0+255),c
 12320  008FB0  500A               	movf	??_ProcessRXFrame,w,c
 12321  008FB2  180D               	xorwf	??_ProcessRXFrame+3,w,c
 12322  008FB4  E10A               	bnz	i2l4855
 12323  008FB6  500B               	movf	??_ProcessRXFrame+1,w,c
 12324  008FB8  180E               	xorwf	??_ProcessRXFrame+4,w,c
 12325  008FBA  A4D8               	btfss	status,2,c
 12326  008FBC  D006               	goto	i2l4855
 12327  008FBE  5011               	movf	ProcessRXFrame@parityCheckUC,w,c
 12328  008FC0  A4D8               	btfss	status,2,c
 12329  008FC2  D003               	goto	i2l4855
 12330  008FC4  0102               	movlb	2	; () banked
 12331  008FC6  A18B               	btfss	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 12332  008FC8  D03A               	goto	i2l4861
 12333  008FCA                     i2l4855:
 12334                           
 12335                           ;boostercomms.c: 539: if(boosterCommsData[5][frameNumUC-1] < 10)
 12336  008FCA  0EFF               	movlw	255
 12337  008FCC  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12338  008FCE  0EFF               	movlw	255
 12339  008FD0  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12340  008FD2  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12341  008FD4  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12342  008FD6  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12343  008FD8  500A               	movf	??_ProcessRXFrame,w,c
 12344  008FDA  260C               	addwf	??_ProcessRXFrame+2,f,c
 12345  008FDC  500B               	movf	??_ProcessRXFrame+1,w,c
 12346  008FDE  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12347  008FE0  0E96               	movlw	low (_boosterCommsData+150)
 12348  008FE2  240C               	addwf	??_ProcessRXFrame+2,w,c
 12349  008FE4  6ED9               	movwf	fsr2l,c
 12350  008FE6  0E04               	movlw	high (_boosterCommsData+150)
 12351  008FE8  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12352  008FEA  6EDA               	movwf	fsr2h,c
 12353  008FEC  0E0A               	movlw	10
 12354  008FEE  60DF               	cpfslt	indf2,c
 12355  008FF0  D012               	goto	i2l470
 12356                           
 12357                           ;boostercomms.c: 540: boosterCommsData[5][frameNumUC-1]++;
 12358  008FF2  0EFF               	movlw	255
 12359  008FF4  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12360  008FF6  0EFF               	movlw	255
 12361  008FF8  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12362  008FFA  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12363  008FFC  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12364  008FFE  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12365  009000  500A               	movf	??_ProcessRXFrame,w,c
 12366  009002  260C               	addwf	??_ProcessRXFrame+2,f,c
 12367  009004  500B               	movf	??_ProcessRXFrame+1,w,c
 12368  009006  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12369  009008  0E96               	movlw	low (_boosterCommsData+150)
 12370  00900A  240C               	addwf	??_ProcessRXFrame+2,w,c
 12371  00900C  6ED9               	movwf	fsr2l,c
 12372  00900E  0E04               	movlw	high (_boosterCommsData+150)
 12373  009010  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12374  009012  6EDA               	movwf	fsr2h,c
 12375  009014  2ADF               	incf	indf2,f,c
 12376  009016                     i2l470:
 12377                           
 12378                           ;boostercomms.c: 541: boosterCommsData[6][frameNumUC-1] |= 0b00000100;
 12379  009016  0EFF               	movlw	255
 12380  009018  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12381  00901A  0EFF               	movlw	255
 12382  00901C  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12383  00901E  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12384  009020  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12385  009022  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12386  009024  500A               	movf	??_ProcessRXFrame,w,c
 12387  009026  260C               	addwf	??_ProcessRXFrame+2,f,c
 12388  009028  500B               	movf	??_ProcessRXFrame+1,w,c
 12389  00902A  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12390  00902C  0EB4               	movlw	low (_boosterCommsData+180)
 12391  00902E  240C               	addwf	??_ProcessRXFrame+2,w,c
 12392  009030  6ED9               	movwf	fsr2l,c
 12393  009032  0E04               	movlw	high (_boosterCommsData+180)
 12394  009034  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12395  009036  6EDA               	movwf	fsr2h,c
 12396  009038  0E00               	movlw	0
 12397  00903A  84DB               	bsf	plusw2,2,c
 12398                           
 12399                           ;boostercomms.c: 542: return;
 12400  00903C  0012               	return	
 12401  00903E                     i2l4861:
 12402                           
 12403                           ;boostercomms.c: 543: }
 12404                           ;boostercomms.c: 545: boosterCommsData[5][frameNumUC-1] = 0;
 12405  00903E  0EFF               	movlw	255
 12406  009040  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12407  009042  0EFF               	movlw	255
 12408  009044  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12409  009046  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12410  009048  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12411  00904A  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12412  00904C  500A               	movf	??_ProcessRXFrame,w,c
 12413  00904E  260C               	addwf	??_ProcessRXFrame+2,f,c
 12414  009050  500B               	movf	??_ProcessRXFrame+1,w,c
 12415  009052  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12416  009054  0E96               	movlw	low (_boosterCommsData+150)
 12417  009056  240C               	addwf	??_ProcessRXFrame+2,w,c
 12418  009058  6ED9               	movwf	fsr2l,c
 12419  00905A  0E04               	movlw	high (_boosterCommsData+150)
 12420  00905C  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12421  00905E  6EDA               	movwf	fsr2h,c
 12422  009060  0E00               	movlw	0
 12423  009062  6EDF               	movwf	indf2,c
 12424                           
 12425                           ;boostercomms.c: 546: boosterCommsData[4][frameNumUC-1] = 0;
 12426  009064  0EFF               	movlw	255
 12427  009066  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12428  009068  0EFF               	movlw	255
 12429  00906A  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12430  00906C  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12431  00906E  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12432  009070  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12433  009072  500A               	movf	??_ProcessRXFrame,w,c
 12434  009074  260C               	addwf	??_ProcessRXFrame+2,f,c
 12435  009076  500B               	movf	??_ProcessRXFrame+1,w,c
 12436  009078  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12437  00907A  0E78               	movlw	low (_boosterCommsData+120)
 12438  00907C  240C               	addwf	??_ProcessRXFrame+2,w,c
 12439  00907E  6ED9               	movwf	fsr2l,c
 12440  009080  0E04               	movlw	high (_boosterCommsData+120)
 12441  009082  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12442  009084  6EDA               	movwf	fsr2h,c
 12443  009086  0E00               	movlw	0
 12444  009088  6EDF               	movwf	indf2,c
 12445                           
 12446                           ;boostercomms.c: 548: boosterCommsData[7][frameNumUC-1] = (recvFrameUS & 0b1100000000000
      +                          000) >> 14;
 12447  00908A  0EFF               	movlw	255
 12448  00908C  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12449  00908E  0EFF               	movlw	255
 12450  009090  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12451  009092  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12452  009094  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12453  009096  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12454  009098  500A               	movf	??_ProcessRXFrame,w,c
 12455  00909A  260C               	addwf	??_ProcessRXFrame+2,f,c
 12456  00909C  500B               	movf	??_ProcessRXFrame+1,w,c
 12457  00909E  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12458  0090A0  0ED2               	movlw	low (_boosterCommsData+210)
 12459  0090A2  240C               	addwf	??_ProcessRXFrame+2,w,c
 12460  0090A4  6ED9               	movwf	fsr2l,c
 12461  0090A6  0E04               	movlw	high (_boosterCommsData+210)
 12462  0090A8  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12463  0090AA  6EDA               	movwf	fsr2h,c
 12464  0090AC  C007  F00E         	movff	ProcessRXFrame@recvFrameUS,??_ProcessRXFrame+4
 12465  0090B0  C008  F00F         	movff	ProcessRXFrame@recvFrameUS+1,??_ProcessRXFrame+5
 12466  0090B4  0E0E               	movlw	14
 12467  0090B6  6E10               	movwf	(??_ProcessRXFrame+6)& (0+255),c
 12468  0090B8                     i2u448_45:
 12469  0090B8  90D8               	bcf	status,0,c
 12470  0090BA  320F               	rrcf	??_ProcessRXFrame+5,f,c
 12471  0090BC  320E               	rrcf	??_ProcessRXFrame+4,f,c
 12472  0090BE  2E10               	decfsz	(??_ProcessRXFrame+6)& (0+255),f,c
 12473  0090C0  D7FB               	goto	i2u448_45
 12474  0090C2  500E               	movf	??_ProcessRXFrame+4,w,c
 12475  0090C4  0B03               	andlw	3
 12476  0090C6  6EDF               	movwf	indf2,c
 12477                           
 12478                           ;boostercomms.c: 549: switch(commsDataModeUCG){
 12479  0090C8  D050               	goto	i2l4873
 12480  0090CA                     i2l4863:
 12481                           
 12482                           ;boostercomms.c: 551: boosterCommsData[0][frameNumUC-1] = (recvFrameUS & 0b0000000011111
      +                          111);
 12483  0090CA  0EFF               	movlw	255
 12484  0090CC  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12485  0090CE  0EFF               	movlw	255
 12486  0090D0  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12487  0090D2  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12488  0090D4  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12489  0090D6  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12490  0090D8  500A               	movf	??_ProcessRXFrame,w,c
 12491  0090DA  260C               	addwf	??_ProcessRXFrame+2,f,c
 12492  0090DC  500B               	movf	??_ProcessRXFrame+1,w,c
 12493  0090DE  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12494  0090E0  0E00               	movlw	low _boosterCommsData
 12495  0090E2  240C               	addwf	??_ProcessRXFrame+2,w,c
 12496  0090E4  6ED9               	movwf	fsr2l,c
 12497  0090E6  0E04               	movlw	high _boosterCommsData
 12498  0090E8  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12499  0090EA  6EDA               	movwf	fsr2h,c
 12500  0090EC  C007  FFDF         	movff	ProcessRXFrame@recvFrameUS,indf2
 12501                           
 12502                           ;boostercomms.c: 552: break;
 12503  0090F0  0012               	return	
 12504  0090F2                     i2l4865:
 12505                           
 12506                           ;boostercomms.c: 554: boosterCommsData[1][frameNumUC-1] = (recvFrameUS & 0b0000000011111
      +                          111);
 12507  0090F2  0EFF               	movlw	255
 12508  0090F4  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12509  0090F6  0EFF               	movlw	255
 12510  0090F8  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12511  0090FA  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12512  0090FC  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12513  0090FE  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12514  009100  500A               	movf	??_ProcessRXFrame,w,c
 12515  009102  260C               	addwf	??_ProcessRXFrame+2,f,c
 12516  009104  500B               	movf	??_ProcessRXFrame+1,w,c
 12517  009106  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12518  009108  0E1E               	movlw	low (_boosterCommsData+30)
 12519  00910A  240C               	addwf	??_ProcessRXFrame+2,w,c
 12520  00910C  6ED9               	movwf	fsr2l,c
 12521  00910E  0E04               	movlw	high (_boosterCommsData+30)
 12522  009110  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12523  009112  6EDA               	movwf	fsr2h,c
 12524  009114  C007  FFDF         	movff	ProcessRXFrame@recvFrameUS,indf2
 12525                           
 12526                           ;boostercomms.c: 555: break;
 12527  009118  0012               	return	
 12528  00911A                     i2l4867:
 12529                           
 12530                           ;boostercomms.c: 557: boosterCommsData[2][frameNumUC-1] = (recvFrameUS & 0b0000000011111
      +                          111);
 12531  00911A  0EFF               	movlw	255
 12532  00911C  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12533  00911E  0EFF               	movlw	255
 12534  009120  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12535  009122  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12536  009124  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12537  009126  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12538  009128  500A               	movf	??_ProcessRXFrame,w,c
 12539  00912A  260C               	addwf	??_ProcessRXFrame+2,f,c
 12540  00912C  500B               	movf	??_ProcessRXFrame+1,w,c
 12541  00912E  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12542  009130  0E3C               	movlw	low (_boosterCommsData+60)
 12543  009132  240C               	addwf	??_ProcessRXFrame+2,w,c
 12544  009134  6ED9               	movwf	fsr2l,c
 12545  009136  0E04               	movlw	high (_boosterCommsData+60)
 12546  009138  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12547  00913A  6EDA               	movwf	fsr2h,c
 12548  00913C  C007  FFDF         	movff	ProcessRXFrame@recvFrameUS,indf2
 12549                           
 12550                           ;boostercomms.c: 558: break;
 12551  009140  0012               	return	
 12552  009142                     i2l4869:
 12553                           
 12554                           ;boostercomms.c: 560: boosterCommsData[3][frameNumUC-1] = (recvFrameUS & 0b0000000011111
      +                          111);
 12555  009142  0EFF               	movlw	255
 12556  009144  6E0A               	movwf	??_ProcessRXFrame& (0+255),c
 12557  009146  0EFF               	movlw	255
 12558  009148  6E0B               	movwf	(??_ProcessRXFrame+1)& (0+255),c
 12559  00914A  5009               	movf	ProcessRXFrame@frameNumUC,w,c
 12560  00914C  6E0C               	movwf	(??_ProcessRXFrame+2)& (0+255),c
 12561  00914E  6A0D               	clrf	(??_ProcessRXFrame+3)& (0+255),c
 12562  009150  500A               	movf	??_ProcessRXFrame,w,c
 12563  009152  260C               	addwf	??_ProcessRXFrame+2,f,c
 12564  009154  500B               	movf	??_ProcessRXFrame+1,w,c
 12565  009156  220D               	addwfc	??_ProcessRXFrame+3,f,c
 12566  009158  0E5A               	movlw	low (_boosterCommsData+90)
 12567  00915A  240C               	addwf	??_ProcessRXFrame+2,w,c
 12568  00915C  6ED9               	movwf	fsr2l,c
 12569  00915E  0E04               	movlw	high (_boosterCommsData+90)
 12570  009160  200D               	addwfc	??_ProcessRXFrame+3,w,c
 12571  009162  6EDA               	movwf	fsr2h,c
 12572  009164  C007  FFDF         	movff	ProcessRXFrame@recvFrameUS,indf2
 12573                           
 12574                           ;boostercomms.c: 562: }
 12575                           
 12576                           ;boostercomms.c: 561: break;
 12577  009168  0012               	return	
 12578  00916A                     i2l4873:
 12579  00916A  0102               	movlb	2	; () banked
 12580  00916C  51A2               	movf	_commsDataModeUCG& (0+255),w,b
 12581                           
 12582                           ; Switch size 1, requested type "space"
 12583                           ; Number of cases is 4, Range of values is 0 to 3
 12584                           ; switch strategies available:
 12585                           ; Name         Instructions Cycles
 12586                           ; simple_byte           13     7 (average)
 12587                           ;	Chosen strategy is simple_byte
 12588  00916E  0A00               	xorlw	0	; case 0
 12589  009170  B4D8               	btfsc	status,2,c
 12590  009172  D7AB               	goto	i2l4863
 12591  009174  0A01               	xorlw	1	; case 1
 12592  009176  B4D8               	btfsc	status,2,c
 12593  009178  D7BC               	goto	i2l4865
 12594  00917A  0A03               	xorlw	3	; case 2
 12595  00917C  B4D8               	btfsc	status,2,c
 12596  00917E  D7CD               	goto	i2l4867
 12597  009180  0A01               	xorlw	1	; case 3
 12598  009182  A4D8               	btfss	status,2,c
 12599                           
 12600                           ; BSR set to: 2
 12601                           ;boostercomms.c: 563: }else{
 12602  009184  0012               	return	
 12603  009186  D7DD               	goto	i2l4869
 12604  009188                     i2l456:
 12605                           
 12606                           ; BSR set to: 2
 12607                           ;boostercomms.c: 564: statusFlagsUSLG &= ~(0b000000000000100000000000 | 0b00000000000100
      +                          0000000000 | 0b000000000010000000000000 | 0b000000000100000000000000);
 12608  009188  0EFF               	movlw	255
 12609  00918A  0102               	movlb	2	; () banked
 12610  00918C  178A               	andwf	_statusFlagsUSLG& (0+255),f,b	;volatile
 12611  00918E  0E87               	movlw	135
 12612  009190  0102               	movlb	2	; () banked
 12613  009192  178B               	andwf	(_statusFlagsUSLG+1)& (0+255),f,b	;volatile
 12614  009194  0EFF               	movlw	255
 12615  009196  0102               	movlb	2	; () banked
 12616  009198  178C               	andwf	(_statusFlagsUSLG+2)& (0+255),f,b	;volatile
 12617                           
 12618                           ;boostercomms.c: 565: if(statusFlagsUSLG & 0b000000000000001000000000)
 12619  00919A  0102               	movlb	2	; () banked
 12620  00919C  A38B               	btfss	(_statusFlagsUSLG+1)& (0+255),1,b	;volatile
 12621  00919E  D002               	goto	i2l4877
 12622                           
 12623                           ; BSR set to: 2
 12624                           ;boostercomms.c: 566: statusFlagsUSLG |= 0b000000000000100000000000;
 12625  0091A0  0102               	movlb	2	; () banked
 12626  0091A2  878B               	bsf	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 12627  0091A4                     i2l4877:
 12628                           
 12629                           ; BSR set to: 2
 12630                           ;boostercomms.c: 567: if(!CheckBoosterRXParity(recvFrameUS))
 12631  0091A4  C007  F001         	movff	ProcessRXFrame@recvFrameUS,CheckBoosterRXParity@recvFrameUS
 12632  0091A8  C008  F002         	movff	ProcessRXFrame@recvFrameUS+1,CheckBoosterRXParity@recvFrameUS+1
 12633  0091AC  EC7B  F059         	call	_CheckBoosterRXParity	;wreg free
 12634  0091B0  0900               	iorlw	0
 12635  0091B2  A4D8               	btfss	status,2,c
 12636  0091B4  D002               	goto	i2l4881
 12637                           
 12638                           ;boostercomms.c: 568: statusFlagsUSLG |= 0b000000000001000000000000;
 12639  0091B6  0102               	movlb	2	; () banked
 12640  0091B8  898B               	bsf	(_statusFlagsUSLG+1)& (0+255),4,b	;volatile
 12641  0091BA                     i2l4881:
 12642                           
 12643                           ;boostercomms.c: 569: if(statusFlagsUSLG & 0b000000000000000100000000)
 12644  0091BA  0102               	movlb	2	; () banked
 12645  0091BC  A18B               	btfss	(_statusFlagsUSLG+1)& (0+255),0,b	;volatile
 12646  0091BE  D002               	goto	i2l4885
 12647                           
 12648                           ; BSR set to: 2
 12649                           ;boostercomms.c: 570: statusFlagsUSLG |= 0b000000000010000000000000;
 12650  0091C0  0102               	movlb	2	; () banked
 12651  0091C2  8B8B               	bsf	(_statusFlagsUSLG+1)& (0+255),5,b	;volatile
 12652  0091C4                     i2l4885:
 12653                           
 12654                           ; BSR set to: 2
 12655                           ;boostercomms.c: 571: if(statusFlagsUSLG & 0b000000000000010000000000)
 12656  0091C4  0102               	movlb	2	; () banked
 12657  0091C6  A58B               	btfss	(_statusFlagsUSLG+1)& (0+255),2,b	;volatile
 12658  0091C8  D002               	goto	i2l4889
 12659                           
 12660                           ; BSR set to: 2
 12661                           ;boostercomms.c: 572: statusFlagsUSLG |= 0b000000000100000000000000;
 12662  0091CA  0102               	movlb	2	; () banked
 12663  0091CC  8D8B               	bsf	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 12664  0091CE                     i2l4889:
 12665                           
 12666                           ; BSR set to: 2
 12667                           ;boostercomms.c: 573: commandResponseUS = recvFrameUS;
 12668  0091CE  C007  F3E6         	movff	ProcessRXFrame@recvFrameUS,_commandResponseUS
 12669  0091D2  C008  F3E7         	movff	ProcessRXFrame@recvFrameUS+1,_commandResponseUS+1
 12670  0091D6  0012               	return	
 12671  0091D8                     __end_of_ProcessRXFrame:
 12672                           	opt stack 0
 12673                           pclatu	equ	0xFFB
 12674                           pclath	equ	0xFFA
 12675                           tblptru	equ	0xFF8
 12676                           tblptrh	equ	0xFF7
 12677                           tblptrl	equ	0xFF6
 12678                           tablat	equ	0xFF5
 12679                           prodh	equ	0xFF4
 12680                           prodl	equ	0xFF3
 12681                           intcon	equ	0xFF2
 12682                           postinc0	equ	0xFEE
 12683                           fsr0h	equ	0xFEA
 12684                           fsr0l	equ	0xFE9
 12685                           wreg	equ	0xFE8
 12686                           indf1	equ	0xFE7
 12687                           postinc1	equ	0xFE6
 12688                           postdec1	equ	0xFE5
 12689                           fsr1h	equ	0xFE2
 12690                           fsr1l	equ	0xFE1
 12691                           indf2	equ	0xFDF
 12692                           postinc2	equ	0xFDE
 12693                           postdec2	equ	0xFDD
 12694                           plusw2	equ	0xFDB
 12695                           fsr2h	equ	0xFDA
 12696                           fsr2l	equ	0xFD9
 12697                           status	equ	0xFD8
 12698                           
 12699 ;; *************** function _InitEarthLeakage *****************
 12700 ;; Defined at:
 12701 ;;		line 66 in file "peripherals.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;		None
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;		None
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  1    wreg      void 
 12708 ;; Registers used:
 12709 ;;		wreg, status,2
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 0/0
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 12715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12719 ;;Total ram usage:        0 bytes
 12720 ;; Hardware stack levels used:    1
 12721 ;; This function calls:
 12722 ;;		Nothing
 12723 ;; This function is called by:
 12724 ;;		_BoosterDataCommandComms
 12725 ;; This function uses a non-reentrant model
 12726 ;;
 12727                           
 12728                           	psect	text64
 12729  00B552                     __ptext64:
 12730                           	opt stack 0
 12731  00B552                     _InitEarthLeakage:
 12732                           	opt stack 22
 12733                           
 12734                           ;peripherals.c: 67: counterELTFailures =0;
 12735                           
 12736                           ;incstack = 0
 12737  00B552  0E00               	movlw	0
 12738  00B554  0103               	movlb	3	; () banked
 12739  00B556  6F46               	movwf	(_counterELTFailures+1)& (0+255),b
 12740  00B558  0E00               	movlw	0
 12741  00B55A  6F45               	movwf	_counterELTFailures& (0+255),b
 12742                           
 12743                           ;peripherals.c: 68: counterELTTests=0;
 12744  00B55C  0E00               	movlw	0
 12745  00B55E  0103               	movlb	3	; () banked
 12746  00B560  6F48               	movwf	(_counterELTTests+1)& (0+255),b
 12747  00B562  0E00               	movlw	0
 12748  00B564  6F47               	movwf	_counterELTTests& (0+255),b
 12749                           
 12750                           ; BSR set to: 3
 12751                           ;peripherals.c: 69: LATDbits.LATD1 = 0;
 12752  00B566  928C               	bcf	3980,1,c	;volatile
 12753                           
 12754                           ; BSR set to: 3
 12755                           ;peripherals.c: 70: LATCbits.LATC4 = 1;
 12756  00B568  888B               	bsf	3979,4,c	;volatile
 12757                           
 12758                           ; BSR set to: 3
 12759  00B56A  0012               	return		;funcret
 12760  00B56C                     __end_of_InitEarthLeakage:
 12761                           	opt stack 0
 12762                           pclatu	equ	0xFFB
 12763                           pclath	equ	0xFFA
 12764                           tblptru	equ	0xFF8
 12765                           tblptrh	equ	0xFF7
 12766                           tblptrl	equ	0xFF6
 12767                           tablat	equ	0xFF5
 12768                           prodh	equ	0xFF4
 12769                           prodl	equ	0xFF3
 12770                           intcon	equ	0xFF2
 12771                           postinc0	equ	0xFEE
 12772                           fsr0h	equ	0xFEA
 12773                           fsr0l	equ	0xFE9
 12774                           wreg	equ	0xFE8
 12775                           indf1	equ	0xFE7
 12776                           postinc1	equ	0xFE6
 12777                           postdec1	equ	0xFE5
 12778                           fsr1h	equ	0xFE2
 12779                           fsr1l	equ	0xFE1
 12780                           indf2	equ	0xFDF
 12781                           postinc2	equ	0xFDE
 12782                           postdec2	equ	0xFDD
 12783                           plusw2	equ	0xFDB
 12784                           fsr2h	equ	0xFDA
 12785                           fsr2l	equ	0xFD9
 12786                           status	equ	0xFD8
 12787                           
 12788 ;; *************** function _CheckLineFault *****************
 12789 ;; Defined at:
 12790 ;;		line 418 in file "boostercomms.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;		None
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  i               2   12[COMRAM] int 
 12795 ;;  i               2   14[COMRAM] int 
 12796 ;;  lineVoltUS      2   10[COMRAM] unsigned short 
 12797 ;;  activeWindow    2    8[COMRAM] int 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  1    wreg      void 
 12800 ;; Registers used:
 12801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 12807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12810 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12811 ;;Total ram usage:       10 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; Hardware stack levels required when called:    1
 12814 ;; This function calls:
 12815 ;;		_ReadAnalogVoltage
 12816 ;;		___wmul
 12817 ;; This function is called by:
 12818 ;;		_BoosterDataCommandComms
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822                           	psect	text65
 12823  009C48                     __ptext65:
 12824                           	opt stack 0
 12825  009C48                     _CheckLineFault:
 12826                           	opt stack 21
 12827                           
 12828                           ;boostercomms.c: 419: unsigned short lineVoltUS;
 12829                           ;boostercomms.c: 421: lineVoltUS = ReadAnalogVoltage(2);
 12830                           
 12831                           ; BSR set to: 3
 12832                           ;incstack = 0
 12833  009C48  0E02               	movlw	2
 12834  009C4A  EC3D  F058         	call	_ReadAnalogVoltage
 12835  009C4E  C001  F00B         	movff	?_ReadAnalogVoltage,CheckLineFault@lineVoltUS
 12836  009C52  C002  F00C         	movff	?_ReadAnalogVoltage+1,CheckLineFault@lineVoltUS+1
 12837                           
 12838                           ;boostercomms.c: 423: commsOffsetADCValueUS = 0;
 12839  009C56  0E00               	movlw	0
 12840  009C58  0102               	movlb	2	; () banked
 12841  009C5A  6F90               	movwf	(_commsOffsetADCValueUS+1)& (0+255),b
 12842  009C5C  0E00               	movlw	0
 12843  009C5E  6F8F               	movwf	_commsOffsetADCValueUS& (0+255),b
 12844                           
 12845                           ; BSR set to: 2
 12846                           ;boostercomms.c: 424: for(int i = 100; i<=500; i=i+100){
 12847  009C60  0E00               	movlw	0
 12848  009C62  6E10               	movwf	CheckLineFault@i+1,c
 12849  009C64  0E64               	movlw	100
 12850  009C66  6E0F               	movwf	CheckLineFault@i,c
 12851  009C68                     i2l4921:
 12852                           
 12853                           ; BSR set to: 2
 12854  009C68  BE10               	btfsc	CheckLineFault@i+1,7,c
 12855  009C6A  D006               	goto	i2l4925
 12856  009C6C  0EF5               	movlw	245
 12857  009C6E  5C0F               	subwf	CheckLineFault@i,w,c
 12858  009C70  0E01               	movlw	1
 12859  009C72  5810               	subwfb	CheckLineFault@i+1,w,c
 12860  009C74  B0D8               	btfsc	status,0,c
 12861  009C76  D01C               	goto	i2l4935
 12862  009C78                     i2l4925:
 12863                           
 12864                           ;boostercomms.c: 425: if(lineVoltUS>=i){
 12865  009C78  500F               	movf	CheckLineFault@i,w,c
 12866  009C7A  5C0B               	subwf	CheckLineFault@lineVoltUS,w,c
 12867  009C7C  5010               	movf	CheckLineFault@i+1,w,c
 12868  009C7E  580C               	subwfb	CheckLineFault@lineVoltUS+1,w,c
 12869  009C80  A0D8               	btfss	status,0,c
 12870  009C82  D00B               	goto	i2l4929
 12871                           
 12872                           ;boostercomms.c: 426: commsOffsetADCValueUS=commsOffsetADCValueUS+60;
 12873  009C84  0E3C               	movlw	60
 12874  009C86  0102               	movlb	2	; () banked
 12875  009C88  258F               	addwf	_commsOffsetADCValueUS& (0+255),w,b
 12876  009C8A  0102               	movlb	2	; () banked
 12877  009C8C  6F8F               	movwf	_commsOffsetADCValueUS& (0+255),b
 12878  009C8E  0E00               	movlw	0
 12879  009C90  0102               	movlb	2	; () banked
 12880  009C92  2190               	addwfc	(_commsOffsetADCValueUS+1)& (0+255),w,b
 12881  009C94  0102               	movlb	2	; () banked
 12882  009C96  6F90               	movwf	(_commsOffsetADCValueUS+1)& (0+255),b
 12883                           
 12884                           ;boostercomms.c: 427: }
 12885  009C98  D004               	goto	i2l4931
 12886  009C9A                     i2l4929:
 12887                           
 12888                           ;boostercomms.c: 428: else{
 12889                           ;boostercomms.c: 429: i=600;
 12890  009C9A  0E02               	movlw	2
 12891  009C9C  6E10               	movwf	CheckLineFault@i+1,c
 12892  009C9E  0E58               	movlw	88
 12893  009CA0  6E0F               	movwf	CheckLineFault@i,c
 12894  009CA2                     i2l4931:
 12895  009CA2  0E64               	movlw	100
 12896  009CA4  240F               	addwf	CheckLineFault@i,w,c
 12897  009CA6  6E0F               	movwf	CheckLineFault@i,c
 12898  009CA8  0E00               	movlw	0
 12899  009CAA  2010               	addwfc	CheckLineFault@i+1,w,c
 12900  009CAC  6E10               	movwf	CheckLineFault@i+1,c
 12901  009CAE  D7DC               	goto	i2l4921
 12902  009CB0                     i2l4935:
 12903                           
 12904                           ;boostercomms.c: 430: }
 12905                           ;boostercomms.c: 431: }
 12906                           ;boostercomms.c: 432: int activeWindowCounter=0;
 12907  009CB0  0E00               	movlw	0
 12908  009CB2  6E0A               	movwf	CheckLineFault@activeWindowCounter+1,c
 12909  009CB4  0E00               	movlw	0
 12910  009CB6  6E09               	movwf	CheckLineFault@activeWindowCounter,c
 12911                           
 12912                           ;boostercomms.c: 434: for(int i = 0; i < 30; i++){
 12913  009CB8  0E00               	movlw	0
 12914  009CBA  6E0E               	movwf	CheckLineFault@i_1334+1,c
 12915  009CBC  0E00               	movlw	0
 12916  009CBE  6E0D               	movwf	CheckLineFault@i_1334,c
 12917  009CC0                     i2l4937:
 12918  009CC0  BE0E               	btfsc	CheckLineFault@i_1334+1,7,c
 12919  009CC2  D006               	goto	i2l4941
 12920  009CC4  500E               	movf	CheckLineFault@i_1334+1,w,c
 12921  009CC6  E113               	bnz	i2l4947
 12922  009CC8  0E1E               	movlw	30
 12923  009CCA  5C0D               	subwf	CheckLineFault@i_1334,w,c
 12924  009CCC  B0D8               	btfsc	status,0,c
 12925  009CCE  D00F               	goto	i2l4947
 12926  009CD0                     i2l4941:
 12927                           
 12928                           ;boostercomms.c: 435: if(!(boosterCommsData[4][i] == 10))
 12929  009CD0  0E78               	movlw	low (_boosterCommsData+120)
 12930  009CD2  240D               	addwf	CheckLineFault@i_1334,w,c
 12931  009CD4  6ED9               	movwf	fsr2l,c
 12932  009CD6  0E04               	movlw	high (_boosterCommsData+120)
 12933  009CD8  200E               	addwfc	CheckLineFault@i_1334+1,w,c
 12934  009CDA  6EDA               	movwf	fsr2h,c
 12935  009CDC  0E0A               	movlw	10
 12936  009CDE  18DE               	xorwf	postinc2,w,c
 12937  009CE0  B4D8               	btfsc	status,2,c
 12938  009CE2  D002               	goto	i2l416
 12939                           
 12940                           ;boostercomms.c: 436: activeWindowCounter++;
 12941  009CE4  4A09               	infsnz	CheckLineFault@activeWindowCounter,f,c
 12942  009CE6  2A0A               	incf	CheckLineFault@activeWindowCounter+1,f,c
 12943  009CE8                     i2l416:
 12944  009CE8  4A0D               	infsnz	CheckLineFault@i_1334,f,c
 12945  009CEA  2A0E               	incf	CheckLineFault@i_1334+1,f,c
 12946  009CEC  D7E9               	goto	i2l4937
 12947  009CEE                     i2l4947:
 12948                           
 12949                           ;boostercomms.c: 437: }
 12950                           ;boostercomms.c: 439: if(lineVoltUS > (74+(activeWindowCounter*11))){
 12951  009CEE  C009  F001         	movff	CheckLineFault@activeWindowCounter,___wmul@multiplier
 12952  009CF2  C00A  F002         	movff	CheckLineFault@activeWindowCounter+1,___wmul@multiplier+1
 12953  009CF6  0E00               	movlw	0
 12954  009CF8  6E04               	movwf	___wmul@multiplicand+1,c
 12955  009CFA  0E0B               	movlw	11
 12956  009CFC  6E03               	movwf	___wmul@multiplicand,c
 12957  009CFE  EC1A  F05A         	call	___wmul	;wreg free
 12958  009D02  0E4A               	movlw	74
 12959  009D04  2601               	addwf	?___wmul,f,c
 12960  009D06  0E00               	movlw	0
 12961  009D08  2202               	addwfc	?___wmul+1,f,c
 12962  009D0A  500B               	movf	CheckLineFault@lineVoltUS,w,c
 12963  009D0C  5C01               	subwf	?___wmul,w,c
 12964  009D0E  500C               	movf	CheckLineFault@lineVoltUS+1,w,c
 12965  009D10  5802               	subwfb	?___wmul+1,w,c
 12966  009D12  B0D8               	btfsc	status,0,c
 12967  009D14  D02B               	goto	i2l4963
 12968                           
 12969                           ;boostercomms.c: 440: if(cableFaultCounter<3)
 12970  009D16  0E03               	movlw	3
 12971  009D18  0102               	movlb	2	; () banked
 12972  009D1A  61A0               	cpfslt	_cableFaultCounter& (0+255),b
 12973  009D1C  D002               	goto	i2l4953
 12974                           
 12975                           ; BSR set to: 2
 12976                           ;boostercomms.c: 441: cableFaultCounter++;
 12977  009D1E  0102               	movlb	2	; () banked
 12978  009D20  2BA0               	incf	_cableFaultCounter& (0+255),f,b
 12979  009D22                     i2l4953:
 12980                           
 12981                           ; BSR set to: 2
 12982                           ;boostercomms.c: 442: if(cableFaultCounter==3){
 12983  009D22  0E03               	movlw	3
 12984  009D24  0102               	movlb	2	; () banked
 12985  009D26  19A0               	xorwf	_cableFaultCounter& (0+255),w,b
 12986  009D28  A4D8               	btfss	status,2,c
 12987  009D2A  0012               	return	
 12988                           
 12989                           ; BSR set to: 2
 12990                           ;boostercomms.c: 443: statusFlagsUSLG |= 0b000000000000000001000000;
 12991  009D2C  0102               	movlb	2	; () banked
 12992  009D2E  8D8A               	bsf	_statusFlagsUSLG& (0+255),6,b	;volatile
 12993                           
 12994                           ; BSR set to: 2
 12995                           ;boostercomms.c: 444: if(lineVoltUS > (369+(activeWindowCounter*11)))
 12996  009D30  0E71               	movlw	113
 12997  009D32  6E07               	movwf	??_CheckLineFault& (0+255),c
 12998  009D34  0E01               	movlw	1
 12999  009D36  6E08               	movwf	(??_CheckLineFault+1)& (0+255),c
 13000  009D38  C009  F001         	movff	CheckLineFault@activeWindowCounter,___wmul@multiplier
 13001  009D3C  C00A  F002         	movff	CheckLineFault@activeWindowCounter+1,___wmul@multiplier+1
 13002  009D40  0E00               	movlw	0
 13003  009D42  6E04               	movwf	___wmul@multiplicand+1,c
 13004  009D44  0E0B               	movlw	11
 13005  009D46  6E03               	movwf	___wmul@multiplicand,c
 13006  009D48  EC1A  F05A         	call	___wmul	;wreg free
 13007  009D4C  5007               	movf	??_CheckLineFault,w,c
 13008  009D4E  2601               	addwf	?___wmul,f,c
 13009  009D50  5008               	movf	??_CheckLineFault+1,w,c
 13010  009D52  2202               	addwfc	?___wmul+1,f,c
 13011  009D54  500B               	movf	CheckLineFault@lineVoltUS,w,c
 13012  009D56  5C01               	subwf	?___wmul,w,c
 13013  009D58  500C               	movf	CheckLineFault@lineVoltUS+1,w,c
 13014  009D5A  5802               	subwfb	?___wmul+1,w,c
 13015  009D5C  B0D8               	btfsc	status,0,c
 13016  009D5E  D003               	goto	i2l4961
 13017                           
 13018                           ;boostercomms.c: 445: statusFlagsUSLG |= 0b010000000000000000000000;
 13019  009D60  0102               	movlb	2	; () banked
 13020  009D62  8D8C               	bsf	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
 13021  009D64  0012               	return	
 13022  009D66                     i2l4961:
 13023                           
 13024                           ;boostercomms.c: 446: else
 13025                           ;boostercomms.c: 447: statusFlagsUSLG &= ~0b010000000000000000000000;
 13026  009D66  0102               	movlb	2	; () banked
 13027  009D68  9D8C               	bcf	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
 13028                           
 13029                           ; BSR set to: 2
 13030                           ;boostercomms.c: 449: }
 13031                           ;boostercomms.c: 450: }
 13032                           
 13033                           ; BSR set to: 2
 13034  009D6A  0012               	return	
 13035  009D6C                     i2l4963:
 13036                           
 13037                           ;boostercomms.c: 451: else{
 13038                           ;boostercomms.c: 452: cableFaultCounter=0;
 13039  009D6C  0E00               	movlw	0
 13040  009D6E  0102               	movlb	2	; () banked
 13041  009D70  6FA0               	movwf	_cableFaultCounter& (0+255),b
 13042                           
 13043                           ; BSR set to: 2
 13044                           ;boostercomms.c: 453: statusFlagsUSLG &= ~0b000000000000000001000000;
 13045  009D72  0102               	movlb	2	; () banked
 13046  009D74  9D8A               	bcf	_statusFlagsUSLG& (0+255),6,b	;volatile
 13047                           
 13048                           ; BSR set to: 2
 13049                           ;boostercomms.c: 454: statusFlagsUSLG &= ~0b010000000000000000000000;
 13050  009D76  0102               	movlb	2	; () banked
 13051  009D78  9D8C               	bcf	(_statusFlagsUSLG+2)& (0+255),6,b	;volatile
 13052  009D7A  0012               	return	
 13053  009D7C                     __end_of_CheckLineFault:
 13054                           	opt stack 0
 13055                           pclatu	equ	0xFFB
 13056                           pclath	equ	0xFFA
 13057                           tblptru	equ	0xFF8
 13058                           tblptrh	equ	0xFF7
 13059                           tblptrl	equ	0xFF6
 13060                           tablat	equ	0xFF5
 13061                           prodh	equ	0xFF4
 13062                           prodl	equ	0xFF3
 13063                           intcon	equ	0xFF2
 13064                           postinc0	equ	0xFEE
 13065                           fsr0h	equ	0xFEA
 13066                           fsr0l	equ	0xFE9
 13067                           wreg	equ	0xFE8
 13068                           indf1	equ	0xFE7
 13069                           postinc1	equ	0xFE6
 13070                           postdec1	equ	0xFE5
 13071                           fsr1h	equ	0xFE2
 13072                           fsr1l	equ	0xFE1
 13073                           indf2	equ	0xFDF
 13074                           postinc2	equ	0xFDE
 13075                           postdec2	equ	0xFDD
 13076                           plusw2	equ	0xFDB
 13077                           fsr2h	equ	0xFDA
 13078                           fsr2l	equ	0xFD9
 13079                           status	equ	0xFD8
 13080                           
 13081 ;; *************** function ___wmul *****************
 13082 ;; Defined at:
 13083 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;  multiplier      2    0[COMRAM] unsigned int 
 13086 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13087 ;; Auto vars:     Size  Location     Type
 13088 ;;  product         2    4[COMRAM] unsigned int 
 13089 ;; Return value:  Size  Location     Type
 13090 ;;                  2    0[COMRAM] unsigned int 
 13091 ;; Registers used:
 13092 ;;		wreg, status,2, status,0, prodl, prodh
 13093 ;; Tracked objects:
 13094 ;;		On entry : 0/0
 13095 ;;		On exit  : 0/0
 13096 ;;		Unchanged: 0/0
 13097 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 13098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13102 ;;Total ram usage:        6 bytes
 13103 ;; Hardware stack levels used:    1
 13104 ;; This function calls:
 13105 ;;		Nothing
 13106 ;; This function is called by:
 13107 ;;		_CheckLineFault
 13108 ;; This function uses a non-reentrant model
 13109 ;;
 13110                           
 13111                           	psect	text66
 13112  00B434                     __ptext66:
 13113                           	opt stack 0
 13114  00B434                     ___wmul:
 13115                           	opt stack 21
 13116                           
 13117                           ; BSR set to: 2
 13118                           ;incstack = 0
 13119  00B434  5001               	movf	___wmul@multiplier,w,c
 13120  00B436  0203               	mulwf	___wmul@multiplicand,c
 13121  00B438  CFF3 F005          	movff	prodl,___wmul@product
 13122  00B43C  CFF4 F006          	movff	prodh,___wmul@product+1
 13123  00B440  5001               	movf	___wmul@multiplier,w,c
 13124  00B442  0204               	mulwf	___wmul@multiplicand+1,c
 13125  00B444  50F3               	movf	prodl,w,c
 13126  00B446  2606               	addwf	___wmul@product+1,f,c
 13127  00B448  5002               	movf	___wmul@multiplier+1,w,c
 13128  00B44A  0203               	mulwf	___wmul@multiplicand,c
 13129  00B44C  50F3               	movf	prodl,w,c
 13130  00B44E  2606               	addwf	___wmul@product+1,f,c
 13131  00B450  C005  F001         	movff	___wmul@product,?___wmul
 13132  00B454  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13133  00B458  0012               	return	
 13134  00B45A                     __end_of___wmul:
 13135                           	opt stack 0
 13136                           pclatu	equ	0xFFB
 13137                           pclath	equ	0xFFA
 13138                           tblptru	equ	0xFF8
 13139                           tblptrh	equ	0xFF7
 13140                           tblptrl	equ	0xFF6
 13141                           tablat	equ	0xFF5
 13142                           prodh	equ	0xFF4
 13143                           prodl	equ	0xFF3
 13144                           intcon	equ	0xFF2
 13145                           postinc0	equ	0xFEE
 13146                           fsr0h	equ	0xFEA
 13147                           fsr0l	equ	0xFE9
 13148                           wreg	equ	0xFE8
 13149                           indf1	equ	0xFE7
 13150                           postinc1	equ	0xFE6
 13151                           postdec1	equ	0xFE5
 13152                           fsr1h	equ	0xFE2
 13153                           fsr1l	equ	0xFE1
 13154                           indf2	equ	0xFDF
 13155                           postinc2	equ	0xFDE
 13156                           postdec2	equ	0xFDD
 13157                           plusw2	equ	0xFDB
 13158                           fsr2h	equ	0xFDA
 13159                           fsr2l	equ	0xFD9
 13160                           status	equ	0xFD8
 13161                           
 13162 ;; *************** function _ReadAnalogVoltage *****************
 13163 ;; Defined at:
 13164 ;;		line 46 in file "peripherals.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  channelC        1    wreg     unsigned char 
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;  channelC        1    2[COMRAM] unsigned char 
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  2    0[COMRAM] unsigned short 
 13171 ;; Registers used:
 13172 ;;		wreg, status,2, status,0
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 13178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13181 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13182 ;;Total ram usage:        3 bytes
 13183 ;; Hardware stack levels used:    1
 13184 ;; This function calls:
 13185 ;;		Nothing
 13186 ;; This function is called by:
 13187 ;;		_BoosterDataCommandComms
 13188 ;;		_CheckLineFault
 13189 ;;		_ReadEarthLeakage
 13190 ;;		_ReadKeySwitch
 13191 ;; This function uses a non-reentrant model
 13192 ;;
 13193                           
 13194                           	psect	text67
 13195  00B07A                     __ptext67:
 13196                           	opt stack 0
 13197  00B07A                     _ReadAnalogVoltage:
 13198                           	opt stack 21
 13199                           
 13200                           ;incstack = 0
 13201                           ;ReadAnalogVoltage@channelC stored from wreg
 13202  00B07A  6E03               	movwf	ReadAnalogVoltage@channelC,c
 13203                           
 13204                           ;peripherals.c: 48: switch(channelC){
 13205  00B07C  D00D               	goto	i2l4551
 13206  00B07E                     i2l4543:
 13207                           
 13208                           ;peripherals.c: 50: ADCON0bits.CHS = 0b0110;
 13209  00B07E  50C2               	movf	4034,w,c	;volatile
 13210  00B080  0BC3               	andlw	-61
 13211  00B082  0918               	iorlw	24
 13212  00B084  D007               	goto	L7
 13213  00B086                     i2l4545:
 13214                           
 13215                           ;peripherals.c: 53: ADCON0bits.CHS = 0b1010;
 13216  00B086  50C2               	movf	4034,w,c	;volatile
 13217  00B088  0BC3               	andlw	-61
 13218  00B08A  0928               	iorlw	40
 13219  00B08C  D003               	goto	L7
 13220  00B08E                     i2l4547:
 13221                           
 13222                           ;peripherals.c: 56: ADCON0bits.CHS = 0b0001;
 13223  00B08E  50C2               	movf	4034,w,c	;volatile
 13224  00B090  0BC3               	andlw	-61
 13225  00B092  0904               	iorlw	4
 13226  00B094                     L7:
 13227  00B094  6EC2               	movwf	4034,c	;volatile
 13228                           
 13229                           ;peripherals.c: 58: }
 13230                           
 13231                           ;peripherals.c: 57: break;
 13232  00B096  D00A               	goto	i2l1026
 13233  00B098                     i2l4551:
 13234  00B098  5003               	movf	ReadAnalogVoltage@channelC,w,c
 13235                           
 13236                           ; Switch size 1, requested type "space"
 13237                           ; Number of cases is 3, Range of values is 0 to 2
 13238                           ; switch strategies available:
 13239                           ; Name         Instructions Cycles
 13240                           ; simple_byte           10     6 (average)
 13241                           ;	Chosen strategy is simple_byte
 13242  00B09A  0A00               	xorlw	0	; case 0
 13243  00B09C  B4D8               	btfsc	status,2,c
 13244  00B09E  D7EF               	goto	i2l4543
 13245  00B0A0  0A01               	xorlw	1	; case 1
 13246  00B0A2  B4D8               	btfsc	status,2,c
 13247  00B0A4  D7F0               	goto	i2l4545
 13248  00B0A6  0A03               	xorlw	3	; case 2
 13249  00B0A8  B4D8               	btfsc	status,2,c
 13250  00B0AA  D7F1               	goto	i2l4547
 13251  00B0AC                     i2l1026:
 13252                           
 13253                           ;peripherals.c: 60: ADCON0bits.GO_nDONE = 1;
 13254  00B0AC  82C2               	bsf	4034,1,c	;volatile
 13255  00B0AE                     i2l1029:
 13256  00B0AE  B2C2               	btfsc	4034,1,c	;volatile
 13257  00B0B0  D7FE               	goto	i2l1029
 13258                           
 13259                           ;peripherals.c: 63: return ADRES;
 13260  00B0B2  CFC3 F001          	movff	4035,?_ReadAnalogVoltage	;volatile
 13261  00B0B6  CFC4 F002          	movff	4036,?_ReadAnalogVoltage+1	;volatile
 13262  00B0BA  0012               	return		;funcret
 13263  00B0BC                     __end_of_ReadAnalogVoltage:
 13264                           	opt stack 0
 13265                           pclatu	equ	0xFFB
 13266                           pclath	equ	0xFFA
 13267                           tblptru	equ	0xFF8
 13268                           tblptrh	equ	0xFF7
 13269                           tblptrl	equ	0xFF6
 13270                           tablat	equ	0xFF5
 13271                           prodh	equ	0xFF4
 13272                           prodl	equ	0xFF3
 13273                           intcon	equ	0xFF2
 13274                           postinc0	equ	0xFEE
 13275                           fsr0h	equ	0xFEA
 13276                           fsr0l	equ	0xFE9
 13277                           wreg	equ	0xFE8
 13278                           indf1	equ	0xFE7
 13279                           postinc1	equ	0xFE6
 13280                           postdec1	equ	0xFE5
 13281                           fsr1h	equ	0xFE2
 13282                           fsr1l	equ	0xFE1
 13283                           indf2	equ	0xFDF
 13284                           postinc2	equ	0xFDE
 13285                           postdec2	equ	0xFDD
 13286                           plusw2	equ	0xFDB
 13287                           fsr2h	equ	0xFDA
 13288                           fsr2l	equ	0xFD9
 13289                           status	equ	0xFD8
 13290                           
 13291 ;; *************** function _BoosterCommsDispatcher *****************
 13292 ;; Defined at:
 13293 ;;		line 805 in file "boostercomms.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;		None
 13296 ;; Auto vars:     Size  Location     Type
 13297 ;;		None
 13298 ;; Return value:  Size  Location     Type
 13299 ;;                  1    wreg      void 
 13300 ;; Registers used:
 13301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13302 ;; Tracked objects:
 13303 ;;		On entry : 0/0
 13304 ;;		On exit  : 0/0
 13305 ;;		Unchanged: 0/0
 13306 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 13307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13311 ;;Total ram usage:        1 bytes
 13312 ;; Hardware stack levels used:    1
 13313 ;; Hardware stack levels required when called:    5
 13314 ;; This function calls:
 13315 ;;		_BoosterCommsActive
 13316 ;;		_BoosterQueryStart
 13317 ;;		_CheckDataCollision
 13318 ;;		_LowestMissingSerial
 13319 ;;		_NewBoosterAdded
 13320 ;;		_QueryWinSerial
 13321 ;;		_SetWindowID
 13322 ;;		i2_ClearPastValues
 13323 ;; This function is called by:
 13324 ;;		_isr
 13325 ;; This function uses a non-reentrant model
 13326 ;;
 13327                           
 13328                           	psect	text68
 13329  00A27A                     __ptext68:
 13330                           	opt stack 0
 13331  00A27A                     _BoosterCommsDispatcher:
 13332                           	opt stack 18
 13333                           
 13334                           ;boostercomms.c: 808: if(BoosterCommsActive() || !(statusFlagsUSLG & 0b00000000100000000
      +                          0000000))
 13335                           
 13336                           ;incstack = 0
 13337  00A27A  ECF4  F05A         	call	_BoosterCommsActive	;wreg free
 13338  00A27E  0900               	iorlw	0
 13339  00A280  A4D8               	btfss	status,2,c
 13340  00A282  0012               	return	
 13341  00A284  0102               	movlb	2	; () banked
 13342  00A286  AF8B               	btfss	(_statusFlagsUSLG+1)& (0+255),7,b	;volatile
 13343  00A288  0012               	return	
 13344                           
 13345                           ; BSR set to: 2
 13346                           ;boostercomms.c: 811: __nop();
 13347                           
 13348                           ; BSR set to: 2
 13349                           ;boostercomms.c: 809: return;
 13350  00A28A  F000               	nop	
 13351                           
 13352                           ;boostercomms.c: 813: if((dispStatusUCS == 4) || CheckDataCollision() || NewBoosterAdded
      +                          ()){
 13353  00A28C  0E04               	movlw	4
 13354  00A28E  0102               	movlb	2	; () banked
 13355  00A290  199C               	xorwf	_dispStatusUCS& (0+255),w,b
 13356  00A292  B4D8               	btfsc	status,2,c
 13357  00A294  D00A               	goto	i2l5953
 13358                           
 13359                           ; BSR set to: 2
 13360  00A296  ECDA  F059         	call	_CheckDataCollision	;wreg free
 13361  00A29A  0900               	iorlw	0
 13362  00A29C  A4D8               	btfss	status,2,c
 13363  00A29E  D005               	goto	i2l5953
 13364  00A2A0  EC8C  F05A         	call	_NewBoosterAdded	;wreg free
 13365  00A2A4  0900               	iorlw	0
 13366  00A2A6  B4D8               	btfsc	status,2,c
 13367  00A2A8  D013               	goto	i2l5967
 13368  00A2AA                     i2l5953:
 13369                           
 13370                           ;boostercomms.c: 814: if(SetWindowID()){
 13371  00A2AA  ECEC  F048         	call	_SetWindowID	;wreg free
 13372  00A2AE  0900               	iorlw	0
 13373  00A2B0  B4D8               	btfsc	status,2,c
 13374  00A2B2  D00A               	goto	i2l5963
 13375                           
 13376                           ;boostercomms.c: 815: dispStatusUCS = 0;
 13377  00A2B4  0E00               	movlw	0
 13378  00A2B6  0102               	movlb	2	; () banked
 13379  00A2B8  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13380                           
 13381                           ; BSR set to: 2
 13382                           ;boostercomms.c: 816: statusFlagsUSLG |= 0b000001000000000000000000;
 13383  00A2BA  0102               	movlb	2	; () banked
 13384  00A2BC  858C               	bsf	(_statusFlagsUSLG+2)& (0+255),2,b	;volatile
 13385                           
 13386                           ; BSR set to: 2
 13387                           ;boostercomms.c: 817: statusFlagsUSLG &= ~0b000000100000000000000000;
 13388  00A2BE  0102               	movlb	2	; () banked
 13389  00A2C0  938C               	bcf	(_statusFlagsUSLG+2)& (0+255),1,b	;volatile
 13390                           
 13391                           ; BSR set to: 2
 13392                           ;boostercomms.c: 818: ClearPastValues();
 13393  00A2C2  ECC2  F05A         	call	i2_ClearPastValues	;wreg free
 13394                           
 13395                           ;boostercomms.c: 819: }else{
 13396  00A2C6  D004               	goto	i2l5967
 13397  00A2C8                     i2l5963:
 13398                           
 13399                           ;boostercomms.c: 820: dispStatusUCS = 4;
 13400  00A2C8  0E04               	movlw	4
 13401  00A2CA  0102               	movlb	2	; () banked
 13402  00A2CC  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13403                           
 13404                           ; BSR set to: 2
 13405                           ;boostercomms.c: 821: return;
 13406  00A2CE  0012               	return	
 13407  00A2D0                     i2l5967:
 13408                           
 13409                           ;boostercomms.c: 822: }
 13410                           ;boostercomms.c: 823: }
 13411                           ;boostercomms.c: 825: if((dispStatusUCS == 5) || (LowestMissingSerial() < 30)){
 13412  00A2D0  0E05               	movlw	5
 13413  00A2D2  0102               	movlb	2	; () banked
 13414  00A2D4  199C               	xorwf	_dispStatusUCS& (0+255),w,b
 13415  00A2D6  B4D8               	btfsc	status,2,c
 13416  00A2D8  D008               	goto	i2l5971
 13417                           
 13418                           ; BSR set to: 2
 13419  00A2DA  EC37  F057         	call	_LowestMissingSerial	;wreg free
 13420  00A2DE  0102               	movlb	2	; () banked
 13421  00A2E0  6F0B               	movwf	??_BoosterCommsDispatcher& (0+255),b
 13422  00A2E2  0E1E               	movlw	30
 13423  00A2E4  0102               	movlb	2	; () banked
 13424  00A2E6  610B               	cpfslt	??_BoosterCommsDispatcher& (0+255),b
 13425  00A2E8  D02D               	goto	i2l6001
 13426  00A2EA                     i2l5971:
 13427                           
 13428                           ; BSR set to: 2
 13429                           ;boostercomms.c: 826: if(QueryWinSerial()){
 13430  00A2EA  EC13  F04C         	call	_QueryWinSerial	;wreg free
 13431  00A2EE  0900               	iorlw	0
 13432  00A2F0  B4D8               	btfsc	status,2,c
 13433  00A2F2  D008               	goto	i2l5979
 13434                           
 13435                           ;boostercomms.c: 827: dispStatusUCS = 0;
 13436  00A2F4  0E00               	movlw	0
 13437  00A2F6  0102               	movlb	2	; () banked
 13438  00A2F8  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13439                           
 13440                           ; BSR set to: 2
 13441                           ;boostercomms.c: 828: statusFlagsUSLG |= 0b000001000000000000000000;
 13442  00A2FA  0102               	movlb	2	; () banked
 13443  00A2FC  858C               	bsf	(_statusFlagsUSLG+2)& (0+255),2,b	;volatile
 13444                           
 13445                           ; BSR set to: 2
 13446                           ;boostercomms.c: 829: statusFlagsUSLG &= ~0b000000100000000000000000;
 13447  00A2FE  0102               	movlb	2	; () banked
 13448  00A300  938C               	bcf	(_statusFlagsUSLG+2)& (0+255),1,b	;volatile
 13449                           
 13450                           ;boostercomms.c: 830: }else{
 13451  00A302  D020               	goto	i2l6001
 13452  00A304                     i2l5979:
 13453                           
 13454                           ;boostercomms.c: 831: dispStatusUCS = 5;
 13455  00A304  0E05               	movlw	5
 13456  00A306  0102               	movlb	2	; () banked
 13457  00A308  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13458                           
 13459                           ; BSR set to: 2
 13460                           ;boostercomms.c: 832: return;
 13461  00A30A  0012               	return	
 13462  00A30C                     i2l5983:
 13463                           
 13464                           ; BSR set to: 2
 13465                           ;boostercomms.c: 838: BoosterQueryStart(0b000);
 13466  00A30C  0E00               	movlw	0
 13467  00A30E  EC2D  F05A         	call	_BoosterQueryStart
 13468                           
 13469                           ;boostercomms.c: 839: dispStatusUCS = 2;
 13470  00A312  0E02               	movlw	2
 13471  00A314  0102               	movlb	2	; () banked
 13472  00A316  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13473                           
 13474                           ;boostercomms.c: 840: break;
 13475  00A318  0012               	return	
 13476  00A31A                     i2l5987:
 13477                           
 13478                           ; BSR set to: 2
 13479                           ;boostercomms.c: 842: BoosterQueryStart(0b010);
 13480  00A31A  0E02               	movlw	2
 13481  00A31C  EC2D  F05A         	call	_BoosterQueryStart
 13482                           
 13483                           ;boostercomms.c: 843: dispStatusUCS = 3;
 13484  00A320  0E03               	movlw	3
 13485  00A322  0102               	movlb	2	; () banked
 13486  00A324  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13487                           
 13488                           ;boostercomms.c: 844: break;
 13489  00A326  0012               	return	
 13490  00A328                     i2l5991:
 13491                           
 13492                           ; BSR set to: 2
 13493                           ;boostercomms.c: 846: BoosterQueryStart(0b011);
 13494  00A328  0E03               	movlw	3
 13495  00A32A  EC2D  F05A         	call	_BoosterQueryStart
 13496                           
 13497                           ;boostercomms.c: 847: dispStatusUCS = 1;
 13498  00A32E  0E01               	movlw	1
 13499  00A330  0102               	movlb	2	; () banked
 13500  00A332  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13501                           
 13502                           ;boostercomms.c: 848: break;
 13503  00A334  0012               	return	
 13504  00A336                     i2l5995:
 13505                           
 13506                           ; BSR set to: 2
 13507                           ;boostercomms.c: 850: BoosterQueryStart(0b001);
 13508  00A336  0E01               	movlw	1
 13509  00A338  EC2D  F05A         	call	_BoosterQueryStart
 13510                           
 13511                           ;boostercomms.c: 851: dispStatusUCS = 0;
 13512  00A33C  0E00               	movlw	0
 13513  00A33E  0102               	movlb	2	; () banked
 13514  00A340  6F9C               	movwf	_dispStatusUCS& (0+255),b
 13515                           
 13516                           ; BSR set to: 2
 13517                           ;boostercomms.c: 853: }
 13518                           
 13519                           ;boostercomms.c: 852: break;
 13520  00A342  0012               	return	
 13521  00A344                     i2l6001:
 13522                           
 13523                           ; BSR set to: 2
 13524  00A344  0102               	movlb	2	; () banked
 13525  00A346  519C               	movf	_dispStatusUCS& (0+255),w,b
 13526                           
 13527                           ; Switch size 1, requested type "space"
 13528                           ; Number of cases is 4, Range of values is 0 to 3
 13529                           ; switch strategies available:
 13530                           ; Name         Instructions Cycles
 13531                           ; simple_byte           13     7 (average)
 13532                           ;	Chosen strategy is simple_byte
 13533  00A348  0A00               	xorlw	0	; case 0
 13534  00A34A  B4D8               	btfsc	status,2,c
 13535  00A34C  D7DF               	goto	i2l5983
 13536  00A34E  0A01               	xorlw	1	; case 1
 13537  00A350  B4D8               	btfsc	status,2,c
 13538  00A352  D7F1               	goto	i2l5995
 13539  00A354  0A03               	xorlw	3	; case 2
 13540  00A356  B4D8               	btfsc	status,2,c
 13541  00A358  D7E0               	goto	i2l5987
 13542  00A35A  0A01               	xorlw	1	; case 3
 13543  00A35C  A4D8               	btfss	status,2,c
 13544  00A35E  0012               	return	
 13545  00A360  D7E3               	goto	i2l5991
 13546  00A362                     __end_of_BoosterCommsDispatcher:
 13547                           	opt stack 0
 13548                           pclatu	equ	0xFFB
 13549                           pclath	equ	0xFFA
 13550                           tblptru	equ	0xFF8
 13551                           tblptrh	equ	0xFF7
 13552                           tblptrl	equ	0xFF6
 13553                           tablat	equ	0xFF5
 13554                           prodh	equ	0xFF4
 13555                           prodl	equ	0xFF3
 13556                           intcon	equ	0xFF2
 13557                           postinc0	equ	0xFEE
 13558                           fsr0h	equ	0xFEA
 13559                           fsr0l	equ	0xFE9
 13560                           wreg	equ	0xFE8
 13561                           indf1	equ	0xFE7
 13562                           postinc1	equ	0xFE6
 13563                           postdec1	equ	0xFE5
 13564                           fsr1h	equ	0xFE2
 13565                           fsr1l	equ	0xFE1
 13566                           indf2	equ	0xFDF
 13567                           postinc2	equ	0xFDE
 13568                           postdec2	equ	0xFDD
 13569                           plusw2	equ	0xFDB
 13570                           fsr2h	equ	0xFDA
 13571                           fsr2l	equ	0xFD9
 13572                           status	equ	0xFD8
 13573                           
 13574 ;; *************** function i2_ClearPastValues *****************
 13575 ;; Defined at:
 13576 ;;		line 279 in file "mastercomms.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;		None
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;  ClearPastVal    1    1[COMRAM] unsigned char 
 13581 ;; Return value:  Size  Location     Type
 13582 ;;                  1    wreg      void 
 13583 ;; Registers used:
 13584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13585 ;; Tracked objects:
 13586 ;;		On entry : 0/0
 13587 ;;		On exit  : 0/0
 13588 ;;		Unchanged: 0/0
 13589 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 13590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13594 ;;Total ram usage:        1 bytes
 13595 ;; Hardware stack levels used:    1
 13596 ;; Hardware stack levels required when called:    1
 13597 ;; This function calls:
 13598 ;;		i2_ClearPastValue
 13599 ;; This function is called by:
 13600 ;;		_BoosterCommsDispatcher
 13601 ;;		i2_ForceFiringMode
 13602 ;; This function uses a non-reentrant model
 13603 ;;
 13604                           
 13605                           	psect	text69
 13606  00B584                     __ptext69:
 13607                           	opt stack 0
 13608  00B584                     i2_ClearPastValues:
 13609                           	opt stack 21
 13610                           
 13611                           ;mastercomms.c: 280: unsigned char boosterCountUC;
 13612                           ;mastercomms.c: 282: for(boosterCountUC = 0; boosterCountUC < 31; boosterCountUC++)
 13613                           
 13614                           ;incstack = 0
 13615  00B584  0E00               	movlw	0
 13616  00B586  6E02               	movwf	i2ClearPastValues@boosterCountUC,c
 13617  00B588                     i2l5475:
 13618  00B588  0E1E               	movlw	30
 13619  00B58A  6402               	cpfsgt	i2ClearPastValues@boosterCountUC,c
 13620  00B58C  D001               	goto	i2l5479
 13621  00B58E  0012               	return	
 13622  00B590                     i2l5479:
 13623                           
 13624                           ;mastercomms.c: 283: ClearPastValue(boosterCountUC);
 13625  00B590  5002               	movf	i2ClearPastValues@boosterCountUC,w,c
 13626  00B592  EC4F  F056         	call	i2_ClearPastValue
 13627  00B596  2A02               	incf	i2ClearPastValues@boosterCountUC,f,c
 13628  00B598  D7F7               	goto	i2l5475
 13629  00B59A                     __end_ofi2_ClearPastValues:
 13630                           	opt stack 0
 13631                           pclatu	equ	0xFFB
 13632                           pclath	equ	0xFFA
 13633                           tblptru	equ	0xFF8
 13634                           tblptrh	equ	0xFF7
 13635                           tblptrl	equ	0xFF6
 13636                           tablat	equ	0xFF5
 13637                           prodh	equ	0xFF4
 13638                           prodl	equ	0xFF3
 13639                           intcon	equ	0xFF2
 13640                           postinc0	equ	0xFEE
 13641                           fsr0h	equ	0xFEA
 13642                           fsr0l	equ	0xFE9
 13643                           wreg	equ	0xFE8
 13644                           indf1	equ	0xFE7
 13645                           postinc1	equ	0xFE6
 13646                           postdec1	equ	0xFE5
 13647                           fsr1h	equ	0xFE2
 13648                           fsr1l	equ	0xFE1
 13649                           indf2	equ	0xFDF
 13650                           postinc2	equ	0xFDE
 13651                           postdec2	equ	0xFDD
 13652                           plusw2	equ	0xFDB
 13653                           fsr2h	equ	0xFDA
 13654                           fsr2l	equ	0xFD9
 13655                           status	equ	0xFD8
 13656                           
 13657 ;; *************** function _SetWindowID *****************
 13658 ;; Defined at:
 13659 ;;		line 665 in file "boostercomms.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;		None
 13662 ;; Auto vars:     Size  Location     Type
 13663 ;;		None
 13664 ;; Return value:  Size  Location     Type
 13665 ;;                  1    wreg      unsigned char 
 13666 ;; Registers used:
 13667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13668 ;; Tracked objects:
 13669 ;;		On entry : 0/0
 13670 ;;		On exit  : 0/0
 13671 ;;		Unchanged: 0/0
 13672 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 13673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13675 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13676 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13677 ;;Total ram usage:        3 bytes
 13678 ;; Hardware stack levels used:    1
 13679 ;; Hardware stack levels required when called:    4
 13680 ;; This function calls:
 13681 ;;		_AssignSerialNumber
 13682 ;;		_AssignWindowID
 13683 ;;		_BoosterCommandStart
 13684 ;;		_WindowIDBacktrack
 13685 ;;		i2_ResetBoosterStates
 13686 ;; This function is called by:
 13687 ;;		_BoosterCommsDispatcher
 13688 ;; This function uses a non-reentrant model
 13689 ;;
 13690                           
 13691                           	psect	text70
 13692  0091D8                     __ptext70:
 13693                           	opt stack 0
 13694  0091D8                     _SetWindowID:
 13695                           	opt stack 18
 13696                           
 13697                           ;boostercomms.c: 666: static unsigned char statusSetIDUCS;
 13698                           ;boostercomms.c: 667: static unsigned char currentBitUCS;
 13699                           ;boostercomms.c: 668: static unsigned short currentSerialUSS;
 13700                           ;boostercomms.c: 685: if(statusSetIDUCS == 4){
 13701                           
 13702                           ;incstack = 0
 13703  0091D8  0E04               	movlw	4
 13704  0091DA  0102               	movlb	2	; () banked
 13705  0091DC  19AE               	xorwf	SetWindowID@statusSetIDUCS& (0+255),w,b
 13706  0091DE  A4D8               	btfss	status,2,c
 13707  0091E0  D08F               	goto	i2l5075
 13708                           
 13709                           ; BSR set to: 2
 13710                           ;boostercomms.c: 686: __nop();
 13711  0091E2  F000               	nop	
 13712                           
 13713                           ;boostercomms.c: 687: if((statusFlagsUSLG & 0b000000000000100000000000) &&
 13714                           ;boostercomms.c: 688: !(statusFlagsUSLG & 0b000000000100000000000000) &&
 13715                           ;boostercomms.c: 689: ((statusFlagsUSLG & 0b000000000010000000000000) ||!(statusFlagsUSL
      +                          G & 0b000000000001000000000000))){
 13716  0091E4  0102               	movlb	2	; () banked
 13717  0091E6  A78B               	btfss	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 13718  0091E8  D015               	goto	i2l534
 13719                           
 13720                           ; BSR set to: 2
 13721  0091EA  0102               	movlb	2	; () banked
 13722  0091EC  BD8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 13723  0091EE  D012               	goto	i2l534
 13724                           
 13725                           ; BSR set to: 2
 13726  0091F0  0102               	movlb	2	; () banked
 13727  0091F2  BB8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),5,b	;volatile
 13728  0091F4  D003               	goto	i2l5039
 13729                           
 13730                           ; BSR set to: 2
 13731  0091F6  0102               	movlb	2	; () banked
 13732  0091F8  B98B               	btfsc	(_statusFlagsUSLG+1)& (0+255),4,b	;volatile
 13733  0091FA  D00C               	goto	i2l534
 13734  0091FC                     i2l5039:
 13735                           
 13736                           ; BSR set to: 2
 13737                           ;boostercomms.c: 690: BoosterCommandStart(currentSerialUSS, 0b000, currentBitUCS);
 13738  0091FC  C2AB  F007         	movff	SetWindowID@currentSerialUSS,BoosterCommandStart@destSerialUS
 13739  009200  C2AC  F008         	movff	SetWindowID@currentSerialUSS+1,BoosterCommandStart@destSerialUS+1
 13740  009204  0E00               	movlw	0
 13741  009206  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 13742  009208  C2AD  F00A         	movff	SetWindowID@currentBitUCS,BoosterCommandStart@destPayloadUC
 13743  00920C  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 13744                           
 13745                           ;boostercomms.c: 691: return 0;
 13746  009210  0E00               	movlw	0
 13747  009212  0012               	return	
 13748  009214                     i2l534:
 13749                           
 13750                           ; BSR set to: 2
 13751                           ;boostercomms.c: 692: }
 13752                           ;boostercomms.c: 693: if(!(statusFlagsUSLG & 0b000000000000100000000000)){
 13753  009214  0102               	movlb	2	; () banked
 13754  009216  B78B               	btfsc	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 13755  009218  D055               	goto	i2l538
 13756                           
 13757                           ; BSR set to: 2
 13758                           ;boostercomms.c: 694: if(!(currentSerialUSS & (1 << currentBitUCS))){
 13759  00921A  C2AD  F208         	movff	SetWindowID@currentBitUCS,??_SetWindowID
 13760  00921E  0E01               	movlw	1
 13761  009220  0102               	movlb	2	; () banked
 13762  009222  6F09               	movwf	(??_SetWindowID+1)& (0+255),b
 13763  009224  0E00               	movlw	0
 13764  009226  0102               	movlb	2	; () banked
 13765  009228  6F0A               	movwf	(??_SetWindowID+2)& (0+255),b
 13766  00922A  0102               	movlb	2	; () banked
 13767  00922C  2B08               	incf	??_SetWindowID& (0+255),f,b
 13768  00922E  D004               	goto	i2u479_44
 13769  009230                     i2u479_45:
 13770  009230  90D8               	bcf	status,0,c
 13771  009232  0102               	movlb	2	; () banked
 13772  009234  3709               	rlcf	(??_SetWindowID+1)& (0+255),f,b
 13773  009236  370A               	rlcf	(??_SetWindowID+2)& (0+255),f,b
 13774  009238                     i2u479_44:
 13775  009238  0102               	movlb	2	; () banked
 13776  00923A  2F08               	decfsz	??_SetWindowID& (0+255),f,b
 13777  00923C  D7F9               	goto	i2u479_45
 13778  00923E  0102               	movlb	2	; () banked
 13779  009240  51AB               	movf	SetWindowID@currentSerialUSS& (0+255),w,b
 13780  009242  0102               	movlb	2	; () banked
 13781  009244  1709               	andwf	(??_SetWindowID+1)& (0+255),f,b
 13782  009246  0102               	movlb	2	; () banked
 13783  009248  51AC               	movf	(SetWindowID@currentSerialUSS+1)& (0+255),w,b
 13784  00924A  0102               	movlb	2	; () banked
 13785  00924C  170A               	andwf	(??_SetWindowID+2)& (0+255),f,b
 13786  00924E  0102               	movlb	2	; () banked
 13787  009250  5109               	movf	(??_SetWindowID+1)& (0+255),w,b
 13788  009252  0102               	movlb	2	; () banked
 13789  009254  110A               	iorwf	(??_SetWindowID+2)& (0+255),w,b
 13790  009256  A4D8               	btfss	status,2,c
 13791  009258  D026               	goto	i2l5057
 13792                           
 13793                           ; BSR set to: 2
 13794                           ;boostercomms.c: 695: currentSerialUSS |= (1 << currentBitUCS);
 13795  00925A  C2AD  F208         	movff	SetWindowID@currentBitUCS,??_SetWindowID
 13796  00925E  0E01               	movlw	1
 13797  009260  0102               	movlb	2	; () banked
 13798  009262  6F09               	movwf	(??_SetWindowID+1)& (0+255),b
 13799  009264  0E00               	movlw	0
 13800  009266  0102               	movlb	2	; () banked
 13801  009268  6F0A               	movwf	(??_SetWindowID+2)& (0+255),b
 13802  00926A  0102               	movlb	2	; () banked
 13803  00926C  2B08               	incf	??_SetWindowID& (0+255),f,b
 13804  00926E  D004               	goto	i2u481_44
 13805  009270                     i2u481_45:
 13806  009270  90D8               	bcf	status,0,c
 13807  009272  0102               	movlb	2	; () banked
 13808  009274  3709               	rlcf	(??_SetWindowID+1)& (0+255),f,b
 13809  009276  370A               	rlcf	(??_SetWindowID+2)& (0+255),f,b
 13810  009278                     i2u481_44:
 13811  009278  0102               	movlb	2	; () banked
 13812  00927A  2F08               	decfsz	??_SetWindowID& (0+255),f,b
 13813  00927C  D7F9               	goto	i2u481_45
 13814  00927E  0102               	movlb	2	; () banked
 13815  009280  5109               	movf	(??_SetWindowID+1)& (0+255),w,b
 13816  009282  0102               	movlb	2	; () banked
 13817  009284  13AB               	iorwf	SetWindowID@currentSerialUSS& (0+255),f,b
 13818  009286  0102               	movlb	2	; () banked
 13819  009288  510A               	movf	(??_SetWindowID+2)& (0+255),w,b
 13820  00928A  0102               	movlb	2	; () banked
 13821  00928C  13AC               	iorwf	(SetWindowID@currentSerialUSS+1)& (0+255),f,b
 13822                           
 13823                           ; BSR set to: 2
 13824                           ;boostercomms.c: 696: BoosterCommandStart(currentSerialUSS, 0b000, currentBitUCS);
 13825  00928E  C2AB  F007         	movff	SetWindowID@currentSerialUSS,BoosterCommandStart@destSerialUS
 13826  009292  C2AC  F008         	movff	SetWindowID@currentSerialUSS+1,BoosterCommandStart@destSerialUS+1
 13827  009296  0E00               	movlw	0
 13828  009298  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 13829  00929A  C2AD  F00A         	movff	SetWindowID@currentBitUCS,BoosterCommandStart@destPayloadUC
 13830  00929E  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 13831  0092A2                     i2l5051:
 13832                           
 13833                           ;boostercomms.c: 697: return 0;
 13834  0092A2  0E00               	movlw	0
 13835  0092A4  0012               	return	
 13836  0092A6                     i2l5057:
 13837                           
 13838                           ;boostercomms.c: 699: return WindowIDBacktrack(&currentBitUCS, &currentSerialUSS, &statu
      +                          sSetIDUCS);
 13839  0092A6  0EAD               	movlw	low SetWindowID@currentBitUCS
 13840  0092A8  6E16               	movwf	WindowIDBacktrack@currentBitUC,c
 13841  0092AA  0E02               	movlw	high SetWindowID@currentBitUCS
 13842  0092AC  6E17               	movwf	WindowIDBacktrack@currentBitUC+1,c
 13843  0092AE  0EAB               	movlw	low SetWindowID@currentSerialUSS
 13844  0092B0  6E18               	movwf	WindowIDBacktrack@currentSerialUS,c
 13845  0092B2  0E02               	movlw	high SetWindowID@currentSerialUSS
 13846  0092B4  6E19               	movwf	WindowIDBacktrack@currentSerialUS+1,c
 13847  0092B6  0EAE               	movlw	low SetWindowID@statusSetIDUCS
 13848  0092B8  6E1A               	movwf	WindowIDBacktrack@statusSetIDUC,c
 13849  0092BA  0E02               	movlw	high SetWindowID@statusSetIDUCS
 13850  0092BC  6E1B               	movwf	WindowIDBacktrack@statusSetIDUC+1,c
 13851  0092BE  EC31  F04B         	call	_WindowIDBacktrack	;wreg free
 13852  0092C2  0012               	return	
 13853  0092C4                     i2l538:
 13854                           
 13855                           ; BSR set to: 2
 13856  0092C4  0102               	movlb	2	; () banked
 13857  0092C6  BD8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 13858  0092C8  D004               	goto	i2l5065
 13859                           
 13860                           ; BSR set to: 2
 13861                           ;boostercomms.c: 701: AssignWindowID();
 13862  0092CA  EC0B  F057         	call	_AssignWindowID	;wreg free
 13863                           
 13864                           ;boostercomms.c: 702: statusSetIDUCS = 5;
 13865  0092CE  0E05               	movlw	5
 13866  0092D0  D0A8               	goto	L8
 13867  0092D2                     i2l5065:
 13868                           
 13869                           ; BSR set to: 2
 13870                           ;boostercomms.c: 704: if(++currentBitUCS == 14){
 13871  0092D2  0102               	movlb	2	; () banked
 13872  0092D4  2BAD               	incf	SetWindowID@currentBitUCS& (0+255),f,b
 13873  0092D6  0E0E               	movlw	14
 13874  0092D8  0102               	movlb	2	; () banked
 13875  0092DA  19AD               	xorwf	SetWindowID@currentBitUCS& (0+255),w,b
 13876  0092DC  A4D8               	btfss	status,2,c
 13877  0092DE  D005               	goto	i2l5073
 13878                           
 13879                           ; BSR set to: 2
 13880                           ;boostercomms.c: 705: statusSetIDUCS = 0;
 13881  0092E0  0E00               	movlw	0
 13882  0092E2  0102               	movlb	2	; () banked
 13883  0092E4  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 13884                           
 13885                           ; BSR set to: 2
 13886                           ;boostercomms.c: 706: return 1;
 13887  0092E6  0E01               	movlw	1
 13888                           
 13889                           ; BSR set to: 2
 13890  0092E8  0012               	return	
 13891  0092EA                     i2l5073:
 13892                           
 13893                           ; BSR set to: 2
 13894                           ;boostercomms.c: 707: }
 13895                           ;boostercomms.c: 708: BoosterCommandStart(currentSerialUSS, 0b000, currentBitUCS);
 13896  0092EA  C2AB  F007         	movff	SetWindowID@currentSerialUSS,BoosterCommandStart@destSerialUS
 13897  0092EE  C2AC  F008         	movff	SetWindowID@currentSerialUSS+1,BoosterCommandStart@destSerialUS+1
 13898  0092F2  0E00               	movlw	0
 13899  0092F4  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 13900  0092F6  C2AD  F00A         	movff	SetWindowID@currentBitUCS,BoosterCommandStart@destPayloadUC
 13901  0092FA  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 13902                           
 13903                           ;boostercomms.c: 709: }
 13904                           ;boostercomms.c: 710: }else if(statusSetIDUCS == 5){
 13905  0092FE  D0A1               	goto	i2l5129
 13906  009300                     i2l5075:
 13907  009300  0E05               	movlw	5
 13908  009302  0102               	movlb	2	; () banked
 13909  009304  19AE               	xorwf	SetWindowID@statusSetIDUCS& (0+255),w,b
 13910  009306  A4D8               	btfss	status,2,c
 13911  009308  D057               	goto	i2l5095
 13912                           
 13913                           ; BSR set to: 2
 13914                           ;boostercomms.c: 711: statusSetIDUCS = 4;
 13915  00930A  0E04               	movlw	4
 13916  00930C  0102               	movlb	2	; () banked
 13917  00930E  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 13918                           
 13919                           ; BSR set to: 2
 13920                           ;boostercomms.c: 712: if(!(currentSerialUSS & (1 << currentBitUCS))){
 13921  009310  C2AD  F208         	movff	SetWindowID@currentBitUCS,??_SetWindowID
 13922  009314  0E01               	movlw	1
 13923  009316  0102               	movlb	2	; () banked
 13924  009318  6F09               	movwf	(??_SetWindowID+1)& (0+255),b
 13925  00931A  0E00               	movlw	0
 13926  00931C  0102               	movlb	2	; () banked
 13927  00931E  6F0A               	movwf	(??_SetWindowID+2)& (0+255),b
 13928  009320  0102               	movlb	2	; () banked
 13929  009322  2B08               	incf	??_SetWindowID& (0+255),f,b
 13930  009324  D004               	goto	i2u485_44
 13931  009326                     i2u485_45:
 13932  009326  90D8               	bcf	status,0,c
 13933  009328  0102               	movlb	2	; () banked
 13934  00932A  3709               	rlcf	(??_SetWindowID+1)& (0+255),f,b
 13935  00932C  370A               	rlcf	(??_SetWindowID+2)& (0+255),f,b
 13936  00932E                     i2u485_44:
 13937  00932E  0102               	movlb	2	; () banked
 13938  009330  2F08               	decfsz	??_SetWindowID& (0+255),f,b
 13939  009332  D7F9               	goto	i2u485_45
 13940  009334  0102               	movlb	2	; () banked
 13941  009336  51AB               	movf	SetWindowID@currentSerialUSS& (0+255),w,b
 13942  009338  0102               	movlb	2	; () banked
 13943  00933A  1709               	andwf	(??_SetWindowID+1)& (0+255),f,b
 13944  00933C  0102               	movlb	2	; () banked
 13945  00933E  51AC               	movf	(SetWindowID@currentSerialUSS+1)& (0+255),w,b
 13946  009340  0102               	movlb	2	; () banked
 13947  009342  170A               	andwf	(??_SetWindowID+2)& (0+255),f,b
 13948  009344  0102               	movlb	2	; () banked
 13949  009346  5109               	movf	(??_SetWindowID+1)& (0+255),w,b
 13950  009348  0102               	movlb	2	; () banked
 13951  00934A  110A               	iorwf	(??_SetWindowID+2)& (0+255),w,b
 13952  00934C  A4D8               	btfss	status,2,c
 13953  00934E  D025               	goto	i2l5091
 13954                           
 13955                           ; BSR set to: 2
 13956                           ;boostercomms.c: 713: currentSerialUSS |= (1 << currentBitUCS);
 13957  009350  C2AD  F208         	movff	SetWindowID@currentBitUCS,??_SetWindowID
 13958  009354  0E01               	movlw	1
 13959  009356  0102               	movlb	2	; () banked
 13960  009358  6F09               	movwf	(??_SetWindowID+1)& (0+255),b
 13961  00935A  0E00               	movlw	0
 13962  00935C  0102               	movlb	2	; () banked
 13963  00935E  6F0A               	movwf	(??_SetWindowID+2)& (0+255),b
 13964  009360  0102               	movlb	2	; () banked
 13965  009362  2B08               	incf	??_SetWindowID& (0+255),f,b
 13966  009364  D004               	goto	i2u487_44
 13967  009366                     i2u487_45:
 13968  009366  90D8               	bcf	status,0,c
 13969  009368  0102               	movlb	2	; () banked
 13970  00936A  3709               	rlcf	(??_SetWindowID+1)& (0+255),f,b
 13971  00936C  370A               	rlcf	(??_SetWindowID+2)& (0+255),f,b
 13972  00936E                     i2u487_44:
 13973  00936E  0102               	movlb	2	; () banked
 13974  009370  2F08               	decfsz	??_SetWindowID& (0+255),f,b
 13975  009372  D7F9               	goto	i2u487_45
 13976  009374  0102               	movlb	2	; () banked
 13977  009376  5109               	movf	(??_SetWindowID+1)& (0+255),w,b
 13978  009378  0102               	movlb	2	; () banked
 13979  00937A  13AB               	iorwf	SetWindowID@currentSerialUSS& (0+255),f,b
 13980  00937C  0102               	movlb	2	; () banked
 13981  00937E  510A               	movf	(??_SetWindowID+2)& (0+255),w,b
 13982  009380  0102               	movlb	2	; () banked
 13983  009382  13AC               	iorwf	(SetWindowID@currentSerialUSS+1)& (0+255),f,b
 13984                           
 13985                           ; BSR set to: 2
 13986                           ;boostercomms.c: 714: BoosterCommandStart(currentSerialUSS, 0b000, currentBitUCS);
 13987  009384  C2AB  F007         	movff	SetWindowID@currentSerialUSS,BoosterCommandStart@destSerialUS
 13988  009388  C2AC  F008         	movff	SetWindowID@currentSerialUSS+1,BoosterCommandStart@destSerialUS+1
 13989  00938C  0E00               	movlw	0
 13990  00938E  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 13991  009390  C2AD  F00A         	movff	SetWindowID@currentBitUCS,BoosterCommandStart@destPayloadUC
 13992  009394  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 13993  009398  D784               	goto	i2l5051
 13994  00939A                     i2l5091:
 13995                           
 13996                           ;boostercomms.c: 717: return WindowIDBacktrack(&currentBitUCS, &currentSerialUSS, &statu
      +                          sSetIDUCS);
 13997  00939A  0EAD               	movlw	low SetWindowID@currentBitUCS
 13998  00939C  6E16               	movwf	WindowIDBacktrack@currentBitUC,c
 13999  00939E  0E02               	movlw	high SetWindowID@currentBitUCS
 14000  0093A0  6E17               	movwf	WindowIDBacktrack@currentBitUC+1,c
 14001  0093A2  0EAB               	movlw	low SetWindowID@currentSerialUSS
 14002  0093A4  6E18               	movwf	WindowIDBacktrack@currentSerialUS,c
 14003  0093A6  0E02               	movlw	high SetWindowID@currentSerialUSS
 14004  0093A8  6E19               	movwf	WindowIDBacktrack@currentSerialUS+1,c
 14005  0093AA  0EAE               	movlw	low SetWindowID@statusSetIDUCS
 14006  0093AC  6E1A               	movwf	WindowIDBacktrack@statusSetIDUC,c
 14007  0093AE  0E02               	movlw	high SetWindowID@statusSetIDUCS
 14008  0093B0  6E1B               	movwf	WindowIDBacktrack@statusSetIDUC+1,c
 14009  0093B2  EC31  F04B         	call	_WindowIDBacktrack	;wreg free
 14010  0093B6  0012               	return	
 14011  0093B8                     i2l5095:
 14012  0093B8  0E03               	movlw	3
 14013  0093BA  0102               	movlb	2	; () banked
 14014  0093BC  19AE               	xorwf	SetWindowID@statusSetIDUCS& (0+255),w,b
 14015  0093BE  A4D8               	btfss	status,2,c
 14016  0093C0  D01A               	goto	i2l5109
 14017                           
 14018                           ; BSR set to: 2
 14019                           ;boostercomms.c: 719: ResetBoosterStates();
 14020  0093C2  ECCD  F05A         	call	i2_ResetBoosterStates	;wreg free
 14021                           
 14022                           ;boostercomms.c: 720: statusFlagsUSLG |= 0b000000100000000000000000;
 14023  0093C6  0102               	movlb	2	; () banked
 14024  0093C8  838C               	bsf	(_statusFlagsUSLG+2)& (0+255),1,b	;volatile
 14025                           
 14026                           ; BSR set to: 2
 14027                           ;boostercomms.c: 721: currentBitUCS = 0;
 14028  0093CA  0E00               	movlw	0
 14029  0093CC  0102               	movlb	2	; () banked
 14030  0093CE  6FAD               	movwf	SetWindowID@currentBitUCS& (0+255),b
 14031                           
 14032                           ; BSR set to: 2
 14033                           ;boostercomms.c: 722: currentSerialUSS = 0;
 14034  0093D0  0E00               	movlw	0
 14035  0093D2  0102               	movlb	2	; () banked
 14036  0093D4  6FAC               	movwf	(SetWindowID@currentSerialUSS+1)& (0+255),b
 14037  0093D6  0E00               	movlw	0
 14038  0093D8  6FAB               	movwf	SetWindowID@currentSerialUSS& (0+255),b
 14039                           
 14040                           ; BSR set to: 2
 14041                           ;boostercomms.c: 723: statusSetIDUCS = 4;
 14042  0093DA  0E04               	movlw	4
 14043  0093DC  0102               	movlb	2	; () banked
 14044  0093DE  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 14045                           
 14046                           ; BSR set to: 2
 14047                           ;boostercomms.c: 724: BoosterCommandStart(0, 0b000, 0);
 14048  0093E0  0E00               	movlw	0
 14049  0093E2  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 14050  0093E4  0E00               	movlw	0
 14051  0093E6  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 14052  0093E8  0E00               	movlw	0
 14053  0093EA  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 14054  0093EC  0E00               	movlw	0
 14055  0093EE  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 14056  0093F0  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 14057                           
 14058                           ;boostercomms.c: 725: }else if(statusSetIDUCS == 1){
 14059  0093F4  D026               	goto	i2l5129
 14060  0093F6                     i2l5109:
 14061  0093F6  0102               	movlb	2	; () banked
 14062  0093F8  05AE               	decf	SetWindowID@statusSetIDUCS& (0+255),w,b
 14063  0093FA  A4D8               	btfss	status,2,c
 14064  0093FC  D015               	goto	i2l5125
 14065                           
 14066                           ; BSR set to: 2
 14067                           ;boostercomms.c: 726: if((statusFlagsUSLG & 0b000000000000100000000000) && !(statusFlags
      +                          USLG & 0b000000000100000000000000))
 14068  0093FE  0102               	movlb	2	; () banked
 14069  009400  A78B               	btfss	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 14070  009402  D006               	goto	i2l553
 14071                           
 14072                           ; BSR set to: 2
 14073  009404  0102               	movlb	2	; () banked
 14074  009406  BD8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 14075  009408  D003               	goto	i2l553
 14076                           
 14077                           ; BSR set to: 2
 14078                           ;boostercomms.c: 727: AssignSerialNumber();
 14079  00940A  EC40  F05A         	call	_AssignSerialNumber	;wreg free
 14080  00940E  D008               	goto	i2l5123
 14081  009410                     i2l553:
 14082                           
 14083                           ; BSR set to: 2
 14084                           ;boostercomms.c: 728: else if(statusFlagsUSLG & 0b000000000100000000000000){
 14085  009410  0102               	movlb	2	; () banked
 14086  009412  AD8B               	btfss	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 14087  009414  D005               	goto	i2l5123
 14088                           
 14089                           ; BSR set to: 2
 14090                           ;boostercomms.c: 729: statusSetIDUCS = 0;
 14091  009416  0E00               	movlw	0
 14092  009418  0102               	movlb	2	; () banked
 14093  00941A  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 14094                           
 14095                           ; BSR set to: 2
 14096                           ;boostercomms.c: 730: return 1;
 14097  00941C  0E01               	movlw	1
 14098                           
 14099                           ; BSR set to: 2
 14100  00941E  0012               	return	
 14101  009420                     i2l5123:
 14102                           
 14103                           ;boostercomms.c: 731: }
 14104                           ;boostercomms.c: 732: statusSetIDUCS = 3;
 14105  009420  0E03               	movlw	3
 14106  009422                     L8:
 14107  009422  0102               	movlb	2	; () banked
 14108  009424  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 14109                           
 14110                           ;boostercomms.c: 733: }else{
 14111  009426  D00D               	goto	i2l5129
 14112  009428                     i2l5125:
 14113                           
 14114                           ; BSR set to: 2
 14115                           ;boostercomms.c: 734: statusSetIDUCS = 1;
 14116  009428  0E01               	movlw	1
 14117  00942A  0102               	movlb	2	; () banked
 14118  00942C  6FAE               	movwf	SetWindowID@statusSetIDUCS& (0+255),b
 14119                           
 14120                           ; BSR set to: 2
 14121                           ;boostercomms.c: 735: BoosterCommandStart(0x3FFE, 0b000, 13);
 14122  00942E  0E3F               	movlw	63
 14123  009430  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 14124  009432  0EFE               	movlw	254
 14125  009434  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 14126  009436  0E00               	movlw	0
 14127  009438  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 14128  00943A  0E0D               	movlw	13
 14129  00943C  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 14130  00943E  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 14131  009442                     i2l5129:
 14132                           
 14133                           ;boostercomms.c: 736: }
 14134                           ;boostercomms.c: 738: return 0;
 14135  009442  0E00               	movlw	0
 14136  009444  0012               	return	
 14137  009446                     __end_of_SetWindowID:
 14138                           	opt stack 0
 14139                           pclatu	equ	0xFFB
 14140                           pclath	equ	0xFFA
 14141                           tblptru	equ	0xFF8
 14142                           tblptrh	equ	0xFF7
 14143                           tblptrl	equ	0xFF6
 14144                           tablat	equ	0xFF5
 14145                           prodh	equ	0xFF4
 14146                           prodl	equ	0xFF3
 14147                           intcon	equ	0xFF2
 14148                           postinc0	equ	0xFEE
 14149                           fsr0h	equ	0xFEA
 14150                           fsr0l	equ	0xFE9
 14151                           wreg	equ	0xFE8
 14152                           indf1	equ	0xFE7
 14153                           postinc1	equ	0xFE6
 14154                           postdec1	equ	0xFE5
 14155                           fsr1h	equ	0xFE2
 14156                           fsr1l	equ	0xFE1
 14157                           indf2	equ	0xFDF
 14158                           postinc2	equ	0xFDE
 14159                           postdec2	equ	0xFDD
 14160                           plusw2	equ	0xFDB
 14161                           fsr2h	equ	0xFDA
 14162                           fsr2l	equ	0xFD9
 14163                           status	equ	0xFD8
 14164                           
 14165 ;; *************** function i2_ResetBoosterStates *****************
 14166 ;; Defined at:
 14167 ;;		line 589 in file "boostercomms.c"
 14168 ;; Parameters:    Size  Location     Type
 14169 ;;		None
 14170 ;; Auto vars:     Size  Location     Type
 14171 ;;  ResetBooster    1    1[COMRAM] unsigned char 
 14172 ;; Return value:  Size  Location     Type
 14173 ;;                  1    wreg      void 
 14174 ;; Registers used:
 14175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14176 ;; Tracked objects:
 14177 ;;		On entry : 0/0
 14178 ;;		On exit  : 0/0
 14179 ;;		Unchanged: 0/0
 14180 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14184 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14185 ;;Total ram usage:        1 bytes
 14186 ;; Hardware stack levels used:    1
 14187 ;; Hardware stack levels required when called:    1
 14188 ;; This function calls:
 14189 ;;		i2_ResetSingleBoosterState
 14190 ;; This function is called by:
 14191 ;;		_SetWindowID
 14192 ;;		i2_ForceFiringMode
 14193 ;; This function uses a non-reentrant model
 14194 ;;
 14195                           
 14196                           	psect	text71
 14197  00B59A                     __ptext71:
 14198                           	opt stack 0
 14199  00B59A                     i2_ResetBoosterStates:
 14200                           	opt stack 21
 14201                           
 14202                           ;boostercomms.c: 590: unsigned char boosterCountUC;
 14203                           ;boostercomms.c: 592: for(boosterCountUC = 0; boosterCountUC < 30; boosterCountUC++)
 14204                           
 14205                           ;incstack = 0
 14206  00B59A  0E00               	movlw	0
 14207  00B59C  6E02               	movwf	i2ResetBoosterStates@boosterCountUC,c
 14208  00B59E                     i2l4733:
 14209  00B59E  0E1D               	movlw	29
 14210  00B5A0  6402               	cpfsgt	i2ResetBoosterStates@boosterCountUC,c
 14211  00B5A2  D001               	goto	i2l4737
 14212  00B5A4  0012               	return	
 14213  00B5A6                     i2l4737:
 14214                           
 14215                           ;boostercomms.c: 593: ResetSingleBoosterState(boosterCountUC);
 14216  00B5A6  5002               	movf	i2ResetBoosterStates@boosterCountUC,w,c
 14217  00B5A8  EC80  F052         	call	i2_ResetSingleBoosterState
 14218  00B5AC  2A02               	incf	i2ResetBoosterStates@boosterCountUC,f,c
 14219  00B5AE  D7F7               	goto	i2l4733
 14220  00B5B0                     __end_ofi2_ResetBoosterStates:
 14221                           	opt stack 0
 14222                           pclatu	equ	0xFFB
 14223                           pclath	equ	0xFFA
 14224                           tblptru	equ	0xFF8
 14225                           tblptrh	equ	0xFF7
 14226                           tblptrl	equ	0xFF6
 14227                           tablat	equ	0xFF5
 14228                           prodh	equ	0xFF4
 14229                           prodl	equ	0xFF3
 14230                           intcon	equ	0xFF2
 14231                           postinc0	equ	0xFEE
 14232                           fsr0h	equ	0xFEA
 14233                           fsr0l	equ	0xFE9
 14234                           wreg	equ	0xFE8
 14235                           indf1	equ	0xFE7
 14236                           postinc1	equ	0xFE6
 14237                           postdec1	equ	0xFE5
 14238                           fsr1h	equ	0xFE2
 14239                           fsr1l	equ	0xFE1
 14240                           indf2	equ	0xFDF
 14241                           postinc2	equ	0xFDE
 14242                           postdec2	equ	0xFDD
 14243                           plusw2	equ	0xFDB
 14244                           fsr2h	equ	0xFDA
 14245                           fsr2l	equ	0xFD9
 14246                           status	equ	0xFD8
 14247                           
 14248 ;; *************** function _WindowIDBacktrack *****************
 14249 ;; Defined at:
 14250 ;;		line 624 in file "boostercomms.c"
 14251 ;; Parameters:    Size  Location     Type
 14252 ;;  currentBitUC    2   21[COMRAM] PTR unsigned char 
 14253 ;;		 -> SetWindowID@currentBitUCS(1), 
 14254 ;;  currentSeria    2   23[COMRAM] PTR unsigned short 
 14255 ;;		 -> SetWindowID@currentSerialUSS(2), 
 14256 ;;  statusSetIDU    2   25[COMRAM] PTR unsigned char 
 14257 ;;		 -> SetWindowID@statusSetIDUCS(1), 
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;		None
 14260 ;; Return value:  Size  Location     Type
 14261 ;;                  1    wreg      unsigned char 
 14262 ;; Registers used:
 14263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14264 ;; Tracked objects:
 14265 ;;		On entry : 0/0
 14266 ;;		On exit  : 0/0
 14267 ;;		Unchanged: 0/0
 14268 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14269 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14271 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14272 ;;      Totals:         6       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14273 ;;Total ram usage:       13 bytes
 14274 ;; Hardware stack levels used:    1
 14275 ;; Hardware stack levels required when called:    2
 14276 ;; This function calls:
 14277 ;;		_BoosterCommandStart
 14278 ;; This function is called by:
 14279 ;;		_SetWindowID
 14280 ;; This function uses a non-reentrant model
 14281 ;;
 14282                           
 14283                           	psect	text72
 14284  009662                     __ptext72:
 14285                           	opt stack 0
 14286  009662                     _WindowIDBacktrack:
 14287                           	opt stack 19
 14288                           
 14289                           ;boostercomms.c: 626: while(*currentBitUC && (*currentSerialUS & (1 << *currentBitUC))){
 14290                           
 14291                           ;incstack = 0
 14292  009662  D03D               	goto	i2l4571
 14293  009664                     i2l4567:
 14294                           
 14295                           ;boostercomms.c: 627: *currentSerialUS &= ~(*currentSerialUS & (1 << *currentBitUC));
 14296  009664  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14297  009668  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14298  00966C  CFDE F201          	movff	postinc2,??_WindowIDBacktrack
 14299  009670  CFDD F202          	movff	postdec2,??_WindowIDBacktrack+1
 14300  009674  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14301  009678  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14302  00967C  50DF               	movf	indf2,w,c
 14303  00967E  0102               	movlb	2	; () banked
 14304  009680  6F03               	movwf	(??_WindowIDBacktrack+2)& (0+255),b
 14305  009682  0E01               	movlw	1
 14306  009684  0102               	movlb	2	; () banked
 14307  009686  6F04               	movwf	(??_WindowIDBacktrack+3)& (0+255),b
 14308  009688  0E00               	movlw	0
 14309  00968A  0102               	movlb	2	; () banked
 14310  00968C  6F05               	movwf	(??_WindowIDBacktrack+4)& (0+255),b
 14311  00968E  0102               	movlb	2	; () banked
 14312  009690  2B03               	incf	(??_WindowIDBacktrack+2)& (0+255),f,b
 14313  009692  D004               	goto	i2u403_44
 14314  009694                     i2u403_45:
 14315  009694  90D8               	bcf	status,0,c
 14316  009696  0102               	movlb	2	; () banked
 14317  009698  3704               	rlcf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14318  00969A  3705               	rlcf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14319  00969C                     i2u403_44:
 14320  00969C  0102               	movlb	2	; () banked
 14321  00969E  2F03               	decfsz	(??_WindowIDBacktrack+2)& (0+255),f,b
 14322  0096A0  D7F9               	goto	i2u403_45
 14323  0096A2  0102               	movlb	2	; () banked
 14324  0096A4  5101               	movf	??_WindowIDBacktrack& (0+255),w,b
 14325  0096A6  0102               	movlb	2	; () banked
 14326  0096A8  1704               	andwf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14327  0096AA  0102               	movlb	2	; () banked
 14328  0096AC  5102               	movf	(??_WindowIDBacktrack+1)& (0+255),w,b
 14329  0096AE  0102               	movlb	2	; () banked
 14330  0096B0  1705               	andwf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14331  0096B2  0102               	movlb	2	; () banked
 14332  0096B4  1D04               	comf	(??_WindowIDBacktrack+3)& (0+255),w,b
 14333  0096B6  0102               	movlb	2	; () banked
 14334  0096B8  6F06               	movwf	(??_WindowIDBacktrack+5)& (0+255),b
 14335  0096BA  0102               	movlb	2	; () banked
 14336  0096BC  1D05               	comf	(??_WindowIDBacktrack+4)& (0+255),w,b
 14337  0096BE  0102               	movlb	2	; () banked
 14338  0096C0  6F07               	movwf	(??_WindowIDBacktrack+6)& (0+255),b
 14339  0096C2  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14340  0096C6  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14341  0096CA  0102               	movlb	2	; () banked
 14342  0096CC  5106               	movf	(??_WindowIDBacktrack+5)& (0+255),w,b
 14343  0096CE  16DE               	andwf	postinc2,f,c
 14344  0096D0  5107               	movf	(??_WindowIDBacktrack+6)& (0+255),w,b
 14345  0096D2  16DD               	andwf	postdec2,f,c
 14346                           
 14347                           ; BSR set to: 2
 14348                           ;boostercomms.c: 628: (*currentBitUC)--;
 14349  0096D4  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14350  0096D8  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14351  0096DC  06DF               	decf	indf2,f,c
 14352  0096DE                     i2l4571:
 14353  0096DE  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14354  0096E2  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14355  0096E6  50DF               	movf	indf2,w,c
 14356  0096E8  B4D8               	btfsc	status,2,c
 14357  0096EA  D02D               	goto	i2l4575
 14358  0096EC  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14359  0096F0  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14360  0096F4  CFDE F201          	movff	postinc2,??_WindowIDBacktrack
 14361  0096F8  CFDD F202          	movff	postdec2,??_WindowIDBacktrack+1
 14362  0096FC  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14363  009700  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14364  009704  50DF               	movf	indf2,w,c
 14365  009706  0102               	movlb	2	; () banked
 14366  009708  6F03               	movwf	(??_WindowIDBacktrack+2)& (0+255),b
 14367  00970A  0E01               	movlw	1
 14368  00970C  0102               	movlb	2	; () banked
 14369  00970E  6F04               	movwf	(??_WindowIDBacktrack+3)& (0+255),b
 14370  009710  0E00               	movlw	0
 14371  009712  0102               	movlb	2	; () banked
 14372  009714  6F05               	movwf	(??_WindowIDBacktrack+4)& (0+255),b
 14373  009716  0102               	movlb	2	; () banked
 14374  009718  2B03               	incf	(??_WindowIDBacktrack+2)& (0+255),f,b
 14375  00971A  D004               	goto	i2u405_44
 14376  00971C                     i2u405_45:
 14377  00971C  90D8               	bcf	status,0,c
 14378  00971E  0102               	movlb	2	; () banked
 14379  009720  3704               	rlcf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14380  009722  3705               	rlcf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14381  009724                     i2u405_44:
 14382  009724  0102               	movlb	2	; () banked
 14383  009726  2F03               	decfsz	(??_WindowIDBacktrack+2)& (0+255),f,b
 14384  009728  D7F9               	goto	i2u405_45
 14385  00972A  0102               	movlb	2	; () banked
 14386  00972C  5101               	movf	??_WindowIDBacktrack& (0+255),w,b
 14387  00972E  0102               	movlb	2	; () banked
 14388  009730  1704               	andwf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14389  009732  0102               	movlb	2	; () banked
 14390  009734  5102               	movf	(??_WindowIDBacktrack+1)& (0+255),w,b
 14391  009736  0102               	movlb	2	; () banked
 14392  009738  1705               	andwf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14393  00973A  0102               	movlb	2	; () banked
 14394  00973C  5104               	movf	(??_WindowIDBacktrack+3)& (0+255),w,b
 14395  00973E  0102               	movlb	2	; () banked
 14396  009740  1105               	iorwf	(??_WindowIDBacktrack+4)& (0+255),w,b
 14397  009742  A4D8               	btfss	status,2,c
 14398  009744  D78F               	goto	i2l4567
 14399  009746                     i2l4575:
 14400                           
 14401                           ;boostercomms.c: 629: }
 14402                           ;boostercomms.c: 630: if(!(*currentBitUC) && (*currentSerialUS & (1 << *currentBitUC))){
 14403  009746  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14404  00974A  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14405  00974E  50DF               	movf	indf2,w,c
 14406  009750  A4D8               	btfss	status,2,c
 14407  009752  D035               	goto	i2l4587
 14408  009754  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14409  009758  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14410  00975C  CFDE F201          	movff	postinc2,??_WindowIDBacktrack
 14411  009760  CFDD F202          	movff	postdec2,??_WindowIDBacktrack+1
 14412  009764  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14413  009768  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14414  00976C  50DF               	movf	indf2,w,c
 14415  00976E  0102               	movlb	2	; () banked
 14416  009770  6F03               	movwf	(??_WindowIDBacktrack+2)& (0+255),b
 14417  009772  0E01               	movlw	1
 14418  009774  0102               	movlb	2	; () banked
 14419  009776  6F04               	movwf	(??_WindowIDBacktrack+3)& (0+255),b
 14420  009778  0E00               	movlw	0
 14421  00977A  0102               	movlb	2	; () banked
 14422  00977C  6F05               	movwf	(??_WindowIDBacktrack+4)& (0+255),b
 14423  00977E  0102               	movlb	2	; () banked
 14424  009780  2B03               	incf	(??_WindowIDBacktrack+2)& (0+255),f,b
 14425  009782  D004               	goto	i2u408_44
 14426  009784                     i2u408_45:
 14427  009784  90D8               	bcf	status,0,c
 14428  009786  0102               	movlb	2	; () banked
 14429  009788  3704               	rlcf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14430  00978A  3705               	rlcf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14431  00978C                     i2u408_44:
 14432  00978C  0102               	movlb	2	; () banked
 14433  00978E  2F03               	decfsz	(??_WindowIDBacktrack+2)& (0+255),f,b
 14434  009790  D7F9               	goto	i2u408_45
 14435  009792  0102               	movlb	2	; () banked
 14436  009794  5101               	movf	??_WindowIDBacktrack& (0+255),w,b
 14437  009796  0102               	movlb	2	; () banked
 14438  009798  1704               	andwf	(??_WindowIDBacktrack+3)& (0+255),f,b
 14439  00979A  0102               	movlb	2	; () banked
 14440  00979C  5102               	movf	(??_WindowIDBacktrack+1)& (0+255),w,b
 14441  00979E  0102               	movlb	2	; () banked
 14442  0097A0  1705               	andwf	(??_WindowIDBacktrack+4)& (0+255),f,b
 14443  0097A2  0102               	movlb	2	; () banked
 14444  0097A4  5104               	movf	(??_WindowIDBacktrack+3)& (0+255),w,b
 14445  0097A6  0102               	movlb	2	; () banked
 14446  0097A8  1105               	iorwf	(??_WindowIDBacktrack+4)& (0+255),w,b
 14447  0097AA  B4D8               	btfsc	status,2,c
 14448  0097AC  D008               	goto	i2l4587
 14449                           
 14450                           ; BSR set to: 2
 14451                           ;boostercomms.c: 631: *statusSetIDUC = 0;
 14452  0097AE  C01A  FFD9         	movff	WindowIDBacktrack@statusSetIDUC,fsr2l
 14453  0097B2  C01B  FFDA         	movff	WindowIDBacktrack@statusSetIDUC+1,fsr2h
 14454  0097B6  0E00               	movlw	0
 14455  0097B8  6EDF               	movwf	indf2,c
 14456                           
 14457                           ; BSR set to: 2
 14458                           ;boostercomms.c: 632: return 1;
 14459  0097BA  0E01               	movlw	1
 14460                           
 14461                           ; BSR set to: 2
 14462                           ;boostercomms.c: 633: }else{
 14463                           
 14464                           ; BSR set to: 2
 14465  0097BC  0012               	return	
 14466  0097BE                     i2l4587:
 14467                           
 14468                           ;boostercomms.c: 634: *currentSerialUS |= (1 << *currentBitUC);
 14469  0097BE  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14470  0097C2  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14471  0097C6  50DF               	movf	indf2,w,c
 14472  0097C8  0102               	movlb	2	; () banked
 14473  0097CA  6F01               	movwf	??_WindowIDBacktrack& (0+255),b
 14474  0097CC  0E01               	movlw	1
 14475  0097CE  0102               	movlb	2	; () banked
 14476  0097D0  6F02               	movwf	(??_WindowIDBacktrack+1)& (0+255),b
 14477  0097D2  0E00               	movlw	0
 14478  0097D4  0102               	movlb	2	; () banked
 14479  0097D6  6F03               	movwf	(??_WindowIDBacktrack+2)& (0+255),b
 14480  0097D8  0102               	movlb	2	; () banked
 14481  0097DA  2B01               	incf	??_WindowIDBacktrack& (0+255),f,b
 14482  0097DC  D004               	goto	i2u410_44
 14483  0097DE                     i2u410_45:
 14484  0097DE  90D8               	bcf	status,0,c
 14485  0097E0  0102               	movlb	2	; () banked
 14486  0097E2  3702               	rlcf	(??_WindowIDBacktrack+1)& (0+255),f,b
 14487  0097E4  3703               	rlcf	(??_WindowIDBacktrack+2)& (0+255),f,b
 14488  0097E6                     i2u410_44:
 14489  0097E6  0102               	movlb	2	; () banked
 14490  0097E8  2F01               	decfsz	??_WindowIDBacktrack& (0+255),f,b
 14491  0097EA  D7F9               	goto	i2u410_45
 14492  0097EC  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14493  0097F0  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14494  0097F4  0102               	movlb	2	; () banked
 14495  0097F6  5102               	movf	(??_WindowIDBacktrack+1)& (0+255),w,b
 14496  0097F8  12DE               	iorwf	postinc2,f,c
 14497  0097FA  5103               	movf	(??_WindowIDBacktrack+2)& (0+255),w,b
 14498  0097FC  12DD               	iorwf	postdec2,f,c
 14499                           
 14500                           ; BSR set to: 2
 14501                           ;boostercomms.c: 635: BoosterCommandStart(*currentSerialUS, 0b000, *currentBitUC);
 14502  0097FE  C018  FFD9         	movff	WindowIDBacktrack@currentSerialUS,fsr2l
 14503  009802  C019  FFDA         	movff	WindowIDBacktrack@currentSerialUS+1,fsr2h
 14504  009806  CFDE F007          	movff	postinc2,BoosterCommandStart@destSerialUS
 14505  00980A  CFDD F008          	movff	postdec2,BoosterCommandStart@destSerialUS+1
 14506  00980E  0E00               	movlw	0
 14507  009810  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 14508  009812  C016  FFD9         	movff	WindowIDBacktrack@currentBitUC,fsr2l
 14509  009816  C017  FFDA         	movff	WindowIDBacktrack@currentBitUC+1,fsr2h
 14510  00981A  50DF               	movf	indf2,w,c
 14511  00981C  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 14512  00981E  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 14513                           
 14514                           ;boostercomms.c: 636: return 0;
 14515  009822  0E00               	movlw	0
 14516  009824  0012               	return	
 14517  009826                     __end_of_WindowIDBacktrack:
 14518                           	opt stack 0
 14519                           pclatu	equ	0xFFB
 14520                           pclath	equ	0xFFA
 14521                           tblptru	equ	0xFF8
 14522                           tblptrh	equ	0xFF7
 14523                           tblptrl	equ	0xFF6
 14524                           tablat	equ	0xFF5
 14525                           prodh	equ	0xFF4
 14526                           prodl	equ	0xFF3
 14527                           intcon	equ	0xFF2
 14528                           postinc0	equ	0xFEE
 14529                           fsr0h	equ	0xFEA
 14530                           fsr0l	equ	0xFE9
 14531                           wreg	equ	0xFE8
 14532                           indf1	equ	0xFE7
 14533                           postinc1	equ	0xFE6
 14534                           postdec1	equ	0xFE5
 14535                           fsr1h	equ	0xFE2
 14536                           fsr1l	equ	0xFE1
 14537                           indf2	equ	0xFDF
 14538                           postinc2	equ	0xFDE
 14539                           postdec2	equ	0xFDD
 14540                           plusw2	equ	0xFDB
 14541                           fsr2h	equ	0xFDA
 14542                           fsr2l	equ	0xFD9
 14543                           status	equ	0xFD8
 14544                           
 14545 ;; *************** function _AssignWindowID *****************
 14546 ;; Defined at:
 14547 ;;		line 640 in file "boostercomms.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;		None
 14550 ;; Auto vars:     Size  Location     Type
 14551 ;;  serialNumber    2   21[COMRAM] unsigned short 
 14552 ;;  newWindowUC     1   23[COMRAM] unsigned char 
 14553 ;; Return value:  Size  Location     Type
 14554 ;;                  1    wreg      void 
 14555 ;; Registers used:
 14556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14557 ;; Tracked objects:
 14558 ;;		On entry : 0/0
 14559 ;;		On exit  : 0/0
 14560 ;;		Unchanged: 0/0
 14561 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14563 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14565 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14566 ;;Total ram usage:        3 bytes
 14567 ;; Hardware stack levels used:    1
 14568 ;; Hardware stack levels required when called:    2
 14569 ;; This function calls:
 14570 ;;		_BoosterCommandStart
 14571 ;;		_LowestIdleWindow
 14572 ;; This function is called by:
 14573 ;;		_SetWindowID
 14574 ;; This function uses a non-reentrant model
 14575 ;;
 14576                           
 14577                           	psect	text73
 14578  00AE16                     __ptext73:
 14579                           	opt stack 0
 14580  00AE16                     _AssignWindowID:
 14581                           	opt stack 19
 14582                           
 14583                           ;boostercomms.c: 641: unsigned char newWindowUC;
 14584                           ;boostercomms.c: 642: unsigned short serialNumberUS;
 14585                           ;boostercomms.c: 644: newWindowUC = LowestIdleWindow();
 14586                           
 14587                           ;incstack = 0
 14588  00AE16  EC94  F059         	call	_LowestIdleWindow	;wreg free
 14589  00AE1A  6E18               	movwf	AssignWindowID@newWindowUC,c
 14590                           
 14591                           ;boostercomms.c: 645: serialNumberUS = (commandResponseUS & ~0b1000000000000000);
 14592  00AE1C  0EFF               	movlw	255
 14593  00AE1E  0103               	movlb	3	; () banked
 14594  00AE20  15E6               	andwf	_commandResponseUS& (0+255),w,b
 14595  00AE22  6E16               	movwf	AssignWindowID@serialNumberUS,c
 14596  00AE24  0E7F               	movlw	127
 14597  00AE26  0103               	movlb	3	; () banked
 14598  00AE28  15E7               	andwf	(_commandResponseUS+1)& (0+255),w,b
 14599  00AE2A  6E17               	movwf	AssignWindowID@serialNumberUS+1,c
 14600                           
 14601                           ; BSR set to: 3
 14602                           ;boostercomms.c: 646: boosterCommsDataSerial[newWindowUC] = serialNumberUS;
 14603  00AE2C  5018               	movf	AssignWindowID@newWindowUC,w,c
 14604  00AE2E  0D02               	mullw	2
 14605  00AE30  0E00               	movlw	low _boosterCommsDataSerial
 14606  00AE32  24F3               	addwf	prodl,w,c
 14607  00AE34  6ED9               	movwf	fsr2l,c
 14608  00AE36  0E03               	movlw	high _boosterCommsDataSerial
 14609  00AE38  20F4               	addwfc	prodh,w,c
 14610  00AE3A  6EDA               	movwf	fsr2h,c
 14611  00AE3C  C016  FFDE         	movff	AssignWindowID@serialNumberUS,postinc2
 14612  00AE40  C017  FFDD         	movff	AssignWindowID@serialNumberUS+1,postdec2
 14613                           
 14614                           ; BSR set to: 3
 14615                           ;boostercomms.c: 647: boosterCommsData[4][newWindowUC] = 0;
 14616  00AE44  5018               	movf	AssignWindowID@newWindowUC,w,c
 14617  00AE46  0D01               	mullw	1
 14618  00AE48  0E78               	movlw	low (_boosterCommsData+120)
 14619  00AE4A  24F3               	addwf	prodl,w,c
 14620  00AE4C  6ED9               	movwf	fsr2l,c
 14621  00AE4E  0E04               	movlw	high (_boosterCommsData+120)
 14622  00AE50  20F4               	addwfc	prodh,w,c
 14623  00AE52  6EDA               	movwf	fsr2h,c
 14624  00AE54  0E00               	movlw	0
 14625  00AE56  6EDF               	movwf	indf2,c
 14626                           
 14627                           ; BSR set to: 3
 14628                           ;boostercomms.c: 649: BoosterCommandStart(serialNumberUS, 0b010, newWindowUC+1);
 14629  00AE58  C016  F007         	movff	AssignWindowID@serialNumberUS,BoosterCommandStart@destSerialUS
 14630  00AE5C  C017  F008         	movff	AssignWindowID@serialNumberUS+1,BoosterCommandStart@destSerialUS+1
 14631  00AE60  0E02               	movlw	2
 14632  00AE62  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 14633  00AE64  2818               	incf	AssignWindowID@newWindowUC,w,c
 14634  00AE66  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 14635  00AE68  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 14636  00AE6C  0012               	return		;funcret
 14637  00AE6E                     __end_of_AssignWindowID:
 14638                           	opt stack 0
 14639                           pclatu	equ	0xFFB
 14640                           pclath	equ	0xFFA
 14641                           tblptru	equ	0xFF8
 14642                           tblptrh	equ	0xFF7
 14643                           tblptrl	equ	0xFF6
 14644                           tablat	equ	0xFF5
 14645                           prodh	equ	0xFF4
 14646                           prodl	equ	0xFF3
 14647                           intcon	equ	0xFF2
 14648                           postinc0	equ	0xFEE
 14649                           fsr0h	equ	0xFEA
 14650                           fsr0l	equ	0xFE9
 14651                           wreg	equ	0xFE8
 14652                           indf1	equ	0xFE7
 14653                           postinc1	equ	0xFE6
 14654                           postdec1	equ	0xFE5
 14655                           fsr1h	equ	0xFE2
 14656                           fsr1l	equ	0xFE1
 14657                           indf2	equ	0xFDF
 14658                           postinc2	equ	0xFDE
 14659                           postdec2	equ	0xFDD
 14660                           plusw2	equ	0xFDB
 14661                           fsr2h	equ	0xFDA
 14662                           fsr2l	equ	0xFD9
 14663                           status	equ	0xFD8
 14664                           
 14665 ;; *************** function _AssignSerialNumber *****************
 14666 ;; Defined at:
 14667 ;;		line 652 in file "boostercomms.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;		None
 14670 ;; Auto vars:     Size  Location     Type
 14671 ;;		None
 14672 ;; Return value:  Size  Location     Type
 14673 ;;                  1    wreg      void 
 14674 ;; Registers used:
 14675 ;;		wreg, status,2, status,0, cstack
 14676 ;; Tracked objects:
 14677 ;;		On entry : 0/0
 14678 ;;		On exit  : 0/0
 14679 ;;		Unchanged: 0/0
 14680 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14685 ;;Total ram usage:        0 bytes
 14686 ;; Hardware stack levels used:    1
 14687 ;; Hardware stack levels required when called:    3
 14688 ;; This function calls:
 14689 ;;		_BoosterCommandStart
 14690 ;;		i2_WriteFlashValues
 14691 ;; This function is called by:
 14692 ;;		_SetWindowID
 14693 ;; This function uses a non-reentrant model
 14694 ;;
 14695                           
 14696                           	psect	text74
 14697  00B480                     __ptext74:
 14698                           	opt stack 0
 14699  00B480                     _AssignSerialNumber:
 14700                           	opt stack 18
 14701                           
 14702                           ;boostercomms.c: 653: BoosterCommandStart(nextSerialUSG++, 0b001, 0);
 14703                           
 14704                           ;incstack = 0
 14705  00B480  C291  F007         	movff	_nextSerialUSG,BoosterCommandStart@destSerialUS
 14706  00B484  C292  F008         	movff	_nextSerialUSG+1,BoosterCommandStart@destSerialUS+1
 14707  00B488  0E01               	movlw	1
 14708  00B48A  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 14709  00B48C  0E00               	movlw	0
 14710  00B48E  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 14711  00B490  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 14712  00B494  0102               	movlb	2	; () banked
 14713  00B496  4B91               	infsnz	_nextSerialUSG& (0+255),f,b
 14714  00B498  2B92               	incf	(_nextSerialUSG+1)& (0+255),f,b
 14715                           
 14716                           ; BSR set to: 2
 14717                           ;boostercomms.c: 654: WriteFlashValues();
 14718  00B49A  ECDA  F058         	call	i2_WriteFlashValues	;wreg free
 14719  00B49E  0012               	return		;funcret
 14720  00B4A0                     __end_of_AssignSerialNumber:
 14721                           	opt stack 0
 14722                           pclatu	equ	0xFFB
 14723                           pclath	equ	0xFFA
 14724                           tblptru	equ	0xFF8
 14725                           tblptrh	equ	0xFF7
 14726                           tblptrl	equ	0xFF6
 14727                           tablat	equ	0xFF5
 14728                           prodh	equ	0xFF4
 14729                           prodl	equ	0xFF3
 14730                           intcon	equ	0xFF2
 14731                           postinc0	equ	0xFEE
 14732                           fsr0h	equ	0xFEA
 14733                           fsr0l	equ	0xFE9
 14734                           wreg	equ	0xFE8
 14735                           indf1	equ	0xFE7
 14736                           postinc1	equ	0xFE6
 14737                           postdec1	equ	0xFE5
 14738                           fsr1h	equ	0xFE2
 14739                           fsr1l	equ	0xFE1
 14740                           indf2	equ	0xFDF
 14741                           postinc2	equ	0xFDE
 14742                           postdec2	equ	0xFDD
 14743                           plusw2	equ	0xFDB
 14744                           fsr2h	equ	0xFDA
 14745                           fsr2l	equ	0xFD9
 14746                           status	equ	0xFD8
 14747                           
 14748 ;; *************** function i2_WriteFlashValues *****************
 14749 ;; Defined at:
 14750 ;;		line 221 in file "peripherals.c"
 14751 ;; Parameters:    Size  Location     Type
 14752 ;;		None
 14753 ;; Auto vars:     Size  Location     Type
 14754 ;;		None
 14755 ;; Return value:  Size  Location     Type
 14756 ;;                  1    wreg      void 
 14757 ;; Registers used:
 14758 ;;		wreg, status,2, status,0, cstack
 14759 ;; Tracked objects:
 14760 ;;		On entry : 0/0
 14761 ;;		On exit  : 0/0
 14762 ;;		Unchanged: 0/0
 14763 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14768 ;;Total ram usage:        0 bytes
 14769 ;; Hardware stack levels used:    1
 14770 ;; Hardware stack levels required when called:    2
 14771 ;; This function calls:
 14772 ;;		i2_FlashEraseBlock
 14773 ;;		i2_FlashWriteWord
 14774 ;; This function is called by:
 14775 ;;		_AssignSerialNumber
 14776 ;; This function uses a non-reentrant model
 14777 ;;
 14778                           
 14779                           	psect	text75
 14780  00B1B4                     __ptext75:
 14781                           	opt stack 0
 14782  00B1B4                     i2_WriteFlashValues:
 14783                           	opt stack 18
 14784                           
 14785                           ;peripherals.c: 222: FlashEraseBlock(0xFBFE);
 14786                           
 14787                           ;incstack = 0
 14788  00B1B4  0EFB               	movlw	251
 14789  00B1B6  6E02               	movwf	i2FlashEraseBlock@flashAddressUS+1,c
 14790  00B1B8  0EFE               	movlw	254
 14791  00B1BA  6E01               	movwf	i2FlashEraseBlock@flashAddressUS,c
 14792  00B1BC  ECF1  F059         	call	i2_FlashEraseBlock	;wreg free
 14793                           
 14794                           ;peripherals.c: 223: FlashWriteWord(0xFBFE, nextSerialUSG, nextSerialUSG >> 8);
 14795  00B1C0  0EFB               	movlw	251
 14796  00B1C2  6E02               	movwf	i2FlashWriteWord@flashAddressUS+1,c
 14797  00B1C4  0EFE               	movlw	254
 14798  00B1C6  6E01               	movwf	i2FlashWriteWord@flashAddressUS,c
 14799  00B1C8  C291  F003         	movff	_nextSerialUSG,i2FlashWriteWord@lsbUC
 14800  00B1CC  0102               	movlb	2	; () banked
 14801  00B1CE  5192               	movf	(_nextSerialUSG+1)& (0+255),w,b
 14802  00B1D0  6E04               	movwf	i2FlashWriteWord@msbUC,c
 14803  00B1D2  EC13  F059         	call	i2_FlashWriteWord	;wreg free
 14804                           
 14805                           ;peripherals.c: 224: FlashWriteWord(0xFBFD, iscSerialUSG, iscSerialUSG >> 8);
 14806  00B1D6  0EFB               	movlw	251
 14807  00B1D8  6E02               	movwf	i2FlashWriteWord@flashAddressUS+1,c
 14808  00B1DA  0EFD               	movlw	253
 14809  00B1DC  6E01               	movwf	i2FlashWriteWord@flashAddressUS,c
 14810  00B1DE  C2A9  F003         	movff	_iscSerialUSG,i2FlashWriteWord@lsbUC
 14811  00B1E2  0102               	movlb	2	; () banked
 14812  00B1E4  51AA               	movf	(_iscSerialUSG+1)& (0+255),w,b
 14813  00B1E6  6E04               	movwf	i2FlashWriteWord@msbUC,c
 14814  00B1E8  EC13  F059         	call	i2_FlashWriteWord	;wreg free
 14815  00B1EC  0012               	return		;funcret
 14816  00B1EE                     __end_ofi2_WriteFlashValues:
 14817                           	opt stack 0
 14818                           pclatu	equ	0xFFB
 14819                           pclath	equ	0xFFA
 14820                           tblptru	equ	0xFF8
 14821                           tblptrh	equ	0xFF7
 14822                           tblptrl	equ	0xFF6
 14823                           tablat	equ	0xFF5
 14824                           prodh	equ	0xFF4
 14825                           prodl	equ	0xFF3
 14826                           intcon	equ	0xFF2
 14827                           postinc0	equ	0xFEE
 14828                           fsr0h	equ	0xFEA
 14829                           fsr0l	equ	0xFE9
 14830                           wreg	equ	0xFE8
 14831                           indf1	equ	0xFE7
 14832                           postinc1	equ	0xFE6
 14833                           postdec1	equ	0xFE5
 14834                           fsr1h	equ	0xFE2
 14835                           fsr1l	equ	0xFE1
 14836                           indf2	equ	0xFDF
 14837                           postinc2	equ	0xFDE
 14838                           postdec2	equ	0xFDD
 14839                           plusw2	equ	0xFDB
 14840                           fsr2h	equ	0xFDA
 14841                           fsr2l	equ	0xFD9
 14842                           status	equ	0xFD8
 14843                           
 14844 ;; *************** function i2_FlashWriteWord *****************
 14845 ;; Defined at:
 14846 ;;		line 189 in file "peripherals.c"
 14847 ;; Parameters:    Size  Location     Type
 14848 ;;  flashAddress    2    0[COMRAM] unsigned short 
 14849 ;;  lsbUC           1    2[COMRAM] unsigned char 
 14850 ;;  msbUC           1    3[COMRAM] unsigned char 
 14851 ;; Auto vars:     Size  Location     Type
 14852 ;;  FlashWriteWo    1    4[COMRAM] unsigned char 
 14853 ;; Return value:  Size  Location     Type
 14854 ;;                  1    wreg      void 
 14855 ;; Registers used:
 14856 ;;		wreg, status,2, cstack
 14857 ;; Tracked objects:
 14858 ;;		On entry : 0/0
 14859 ;;		On exit  : 0/0
 14860 ;;		Unchanged: 0/0
 14861 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14865 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14866 ;;Total ram usage:        5 bytes
 14867 ;; Hardware stack levels used:    1
 14868 ;; Hardware stack levels required when called:    1
 14869 ;; This function calls:
 14870 ;;		i2_FlashUnlockSequence
 14871 ;; This function is called by:
 14872 ;;		i2_WriteFlashValues
 14873 ;; This function uses a non-reentrant model
 14874 ;;
 14875                           
 14876                           	psect	text76
 14877  00B226                     __ptext76:
 14878                           	opt stack 0
 14879  00B226                     i2_FlashWriteWord:
 14880                           	opt stack 18
 14881                           
 14882                           ;peripherals.c: 190: unsigned char intStatusUC;
 14883                           ;peripherals.c: 192: intStatusUC = INTCONbits.GIE;
 14884                           
 14885                           ;incstack = 0
 14886  00B226  0E00               	movlw	0
 14887  00B228  BEF2               	btfsc	intcon,7,c	;volatile
 14888  00B22A  0E01               	movlw	1
 14889  00B22C  6E05               	movwf	i2FlashWriteWord@intStatusUC,c
 14890                           
 14891                           ;peripherals.c: 193: INTCONbits.GIE = 0;
 14892  00B22E  9EF2               	bcf	intcon,7,c	;volatile
 14893                           
 14894                           ;peripherals.c: 195: TBLPTRU = 0;
 14895  00B230  0E00               	movlw	0
 14896  00B232  6EF8               	movwf	tblptru,c	;volatile
 14897                           
 14898                           ;peripherals.c: 196: TBLPTRH = flashAddressUS >> 8;
 14899  00B234  5002               	movf	i2FlashWriteWord@flashAddressUS+1,w,c
 14900  00B236  6EF7               	movwf	tblptrh,c	;volatile
 14901                           
 14902                           ;peripherals.c: 197: TBLPTRL = flashAddressUS;
 14903  00B238  C001  FFF6         	movff	i2FlashWriteWord@flashAddressUS,tblptrl	;volatile
 14904                           
 14905                           ;peripherals.c: 199: TABLAT = lsbUC;
 14906  00B23C  C003  FFF5         	movff	i2FlashWriteWord@lsbUC,tablat	;volatile
 14907  00B240  000D               	tblwt		*+	;# 
 14908                           
 14909                           ;peripherals.c: 205: TABLAT = msbUC;
 14910  00B242  C004  FFF5         	movff	i2FlashWriteWord@msbUC,tablat	;volatile
 14911  00B246  000C               	tblwt		*	;# 
 14912                           
 14913                           ;peripherals.c: 211: EECON1bits.WPROG = 1;
 14914  00B248  8AA6               	bsf	4006,5,c	;volatile
 14915                           
 14916                           ;peripherals.c: 212: EECON1bits.WREN = 1;
 14917  00B24A  84A6               	bsf	4006,2,c	;volatile
 14918                           
 14919                           ;peripherals.c: 213: FlashUnlockSequence();
 14920  00B24C  EC23  F05B         	call	i2_FlashUnlockSequence	;wreg free
 14921                           
 14922                           ;peripherals.c: 214: EECON1bits.WPROG = 0;
 14923  00B250  9AA6               	bcf	4006,5,c	;volatile
 14924                           
 14925                           ;peripherals.c: 215: EECON1bits.WREN = 0;
 14926  00B252  94A6               	bcf	4006,2,c	;volatile
 14927                           
 14928                           ;peripherals.c: 217: if(intStatusUC)
 14929  00B254  5005               	movf	i2FlashWriteWord@intStatusUC,w,c
 14930  00B256  B4D8               	btfsc	status,2,c
 14931  00B258  0012               	return	
 14932                           
 14933                           ;peripherals.c: 218: INTCONbits.GIE = 1;
 14934  00B25A  8EF2               	bsf	intcon,7,c	;volatile
 14935  00B25C  0012               	return	
 14936  00B25E                     __end_ofi2_FlashWriteWord:
 14937                           	opt stack 0
 14938                           pclatu	equ	0xFFB
 14939                           pclath	equ	0xFFA
 14940                           tblptru	equ	0xFF8
 14941                           tblptrh	equ	0xFF7
 14942                           tblptrl	equ	0xFF6
 14943                           tablat	equ	0xFF5
 14944                           prodh	equ	0xFF4
 14945                           prodl	equ	0xFF3
 14946                           intcon	equ	0xFF2
 14947                           postinc0	equ	0xFEE
 14948                           fsr0h	equ	0xFEA
 14949                           fsr0l	equ	0xFE9
 14950                           wreg	equ	0xFE8
 14951                           indf1	equ	0xFE7
 14952                           postinc1	equ	0xFE6
 14953                           postdec1	equ	0xFE5
 14954                           fsr1h	equ	0xFE2
 14955                           fsr1l	equ	0xFE1
 14956                           indf2	equ	0xFDF
 14957                           postinc2	equ	0xFDE
 14958                           postdec2	equ	0xFDD
 14959                           plusw2	equ	0xFDB
 14960                           fsr2h	equ	0xFDA
 14961                           fsr2l	equ	0xFD9
 14962                           status	equ	0xFD8
 14963                           
 14964 ;; *************** function i2_FlashEraseBlock *****************
 14965 ;; Defined at:
 14966 ;;		line 164 in file "peripherals.c"
 14967 ;; Parameters:    Size  Location     Type
 14968 ;;  flashAddress    2    0[COMRAM] unsigned short 
 14969 ;; Auto vars:     Size  Location     Type
 14970 ;;  FlashEraseBl    1    2[COMRAM] unsigned char 
 14971 ;; Return value:  Size  Location     Type
 14972 ;;                  1    wreg      void 
 14973 ;; Registers used:
 14974 ;;		wreg, status,2, status,0, cstack
 14975 ;; Tracked objects:
 14976 ;;		On entry : 0/0
 14977 ;;		On exit  : 0/0
 14978 ;;		Unchanged: 0/0
 14979 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 14980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14983 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14984 ;;Total ram usage:        3 bytes
 14985 ;; Hardware stack levels used:    1
 14986 ;; Hardware stack levels required when called:    1
 14987 ;; This function calls:
 14988 ;;		i2_FlashUnlockSequence
 14989 ;; This function is called by:
 14990 ;;		i2_WriteFlashValues
 14991 ;; This function uses a non-reentrant model
 14992 ;;
 14993                           
 14994                           	psect	text77
 14995  00B3E2                     __ptext77:
 14996                           	opt stack 0
 14997  00B3E2                     i2_FlashEraseBlock:
 14998                           	opt stack 18
 14999                           
 15000                           ;peripherals.c: 165: unsigned char intStatusUC;
 15001                           ;peripherals.c: 167: intStatusUC = INTCONbits.GIE;
 15002                           
 15003                           ;incstack = 0
 15004  00B3E2  0E00               	movlw	0
 15005  00B3E4  BEF2               	btfsc	intcon,7,c	;volatile
 15006  00B3E6  0E01               	movlw	1
 15007  00B3E8  6E03               	movwf	i2FlashEraseBlock@intStatusUC,c
 15008                           
 15009                           ;peripherals.c: 168: INTCONbits.GIE = 0;
 15010  00B3EA  9EF2               	bcf	intcon,7,c	;volatile
 15011                           
 15012                           ;peripherals.c: 170: TBLPTRU = 0;
 15013  00B3EC  0E00               	movlw	0
 15014  00B3EE  6EF8               	movwf	tblptru,c	;volatile
 15015                           
 15016                           ;peripherals.c: 171: TBLPTRH = (flashAddressUS >> 8) & ~0b11;
 15017  00B3F0  5002               	movf	i2FlashEraseBlock@flashAddressUS+1,w,c
 15018  00B3F2  0BFC               	andlw	252
 15019  00B3F4  6EF7               	movwf	tblptrh,c	;volatile
 15020                           
 15021                           ;peripherals.c: 172: TBLPTRU = 0;
 15022  00B3F6  0E00               	movlw	0
 15023  00B3F8  6EF8               	movwf	tblptru,c	;volatile
 15024                           
 15025                           ;peripherals.c: 174: EECON1bits.WREN = 1;
 15026  00B3FA  84A6               	bsf	4006,2,c	;volatile
 15027                           
 15028                           ;peripherals.c: 175: EECON1bits.FREE = 1;
 15029  00B3FC  88A6               	bsf	4006,4,c	;volatile
 15030                           
 15031                           ;peripherals.c: 176: FlashUnlockSequence();
 15032  00B3FE  EC23  F05B         	call	i2_FlashUnlockSequence	;wreg free
 15033                           
 15034                           ;peripherals.c: 177: EECON1bits.WREN = 0;
 15035  00B402  94A6               	bcf	4006,2,c	;volatile
 15036                           
 15037                           ;peripherals.c: 179: if(intStatusUC)
 15038  00B404  5003               	movf	i2FlashEraseBlock@intStatusUC,w,c
 15039  00B406  B4D8               	btfsc	status,2,c
 15040  00B408  0012               	return	
 15041                           
 15042                           ;peripherals.c: 180: INTCONbits.GIE = 1;
 15043  00B40A  8EF2               	bsf	intcon,7,c	;volatile
 15044  00B40C  0012               	return	
 15045  00B40E                     __end_ofi2_FlashEraseBlock:
 15046                           	opt stack 0
 15047                           pclatu	equ	0xFFB
 15048                           pclath	equ	0xFFA
 15049                           tblptru	equ	0xFF8
 15050                           tblptrh	equ	0xFF7
 15051                           tblptrl	equ	0xFF6
 15052                           tablat	equ	0xFF5
 15053                           prodh	equ	0xFF4
 15054                           prodl	equ	0xFF3
 15055                           intcon	equ	0xFF2
 15056                           postinc0	equ	0xFEE
 15057                           fsr0h	equ	0xFEA
 15058                           fsr0l	equ	0xFE9
 15059                           wreg	equ	0xFE8
 15060                           indf1	equ	0xFE7
 15061                           postinc1	equ	0xFE6
 15062                           postdec1	equ	0xFE5
 15063                           fsr1h	equ	0xFE2
 15064                           fsr1l	equ	0xFE1
 15065                           indf2	equ	0xFDF
 15066                           postinc2	equ	0xFDE
 15067                           postdec2	equ	0xFDD
 15068                           plusw2	equ	0xFDB
 15069                           fsr2h	equ	0xFDA
 15070                           fsr2l	equ	0xFD9
 15071                           status	equ	0xFD8
 15072                           
 15073 ;; *************** function i2_FlashUnlockSequence *****************
 15074 ;; Defined at:
 15075 ;;		line 183 in file "peripherals.c"
 15076 ;; Parameters:    Size  Location     Type
 15077 ;;		None
 15078 ;; Auto vars:     Size  Location     Type
 15079 ;;		None
 15080 ;; Return value:  Size  Location     Type
 15081 ;;                  1    wreg      void 
 15082 ;; Registers used:
 15083 ;;		wreg, status,2
 15084 ;; Tracked objects:
 15085 ;;		On entry : 0/0
 15086 ;;		On exit  : 0/0
 15087 ;;		Unchanged: 0/0
 15088 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 15089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15093 ;;Total ram usage:        0 bytes
 15094 ;; Hardware stack levels used:    1
 15095 ;; This function calls:
 15096 ;;		Nothing
 15097 ;; This function is called by:
 15098 ;;		i2_FlashEraseBlock
 15099 ;;		i2_FlashWriteWord
 15100 ;; This function uses a non-reentrant model
 15101 ;;
 15102                           
 15103                           	psect	text78
 15104  00B646                     __ptext78:
 15105                           	opt stack 0
 15106  00B646                     i2_FlashUnlockSequence:
 15107                           	opt stack 18
 15108                           
 15109                           ;peripherals.c: 184: EECON2 = 0x55;
 15110                           
 15111                           ;incstack = 0
 15112  00B646  0E55               	movlw	85
 15113  00B648  6EA7               	movwf	4007,c	;volatile
 15114                           
 15115                           ;peripherals.c: 185: EECON2 = 0xAA;
 15116  00B64A  0EAA               	movlw	170
 15117  00B64C  6EA7               	movwf	4007,c	;volatile
 15118                           
 15119                           ;peripherals.c: 186: EECON1bits.WR = 1;
 15120  00B64E  82A6               	bsf	4006,1,c	;volatile
 15121  00B650  0012               	return		;funcret
 15122  00B652                     __end_ofi2_FlashUnlockSequence:
 15123                           	opt stack 0
 15124                           pclatu	equ	0xFFB
 15125                           pclath	equ	0xFFA
 15126                           tblptru	equ	0xFF8
 15127                           tblptrh	equ	0xFF7
 15128                           tblptrl	equ	0xFF6
 15129                           tablat	equ	0xFF5
 15130                           prodh	equ	0xFF4
 15131                           prodl	equ	0xFF3
 15132                           intcon	equ	0xFF2
 15133                           postinc0	equ	0xFEE
 15134                           fsr0h	equ	0xFEA
 15135                           fsr0l	equ	0xFE9
 15136                           wreg	equ	0xFE8
 15137                           indf1	equ	0xFE7
 15138                           postinc1	equ	0xFE6
 15139                           postdec1	equ	0xFE5
 15140                           fsr1h	equ	0xFE2
 15141                           fsr1l	equ	0xFE1
 15142                           indf2	equ	0xFDF
 15143                           postinc2	equ	0xFDE
 15144                           postdec2	equ	0xFDD
 15145                           plusw2	equ	0xFDB
 15146                           fsr2h	equ	0xFDA
 15147                           fsr2l	equ	0xFD9
 15148                           status	equ	0xFD8
 15149                           
 15150 ;; *************** function _QueryWinSerial *****************
 15151 ;; Defined at:
 15152 ;;		line 751 in file "boostercomms.c"
 15153 ;; Parameters:    Size  Location     Type
 15154 ;;		None
 15155 ;; Auto vars:     Size  Location     Type
 15156 ;;  j               1   27[COMRAM] unsigned char 
 15157 ;;  i               1   28[COMRAM] unsigned char 
 15158 ;;  serialNumber    2   25[COMRAM] unsigned short 
 15159 ;; Return value:  Size  Location     Type
 15160 ;;                  1    wreg      unsigned char 
 15161 ;; Registers used:
 15162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15163 ;; Tracked objects:
 15164 ;;		On entry : 0/0
 15165 ;;		On exit  : 0/0
 15166 ;;		Unchanged: 0/0
 15167 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 15168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15169 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15170 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15171 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15172 ;;Total ram usage:        8 bytes
 15173 ;; Hardware stack levels used:    1
 15174 ;; Hardware stack levels required when called:    2
 15175 ;; This function calls:
 15176 ;;		_BoosterCommandStart
 15177 ;;		_LowestMissingSerial
 15178 ;;		i2_ClearPastValue
 15179 ;;		i2_ResetSingleBoosterState
 15180 ;; This function is called by:
 15181 ;;		_BoosterCommsDispatcher
 15182 ;; This function uses a non-reentrant model
 15183 ;;
 15184                           
 15185                           	psect	text79
 15186  009826                     __ptext79:
 15187                           	opt stack 0
 15188  009826                     _QueryWinSerial:
 15189                           	opt stack 20
 15190                           
 15191                           ;boostercomms.c: 754: unsigned short serialNumberUS;
 15192                           ;boostercomms.c: 757: if(statusGetSerialUCS == 1){
 15193                           
 15194                           ;incstack = 0
 15195  009826  0102               	movlb	2	; () banked
 15196  009828  059D               	decf	_statusGetSerialUCS& (0+255),w,b
 15197  00982A  A4D8               	btfss	status,2,c
 15198  00982C  D0A8               	goto	i2l5219
 15199                           
 15200                           ; BSR set to: 2
 15201                           ;boostercomms.c: 758: __nop();
 15202  00982E  F000               	nop	
 15203                           
 15204                           ;boostercomms.c: 759: if(!(statusFlagsUSLG & 0b000000000000100000000000) ||
 15205                           ;boostercomms.c: 760: (statusFlagsUSLG & 0b000000000100000000000000) ||
 15206                           ;boostercomms.c: 761: (statusFlagsUSLG & 0b000000000010000000000000) ||!(statusFlagsUSLG
      +                           & 0b000000000001000000000000)){
 15207  009830  0102               	movlb	2	; () banked
 15208  009832  A78B               	btfss	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 15209  009834  D009               	goto	i2l5143
 15210                           
 15211                           ; BSR set to: 2
 15212  009836  0102               	movlb	2	; () banked
 15213  009838  BD8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),6,b	;volatile
 15214  00983A  D006               	goto	i2l5143
 15215                           
 15216                           ; BSR set to: 2
 15217  00983C  0102               	movlb	2	; () banked
 15218  00983E  BB8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),5,b	;volatile
 15219  009840  D003               	goto	i2l5143
 15220                           
 15221                           ; BSR set to: 2
 15222  009842  0102               	movlb	2	; () banked
 15223  009844  B98B               	btfsc	(_statusFlagsUSLG+1)& (0+255),4,b	;volatile
 15224  009846  D018               	goto	i2l566
 15225  009848                     i2l5143:
 15226                           
 15227                           ; BSR set to: 2
 15228                           ;boostercomms.c: 763: if(QueryFailureCounter>10){
 15229  009848  0E0A               	movlw	10
 15230  00984A  0102               	movlb	2	; () banked
 15231  00984C  659F               	cpfsgt	_QueryFailureCounter& (0+255),b
 15232  00984E  D005               	goto	i2l5151
 15233                           
 15234                           ; BSR set to: 2
 15235                           ;boostercomms.c: 764: statusGetSerialUCS = 0;
 15236  009850  0E00               	movlw	0
 15237  009852  0102               	movlb	2	; () banked
 15238  009854  6F9D               	movwf	_statusGetSerialUCS& (0+255),b
 15239                           
 15240                           ; BSR set to: 2
 15241                           ;boostercomms.c: 765: return 1;
 15242  009856  0E01               	movlw	1
 15243                           
 15244                           ; BSR set to: 2
 15245  009858  0012               	return	
 15246  00985A                     i2l5151:
 15247                           
 15248                           ; BSR set to: 2
 15249                           ;boostercomms.c: 766: }
 15250                           ;boostercomms.c: 767: QueryFailureCounter++;
 15251  00985A  0102               	movlb	2	; () banked
 15252  00985C  2B9F               	incf	_QueryFailureCounter& (0+255),f,b
 15253                           
 15254                           ; BSR set to: 2
 15255                           ;boostercomms.c: 768: BoosterCommandStart(0, 0b101, missingSerialWinUCS+1);
 15256  00985E  0E00               	movlw	0
 15257  009860  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 15258  009862  0E00               	movlw	0
 15259  009864  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 15260  009866  0E05               	movlw	5
 15261  009868  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 15262  00986A  0102               	movlb	2	; () banked
 15263  00986C  299E               	incf	_missingSerialWinUCS& (0+255),w,b
 15264  00986E  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 15265  009870  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 15266  009874                     i2l5155:
 15267                           
 15268                           ;boostercomms.c: 769: return 0;
 15269  009874  0E00               	movlw	0
 15270  009876  0012               	return	
 15271  009878                     i2l566:
 15272                           
 15273                           ; BSR set to: 2
 15274  009878  0102               	movlb	2	; () banked
 15275  00987A  A78B               	btfss	(_statusFlagsUSLG+1)& (0+255),3,b	;volatile
 15276  00987C  D036               	goto	i2l5181
 15277                           
 15278                           ; BSR set to: 2
 15279  00987E  0102               	movlb	2	; () banked
 15280  009880  A98B               	btfss	(_statusFlagsUSLG+1)& (0+255),4,b	;volatile
 15281  009882  D033               	goto	i2l5181
 15282                           
 15283                           ; BSR set to: 2
 15284  009884  0102               	movlb	2	; () banked
 15285  009886  BB8B               	btfsc	(_statusFlagsUSLG+1)& (0+255),5,b	;volatile
 15286  009888  D030               	goto	i2l5181
 15287                           
 15288                           ; BSR set to: 2
 15289                           ;boostercomms.c: 771: QueryFailureCounter=0;
 15290  00988A  0E00               	movlw	0
 15291  00988C  0102               	movlb	2	; () banked
 15292  00988E  6F9F               	movwf	_QueryFailureCounter& (0+255),b
 15293                           
 15294                           ; BSR set to: 2
 15295                           ;boostercomms.c: 772: serialNumberUS = (commandResponseUS & ~0b1000000000000000);
 15296  009890  0EFF               	movlw	255
 15297  009892  0103               	movlb	3	; () banked
 15298  009894  15E6               	andwf	_commandResponseUS& (0+255),w,b
 15299  009896  6E1A               	movwf	QueryWinSerial@serialNumberUS,c
 15300  009898  0E7F               	movlw	127
 15301  00989A  0103               	movlb	3	; () banked
 15302  00989C  15E7               	andwf	(_commandResponseUS+1)& (0+255),w,b
 15303  00989E  6E1B               	movwf	QueryWinSerial@serialNumberUS+1,c
 15304                           
 15305                           ; BSR set to: 3
 15306                           ;boostercomms.c: 773: boosterCommsDataSerial[missingSerialWinUCS] = serialNumberUS;
 15307  0098A0  0102               	movlb	2	; () banked
 15308  0098A2  519E               	movf	_missingSerialWinUCS& (0+255),w,b
 15309  0098A4  0D02               	mullw	2
 15310  0098A6  0E00               	movlw	low _boosterCommsDataSerial
 15311  0098A8  24F3               	addwf	prodl,w,c
 15312  0098AA  6ED9               	movwf	fsr2l,c
 15313  0098AC  0E03               	movlw	high _boosterCommsDataSerial
 15314  0098AE  20F4               	addwfc	prodh,w,c
 15315  0098B0  6EDA               	movwf	fsr2h,c
 15316  0098B2  C01A  FFDE         	movff	QueryWinSerial@serialNumberUS,postinc2
 15317  0098B6  C01B  FFDD         	movff	QueryWinSerial@serialNumberUS+1,postdec2
 15318                           
 15319                           ; BSR set to: 2
 15320                           ;boostercomms.c: 774: ClearPastValue(missingSerialWinUCS);
 15321  0098BA  0102               	movlb	2	; () banked
 15322  0098BC  519E               	movf	_missingSerialWinUCS& (0+255),w,b
 15323  0098BE  EC4F  F056         	call	i2_ClearPastValue
 15324                           
 15325                           ;boostercomms.c: 775: if((missingSerialWinUCS = LowestMissingSerial()) < 30){
 15326  0098C2  EC37  F057         	call	_LowestMissingSerial	;wreg free
 15327  0098C6  0102               	movlb	2	; () banked
 15328  0098C8  6F9E               	movwf	_missingSerialWinUCS& (0+255),b
 15329  0098CA  0E1E               	movlw	30
 15330  0098CC  0102               	movlb	2	; () banked
 15331  0098CE  619E               	cpfslt	_missingSerialWinUCS& (0+255),b
 15332  0098D0  D00C               	goto	i2l5181
 15333                           
 15334                           ; BSR set to: 2
 15335                           ;boostercomms.c: 776: BoosterCommandStart(0, 0b101, missingSerialWinUCS+1);
 15336  0098D2  0E00               	movlw	0
 15337  0098D4  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 15338  0098D6  0E00               	movlw	0
 15339  0098D8  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 15340  0098DA  0E05               	movlw	5
 15341  0098DC  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 15342  0098DE  0102               	movlb	2	; () banked
 15343  0098E0  299E               	incf	_missingSerialWinUCS& (0+255),w,b
 15344  0098E2  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 15345  0098E4  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 15346  0098E8  D7C5               	goto	i2l5155
 15347  0098EA                     i2l5181:
 15348                           
 15349                           ;boostercomms.c: 778: }
 15350                           ;boostercomms.c: 779: }
 15351                           ;boostercomms.c: 780: for(char i=1;i<29;i++){
 15352  0098EA  0E01               	movlw	1
 15353  0098EC  6E1D               	movwf	QueryWinSerial@i,c
 15354  0098EE                     i2l5183:
 15355  0098EE  0E1C               	movlw	28
 15356  0098F0  641D               	cpfsgt	QueryWinSerial@i,c
 15357  0098F2  D001               	goto	i2l5187
 15358  0098F4  D03F               	goto	i2l5211
 15359  0098F6                     i2l5187:
 15360                           
 15361                           ;boostercomms.c: 781: for(char j=i+1;j<29;j++){
 15362  0098F6  281D               	incf	QueryWinSerial@i,w,c
 15363  0098F8  6E1C               	movwf	QueryWinSerial@j,c
 15364  0098FA  0E1C               	movlw	28
 15365  0098FC  641C               	cpfsgt	QueryWinSerial@j,c
 15366  0098FE  D001               	goto	i2l5191
 15367  009900  D037               	goto	i2l5207
 15368  009902                     i2l5191:
 15369                           
 15370                           ;boostercomms.c: 782: if((boosterCommsDataSerial[i]==boosterCommsDataSerial[j])&&!(boost
      +                          erCommsDataSerial[i]==0)){
 15371  009902  501C               	movf	QueryWinSerial@j,w,c
 15372  009904  0D02               	mullw	2
 15373  009906  0E00               	movlw	low _boosterCommsDataSerial
 15374  009908  24F3               	addwf	prodl,w,c
 15375  00990A  6ED9               	movwf	fsr2l,c
 15376  00990C  0E03               	movlw	high _boosterCommsDataSerial
 15377  00990E  20F4               	addwfc	prodh,w,c
 15378  009910  6EDA               	movwf	fsr2h,c
 15379  009912  501D               	movf	QueryWinSerial@i,w,c
 15380  009914  0D02               	mullw	2
 15381  009916  0E00               	movlw	low _boosterCommsDataSerial
 15382  009918  24F3               	addwf	prodl,w,c
 15383  00991A  6EE1               	movwf	fsr1l,c
 15384  00991C  0E03               	movlw	high _boosterCommsDataSerial
 15385  00991E  20F4               	addwfc	prodh,w,c
 15386  009920  6EE2               	movwf	fsr1h,c
 15387  009922  50DE               	movf	postinc2,w,c
 15388  009924  18E6               	xorwf	postinc1,w,c
 15389  009926  E122               	bnz	i2l5203
 15390  009928  50DE               	movf	postinc2,w,c
 15391  00992A  18E6               	xorwf	postinc1,w,c
 15392  00992C  A4D8               	btfss	status,2,c
 15393  00992E  D01E               	goto	i2l5203
 15394  009930  501D               	movf	QueryWinSerial@i,w,c
 15395  009932  0D02               	mullw	2
 15396  009934  0E00               	movlw	low _boosterCommsDataSerial
 15397  009936  24F3               	addwf	prodl,w,c
 15398  009938  6ED9               	movwf	fsr2l,c
 15399  00993A  0E03               	movlw	high _boosterCommsDataSerial
 15400  00993C  20F4               	addwfc	prodh,w,c
 15401  00993E  6EDA               	movwf	fsr2h,c
 15402  009940  50DE               	movf	postinc2,w,c
 15403  009942  10DE               	iorwf	postinc2,w,c
 15404  009944  B4D8               	btfsc	status,2,c
 15405  009946  D012               	goto	i2l5203
 15406                           
 15407                           ;boostercomms.c: 783: ResetSingleBoosterState(i);
 15408  009948  501D               	movf	QueryWinSerial@i,w,c
 15409  00994A  EC80  F052         	call	i2_ResetSingleBoosterState
 15410                           
 15411                           ;boostercomms.c: 784: ResetSingleBoosterState(j);
 15412  00994E  501C               	movf	QueryWinSerial@j,w,c
 15413  009950  EC80  F052         	call	i2_ResetSingleBoosterState
 15414                           
 15415                           ;boostercomms.c: 785: BoosterCommandStart(0, 0b101, i+1);
 15416  009954  0E00               	movlw	0
 15417  009956  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 15418  009958  0E00               	movlw	0
 15419  00995A  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 15420  00995C  0E05               	movlw	5
 15421  00995E  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 15422  009960  281D               	incf	QueryWinSerial@i,w,c
 15423  009962  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 15424  009964  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 15425                           
 15426                           ;boostercomms.c: 786: return 0;
 15427  009968  0E00               	movlw	0
 15428  00996A  0012               	return	
 15429  00996C                     i2l5203:
 15430  00996C  2A1C               	incf	QueryWinSerial@j,f,c
 15431  00996E  D7C5               	goto	L9
 15432  009970                     i2l5207:
 15433  009970  2A1D               	incf	QueryWinSerial@i,f,c
 15434  009972  D7BD               	goto	i2l5183
 15435  009974                     i2l5211:
 15436                           
 15437                           ;boostercomms.c: 787: }
 15438                           ;boostercomms.c: 788: }
 15439                           ;boostercomms.c: 789: }
 15440                           ;boostercomms.c: 791: statusGetSerialUCS = 0;
 15441  009974  0E00               	movlw	0
 15442  009976  0102               	movlb	2	; () banked
 15443  009978  6F9D               	movwf	_statusGetSerialUCS& (0+255),b
 15444                           
 15445                           ; BSR set to: 2
 15446                           ;boostercomms.c: 792: return 1;
 15447  00997A  0E01               	movlw	1
 15448                           
 15449                           ; BSR set to: 2
 15450                           ;boostercomms.c: 793: }else{
 15451                           
 15452                           ; BSR set to: 2
 15453  00997C  0012               	return	
 15454  00997E                     i2l5219:
 15455                           
 15456                           ; BSR set to: 2
 15457                           ;boostercomms.c: 794: statusFlagsUSLG |= 0b000000100000000000000000;
 15458  00997E  0102               	movlb	2	; () banked
 15459  009980  838C               	bsf	(_statusFlagsUSLG+2)& (0+255),1,b	;volatile
 15460                           
 15461                           ; BSR set to: 2
 15462                           ;boostercomms.c: 795: statusGetSerialUCS = 1;
 15463  009982  0E01               	movlw	1
 15464  009984  0102               	movlb	2	; () banked
 15465  009986  6F9D               	movwf	_statusGetSerialUCS& (0+255),b
 15466                           
 15467                           ; BSR set to: 2
 15468                           ;boostercomms.c: 796: if((missingSerialWinUCS = LowestMissingSerial()) < 30){
 15469  009988  EC37  F057         	call	_LowestMissingSerial	;wreg free
 15470  00998C  0102               	movlb	2	; () banked
 15471  00998E  6F9E               	movwf	_missingSerialWinUCS& (0+255),b
 15472  009990  0E1E               	movlw	30
 15473  009992  0102               	movlb	2	; () banked
 15474  009994  619E               	cpfslt	_missingSerialWinUCS& (0+255),b
 15475  009996  D010               	goto	i2l5233
 15476                           
 15477                           ; BSR set to: 2
 15478                           ;boostercomms.c: 797: QueryFailureCounter=0;
 15479  009998  0E00               	movlw	0
 15480  00999A  0102               	movlb	2	; () banked
 15481  00999C  6F9F               	movwf	_QueryFailureCounter& (0+255),b
 15482                           
 15483                           ; BSR set to: 2
 15484                           ;boostercomms.c: 798: BoosterCommandStart(0, 0b101, missingSerialWinUCS+1);
 15485  00999E  0E00               	movlw	0
 15486  0099A0  6E08               	movwf	BoosterCommandStart@destSerialUS+1,c
 15487  0099A2  0E00               	movlw	0
 15488  0099A4  6E07               	movwf	BoosterCommandStart@destSerialUS,c
 15489  0099A6  0E05               	movlw	5
 15490  0099A8  6E09               	movwf	BoosterCommandStart@destCommandUC,c
 15491  0099AA  0102               	movlb	2	; () banked
 15492  0099AC  299E               	incf	_missingSerialWinUCS& (0+255),w,b
 15493  0099AE  6E0A               	movwf	BoosterCommandStart@destPayloadUC,c
 15494  0099B0  ECE2  F053         	call	_BoosterCommandStart	;wreg free
 15495                           
 15496                           ;boostercomms.c: 799: return 0;
 15497  0099B4  0E00               	movlw	0
 15498  0099B6  0012               	return	
 15499  0099B8                     i2l5233:
 15500                           
 15501                           ;boostercomms.c: 800: }
 15502                           ;boostercomms.c: 801: return 1;
 15503  0099B8  0E01               	movlw	1
 15504  0099BA  0012               	return	
 15505  0099BC                     __end_of_QueryWinSerial:
 15506                           	opt stack 0
 15507                           pclatu	equ	0xFFB
 15508                           pclath	equ	0xFFA
 15509                           tblptru	equ	0xFF8
 15510                           tblptrh	equ	0xFF7
 15511                           tblptrl	equ	0xFF6
 15512                           tablat	equ	0xFF5
 15513                           prodh	equ	0xFF4
 15514                           prodl	equ	0xFF3
 15515                           intcon	equ	0xFF2
 15516                           postinc0	equ	0xFEE
 15517                           fsr0h	equ	0xFEA
 15518                           fsr0l	equ	0xFE9
 15519                           wreg	equ	0xFE8
 15520                           indf1	equ	0xFE7
 15521                           postinc1	equ	0xFE6
 15522                           postdec1	equ	0xFE5
 15523                           fsr1h	equ	0xFE2
 15524                           fsr1l	equ	0xFE1
 15525                           indf2	equ	0xFDF
 15526                           postinc2	equ	0xFDE
 15527                           postdec2	equ	0xFDD
 15528                           plusw2	equ	0xFDB
 15529                           fsr2h	equ	0xFDA
 15530                           fsr2l	equ	0xFD9
 15531                           status	equ	0xFD8
 15532                           
 15533 ;; *************** function i2_ResetSingleBoosterState *****************
 15534 ;; Defined at:
 15535 ;;		line 577 in file "boostercomms.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;  boosterNumbe    1    wreg     unsigned char 
 15538 ;; Auto vars:     Size  Location     Type
 15539 ;;  boosterNumbe    1    0[COMRAM] unsigned char 
 15540 ;; Return value:  Size  Location     Type
 15541 ;;                  1    wreg      void 
 15542 ;; Registers used:
 15543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15544 ;; Tracked objects:
 15545 ;;		On entry : 0/0
 15546 ;;		On exit  : 0/0
 15547 ;;		Unchanged: 0/0
 15548 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 15549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15552 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;Total ram usage:        1 bytes
 15554 ;; Hardware stack levels used:    1
 15555 ;; This function calls:
 15556 ;;		Nothing
 15557 ;; This function is called by:
 15558 ;;		_ProcessRXFrame
 15559 ;;		_QueryWinSerial
 15560 ;;		i2_ResetBoosterStates
 15561 ;; This function uses a non-reentrant model
 15562 ;;
 15563                           
 15564                           	psect	text80
 15565  00A500                     __ptext80:
 15566                           	opt stack 0
 15567  00A500                     i2_ResetSingleBoosterState:
 15568                           	opt stack 21
 15569                           
 15570                           ;incstack = 0
 15571                           ;i2ResetSingleBoosterState@boosterNumberUC stored from wreg
 15572  00A500  6E01               	movwf	i2ResetSingleBoosterState@boosterNumberUC,c
 15573                           
 15574                           ;boostercomms.c: 578: boosterCommsData[4][boosterNumberUC] = 10;
 15575  00A502  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15576  00A504  0D01               	mullw	1
 15577  00A506  0E78               	movlw	low (_boosterCommsData+120)
 15578  00A508  24F3               	addwf	prodl,w,c
 15579  00A50A  6ED9               	movwf	fsr2l,c
 15580  00A50C  0E04               	movlw	high (_boosterCommsData+120)
 15581  00A50E  20F4               	addwfc	prodh,w,c
 15582  00A510  6EDA               	movwf	fsr2h,c
 15583  00A512  0E0A               	movlw	10
 15584  00A514  6EDF               	movwf	indf2,c
 15585                           
 15586                           ;boostercomms.c: 579: boosterCommsData[5][boosterNumberUC] = 0;
 15587  00A516  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15588  00A518  0D01               	mullw	1
 15589  00A51A  0E96               	movlw	low (_boosterCommsData+150)
 15590  00A51C  24F3               	addwf	prodl,w,c
 15591  00A51E  6ED9               	movwf	fsr2l,c
 15592  00A520  0E04               	movlw	high (_boosterCommsData+150)
 15593  00A522  20F4               	addwfc	prodh,w,c
 15594  00A524  6EDA               	movwf	fsr2h,c
 15595  00A526  0E00               	movlw	0
 15596  00A528  6EDF               	movwf	indf2,c
 15597                           
 15598                           ;boostercomms.c: 580: boosterCommsData[6][boosterNumberUC] = 0;
 15599  00A52A  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15600  00A52C  0D01               	mullw	1
 15601  00A52E  0EB4               	movlw	low (_boosterCommsData+180)
 15602  00A530  24F3               	addwf	prodl,w,c
 15603  00A532  6ED9               	movwf	fsr2l,c
 15604  00A534  0E04               	movlw	high (_boosterCommsData+180)
 15605  00A536  20F4               	addwfc	prodh,w,c
 15606  00A538  6EDA               	movwf	fsr2h,c
 15607  00A53A  0E00               	movlw	0
 15608  00A53C  6EDF               	movwf	indf2,c
 15609                           
 15610                           ;boostercomms.c: 581: boosterCommsData[7][boosterNumberUC] = 0;
 15611  00A53E  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15612  00A540  0D01               	mullw	1
 15613  00A542  0ED2               	movlw	low (_boosterCommsData+210)
 15614  00A544  24F3               	addwf	prodl,w,c
 15615  00A546  6ED9               	movwf	fsr2l,c
 15616  00A548  0E04               	movlw	high (_boosterCommsData+210)
 15617  00A54A  20F4               	addwfc	prodh,w,c
 15618  00A54C  6EDA               	movwf	fsr2h,c
 15619  00A54E  0E00               	movlw	0
 15620  00A550  6EDF               	movwf	indf2,c
 15621                           
 15622                           ;boostercomms.c: 582: boosterCommsData[0][boosterNumberUC] = 0;
 15623  00A552  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15624  00A554  0D01               	mullw	1
 15625  00A556  0E00               	movlw	low _boosterCommsData
 15626  00A558  24F3               	addwf	prodl,w,c
 15627  00A55A  6ED9               	movwf	fsr2l,c
 15628  00A55C  0E04               	movlw	high _boosterCommsData
 15629  00A55E  20F4               	addwfc	prodh,w,c
 15630  00A560  6EDA               	movwf	fsr2h,c
 15631  00A562  0E00               	movlw	0
 15632  00A564  6EDF               	movwf	indf2,c
 15633                           
 15634                           ;boostercomms.c: 583: boosterCommsData[1][boosterNumberUC] = 0;
 15635  00A566  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15636  00A568  0D01               	mullw	1
 15637  00A56A  0E1E               	movlw	low (_boosterCommsData+30)
 15638  00A56C  24F3               	addwf	prodl,w,c
 15639  00A56E  6ED9               	movwf	fsr2l,c
 15640  00A570  0E04               	movlw	high (_boosterCommsData+30)
 15641  00A572  20F4               	addwfc	prodh,w,c
 15642  00A574  6EDA               	movwf	fsr2h,c
 15643  00A576  0E00               	movlw	0
 15644  00A578  6EDF               	movwf	indf2,c
 15645                           
 15646                           ;boostercomms.c: 584: boosterCommsData[2][boosterNumberUC] = 0;
 15647  00A57A  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15648  00A57C  0D01               	mullw	1
 15649  00A57E  0E3C               	movlw	low (_boosterCommsData+60)
 15650  00A580  24F3               	addwf	prodl,w,c
 15651  00A582  6ED9               	movwf	fsr2l,c
 15652  00A584  0E04               	movlw	high (_boosterCommsData+60)
 15653  00A586  20F4               	addwfc	prodh,w,c
 15654  00A588  6EDA               	movwf	fsr2h,c
 15655  00A58A  0E00               	movlw	0
 15656  00A58C  6EDF               	movwf	indf2,c
 15657                           
 15658                           ;boostercomms.c: 585: boosterCommsData[3][boosterNumberUC] = 0;
 15659  00A58E  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15660  00A590  0D01               	mullw	1
 15661  00A592  0E5A               	movlw	low (_boosterCommsData+90)
 15662  00A594  24F3               	addwf	prodl,w,c
 15663  00A596  6ED9               	movwf	fsr2l,c
 15664  00A598  0E04               	movlw	high (_boosterCommsData+90)
 15665  00A59A  20F4               	addwfc	prodh,w,c
 15666  00A59C  6EDA               	movwf	fsr2h,c
 15667  00A59E  0E00               	movlw	0
 15668  00A5A0  6EDF               	movwf	indf2,c
 15669                           
 15670                           ;boostercomms.c: 586: boosterCommsDataSerial[boosterNumberUC] = 0;
 15671  00A5A2  5001               	movf	i2ResetSingleBoosterState@boosterNumberUC,w,c
 15672  00A5A4  0D02               	mullw	2
 15673  00A5A6  0E00               	movlw	low _boosterCommsDataSerial
 15674  00A5A8  24F3               	addwf	prodl,w,c
 15675  00A5AA  6ED9               	movwf	fsr2l,c
 15676  00A5AC  0E03               	movlw	high _boosterCommsDataSerial
 15677  00A5AE  20F4               	addwfc	prodh,w,c
 15678  00A5B0  6EDA               	movwf	fsr2h,c
 15679  00A5B2  0E00               	movlw	0
 15680  00A5B4  6EDE               	movwf	postinc2,c
 15681  00A5B6  0E00               	movlw	0
 15682  00A5B8  6EDD               	movwf	postdec2,c
 15683  00A5BA  0012               	return		;funcret
 15684  00A5BC                     __end_ofi2_ResetSingleBoosterState:
 15685                           	opt stack 0
 15686                           pclatu	equ	0xFFB
 15687                           pclath	equ	0xFFA
 15688                           tblptru	equ	0xFF8
 15689                           tblptrh	equ	0xFF7
 15690                           tblptrl	equ	0xFF6
 15691                           tablat	equ	0xFF5
 15692                           prodh	equ	0xFF4
 15693                           prodl	equ	0xFF3
 15694                           intcon	equ	0xFF2
 15695                           postinc0	equ	0xFEE
 15696                           fsr0h	equ	0xFEA
 15697                           fsr0l	equ	0xFE9
 15698                           wreg	equ	0xFE8
 15699                           indf1	equ	0xFE7
 15700                           postinc1	equ	0xFE6
 15701                           postdec1	equ	0xFE5
 15702                           fsr1h	equ	0xFE2
 15703                           fsr1l	equ	0xFE1
 15704                           indf2	equ	0xFDF
 15705                           postinc2	equ	0xFDE
 15706                           postdec2	equ	0xFDD
 15707                           plusw2	equ	0xFDB
 15708                           fsr2h	equ	0xFDA
 15709                           fsr2l	equ	0xFD9
 15710                           status	equ	0xFD8
 15711                           
 15712 ;; *************** function i2_ClearPastValue *****************
 15713 ;; Defined at:
 15714 ;;		line 272 in file "mastercomms.c"
 15715 ;; Parameters:    Size  Location     Type
 15716 ;;  valuePosUC      1    wreg     unsigned char 
 15717 ;; Auto vars:     Size  Location     Type
 15718 ;;  valuePosUC      1    0[COMRAM] unsigned char 
 15719 ;; Return value:  Size  Location     Type
 15720 ;;                  1    wreg      void 
 15721 ;; Registers used:
 15722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15723 ;; Tracked objects:
 15724 ;;		On entry : 0/0
 15725 ;;		On exit  : 0/0
 15726 ;;		Unchanged: 0/0
 15727 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 15728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15732 ;;Total ram usage:        1 bytes
 15733 ;; Hardware stack levels used:    1
 15734 ;; This function calls:
 15735 ;;		Nothing
 15736 ;; This function is called by:
 15737 ;;		_ProcessRXFrame
 15738 ;;		_QueryWinSerial
 15739 ;;		i2_ClearPastValues
 15740 ;; This function uses a non-reentrant model
 15741 ;;
 15742                           
 15743                           	psect	text81
 15744  00AC9E                     __ptext81:
 15745                           	opt stack 0
 15746  00AC9E                     i2_ClearPastValue:
 15747                           	opt stack 21
 15748                           
 15749                           ;incstack = 0
 15750                           ;i2ClearPastValue@valuePosUC stored from wreg
 15751  00AC9E  6E01               	movwf	i2ClearPastValue@valuePosUC,c
 15752                           
 15753                           ;mastercomms.c: 273: pastBoosterValuesUSAG[0][valuePosUC] = 0;
 15754  00ACA0  5001               	movf	i2ClearPastValue@valuePosUC,w,c
 15755  00ACA2  0D02               	mullw	2
 15756  00ACA4  0E00               	movlw	low _pastBoosterValuesUSAG
 15757  00ACA6  24F3               	addwf	prodl,w,c
 15758  00ACA8  6ED9               	movwf	fsr2l,c
 15759  00ACAA  0E06               	movlw	high _pastBoosterValuesUSAG
 15760  00ACAC  20F4               	addwfc	prodh,w,c
 15761  00ACAE  6EDA               	movwf	fsr2h,c
 15762  00ACB0  0E00               	movlw	0
 15763  00ACB2  6EDE               	movwf	postinc2,c
 15764  00ACB4  0E00               	movlw	0
 15765  00ACB6  6EDD               	movwf	postdec2,c
 15766                           
 15767                           ;mastercomms.c: 274: pastBoosterValuesUSAG[1][valuePosUC] = 0;
 15768  00ACB8  5001               	movf	i2ClearPastValue@valuePosUC,w,c
 15769  00ACBA  0D02               	mullw	2
 15770  00ACBC  0E3E               	movlw	low (_pastBoosterValuesUSAG+62)
 15771  00ACBE  24F3               	addwf	prodl,w,c
 15772  00ACC0  6ED9               	movwf	fsr2l,c
 15773  00ACC2  0E06               	movlw	high (_pastBoosterValuesUSAG+62)
 15774  00ACC4  20F4               	addwfc	prodh,w,c
 15775  00ACC6  6EDA               	movwf	fsr2h,c
 15776  00ACC8  0E00               	movlw	0
 15777  00ACCA  6EDE               	movwf	postinc2,c
 15778  00ACCC  0E00               	movlw	0
 15779  00ACCE  6EDD               	movwf	postdec2,c
 15780                           
 15781                           ;mastercomms.c: 275: pastBoosterValuesUSAG[2][valuePosUC] = 0;
 15782  00ACD0  5001               	movf	i2ClearPastValue@valuePosUC,w,c
 15783  00ACD2  0D02               	mullw	2
 15784  00ACD4  0E7C               	movlw	low (_pastBoosterValuesUSAG+124)
 15785  00ACD6  24F3               	addwf	prodl,w,c
 15786  00ACD8  6ED9               	movwf	fsr2l,c
 15787  00ACDA  0E06               	movlw	high (_pastBoosterValuesUSAG+124)
 15788  00ACDC  20F4               	addwfc	prodh,w,c
 15789  00ACDE  6EDA               	movwf	fsr2h,c
 15790  00ACE0  0E00               	movlw	0
 15791  00ACE2  6EDE               	movwf	postinc2,c
 15792  00ACE4  0E00               	movlw	0
 15793  00ACE6  6EDD               	movwf	postdec2,c
 15794                           
 15795                           ;mastercomms.c: 276: pastBoosterValuesUSAG[3][valuePosUC] = 0;
 15796  00ACE8  5001               	movf	i2ClearPastValue@valuePosUC,w,c
 15797  00ACEA  0D02               	mullw	2
 15798  00ACEC  0EBA               	movlw	low (_pastBoosterValuesUSAG+186)
 15799  00ACEE  24F3               	addwf	prodl,w,c
 15800  00ACF0  6ED9               	movwf	fsr2l,c
 15801  00ACF2  0E06               	movlw	high (_pastBoosterValuesUSAG+186)
 15802  00ACF4  20F4               	addwfc	prodh,w,c
 15803  00ACF6  6EDA               	movwf	fsr2h,c
 15804  00ACF8  0E00               	movlw	0
 15805  00ACFA  6EDE               	movwf	postinc2,c
 15806  00ACFC  0E00               	movlw	0
 15807  00ACFE  6EDD               	movwf	postdec2,c
 15808  00AD00  0012               	return		;funcret
 15809  00AD02                     __end_ofi2_ClearPastValue:
 15810                           	opt stack 0
 15811                           pclatu	equ	0xFFB
 15812                           pclath	equ	0xFFA
 15813                           tblptru	equ	0xFF8
 15814                           tblptrh	equ	0xFF7
 15815                           tblptrl	equ	0xFF6
 15816                           tablat	equ	0xFF5
 15817                           prodh	equ	0xFF4
 15818                           prodl	equ	0xFF3
 15819                           intcon	equ	0xFF2
 15820                           postinc0	equ	0xFEE
 15821                           fsr0h	equ	0xFEA
 15822                           fsr0l	equ	0xFE9
 15823                           wreg	equ	0xFE8
 15824                           indf1	equ	0xFE7
 15825                           postinc1	equ	0xFE6
 15826                           postdec1	equ	0xFE5
 15827                           fsr1h	equ	0xFE2
 15828                           fsr1l	equ	0xFE1
 15829                           indf2	equ	0xFDF
 15830                           postinc2	equ	0xFDE
 15831                           postdec2	equ	0xFDD
 15832                           plusw2	equ	0xFDB
 15833                           fsr2h	equ	0xFDA
 15834                           fsr2l	equ	0xFD9
 15835                           status	equ	0xFD8
 15836                           
 15837 ;; *************** function _LowestMissingSerial *****************
 15838 ;; Defined at:
 15839 ;;		line 741 in file "boostercomms.c"
 15840 ;; Parameters:    Size  Location     Type
 15841 ;;		None
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;		None
 15844 ;; Return value:  Size  Location     Type
 15845 ;;                  1    wreg      unsigned char 
 15846 ;; Registers used:
 15847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15848 ;; Tracked objects:
 15849 ;;		On entry : 0/0
 15850 ;;		On exit  : 0/0
 15851 ;;		Unchanged: 0/0
 15852 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 15853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15857 ;;Total ram usage:        2 bytes
 15858 ;; Hardware stack levels used:    1
 15859 ;; This function calls:
 15860 ;;		Nothing
 15861 ;; This function is called by:
 15862 ;;		_QueryWinSerial
 15863 ;;		_BoosterCommsDispatcher
 15864 ;; This function uses a non-reentrant model
 15865 ;;
 15866                           
 15867                           	psect	text82
 15868  00AE6E                     __ptext82:
 15869                           	opt stack 0
 15870  00AE6E                     _LowestMissingSerial:
 15871                           	opt stack 21
 15872                           
 15873                           ;boostercomms.c: 744: for(boosterCountUC = 1; boosterCountUC < 30; boosterCountUC++)
 15874                           
 15875                           ;incstack = 0
 15876  00AE6E  0E01               	movlw	1
 15877  00AE70  0102               	movlb	2	; () banked
 15878  00AE72  6F9B               	movwf	_boosterCountUC& (0+255),b
 15879  00AE74                     i2l4619:
 15880                           
 15881                           ; BSR set to: 2
 15882  00AE74  0E1D               	movlw	29
 15883  00AE76  0102               	movlb	2	; () banked
 15884  00AE78  659B               	cpfsgt	_boosterCountUC& (0+255),b
 15885  00AE7A  D001               	goto	i2l4623
 15886  00AE7C  D020               	goto	i2l4635
 15887  00AE7E                     i2l4623:
 15888                           
 15889                           ; BSR set to: 2
 15890                           ;boostercomms.c: 745: if((boosterCommsData[4][boosterCountUC] != 10) &&
 15891                           ;boostercomms.c: 746: !boosterCommsDataSerial[boosterCountUC])
 15892  00AE7E  0102               	movlb	2	; () banked
 15893  00AE80  519B               	movf	_boosterCountUC& (0+255),w,b
 15894  00AE82  0D01               	mullw	1
 15895  00AE84  0E78               	movlw	low (_boosterCommsData+120)
 15896  00AE86  24F3               	addwf	prodl,w,c
 15897  00AE88  6ED9               	movwf	fsr2l,c
 15898  00AE8A  0E04               	movlw	high (_boosterCommsData+120)
 15899  00AE8C  20F4               	addwfc	prodh,w,c
 15900  00AE8E  6EDA               	movwf	fsr2h,c
 15901  00AE90  0E0A               	movlw	10
 15902  00AE92  18DE               	xorwf	postinc2,w,c
 15903  00AE94  B4D8               	btfsc	status,2,c
 15904  00AE96  D010               	goto	i2l4631
 15905                           
 15906                           ; BSR set to: 2
 15907  00AE98  0102               	movlb	2	; () banked
 15908  00AE9A  519B               	movf	_boosterCountUC& (0+255),w,b
 15909  00AE9C  0D02               	mullw	2
 15910  00AE9E  0E00               	movlw	low _boosterCommsDataSerial
 15911  00AEA0  24F3               	addwf	prodl,w,c
 15912  00AEA2  6ED9               	movwf	fsr2l,c
 15913  00AEA4  0E03               	movlw	high _boosterCommsDataSerial
 15914  00AEA6  20F4               	addwfc	prodh,w,c
 15915  00AEA8  6EDA               	movwf	fsr2h,c
 15916  00AEAA  50DE               	movf	postinc2,w,c
 15917  00AEAC  10DE               	iorwf	postinc2,w,c
 15918  00AEAE  A4D8               	btfss	status,2,c
 15919  00AEB0  D003               	goto	i2l4631
 15920                           
 15921                           ; BSR set to: 2
 15922                           ;boostercomms.c: 747: return boosterCountUC;
 15923  00AEB2  0102               	movlb	2	; () banked
 15924  00AEB4  519B               	movf	_boosterCountUC& (0+255),w,b
 15925                           
 15926                           ; BSR set to: 2
 15927  00AEB6  0012               	return	
 15928  00AEB8                     i2l4631:
 15929                           
 15930                           ; BSR set to: 2
 15931  00AEB8  0102               	movlb	2	; () banked
 15932  00AEBA  2B9B               	incf	_boosterCountUC& (0+255),f,b
 15933  00AEBC  D7DB               	goto	i2l4619
 15934  00AEBE                     i2l4635:
 15935                           
 15936                           ; BSR set to: 2
 15937                           ;boostercomms.c: 748: return boosterCountUC;
 15938  00AEBE  0102               	movlb	2	; () banked
 15939  00AEC0  519B               	movf	_boosterCountUC& (0+255),w,b
 15940  00AEC2  0012               	return	
 15941  00AEC4                     __end_of_LowestMissingSerial:
 15942                           	opt stack 0
 15943                           pclatu	equ	0xFFB
 15944                           pclath	equ	0xFFA
 15945                           tblptru	equ	0xFF8
 15946                           tblptrh	equ	0xFF7
 15947                           tblptrl	equ	0xFF6
 15948                           tablat	equ	0xFF5
 15949                           prodh	equ	0xFF4
 15950                           prodl	equ	0xFF3
 15951                           intcon	equ	0xFF2
 15952                           postinc0	equ	0xFEE
 15953                           fsr0h	equ	0xFEA
 15954                           fsr0l	equ	0xFE9
 15955                           wreg	equ	0xFE8
 15956                           indf1	equ	0xFE7
 15957                           postinc1	equ	0xFE6
 15958                           postdec1	equ	0xFE5
 15959                           fsr1h	equ	0xFE2
 15960                           fsr1l	equ	0xFE1
 15961                           indf2	equ	0xFDF
 15962                           postinc2	equ	0xFDE
 15963                           postdec2	equ	0xFDD
 15964                           plusw2	equ	0xFDB
 15965                           fsr2h	equ	0xFDA
 15966                           fsr2l	equ	0xFD9
 15967                           status	equ	0xFD8
 15968                           
 15969 ;; *************** function _BoosterCommandStart *****************
 15970 ;; Defined at:
 15971 ;;		line 473 in file "boostercomms.c"
 15972 ;; Parameters:    Size  Location     Type
 15973 ;;  destSerialUS    2    6[COMRAM] unsigned short 
 15974 ;;  destCommandU    1    8[COMRAM] unsigned char 
 15975 ;;  destPayloadU    1    9[COMRAM] unsigned char 
 15976 ;; Auto vars:     Size  Location     Type
 15977 ;;		None
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  1    wreg      void 
 15980 ;; Registers used:
 15981 ;;		wreg, status,2, status,0, cstack
 15982 ;; Tracked objects:
 15983 ;;		On entry : 0/0
 15984 ;;		On exit  : 0/0
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 15987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15989 ;;      Temps:         11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15990 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15991 ;;Total ram usage:       15 bytes
 15992 ;; Hardware stack levels used:    1
 15993 ;; Hardware stack levels required when called:    1
 15994 ;; This function calls:
 15995 ;;		_BoosterCommsActive
 15996 ;;		_CheckBoosterRXParity
 15997 ;; This function is called by:
 15998 ;;		_WindowIDBacktrack
 15999 ;;		_AssignWindowID
 16000 ;;		_AssignSerialNumber
 16001 ;;		_SetWindowID
 16002 ;;		_QueryWinSerial
 16003 ;;		_RunBLCalibration
 16004 ;; This function uses a non-reentrant model
 16005 ;;
 16006                           
 16007                           	psect	text83
 16008  00A7C4                     __ptext83:
 16009                           	opt stack 0
 16010  00A7C4                     _BoosterCommandStart:
 16011                           	opt stack 19
 16012                           
 16013                           ;boostercomms.c: 474: if(BoosterCommsActive())
 16014                           
 16015                           ; BSR set to: 2
 16016                           ;incstack = 0
 16017  00A7C4  ECF4  F05A         	call	_BoosterCommsActive	;wreg free
 16018  00A7C8  0900               	iorlw	0
 16019  00A7CA  A4D8               	btfss	status,2,c
 16020  00A7CC  0012               	return	
 16021                           
 16022                           ;boostercomms.c: 476: statusFlagsUSLG &= ~0b000000000000000000000100;
 16023                           
 16024                           ;boostercomms.c: 475: return;
 16025  00A7CE  0102               	movlb	2	; () banked
 16026  00A7D0  958A               	bcf	_statusFlagsUSLG& (0+255),2,b	;volatile
 16027                           
 16028                           ; BSR set to: 2
 16029                           ;boostercomms.c: 477: commsTXBitsUSLG = (((unsigned short long) destSerialUS) << 8) | (d
      +                          estCommandUC << 5) | destPayloadUC;
 16030  00A7D2  500A               	movf	BoosterCommandStart@destPayloadUC,w,c
 16031  00A7D4  6E0B               	movwf	??_BoosterCommandStart& (0+255),c
 16032  00A7D6  6A0C               	clrf	(??_BoosterCommandStart+1)& (0+255),c
 16033  00A7D8  6A0D               	clrf	(??_BoosterCommandStart+2)& (0+255),c
 16034  00A7DA  5009               	movf	BoosterCommandStart@destCommandUC,w,c
 16035  00A7DC  6E0E               	movwf	(??_BoosterCommandStart+3)& (0+255),c
 16036  00A7DE  6A0F               	clrf	(??_BoosterCommandStart+4)& (0+255),c
 16037  00A7E0  0E05               	movlw	5
 16038  00A7E2                     i2u382_45:
 16039  00A7E2  90D8               	bcf	status,0,c
 16040  00A7E4  360E               	rlcf	??_BoosterCommandStart+3,f,c
 16041  00A7E6  360F               	rlcf	??_BoosterCommandStart+4,f,c
 16042  00A7E8  2EE8               	decfsz	wreg,f,c
 16043  00A7EA  D7FB               	goto	i2u382_45
 16044  00A7EC  C007  F010         	movff	BoosterCommandStart@destSerialUS,??_BoosterCommandStart+5
 16045  00A7F0  C008  F011         	movff	BoosterCommandStart@destSerialUS+1,??_BoosterCommandStart+6
 16046  00A7F4  6A12               	clrf	(??_BoosterCommandStart+7)& (0+255),c
 16047  00A7F6  C011  F012         	movff	??_BoosterCommandStart+6,??_BoosterCommandStart+7
 16048  00A7FA  C010  F011         	movff	??_BoosterCommandStart+5,??_BoosterCommandStart+6
 16049  00A7FE  6A10               	clrf	??_BoosterCommandStart+5,c
 16050  00A800  500E               	movf	??_BoosterCommandStart+3,w,c
 16051  00A802  1010               	iorwf	??_BoosterCommandStart+5,w,c
 16052  00A804  6E13               	movwf	(??_BoosterCommandStart+8)& (0+255),c
 16053  00A806  500F               	movf	??_BoosterCommandStart+4,w,c
 16054  00A808  1011               	iorwf	??_BoosterCommandStart+6,w,c
 16055  00A80A  6E14               	movwf	(??_BoosterCommandStart+9)& (0+255),c
 16056  00A80C  0E00               	movlw	0
 16057  00A80E  BE0F               	btfsc	??_BoosterCommandStart+4,7,c
 16058  00A810  0EFF               	movlw	255
 16059  00A812  1012               	iorwf	??_BoosterCommandStart+7,w,c
 16060  00A814  6E15               	movwf	(??_BoosterCommandStart+10)& (0+255),c
 16061  00A816  500B               	movf	??_BoosterCommandStart,w,c
 16062  00A818  1013               	iorwf	??_BoosterCommandStart+8,w,c
 16063  00A81A  0103               	movlb	3	; () banked
 16064  00A81C  6F3C               	movwf	_commsTXBitsUSLG& (0+255),b
 16065  00A81E  500C               	movf	??_BoosterCommandStart+1,w,c
 16066  00A820  1014               	iorwf	??_BoosterCommandStart+9,w,c
 16067  00A822  0103               	movlb	3	; () banked
 16068  00A824  6F3D               	movwf	(_commsTXBitsUSLG+1)& (0+255),b
 16069  00A826  500D               	movf	??_BoosterCommandStart+2,w,c
 16070  00A828  1015               	iorwf	??_BoosterCommandStart+10,w,c
 16071  00A82A  0103               	movlb	3	; () banked
 16072  00A82C  6F3E               	movwf	(_commsTXBitsUSLG+2)& (0+255),b
 16073                           
 16074                           ; BSR set to: 3
 16075                           ;boostercomms.c: 478: if(CheckBoosterRXParity(destSerialUS) ^ CheckBoosterRXParity(destC
      +                          ommandUC) ^ CheckBoosterRXParity(destPayloadUC))
 16076  00A82E  C00A  F001         	movff	BoosterCommandStart@destPayloadUC,CheckBoosterRXParity@recvFrameUS
 16077  00A832  6A02               	clrf	CheckBoosterRXParity@recvFrameUS+1,c
 16078  00A834  EC7B  F059         	call	_CheckBoosterRXParity	;wreg free
 16079  00A838  6E0B               	movwf	??_BoosterCommandStart& (0+255),c
 16080  00A83A  C009  F001         	movff	BoosterCommandStart@destCommandUC,CheckBoosterRXParity@recvFrameUS
 16081  00A83E  6A02               	clrf	CheckBoosterRXParity@recvFrameUS+1,c
 16082  00A840  EC7B  F059         	call	_CheckBoosterRXParity	;wreg free
 16083  00A844  6E0C               	movwf	(??_BoosterCommandStart+1)& (0+255),c
 16084  00A846  C007  F001         	movff	BoosterCommandStart@destSerialUS,CheckBoosterRXParity@recvFrameUS
 16085  00A84A  C008  F002         	movff	BoosterCommandStart@destSerialUS+1,CheckBoosterRXParity@recvFrameUS+1
 16086  00A84E  EC7B  F059         	call	_CheckBoosterRXParity	;wreg free
 16087  00A852  180C               	xorwf	??_BoosterCommandStart+1,w,c
 16088  00A854  180B               	xorwf	??_BoosterCommandStart,w,c
 16089  00A856  0900               	iorlw	0
 16090  00A858  B4D8               	btfsc	status,2,c
 16091  00A85A  D002               	goto	i2l4341
 16092                           
 16093                           ;boostercomms.c: 479: commsTXBitsUSLG |= 0b100000000000000000000000;
 16094  00A85C  0103               	movlb	3	; () banked
 16095  00A85E  8F3E               	bsf	(_commsTXBitsUSLG+2)& (0+255),7,b
 16096  00A860                     i2l4341:
 16097                           
 16098                           ;boostercomms.c: 480: commsStatusUCG = 1;
 16099  00A860  0E01               	movlw	1
 16100  00A862  0102               	movlb	2	; () banked
 16101  00A864  6FA3               	movwf	_commsStatusUCG& (0+255),b
 16102  00A866  0012               	return		;funcret
 16103  00A868                     __end_of_BoosterCommandStart:
 16104                           	opt stack 0
 16105                           pclatu	equ	0xFFB
 16106                           pclath	equ	0xFFA
 16107                           tblptru	equ	0xFF8
 16108                           tblptrh	equ	0xFF7
 16109                           tblptrl	equ	0xFF6
 16110                           tablat	equ	0xFF5
 16111                           prodh	equ	0xFF4
 16112                           prodl	equ	0xFF3
 16113                           intcon	equ	0xFF2
 16114                           postinc0	equ	0xFEE
 16115                           fsr0h	equ	0xFEA
 16116                           fsr0l	equ	0xFE9
 16117                           wreg	equ	0xFE8
 16118                           indf1	equ	0xFE7
 16119                           postinc1	equ	0xFE6
 16120                           postdec1	equ	0xFE5
 16121                           fsr1h	equ	0xFE2
 16122                           fsr1l	equ	0xFE1
 16123                           indf2	equ	0xFDF
 16124                           postinc2	equ	0xFDE
 16125                           postdec2	equ	0xFDD
 16126                           plusw2	equ	0xFDB
 16127                           fsr2h	equ	0xFDA
 16128                           fsr2l	equ	0xFD9
 16129                           status	equ	0xFD8
 16130                           
 16131 ;; *************** function _CheckBoosterRXParity *****************
 16132 ;; Defined at:
 16133 ;;		line 493 in file "boostercomms.c"
 16134 ;; Parameters:    Size  Location     Type
 16135 ;;  recvFrameUS     2    0[COMRAM] unsigned short 
 16136 ;; Auto vars:     Size  Location     Type
 16137 ;;  tmpRecvFrame    2    2[COMRAM] unsigned short 
 16138 ;;  bitCountUC      1    5[COMRAM] unsigned char 
 16139 ;;  bitParityUC     1    4[COMRAM] unsigned char 
 16140 ;; Return value:  Size  Location     Type
 16141 ;;                  1    wreg      unsigned char 
 16142 ;; Registers used:
 16143 ;;		wreg, status,2, status,0
 16144 ;; Tracked objects:
 16145 ;;		On entry : 0/0
 16146 ;;		On exit  : 0/0
 16147 ;;		Unchanged: 0/0
 16148 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16150 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16152 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16153 ;;Total ram usage:        6 bytes
 16154 ;; Hardware stack levels used:    1
 16155 ;; This function calls:
 16156 ;;		Nothing
 16157 ;; This function is called by:
 16158 ;;		_BoosterCommandStart
 16159 ;;		_ProcessRXFrame
 16160 ;; This function uses a non-reentrant model
 16161 ;;
 16162                           
 16163                           	psect	text84
 16164  00B2F6                     __ptext84:
 16165                           	opt stack 0
 16166  00B2F6                     _CheckBoosterRXParity:
 16167                           	opt stack 21
 16168                           
 16169                           ;boostercomms.c: 494: unsigned char bitCountUC;
 16170                           ;boostercomms.c: 495: unsigned char bitParityUC;
 16171                           ;boostercomms.c: 496: unsigned short tmpRecvFrameUS = recvFrameUS;
 16172                           
 16173                           ;incstack = 0
 16174  00B2F6  C001  F003         	movff	CheckBoosterRXParity@recvFrameUS,CheckBoosterRXParity@tmpRecvFrameUS
 16175  00B2FA  C002  F004         	movff	CheckBoosterRXParity@recvFrameUS+1,CheckBoosterRXParity@tmpRecvFrameUS+1
 16176                           
 16177                           ;boostercomms.c: 498: for(bitCountUC = 0, bitParityUC = 0; bitCountUC < 16; bitCountUC++
      +                          ){
 16178  00B2FE  0E00               	movlw	0
 16179  00B300  6E06               	movwf	CheckBoosterRXParity@bitCountUC,c
 16180  00B302  0E00               	movlw	0
 16181  00B304  6E05               	movwf	CheckBoosterRXParity@bitParityUC,c
 16182  00B306                     i2l4081:
 16183  00B306  0E0F               	movlw	15
 16184  00B308  6406               	cpfsgt	CheckBoosterRXParity@bitCountUC,c
 16185  00B30A  D001               	goto	i2l445
 16186  00B30C  D007               	goto	i2l446
 16187  00B30E                     i2l445:
 16188                           
 16189                           ;boostercomms.c: 499: (tmpRecvFrameUS & 1)?bitParityUC++:1;
 16190  00B30E  B003               	btfsc	CheckBoosterRXParity@tmpRecvFrameUS,0,c
 16191  00B310  2A05               	incf	CheckBoosterRXParity@bitParityUC,f,c
 16192                           
 16193                           ;boostercomms.c: 500: tmpRecvFrameUS >>= 1;
 16194  00B312  90D8               	bcf	status,0,c
 16195  00B314  3204               	rrcf	CheckBoosterRXParity@tmpRecvFrameUS+1,f,c
 16196  00B316  3203               	rrcf	CheckBoosterRXParity@tmpRecvFrameUS,f,c
 16197  00B318  2A06               	incf	CheckBoosterRXParity@bitCountUC,f,c
 16198  00B31A  D7F5               	goto	i2l4081
 16199  00B31C                     i2l446:
 16200                           
 16201                           ;boostercomms.c: 501: }
 16202                           ;boostercomms.c: 503: if(bitParityUC % 2)
 16203  00B31C  A005               	btfss	CheckBoosterRXParity@bitParityUC,0,c
 16204  00B31E  D002               	goto	i2l4097
 16205                           
 16206                           ;boostercomms.c: 504: return 1;
 16207  00B320  0E01               	movlw	1
 16208  00B322  0012               	return	
 16209  00B324                     i2l4097:
 16210                           
 16211                           ;boostercomms.c: 505: else
 16212                           ;boostercomms.c: 506: return 0;
 16213  00B324  0E00               	movlw	0
 16214  00B326  0012               	return	
 16215  00B328                     __end_of_CheckBoosterRXParity:
 16216                           	opt stack 0
 16217                           pclatu	equ	0xFFB
 16218                           pclath	equ	0xFFA
 16219                           tblptru	equ	0xFF8
 16220                           tblptrh	equ	0xFF7
 16221                           tblptrl	equ	0xFF6
 16222                           tablat	equ	0xFF5
 16223                           prodh	equ	0xFF4
 16224                           prodl	equ	0xFF3
 16225                           intcon	equ	0xFF2
 16226                           postinc0	equ	0xFEE
 16227                           fsr0h	equ	0xFEA
 16228                           fsr0l	equ	0xFE9
 16229                           wreg	equ	0xFE8
 16230                           indf1	equ	0xFE7
 16231                           postinc1	equ	0xFE6
 16232                           postdec1	equ	0xFE5
 16233                           fsr1h	equ	0xFE2
 16234                           fsr1l	equ	0xFE1
 16235                           indf2	equ	0xFDF
 16236                           postinc2	equ	0xFDE
 16237                           postdec2	equ	0xFDD
 16238                           plusw2	equ	0xFDB
 16239                           fsr2h	equ	0xFDA
 16240                           fsr2l	equ	0xFD9
 16241                           status	equ	0xFD8
 16242                           
 16243 ;; *************** function _NewBoosterAdded *****************
 16244 ;; Defined at:
 16245 ;;		line 617 in file "boostercomms.c"
 16246 ;; Parameters:    Size  Location     Type
 16247 ;;		None
 16248 ;; Auto vars:     Size  Location     Type
 16249 ;;		None
 16250 ;; Return value:  Size  Location     Type
 16251 ;;                  1    wreg      unsigned char 
 16252 ;; Registers used:
 16253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16254 ;; Tracked objects:
 16255 ;;		On entry : 0/0
 16256 ;;		On exit  : 0/0
 16257 ;;		Unchanged: 0/0
 16258 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16261 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16262 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16263 ;;Total ram usage:        1 bytes
 16264 ;; Hardware stack levels used:    1
 16265 ;; Hardware stack levels required when called:    1
 16266 ;; This function calls:
 16267 ;;		_LowestIdleWindow
 16268 ;; This function is called by:
 16269 ;;		_BoosterCommsDispatcher
 16270 ;; This function uses a non-reentrant model
 16271 ;;
 16272                           
 16273                           	psect	text85
 16274  00B518                     __ptext85:
 16275                           	opt stack 0
 16276  00B518                     _NewBoosterAdded:
 16277                           	opt stack 21
 16278                           
 16279                           ;boostercomms.c: 619: if((LowestIdleWindow() < 29) && (boosterCommsData[4][29] != 10))
 16280                           
 16281                           ;incstack = 0
 16282  00B518  EC94  F059         	call	_LowestIdleWindow	;wreg free
 16283  00B51C  6E04               	movwf	??_NewBoosterAdded& (0+255),c
 16284  00B51E  0E1D               	movlw	29
 16285  00B520  6004               	cpfslt	??_NewBoosterAdded,c
 16286  00B522  D007               	goto	i2l5025
 16287  00B524  0E0A               	movlw	10
 16288  00B526  0104               	movlb	4	; () banked
 16289  00B528  1995               	xorwf	(_boosterCommsData+149)& (0+255),w,b
 16290  00B52A  B4D8               	btfsc	status,2,c
 16291  00B52C  D002               	goto	i2l5025
 16292                           
 16293                           ; BSR set to: 4
 16294                           ;boostercomms.c: 620: return 1;
 16295  00B52E  0E01               	movlw	1
 16296                           
 16297                           ; BSR set to: 4
 16298  00B530  0012               	return	
 16299  00B532                     i2l5025:
 16300                           
 16301                           ;boostercomms.c: 621: return 0;
 16302  00B532  0E00               	movlw	0
 16303  00B534  0012               	return	
 16304  00B536                     __end_of_NewBoosterAdded:
 16305                           	opt stack 0
 16306                           pclatu	equ	0xFFB
 16307                           pclath	equ	0xFFA
 16308                           tblptru	equ	0xFF8
 16309                           tblptrh	equ	0xFF7
 16310                           tblptrl	equ	0xFF6
 16311                           tablat	equ	0xFF5
 16312                           prodh	equ	0xFF4
 16313                           prodl	equ	0xFF3
 16314                           intcon	equ	0xFF2
 16315                           postinc0	equ	0xFEE
 16316                           fsr0h	equ	0xFEA
 16317                           fsr0l	equ	0xFE9
 16318                           wreg	equ	0xFE8
 16319                           indf1	equ	0xFE7
 16320                           postinc1	equ	0xFE6
 16321                           postdec1	equ	0xFE5
 16322                           fsr1h	equ	0xFE2
 16323                           fsr1l	equ	0xFE1
 16324                           indf2	equ	0xFDF
 16325                           postinc2	equ	0xFDE
 16326                           postdec2	equ	0xFDD
 16327                           plusw2	equ	0xFDB
 16328                           fsr2h	equ	0xFDA
 16329                           fsr2l	equ	0xFD9
 16330                           status	equ	0xFD8
 16331                           
 16332 ;; *************** function _LowestIdleWindow *****************
 16333 ;; Defined at:
 16334 ;;		line 607 in file "boostercomms.c"
 16335 ;; Parameters:    Size  Location     Type
 16336 ;;		None
 16337 ;; Auto vars:     Size  Location     Type
 16338 ;;  boosterCount    1    2[COMRAM] unsigned char 
 16339 ;; Return value:  Size  Location     Type
 16340 ;;                  1    wreg      unsigned char 
 16341 ;; Registers used:
 16342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16343 ;; Tracked objects:
 16344 ;;		On entry : 0/0
 16345 ;;		On exit  : 0/0
 16346 ;;		Unchanged: 0/0
 16347 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16351 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16352 ;;Total ram usage:        3 bytes
 16353 ;; Hardware stack levels used:    1
 16354 ;; This function calls:
 16355 ;;		Nothing
 16356 ;; This function is called by:
 16357 ;;		_NewBoosterAdded
 16358 ;;		_AssignWindowID
 16359 ;; This function uses a non-reentrant model
 16360 ;;
 16361                           
 16362                           	psect	text86
 16363  00B328                     __ptext86:
 16364                           	opt stack 0
 16365  00B328                     _LowestIdleWindow:
 16366                           	opt stack 20
 16367                           
 16368                           ;boostercomms.c: 608: unsigned char boosterCountUC;
 16369                           ;boostercomms.c: 610: for(boosterCountUC = 1; boosterCountUC < 30; boosterCountUC++)
 16370                           
 16371                           ;incstack = 0
 16372  00B328  0E01               	movlw	1
 16373  00B32A  6E03               	movwf	LowestIdleWindow@boosterCountUC,c
 16374  00B32C                     i2l4349:
 16375  00B32C  0E1D               	movlw	29
 16376  00B32E  6403               	cpfsgt	LowestIdleWindow@boosterCountUC,c
 16377  00B330  D001               	goto	i2l4353
 16378  00B332  D010               	goto	i2l4363
 16379  00B334                     i2l4353:
 16380                           
 16381                           ;boostercomms.c: 611: if(!(boosterCommsDataSerial[boosterCountUC]))
 16382  00B334  5003               	movf	LowestIdleWindow@boosterCountUC,w,c
 16383  00B336  0D02               	mullw	2
 16384  00B338  0E00               	movlw	low _boosterCommsDataSerial
 16385  00B33A  24F3               	addwf	prodl,w,c
 16386  00B33C  6ED9               	movwf	fsr2l,c
 16387  00B33E  0E03               	movlw	high _boosterCommsDataSerial
 16388  00B340  20F4               	addwfc	prodh,w,c
 16389  00B342  6EDA               	movwf	fsr2h,c
 16390  00B344  50DE               	movf	postinc2,w,c
 16391  00B346  10DE               	iorwf	postinc2,w,c
 16392  00B348  A4D8               	btfss	status,2,c
 16393  00B34A  D002               	goto	i2l4359
 16394                           
 16395                           ;boostercomms.c: 612: return boosterCountUC;
 16396  00B34C  5003               	movf	LowestIdleWindow@boosterCountUC,w,c
 16397  00B34E  0012               	return	
 16398  00B350                     i2l4359:
 16399  00B350  2A03               	incf	LowestIdleWindow@boosterCountUC,f,c
 16400  00B352  D7EC               	goto	i2l4349
 16401  00B354                     i2l4363:
 16402                           
 16403                           ;boostercomms.c: 614: return boosterCountUC;
 16404  00B354  5003               	movf	LowestIdleWindow@boosterCountUC,w,c
 16405  00B356  0012               	return	
 16406  00B358                     __end_of_LowestIdleWindow:
 16407                           	opt stack 0
 16408                           pclatu	equ	0xFFB
 16409                           pclath	equ	0xFFA
 16410                           tblptru	equ	0xFF8
 16411                           tblptrh	equ	0xFF7
 16412                           tblptrl	equ	0xFF6
 16413                           tablat	equ	0xFF5
 16414                           prodh	equ	0xFF4
 16415                           prodl	equ	0xFF3
 16416                           intcon	equ	0xFF2
 16417                           postinc0	equ	0xFEE
 16418                           fsr0h	equ	0xFEA
 16419                           fsr0l	equ	0xFE9
 16420                           wreg	equ	0xFE8
 16421                           indf1	equ	0xFE7
 16422                           postinc1	equ	0xFE6
 16423                           postdec1	equ	0xFE5
 16424                           fsr1h	equ	0xFE2
 16425                           fsr1l	equ	0xFE1
 16426                           indf2	equ	0xFDF
 16427                           postinc2	equ	0xFDE
 16428                           postdec2	equ	0xFDD
 16429                           plusw2	equ	0xFDB
 16430                           fsr2h	equ	0xFDA
 16431                           fsr2l	equ	0xFD9
 16432                           status	equ	0xFD8
 16433                           
 16434 ;; *************** function _CheckDataCollision *****************
 16435 ;; Defined at:
 16436 ;;		line 596 in file "boostercomms.c"
 16437 ;; Parameters:    Size  Location     Type
 16438 ;;		None
 16439 ;; Auto vars:     Size  Location     Type
 16440 ;;  boosterCount    1    0[COMRAM] unsigned char 
 16441 ;; Return value:  Size  Location     Type
 16442 ;;                  1    wreg      unsigned char 
 16443 ;; Registers used:
 16444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16445 ;; Tracked objects:
 16446 ;;		On entry : 0/0
 16447 ;;		On exit  : 0/0
 16448 ;;		Unchanged: 0/0
 16449 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16453 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16454 ;;Total ram usage:        1 bytes
 16455 ;; Hardware stack levels used:    1
 16456 ;; This function calls:
 16457 ;;		Nothing
 16458 ;; This function is called by:
 16459 ;;		_BoosterCommsDispatcher
 16460 ;; This function uses a non-reentrant model
 16461 ;;
 16462                           
 16463                           	psect	text87
 16464  00B3B4                     __ptext87:
 16465                           	opt stack 0
 16466  00B3B4                     _CheckDataCollision:
 16467                           	opt stack 22
 16468                           
 16469                           ;boostercomms.c: 597: unsigned char boosterCountUC;
 16470                           ;boostercomms.c: 599: for(boosterCountUC = 0; boosterCountUC < 28; boosterCountUC++){
 16471                           
 16472                           ;incstack = 0
 16473  00B3B4  0E00               	movlw	0
 16474  00B3B6  6E01               	movwf	CheckDataCollision@boosterCountUC,c
 16475  00B3B8                     i2l4999:
 16476  00B3B8  0E1B               	movlw	27
 16477  00B3BA  6401               	cpfsgt	CheckDataCollision@boosterCountUC,c
 16478  00B3BC  D001               	goto	i2l5003
 16479  00B3BE  D00F               	goto	i2l5013
 16480  00B3C0                     i2l5003:
 16481                           
 16482                           ;boostercomms.c: 600: if(boosterCommsData[6][boosterCountUC] & 0b00001000)
 16483  00B3C0  5001               	movf	CheckDataCollision@boosterCountUC,w,c
 16484  00B3C2  0D01               	mullw	1
 16485  00B3C4  0EB4               	movlw	low (_boosterCommsData+180)
 16486  00B3C6  24F3               	addwf	prodl,w,c
 16487  00B3C8  6ED9               	movwf	fsr2l,c
 16488  00B3CA  0E04               	movlw	high (_boosterCommsData+180)
 16489  00B3CC  20F4               	addwfc	prodh,w,c
 16490  00B3CE  6EDA               	movwf	fsr2h,c
 16491  00B3D0  0104               	movlb	4	; () banked
 16492  00B3D2  A6DF               	btfss	indf2,3,c
 16493  00B3D4  D002               	goto	i2l5009
 16494                           
 16495                           ; BSR set to: 4
 16496                           ;boostercomms.c: 601: return 1;
 16497  00B3D6  0E01               	movlw	1
 16498                           
 16499                           ; BSR set to: 4
 16500  00B3D8  0012               	return	
 16501  00B3DA                     i2l5009:
 16502                           
 16503                           ; BSR set to: 4
 16504  00B3DA  2A01               	incf	CheckDataCollision@boosterCountUC,f,c
 16505  00B3DC  D7ED               	goto	i2l4999
 16506  00B3DE                     i2l5013:
 16507                           
 16508                           ;boostercomms.c: 602: }
 16509                           ;boostercomms.c: 604: return 0;
 16510  00B3DE  0E00               	movlw	0
 16511  00B3E0  0012               	return	
 16512  00B3E2                     __end_of_CheckDataCollision:
 16513                           	opt stack 0
 16514                           pclatu	equ	0xFFB
 16515                           pclath	equ	0xFFA
 16516                           tblptru	equ	0xFF8
 16517                           tblptrh	equ	0xFF7
 16518                           tblptrl	equ	0xFF6
 16519                           tablat	equ	0xFF5
 16520                           prodh	equ	0xFF4
 16521                           prodl	equ	0xFF3
 16522                           intcon	equ	0xFF2
 16523                           postinc0	equ	0xFEE
 16524                           fsr0h	equ	0xFEA
 16525                           fsr0l	equ	0xFE9
 16526                           wreg	equ	0xFE8
 16527                           indf1	equ	0xFE7
 16528                           postinc1	equ	0xFE6
 16529                           postdec1	equ	0xFE5
 16530                           fsr1h	equ	0xFE2
 16531                           fsr1l	equ	0xFE1
 16532                           indf2	equ	0xFDF
 16533                           postinc2	equ	0xFDE
 16534                           postdec2	equ	0xFDD
 16535                           plusw2	equ	0xFDB
 16536                           fsr2h	equ	0xFDA
 16537                           fsr2l	equ	0xFD9
 16538                           status	equ	0xFD8
 16539                           
 16540 ;; *************** function _BoosterQueryStart *****************
 16541 ;; Defined at:
 16542 ;;		line 464 in file "boostercomms.c"
 16543 ;; Parameters:    Size  Location     Type
 16544 ;;  queryValUC      1    wreg     unsigned char 
 16545 ;; Auto vars:     Size  Location     Type
 16546 ;;  queryValUC      1    0[COMRAM] unsigned char 
 16547 ;; Return value:  Size  Location     Type
 16548 ;;                  1    wreg      void 
 16549 ;; Registers used:
 16550 ;;		wreg, status,2, status,0, cstack
 16551 ;; Tracked objects:
 16552 ;;		On entry : 0/0
 16553 ;;		On exit  : 0/0
 16554 ;;		Unchanged: 0/0
 16555 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16560 ;;Total ram usage:        1 bytes
 16561 ;; Hardware stack levels used:    1
 16562 ;; Hardware stack levels required when called:    1
 16563 ;; This function calls:
 16564 ;;		_BoosterCommsActive
 16565 ;; This function is called by:
 16566 ;;		_BoosterCommsDispatcher
 16567 ;; This function uses a non-reentrant model
 16568 ;;
 16569                           
 16570                           	psect	text88
 16571  00B45A                     __ptext88:
 16572                           	opt stack 0
 16573  00B45A                     _BoosterQueryStart:
 16574                           	opt stack 21
 16575                           
 16576                           ;incstack = 0
 16577                           ;BoosterQueryStart@queryValUC stored from wreg
 16578  00B45A  6E01               	movwf	BoosterQueryStart@queryValUC,c
 16579                           
 16580                           ;boostercomms.c: 465: if(BoosterCommsActive())
 16581  00B45C  ECF4  F05A         	call	_BoosterCommsActive	;wreg free
 16582  00B460  0900               	iorlw	0
 16583  00B462  A4D8               	btfss	status,2,c
 16584  00B464  0012               	return	
 16585                           
 16586                           ;boostercomms.c: 467: statusFlagsUSLG |= 0b000000000000000000000100;
 16587                           
 16588                           ;boostercomms.c: 466: return;
 16589  00B466  0102               	movlb	2	; () banked
 16590  00B468  858A               	bsf	_statusFlagsUSLG& (0+255),2,b	;volatile
 16591                           
 16592                           ; BSR set to: 2
 16593                           ;boostercomms.c: 468: commsTXBitsUSLG = queryValUC;
 16594  00B46A  5001               	movf	BoosterQueryStart@queryValUC,w,c
 16595  00B46C  0103               	movlb	3	; () banked
 16596  00B46E  6F3C               	movwf	_commsTXBitsUSLG& (0+255),b
 16597  00B470  6B3D               	clrf	(_commsTXBitsUSLG+1)& (0+255),b
 16598  00B472  6B3E               	clrf	(_commsTXBitsUSLG+2)& (0+255),b
 16599                           
 16600                           ; BSR set to: 3
 16601                           ;boostercomms.c: 469: commsDataModeUCG = queryValUC;
 16602  00B474  C001  F2A2         	movff	BoosterQueryStart@queryValUC,_commsDataModeUCG
 16603                           
 16604                           ; BSR set to: 3
 16605                           ;boostercomms.c: 470: commsStatusUCG = 1;
 16606  00B478  0E01               	movlw	1
 16607  00B47A  0102               	movlb	2	; () banked
 16608  00B47C  6FA3               	movwf	_commsStatusUCG& (0+255),b
 16609  00B47E  0012               	return		;funcret
 16610  00B480                     __end_of_BoosterQueryStart:
 16611                           	opt stack 0
 16612                           pclatu	equ	0xFFB
 16613                           pclath	equ	0xFFA
 16614                           tblptru	equ	0xFF8
 16615                           tblptrh	equ	0xFF7
 16616                           tblptrl	equ	0xFF6
 16617                           tablat	equ	0xFF5
 16618                           prodh	equ	0xFF4
 16619                           prodl	equ	0xFF3
 16620                           intcon	equ	0xFF2
 16621                           postinc0	equ	0xFEE
 16622                           fsr0h	equ	0xFEA
 16623                           fsr0l	equ	0xFE9
 16624                           wreg	equ	0xFE8
 16625                           indf1	equ	0xFE7
 16626                           postinc1	equ	0xFE6
 16627                           postdec1	equ	0xFE5
 16628                           fsr1h	equ	0xFE2
 16629                           fsr1l	equ	0xFE1
 16630                           indf2	equ	0xFDF
 16631                           postinc2	equ	0xFDE
 16632                           postdec2	equ	0xFDD
 16633                           plusw2	equ	0xFDB
 16634                           fsr2h	equ	0xFDA
 16635                           fsr2l	equ	0xFD9
 16636                           status	equ	0xFD8
 16637                           
 16638 ;; *************** function _BoosterCommsActive *****************
 16639 ;; Defined at:
 16640 ;;		line 458 in file "boostercomms.c"
 16641 ;; Parameters:    Size  Location     Type
 16642 ;;		None
 16643 ;; Auto vars:     Size  Location     Type
 16644 ;;		None
 16645 ;; Return value:  Size  Location     Type
 16646 ;;                  1    wreg      unsigned char 
 16647 ;; Registers used:
 16648 ;;		wreg, status,2
 16649 ;; Tracked objects:
 16650 ;;		On entry : 0/0
 16651 ;;		On exit  : 0/0
 16652 ;;		Unchanged: 0/0
 16653 ;; Data sizes:     COMRAM   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14
 16654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16658 ;;Total ram usage:        0 bytes
 16659 ;; Hardware stack levels used:    1
 16660 ;; This function calls:
 16661 ;;		Nothing
 16662 ;; This function is called by:
 16663 ;;		_BoosterQueryStart
 16664 ;;		_BoosterCommandStart
 16665 ;;		_BoosterCommsDispatcher
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           	psect	text89
 16670  00B5E8                     __ptext89:
 16671                           	opt stack 0
 16672  00B5E8                     _BoosterCommsActive:
 16673                           	opt stack 19
 16674                           
 16675                           ;boostercomms.c: 459: if(commsStatusUCG != 0)
 16676                           
 16677                           ;incstack = 0
 16678  00B5E8  0102               	movlb	2	; () banked
 16679  00B5EA  51A3               	movf	_commsStatusUCG& (0+255),w,b
 16680  00B5EC  B4D8               	btfsc	status,2,c
 16681  00B5EE  D002               	goto	i2l4073
 16682                           
 16683                           ; BSR set to: 2
 16684                           ;boostercomms.c: 460: return 1;
 16685  00B5F0  0E01               	movlw	1
 16686                           
 16687                           ; BSR set to: 2
 16688  00B5F2  0012               	return	
 16689  00B5F4                     i2l4073:
 16690                           
 16691                           ; BSR set to: 2
 16692                           ;boostercomms.c: 461: return 0;
 16693  00B5F4  0E00               	movlw	0
 16694  00B5F6  0012               	return	
 16695  00B5F8                     __end_of_BoosterCommsActive:
 16696                           	opt stack 0
 16697  0000                     pclatu	equ	0xFFB
 16698                           pclath	equ	0xFFA
 16699                           tblptru	equ	0xFF8
 16700                           tblptrh	equ	0xFF7
 16701                           tblptrl	equ	0xFF6
 16702                           tablat	equ	0xFF5
 16703                           prodh	equ	0xFF4
 16704                           prodl	equ	0xFF3
 16705                           intcon	equ	0xFF2
 16706                           postinc0	equ	0xFEE
 16707                           fsr0h	equ	0xFEA
 16708                           fsr0l	equ	0xFE9
 16709                           wreg	equ	0xFE8
 16710                           indf1	equ	0xFE7
 16711                           postinc1	equ	0xFE6
 16712                           postdec1	equ	0xFE5
 16713                           fsr1h	equ	0xFE2
 16714                           fsr1l	equ	0xFE1
 16715                           indf2	equ	0xFDF
 16716                           postinc2	equ	0xFDE
 16717                           postdec2	equ	0xFDD
 16718                           plusw2	equ	0xFDB
 16719                           fsr2h	equ	0xFDA
 16720                           fsr2l	equ	0xFD9
 16721                           status	equ	0xFD8
 16722                           pclatu	equ	0xFFB
 16723                           pclath	equ	0xFFA
 16724                           tblptru	equ	0xFF8
 16725                           tblptrh	equ	0xFF7
 16726                           tblptrl	equ	0xFF6
 16727                           tablat	equ	0xFF5
 16728                           prodh	equ	0xFF4
 16729                           prodl	equ	0xFF3
 16730                           intcon	equ	0xFF2
 16731                           postinc0	equ	0xFEE
 16732                           fsr0h	equ	0xFEA
 16733                           fsr0l	equ	0xFE9
 16734                           wreg	equ	0xFE8
 16735                           indf1	equ	0xFE7
 16736                           postinc1	equ	0xFE6
 16737                           postdec1	equ	0xFE5
 16738                           fsr1h	equ	0xFE2
 16739                           fsr1l	equ	0xFE1
 16740                           indf2	equ	0xFDF
 16741                           postinc2	equ	0xFDE
 16742                           postdec2	equ	0xFDD
 16743                           plusw2	equ	0xFDB
 16744                           fsr2h	equ	0xFDA
 16745                           fsr2l	equ	0xFD9
 16746                           status	equ	0xFD8
 16747                           
 16748                           	psect	rparam
 16749  0000                     pclatu	equ	0xFFB
 16750                           pclath	equ	0xFFA
 16751                           tblptru	equ	0xFF8
 16752                           tblptrh	equ	0xFF7
 16753                           tblptrl	equ	0xFF6
 16754                           tablat	equ	0xFF5
 16755                           prodh	equ	0xFF4
 16756                           prodl	equ	0xFF3
 16757                           intcon	equ	0xFF2
 16758                           postinc0	equ	0xFEE
 16759                           fsr0h	equ	0xFEA
 16760                           fsr0l	equ	0xFE9
 16761                           wreg	equ	0xFE8
 16762                           indf1	equ	0xFE7
 16763                           postinc1	equ	0xFE6
 16764                           postdec1	equ	0xFE5
 16765                           fsr1h	equ	0xFE2
 16766                           fsr1l	equ	0xFE1
 16767                           indf2	equ	0xFDF
 16768                           postinc2	equ	0xFDE
 16769                           postdec2	equ	0xFDD
 16770                           plusw2	equ	0xFDB
 16771                           fsr2h	equ	0xFDA
 16772                           fsr2l	equ	0xFD9
 16773                           status	equ	0xFD8
 16774                           
 16775                           	psect	temp
 16776  00001E                     btemp:
 16777                           	opt stack 0
 16778  00001E                     	ds	1
 16779  0000                     int$flags	set	btemp
 16780                           pclatu	equ	0xFFB
 16781                           pclath	equ	0xFFA
 16782                           tblptru	equ	0xFF8
 16783                           tblptrh	equ	0xFF7
 16784                           tblptrl	equ	0xFF6
 16785                           tablat	equ	0xFF5
 16786                           prodh	equ	0xFF4
 16787                           prodl	equ	0xFF3
 16788                           intcon	equ	0xFF2
 16789                           postinc0	equ	0xFEE
 16790                           fsr0h	equ	0xFEA
 16791                           fsr0l	equ	0xFE9
 16792                           wreg	equ	0xFE8
 16793                           indf1	equ	0xFE7
 16794                           postinc1	equ	0xFE6
 16795                           postdec1	equ	0xFE5
 16796                           fsr1h	equ	0xFE2
 16797                           fsr1l	equ	0xFE1
 16798                           indf2	equ	0xFDF
 16799                           postinc2	equ	0xFDE
 16800                           postdec2	equ	0xFDD
 16801                           plusw2	equ	0xFDB
 16802                           fsr2h	equ	0xFDA
 16803                           fsr2l	equ	0xFD9
 16804                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         881
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           29     29      29
    BANK2           255    137     174
    BANK3           256      0     232
    BANK4           256      0     240
    BANK5           256    132     256
    BANK6           256      0     248
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    readRegisterFromProgram@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> getSerialFromMemory@state(BANK2[64]), 

    writeRegisterToProgram@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> writeBootloaderState@buffer(BANK2[64]), 

    CreateAndSend@dataBuf	PTR unsigned char  size(2) Largest target is 62
		 -> ProcessSerialCMD@serialListUSA(BANK2[60]), ReturnBoosterData@partRespUSA(BANK5[62]), ReturnBoosterData@allRespUSA(BANK5[62]), NULL(NULL[0]), 
		 -> iscSerialUSG(BANK2[2]), 

    SetSerialNumber@dataBufUSP	PTR unsigned short  size(2) Largest target is 75
		 -> bufferRXST7540UCAG(BANK3[75]), 

    CRC16@data_p	PTR unsigned char  size(2) Largest target is 79
		 -> bufferRXST7540UCAG(BANK3[75]), bufferTXST7540UCAG(BANK3[79]), 

    WindowIDBacktrack@statusSetIDUC	PTR unsigned char  size(2) Largest target is 1
		 -> SetWindowID@statusSetIDUCS(BANK2[1]), 

    WindowIDBacktrack@currentBitUC	PTR unsigned char  size(2) Largest target is 1
		 -> SetWindowID@currentBitUCS(BANK2[1]), 

    WindowIDBacktrack@currentSerialUS	PTR unsigned short  size(2) Largest target is 2
		 -> SetWindowID@currentSerialUSS(BANK2[2]), 

    CreateMessageST7540@dataBuf	PTR unsigned char  size(2) Largest target is 75
		 -> ProcessSerialCMD@serialListUSA(BANK2[60]), ReturnBoosterData@partRespUSA(BANK5[62]), ReturnBoosterData@allRespUSA(BANK5[62]), NULL(NULL[0]), 
		 -> iscSerialUSG(BANK2[2]), bufferRXST7540UCAG(BANK3[75]), 

    sp__PacketDataST7540	PTR unsigned char  size(2) Largest target is 75
		 -> bufferRXST7540UCAG(BANK3[75]), 

    RetransmitMessageSt7540@dataBuf	PTR unsigned char  size(2) Largest target is 75
		 -> bufferRXST7540UCAG(BANK3[75]), 

    ReadConfigST7540@configDataUS	PTR unsigned um size(2) Largest target is 3
		 -> InitST7540@configDataRXUS(BANK2[3]), 

    ReadConfigST7540@frameDataUS	PTR unsigned um size(2) Largest target is 3
		 -> InitST7540@frameDataRXUS(BANK2[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    i2_ForceFiringMode->i2_ClearPastValues
    i2_ForceFiringMode->i2_ResetBoosterStates
    _BoosterDataCommandComms->_ProcessRXFrame
    _ReadKeySwitch->_ReadAnalogVoltage
    _ReadEarthLeakage->_ReadAnalogVoltage
    _ProcessRXFrame->_CheckBoosterRXParity
    _CheckLineFault->___wmul
    _BoosterCommsDispatcher->_QueryWinSerial
    i2_ClearPastValues->i2_ClearPastValue
    _SetWindowID->_WindowIDBacktrack
    i2_ResetBoosterStates->i2_ResetSingleBoosterState
    _WindowIDBacktrack->_BoosterCommandStart
    _AssignWindowID->_BoosterCommandStart
    _AssignSerialNumber->_BoosterCommandStart
    i2_WriteFlashValues->i2_FlashWriteWord
    _QueryWinSerial->_BoosterCommandStart
    _BoosterCommandStart->_CheckBoosterRXParity
    _NewBoosterAdded->_LowestIdleWindow

Critical Paths under _main in BANK2

    _main->_ProcessMasterComms
    _getSerialFromMemory->_readRegisterFromProgram
    _ProcessMasterComms->_ProcessSerialCMD
    _writeBootloaderState->_writeRegisterToProgram
    _UpdatePacketNumber->_SavePacketNumber
    _SetSerialNumber->_CreateAndSend
    _ReturnBoosterData->_CreateAndSend
    _RetransmitMessageSt7540->_PacketReadParamST7540
    _ProcessSerialCMD->_CreateAndSend
    _ProcessPingCMD->_CreateAndSend
    _CreateAndSend->_PacketReadParamST7540
    _SavePacketNumber->_GetPacketSlot
    _PacketReadParamST7540->_CheckCRCST7540
    _CheckCRCST7540->_CRC16
    _CreateMessageST7540->_CRC16
    _CollisionCheck->_MangleSerial
    _ForceFiringMode->_ClearPastValues
    _ForceFiringMode->_ResetBoosterStates
    _ClearPastValues->_ClearPastValue
    _InitStates->_ReadFlashValues
    _ResetBoosterStates->_ResetSingleBoosterState
    _WriteFlashValues->_FlashWriteWord
    _InitST7540Wrapper->_InitST7540
    _InitST7540->_WriteConfigST7540
    _WriteConfigST7540->_WaitTickCount

Critical Paths under _isr in BANK2

    _isr->_BoosterCommsDispatcher
    _BoosterCommsDispatcher->_SetWindowID
    _SetWindowID->_WindowIDBacktrack

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    _ProcessMasterComms->_ReturnBoosterData

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69715
                  _InitST7540Wrapper
                         _InitStates
                         _InitSystem
                 _ProcessMasterComms
                       _SetCommsHigh
                _getSerialFromMemory
 ---------------------------------------------------------------------------------
 (1) _getSerialFromMemory                                 64    64      0     355
                                             32 BANK2     64    64      0
            _readRegisterFromProgram
 ---------------------------------------------------------------------------------
 (2) _readRegisterFromProgram                              6     2      4     286
                                             26 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SetCommsHigh                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessMasterComms                                   9     9      0   66006
                                            130 BANK2      7     7      0
                     _CollisionCheck
                      _CreateAndSend
                    _DataReadyST7540
                    _ForceFiringMode
              _PacketReadParamST7540
                     _ProcessPingCMD
                   _ProcessSerialCMD
               _ReceiveNewDataST7540
            _RetransmitMessageSt7540
                  _ReturnBoosterData
                  _SetIsolationRelay
                    _SetSerialNumber
                 _UpdatePacketNumber
               _writeBootloaderState
 ---------------------------------------------------------------------------------
 (2) _writeBootloaderState                                66    66      0     425
                                             32 BANK2     66    66      0
             _writeRegisterToProgram
 ---------------------------------------------------------------------------------
 (3) _writeRegisterToProgram                               6     2      4     309
                                             26 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (2) _UpdatePacketNumber                                  11     7      4    1896
                                             37 BANK2     11     7      4
                _GetLastPacketNumber
                   _SavePacketNumber
 ---------------------------------------------------------------------------------
 (3) _GetLastPacketNumber                                  5     3      2     188
                                             26 BANK2      5     3      2
 ---------------------------------------------------------------------------------
 (2) _SetSerialNumber                                      8     6      2   11839
                                             64 BANK2      8     6      2
                      _CreateAndSend
                   _PacketDataST7540
                   _WriteFlashValues
 ---------------------------------------------------------------------------------
 (2) _SetIsolationRelay                                    1     1      0      44
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReturnBoosterData                                  143   141      2   12404
                                             64 BANK2     11     9      2
                                              0 BANK5    132   132      0
                      _CreateAndSend
 ---------------------------------------------------------------------------------
 (2) _RetransmitMessageSt7540                              9     9      0    3581
                                             54 BANK2      9     9      0
                _CreateMessageST7540
                     _LineIdleST7540
                   _PacketDataST7540
              _PacketReadParamST7540
                _StartTransmitST7540
                 _TransmitBusyST7540
 ---------------------------------------------------------------------------------
 (3) _PacketDataST7540                                     2     0      2       0
                                             26 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ReceiveNewDataST7540                                 1     1      0       1
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ProcessSerialCMD                                    66    64      2   11096
                                             64 BANK2     66    64      2
                      _CreateAndSend
 ---------------------------------------------------------------------------------
 (2) _ProcessPingCMD                                       2     0      2   10796
                                             64 BANK2      2     0      2
                      _CreateAndSend
 ---------------------------------------------------------------------------------
 (3) _CreateAndSend                                       10     2      8   10675
                                             54 BANK2     10     2      8
                     _CollisionCheck
                _CreateMessageST7540
                     _LineIdleST7540
              _PacketReadParamST7540
                   _SavePacketNumber
                _StartTransmitST7540
                 _TransmitBusyST7540
 ---------------------------------------------------------------------------------
 (4) _TransmitBusyST7540                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _StartTransmitST7540                                  1     1      0       3
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SavePacketNumber                                     6     3      3    1097
                                             31 BANK2      6     3      3
                 _ClearPacketNumbers
                      _GetPacketSlot
                     _IdlePacketSlot
 ---------------------------------------------------------------------------------
 (4) _IdlePacketSlot                                       3     3      0     130
                                             26 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (4) _GetPacketSlot                                        5     3      2     251
                                             26 BANK2      5     3      2
 ---------------------------------------------------------------------------------
 (4) _PacketReadParamST7540                                7     5      2    1105
                                             47 BANK2      7     5      2
                     _CheckCRCST7540
 ---------------------------------------------------------------------------------
 (5) _CheckCRCST7540                                       8     8      0     997
                                             39 BANK2      8     8      0
                              _CRC16
 ---------------------------------------------------------------------------------
 (4) _CreateMessageST7540                                 13     5      8    2269
                                             39 BANK2     13     5      8
                              _CRC16
 ---------------------------------------------------------------------------------
 (6) _CRC16                                               13     9      4     827
                                             26 BANK2     13     9      4
 ---------------------------------------------------------------------------------
 (4) _CollisionCheck                                       2     2      0    1028
                                             41 BANK2      2     2      0
                     _LineIdleST7540
                       _MangleSerial
                      _WaitTickCount
 ---------------------------------------------------------------------------------
 (5) _MangleSerial                                        15    13      2     783
                                             26 BANK2     15    13      2
 ---------------------------------------------------------------------------------
 (4) _LineIdleST7540                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ForceFiringMode                                      1     1      0     444
                                             28 BANK2      1     1      0
                    _ClearPastValues
                 _ResetBoosterStates
 ---------------------------------------------------------------------------------
 (3) _ClearPastValues                                      1     1      0     156
                                             27 BANK2      1     1      0
                     _ClearPastValue
 ---------------------------------------------------------------------------------
 (4) _ClearPastValue                                       1     1      0      88
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DataReadyST7540                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSystem                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitStates                                           0     0      0    1660
                 _ClearPacketNumbers
                    _ReadFlashValues
                 _ResetBoosterStates
 ---------------------------------------------------------------------------------
 (3) _ResetBoosterStates                                   1     1      0     266
                                             27 BANK2      1     1      0
            _ResetSingleBoosterState
 ---------------------------------------------------------------------------------
 (4) _ResetSingleBoosterState                              1     1      0     198
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadFlashValues                                      3     3      0    1264
                                             31 BANK2      3     3      0
                   _FlashReadAddress
                   _WriteFlashValues
 ---------------------------------------------------------------------------------
 (3) _WriteFlashValues                                     0     0      0     916
                    _FlashEraseBlock
                     _FlashWriteWord
 ---------------------------------------------------------------------------------
 (4) _FlashWriteWord                                       5     1      4     795
                                             26 BANK2      5     1      4
                _FlashUnlockSequence
 ---------------------------------------------------------------------------------
 (4) _FlashEraseBlock                                      3     1      2     121
                                             26 BANK2      3     1      2
                _FlashUnlockSequence
 ---------------------------------------------------------------------------------
 (5) _FlashUnlockSequence                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FlashReadAddress                                     2     0      2     348
                                             26 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ClearPacketNumbers                                   1     1      0     130
                                             26 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitST7540Wrapper                                    1     1      0    1694
                                             51 BANK2      1     1      0
                         _InitST7540
 ---------------------------------------------------------------------------------
 (2) _InitST7540                                          12    12      0    1626
                                             39 BANK2     12    12      0
                     _InitST7540Pins
                   _ReadConfigST7540
                  _WriteConfigST7540
 ---------------------------------------------------------------------------------
 (3) _WriteConfigST7540                                   11     5      6     859
                                             28 BANK2     11     5      6
                      _WaitTickCount
 ---------------------------------------------------------------------------------
 (5) _WaitTickCount                                        2     0      2     211
                                             26 BANK2      2     0      2
                        _WaitNewTick
 ---------------------------------------------------------------------------------
 (6) _WaitNewTick                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ReadConfigST7540                                     9     5      4     397
                                             26 BANK2      9     5      4
 ---------------------------------------------------------------------------------
 (3) _InitST7540Pins                                       0     0      0       0
                        _PPSLockFunc
                      _PPSUnlockFunc
 ---------------------------------------------------------------------------------
 (4) _PPSUnlockFunc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PPSLockFunc                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 15    15      0   24737
                                             11 BANK2     15    15      0
             _BoosterCommsDispatcher
            _BoosterDataCommandComms
            _RXReadyISRHandlerST7540
                _SPIISRHandlerST7540
                  i2_ForceFiringMode
 ---------------------------------------------------------------------------------
 (8) i2_ForceFiringMode                                    1     1      0     444
                                              2 COMRAM     1     1      0
                  i2_ClearPastValues
               i2_ResetBoosterStates
 ---------------------------------------------------------------------------------
 (8) _SPIISRHandlerST7540                                  1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RXReadyISRHandlerST7540                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _BoosterDataCommandComms                              4     4      0    2620
                                             17 COMRAM     4     4      0
                     _CheckLineFault
                   _InitEarthLeakage
                     _ProcessRXFrame
                  _ReadAnalogVoltage
                   _ReadEarthLeakage
                      _ReadKeySwitch
                        _SetCommsLow
                     i2_SetCommsHigh
 ---------------------------------------------------------------------------------
 (9) i2_SetCommsHigh                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _SetCommsLow                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadKeySwitch                                        2     2      0      45
                                              3 COMRAM     2     2      0
                  _ReadAnalogVoltage
 ---------------------------------------------------------------------------------
 (9) _ReadEarthLeakage                                     2     2      0      45
                                              3 COMRAM     2     2      0
                  _ReadAnalogVoltage
 ---------------------------------------------------------------------------------
 (9) _ProcessRXFrame                                      11     8      3    1618
                                              6 COMRAM    11     8      3
               _CheckBoosterRXParity
                   i2_ClearPastValue
          i2_ResetSingleBoosterState
 ---------------------------------------------------------------------------------
 (9) _InitEarthLeakage                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CheckLineFault                                      10    10      0     757
                                              6 COMRAM    10    10      0
                  _ReadAnalogVoltage
                             ___wmul
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _ReadAnalogVoltage                                   3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _BoosterCommsDispatcher                               1     1      0   21649
                                             10 BANK2      1     1      0
                 _BoosterCommsActive
                  _BoosterQueryStart
                 _CheckDataCollision
                _LowestMissingSerial
                    _NewBoosterAdded
                     _QueryWinSerial
                        _SetWindowID
                  i2_ClearPastValues
 ---------------------------------------------------------------------------------
 (9) i2_ClearPastValues                                    1     1      0     156
                                              1 COMRAM     1     1      0
                   i2_ClearPastValue
 ---------------------------------------------------------------------------------
 (9) _SetWindowID                                          3     3      0   16894
                                              7 BANK2      3     3      0
                 _AssignSerialNumber
                     _AssignWindowID
                _BoosterCommandStart
                  _WindowIDBacktrack
               i2_ResetBoosterStates
 ---------------------------------------------------------------------------------
 (9) i2_ResetBoosterStates                                 1     1      0     266
                                              1 COMRAM     1     1      0
          i2_ResetSingleBoosterState
 ---------------------------------------------------------------------------------
 (10) _WindowIDBacktrack                                  13     7      6    4606
                                             21 COMRAM     6     0      6
                                              0 BANK2      7     7      0
                _BoosterCommandStart
 ---------------------------------------------------------------------------------
 (10) _AssignWindowID                                      3     3      0    4044
                                             21 COMRAM     3     3      0
                _BoosterCommandStart
                   _LowestIdleWindow
 ---------------------------------------------------------------------------------
 (10) _AssignSerialNumber                                  0     0      0    4158
                _BoosterCommandStart
                 i2_WriteFlashValues
 ---------------------------------------------------------------------------------
 (11) i2_WriteFlashValues                                  0     0      0     338
                  i2_FlashEraseBlock
                   i2_FlashWriteWord
 ---------------------------------------------------------------------------------
 (12) i2_FlashWriteWord                                    5     1      4     267
                                              0 COMRAM     5     1      4
              i2_FlashUnlockSequence
 ---------------------------------------------------------------------------------
 (12) i2_FlashEraseBlock                                   3     1      2      71
                                              0 COMRAM     3     1      2
              i2_FlashUnlockSequence
 ---------------------------------------------------------------------------------
 (13) i2_FlashUnlockSequence                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _QueryWinSerial                                       8     8      0    4375
                                             21 COMRAM     8     8      0
                _BoosterCommandStart
                _LowestMissingSerial
                   i2_ClearPastValue
          i2_ResetSingleBoosterState
 ---------------------------------------------------------------------------------
 (10) i2_ResetSingleBoosterState                           1     1      0     198
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_ClearPastValue                                    1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _LowestMissingSerial                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _BoosterCommandStart                                15    11      4    3820
                                              6 COMRAM    15    11      4
                 _BoosterCommsActive
               _CheckBoosterRXParity
 ---------------------------------------------------------------------------------
 (10) _CheckBoosterRXParity                                6     4      2     496
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) _NewBoosterAdded                                      1     1      0     112
                                              3 COMRAM     1     1      0
                   _LowestIdleWindow
 ---------------------------------------------------------------------------------
 (11) _LowestIdleWindow                                    3     3      0     112
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _CheckDataCollision                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _BoosterQueryStart                                    1     1      0      44
                                              0 COMRAM     1     1      0
                 _BoosterCommsActive
 ---------------------------------------------------------------------------------
 (12) _BoosterCommsActive                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitST7540Wrapper
     _InitST7540
       _InitST7540Pins
         _PPSLockFunc
         _PPSUnlockFunc
       _ReadConfigST7540
       _WriteConfigST7540
         _WaitTickCount
           _WaitNewTick
   _InitStates
     _ClearPacketNumbers
     _ReadFlashValues
       _FlashReadAddress
       _WriteFlashValues
         _FlashEraseBlock
           _FlashUnlockSequence
         _FlashWriteWord
           _FlashUnlockSequence
     _ResetBoosterStates
       _ResetSingleBoosterState
   _InitSystem
   _ProcessMasterComms
     _CollisionCheck
       _LineIdleST7540
       _MangleSerial
       _WaitTickCount
         _WaitNewTick
     _CreateAndSend
       _CollisionCheck
         _LineIdleST7540
         _MangleSerial
         _WaitTickCount
           _WaitNewTick
       _CreateMessageST7540
         _CRC16
       _LineIdleST7540
       _PacketReadParamST7540
         _CheckCRCST7540
           _CRC16
       _SavePacketNumber
         _ClearPacketNumbers
         _GetPacketSlot
         _IdlePacketSlot
       _StartTransmitST7540
       _TransmitBusyST7540
     _DataReadyST7540
     _ForceFiringMode
       _ClearPastValues
         _ClearPastValue
       _ResetBoosterStates
         _ResetSingleBoosterState
     _PacketReadParamST7540
       _CheckCRCST7540
         _CRC16
     _ProcessPingCMD
       _CreateAndSend
         _CollisionCheck
           _LineIdleST7540
           _MangleSerial
           _WaitTickCount
             _WaitNewTick
         _CreateMessageST7540
           _CRC16
         _LineIdleST7540
         _PacketReadParamST7540
           _CheckCRCST7540
             _CRC16
         _SavePacketNumber
           _ClearPacketNumbers
           _GetPacketSlot
           _IdlePacketSlot
         _StartTransmitST7540
         _TransmitBusyST7540
     _ProcessSerialCMD
       _CreateAndSend
         _CollisionCheck
           _LineIdleST7540
           _MangleSerial
           _WaitTickCount
             _WaitNewTick
         _CreateMessageST7540
           _CRC16
         _LineIdleST7540
         _PacketReadParamST7540
           _CheckCRCST7540
             _CRC16
         _SavePacketNumber
           _ClearPacketNumbers
           _GetPacketSlot
           _IdlePacketSlot
         _StartTransmitST7540
         _TransmitBusyST7540
     _ReceiveNewDataST7540
     _RetransmitMessageSt7540
       _CreateMessageST7540
         _CRC16
       _LineIdleST7540
       _PacketDataST7540
       _PacketReadParamST7540
         _CheckCRCST7540
           _CRC16
       _StartTransmitST7540
       _TransmitBusyST7540
     _ReturnBoosterData
       _CreateAndSend
         _CollisionCheck
           _LineIdleST7540
           _MangleSerial
           _WaitTickCount
             _WaitNewTick
         _CreateMessageST7540
           _CRC16
         _LineIdleST7540
         _PacketReadParamST7540
           _CheckCRCST7540
             _CRC16
         _SavePacketNumber
           _ClearPacketNumbers
           _GetPacketSlot
           _IdlePacketSlot
         _StartTransmitST7540
         _TransmitBusyST7540
     _SetIsolationRelay
     _SetSerialNumber
       _CreateAndSend
         _CollisionCheck
           _LineIdleST7540
           _MangleSerial
           _WaitTickCount
             _WaitNewTick
         _CreateMessageST7540
           _CRC16
         _LineIdleST7540
         _PacketReadParamST7540
           _CheckCRCST7540
             _CRC16
         _SavePacketNumber
           _ClearPacketNumbers
           _GetPacketSlot
           _IdlePacketSlot
         _StartTransmitST7540
         _TransmitBusyST7540
       _PacketDataST7540
       _WriteFlashValues
         _FlashEraseBlock
           _FlashUnlockSequence
         _FlashWriteWord
           _FlashUnlockSequence
     _UpdatePacketNumber
       _GetLastPacketNumber
       _SavePacketNumber
         _ClearPacketNumbers
         _GetPacketSlot
         _IdlePacketSlot
     _writeBootloaderState
       _writeRegisterToProgram
   _SetCommsHigh
   _getSerialFromMemory
     _readRegisterFromProgram

 _isr (ROOT)
   _BoosterCommsDispatcher
     _BoosterCommsActive
     _BoosterQueryStart
       _BoosterCommsActive
     _CheckDataCollision
     _LowestMissingSerial
     _NewBoosterAdded
       _LowestIdleWindow
     _QueryWinSerial
       _BoosterCommandStart
         _BoosterCommsActive
         _CheckBoosterRXParity
       _LowestMissingSerial
       i2_ClearPastValue
       i2_ResetSingleBoosterState
     _SetWindowID
       _AssignSerialNumber
         _BoosterCommandStart
           _BoosterCommsActive
           _CheckBoosterRXParity
         i2_WriteFlashValues
           i2_FlashEraseBlock
             i2_FlashUnlockSequence
           i2_FlashWriteWord
             i2_FlashUnlockSequence
       _AssignWindowID
         _BoosterCommandStart
           _BoosterCommsActive
           _CheckBoosterRXParity
         _LowestIdleWindow
       _BoosterCommandStart
         _BoosterCommsActive
         _CheckBoosterRXParity
       _WindowIDBacktrack
         _BoosterCommandStart
           _BoosterCommsActive
           _CheckBoosterRXParity
       i2_ResetBoosterStates
         i2_ResetSingleBoosterState
     i2_ClearPastValues
       i2_ClearPastValue
   _BoosterDataCommandComms
     _CheckLineFault
       _ReadAnalogVoltage
       ___wmul
     _InitEarthLeakage
     _ProcessRXFrame
       _CheckBoosterRXParity
       i2_ClearPastValue
       i2_ResetSingleBoosterState
     _ReadAnalogVoltage
     _ReadEarthLeakage
       _ReadAnalogVoltage
     _ReadKeySwitch
       _ReadAnalogVoltage
     _SetCommsLow
     i2_SetCommsHigh
   _RXReadyISRHandlerST7540
   _SPIISRHandlerST7540
   i2_ForceFiringMode
     i2_ClearPastValues
       i2_ClearPastValue
     i2_ResetBoosterStates
       i2_ResetSingleBoosterState

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           CAF      0       0      31        0.0%
BITBANK13          100      0       0      26        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      14        0.0%
BANK7              100      0       0      15        0.0%
BITBANK6           100      0       0      12        0.0%
BANK6              100      0      F8      13       96.9%
BITBANK5           100      0       0      10        0.0%
BANK5              100     84     100      11      100.0%
BITBANK4           100      0       0       8        0.0%
BANK4              100      0      F0       9       93.8%
BITBANK3           100      0       0       6        0.0%
BANK3              100      0      E8       7       90.6%
BITBANK2            FF      0       0       4        0.0%
BANK2               FF     89      AE       5       68.2%
BITBANK14           B0      0       0      28        0.0%
BANK14              B0      0       0      29        0.0%
BIGRAM              1E      0       0      32        0.0%
BITCOMRAM           1D      0       0       0        0.0%
COMRAM              1D     1D      1D       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     49B      30        0.0%
DATA                 0      0     49B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Oct 16 13:13:53 2017

                           _statusGetSerialUCS 029D                                ?_InitST7540Pins 0001  
               ProcessMasterComms@destSerialUS 0285                               ?_FlashEraseBlock 021B  
                                           l81 A188                                             l90 A7A4  
                                           l85 A774                                             l96 99C0  
                                           l88 A78A                                             l89 A7AE  
                              ?i2_SetCommsHigh 0001                            ___wmul@multiplicand 0003  
                                ?_MangleSerial 021B                  WindowIDBacktrack@currentBitUC 0016  
                      ?_writeRegisterToProgram 021B                                   __CFG_CP0$OFF 000000  
                            ??_ReadFlashValues 0220                                            l100 9A02  
                                          l101 99DE                                            l137 B53C  
                                          l154 A20E                                            l155 A218  
                                          l157 A236                                            l611 9BDA  
                                          l823 95CA                                            l850 9E7C  
                                          l922 8BE0                                            l837 B032  
                                          l926 8C30                                            l839 B030  
                                          l859 B20E                                 _LineIdleST7540 B622  
                                          _PR2 000FCB                              ?_ReadConfigST7540 021B  
                                          _isr 8108                              _InitST7540Wrapper B40E  
                                          prod 000FF3                                            wreg 000FE8  
                                _PPSUnlockFunc B5C4                                   __CFG_IESO$ON 000000  
                           ??_ReadConfigST7540 021F                   __size_of_LowestMissingSerial 0056  
                   ProcessPingCMD@respSerialUS 0241                             ?_InitST7540Wrapper 0001  
                         CheckLineFault@i_1334 000D                                           l1006 B63A  
                                         l1060 AAB0                                           l1061 AABE  
                                         l1091 AEF2                                           l1085 A71E  
                                         l1093 AF14                                           l4515 99D4  
                                         l6301 B4FC                                           l5245 B010  
                                         l6303 B500                                           l6311 B62A  
                                         l4641 B4C4                                           l6401 AFE6  
                                         l6331 AF66                                           l4555 B4E2  
                                         l6411 A1A2                                           l4645 B4CE  
                                         l6421 A1E2                                           l6405 AFEC  
                                         l6501 ABF0                                           l4709 AA82  
                                         l5445 ADC8                                           l5461 AEDC  
                                         l6335 AF70                                           l4559 B4EC  
                                         l6271 9B5C                                           l6415 A1B6  
                                         l5455 ADFA                                           l6521 A780  
                                         l6345 9D84                                           l6265 9B38  
                                         l6433 A240                                           l5449 ADDE  
                                         l6283 9BE8                                           l6275 9B66  
                                         l6427 A222                                           l6371 B142  
                                         l4675 AD08                                           l6365 9E76  
                                         l6357 9E2C                                           l6349 9D8E  
                                         l6381 B16E                                           l5389 B2AE  
                                         l4685 AD52                                           l6613 A8F0  
                                         l6279 9BD2                                           l6463 A022  
                                         l6391 AFB0                                           l6711 8D5C  
                                         l6703 8C3E                                           l4679 AD12  
                                         l6385 B174                                           l6537 AB52  
                                         l6713 8D60                                           l6633 8A46  
                                         l4689 AD58                                           l6459 9FE0  
                                         l6547 AB9E                                           l6723 8DF4  
                                         l6707 8D2C                                           l6651 8A86  
                                         l6635 8A4A                                           l6643 8A5A  
                                         l6619 A904                                           ?_isr 0001  
                                         l6549 ABA2                                           l6733 A470  
                                         l6717 8D9A                                           l6637 8A4E  
                                         l6645 8A76                                           l6821 94BA  
                                         l6743 A4C4                                           l6719 8DA2  
                                         l6671 8AF2                                           l6663 8ADE  
                                         l6647 8A7C                                           l6639 8A52  
                                         l6737 A47A                                           l6729 A464  
                                         l6681 8B10                                           l6657 8AC0  
                                         l6833 94FA                                           l6825 94C8  
                                         l6747 A4CA                                           l6691 8BDA  
                                         l6675 8AFC                                           l6667 8AE8  
                                         l6843 9568                                           l6781 B414  
                                         l6597 A982                                           l6685 8B1A  
                                         l6677 8B04                                           l6765 9F32  
                                         l6845 959C                                           l6837 9524  
                                         l6829 94D8                                           l6847 95AA  
                                         l6839 9536                                           l6863 95E2  
                                         l6785 B41E                                           l6769 9F64  
                                         l6849 95B8                                           l6865 962A  
                                         l6699 8C1C                                           l6859 95DA  
                                         l6789 B42E                                           l6797 9450  
                                         l6885 B4B8                                ?_ClearPastValue 0001  
                                         u4260 AAB0                                           u7210 A164  
                                         u7220 A184                                           u7601 94F8  
                                         u6900 9DC8                                           u6910 9DCA  
                                         u6920 9DD8                                           u6840 9D98  
                                         u6930 9DDA                                           u6850 9D9A  
                                         u6940 9DE8                                           u6860 9DA8  
                                         u6950 9DEA                                           u6870 9DAA  
                                         u6790 A66E                                           u6960 9DF8  
                                         u6880 9DB8                                           u6970 9DFA  
                                         u6890 9DBA                               _SavePacketNumber ABBC  
                  ProcessRXFrame@parityCheckUC 0011                                  __CFG_FCMEN$ON 000000  
            CreateMessageST7540@packetSourceUS 0228                                           _main B4A0  
                          ??_InitST7540Wrapper 0234                     i2ClearPastValue@valuePosUC 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
             __size_of_RetransmitMessageSt7540 0098                                           btemp 001E  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 81D6                                 _boosterCountUC 029B  
                __size_ofi2_ResetBoosterStates 0016                                   ___param_bank 000000  
                             ?_SetSerialNumber 0241                              ??_NewBoosterAdded 0004  
               GetLastPacketNumber@srcSerialUS 021B                        __size_of_IdlePacketSlot 003C  
                                        ??_isr 020C                        _BoosterDataCommandComms 81DA  
               __end_of_writeRegisterToProgram AAC8                                 ??_MangleSerial 021D  
                            ?_FlashReadAddress 021B                                  __CFG_PLLDIV$2 000000  
                       __end_of_LineIdleST7540 B62E                              _commandResponseUS 03E6  
                           ??_FlashReadAddress 021D                                          ?_main 0001  
                                        _ADRES 000FC3                                          _CRC16 9B14  
                                _ReadKeySwitch B2C4                      __end_of_InitST7540Wrapper B434  
                  CreateAndSend@packetSourceUS 0237                              _ReturnBoosterData 89FC  
          ReadEarthLeakage@earthLeakageValueUS 0004                               ?_ClearPastValues 0001  
                                        i2l111 AA34                                          i2l107 A9A8  
                                        i2l109 A9EA                                          i2l340 8664  
                                        i2l317 84BC                                          i2l342 8660  
                                        i2l270 81E8                                          i2l327 85D2  
                                        i2l271 8202                                          i2l416 9CE8  
                                        i2l352 86CC                                          i2l362 8702  
                                        i2l346 8670                                          i2l338 8654  
                                        i2l356 86F8                                          i2l445 B30E  
                                        i2l277 8216                                          i2l269 89FA  
                                        i2l701 819A                                          i2l446 B31C  
                                        i2l534 9214                                          i2l470 9016  
                                        i2l358 86EE                                          i2l391 88C0  
                                        i2l279 8244                                          i2l456 9188  
                                        i2l553 9410                                          i2l289 82D6  
                                        i2l538 92C4                                          i2l566 9878  
                                        i2l837 B138                                          i2l839 B136  
                 __size_of_SPIISRHandlerST7540 0098                                 ?_PPSUnlockFunc 0001  
                 FlashWriteWord@flashAddressUS 021B                   i2FlashEraseBlock@intStatusUC 0003  
                   __size_of_SetIsolationRelay 0032                             ?_ReturnBoosterData 0241  
      BoosterDataCommandComms@commsBitsSentUCS 029A                   ReadConfigST7540@configDataUS 021D  
                        __end_of_GetPacketSlot AFF0                      __size_ofi2_FlashWriteWord 0038  
                  __size_ofi2_WriteFlashValues 003A                               ??_AssignWindowID 0016  
                          ??_ReturnBoosterData 0243                           _CheckBoosterRXParity B2F6  
                                        pclath 000FFA                                          tablat 000FF5  
                        __end_of_WaitTickCount B518                                          plusw2 000FDB  
                                   _InitST7540 A096                                          status 000FD8  
                         CreateAndSend@dataBuf 023D                    __end_of_getSerialFromMemory B386  
                          _QueryFailureCounter 029F                         ??_writeBootloaderState 0221  
                   __size_of_BoosterQueryStart 0026                        __CFG_DSWDTOSC$INTOSCREF 000000  
                              __initialization AF16                             _ResetBoosterStates B4DC  
                          _CreateMessageST7540 9F92                     __end_of_ClearPacketNumbers AFAA  
                                ??_SetCommsLow 0001                       ?_ResetSingleBoosterState 0001  
                                 __end_of_main B4BE                                     _InitStates B606  
                                   _InitSystem AAC8                    __end_of_StartTransmitST7540 B552  
                    __end_of_ReturnBoosterData 8E02                                         CRC16@i 0223  
                   ReturnBoosterData@dataValUC 0582                                ?_LineIdleST7540 0001  
                          ?_ResetBoosterStates 0001                                 ?_ReadKeySwitch 0001  
                GetLastPacketNumber@iscCountUC 021F                                         ??_main 028A  
                                       ?_CRC16 021B                                  __activetblptr 000002  
            CheckLineFault@activeWindowCounter 0009                PacketReadParamST7540@retValueUS 0235  
           BoosterDataCommandComms@bitsReadUCS 0297       BoosterDataCommandComms@cableFaultModeUCS 0295  
                         ?_CreateMessageST7540 0228        ProcessMasterComms@currentPacketNumberUS 0283  
                   FlashEraseBlock@intStatusUC 021D                               _InitEarthLeakage B552  
                                ??_SetWindowID 0208               WindowIDBacktrack@currentSerialUS 0018  
                        _masterCommsTimeoutUSG 033F                                         _EECON2 000FA7  
                        ?_CheckBoosterRXParity 0001                               ??_QueryWinSerial 0016  
                    __size_of_WriteFlashValues 0044                                      CRC16@data 0224  
                                       i2l1026 B0AC                                         i2l1029 B0AE  
                                       i2l5003 B3C0                                         i2l5013 B3DE  
                               __CFG_WDTEN$OFF 000000                                         i2l4073 B5F4  
                                       i2l5009 B3DA                                         i2l5025 B532  
                                       i2l4081 B306                                         i2l6001 A344  
                                       i2l5203 996C                                         i2l5211 9974  
                                       i2l5123 9420                                         i2l5051 92A2  
                                       i2l4341 A860                                         i2l5125 9428  
                                       i2l5109 93F6                                         i2l5207 9970  
                                       i2l5151 985A                                         i2l5143 9848  
                                       i2l5039 91FC                                         i2l4353 B334  
                                       i2l4097 B324                                         i2l5233 99B8  
                                       i2l5073 92EA                                         i2l5065 92D2  
                                       i2l5129 9442                                         i2l5057 92A6  
                                       i2l6201 B116                                         i2l4363 B354  
                                       i2l5155 9874                                         i2l5219 997E  
                                       i2l5091 939A                                         i2l5075 9300  
                                       i2l4349 B32C                                         i2l5181 98EA  
                                       i2l4359 B350                                         i2l4631 AEB8  
                                       i2l4623 AE7E                                         i2l5191 9902  
                                       i2l5183 98EE                                         i2l5095 93B8  
                                       i2l4543 B07E                                         i2l4551 B098  
                                       i2l6223 8174                                         i2l4545 B086  
                                       i2l5601 8318                                         i2l5505 A9CE  
                                       i2l4635 AEBE                                         i2l4619 AE74  
                                       i2l5187 98F6                                         i2l4571 96DE  
                                       i2l4547 B08E                                         i2l5611 8348  
                                       i2l4733 B59E                                         i2l4821 8E64  
                                       i2l5701 8582                                         i2l5621 8388  
                                       i2l6229 8180                                         i2l4575 9746  
                                       i2l4567 9664                                         i2l4815 8E12  
                                       i2l5607 8338                                         i2l5519 AA26  
                                       i2l4737 B5A6                                         i2l4921 9C68  
                                       i2l4833 8EF6                                         i2l4825 8E9E  
                                       i2l4913 ADB8                                         i2l4905 AD8A  
                                       i2l5721 85E4                                         i2l5625 83A0  
                                       i2l5561 8264                                         i2l4587 97BE  
                                       i2l5475 B588                                         i2l4931 9CA2  
                                       i2l5811 8772                                         i2l5651 846A  
                                       i2l5635 83F6                                         i2l5715 85A8  
                                       i2l5563 826C                                         i2l5547 822A  
                                       i2l4941 9CD0                                         i2l4925 9C78  
                                       i2l4861 903E                                         i2l4829 8ECA  
                                       i2l5901 8914                                         i2l5821 87A8  
                                       i2l5813 877A                                         i2l5733 8608  
                                       i2l5645 841A                                         i2l5629 83C8  
                                       i2l5573 829A                                         i2l5479 B590  
                                       i2l4935 9CB0                                         i2l4863 90CA  
                                       i2l4855 8FCA                                         i2l5831 87E8  
                                       i2l5815 878C                                         i2l5735 8616  
                                       i2l5671 84CE                                         i2l5663 849C  
                                       i2l5647 8442                                         i2l4961 9D66  
                                       i2l4953 9D22                                         i2l4937 9CC0  
                                       i2l4929 9C9A                                         i2l4881 91BA  
                                       i2l4865 90F2                                         i2l4873 916A  
                                       i2l4849 8F8C                                         i2l5737 8624  
                                       i2l5681 8524                                         i2l5569 8286  
                                       i2l4963 9D6C                                         i2l4947 9CEE  
                                       i2l4867 911A                                         i2l5923 8976  
                                       i2l5907 893A                                         i2l5843 8814  
                                       i2l5835 87F4                                         i2l5827 87CE  
                                       i2l5755 8674                                         i2l5675 84F6  
                                       i2l5667 84A8                                         i2l5659 8490  
                                       i2l4885 91C4                                         i2l4877 91A4  
                                       i2l4869 9142                                         i2l5917 8962  
                                       i2l5861 887A                                         i2l5853 883A  
                                       i2l5597 82FC                                         _TABLAT 000FF5  
                                       i2l4983 B2F0                                         i2l5935 89A0  
                                       i2l5791 8714                                         i2l5767 86A6  
                                       i2l5687 853E                                         i2l5599 8308  
                                       i2l5953 A2AA                                         i2l4889 91CE  
                                       i2l5857 8842                                         i2l5785 86FE  
                                       i2l5697 8578                                         i2l5689 8546  
                                       i2l5971 A2EA                                         i2l5963 A2C8  
                                       i2l5859 8872                                         i2l5787 8704  
                                       i2l5939 89B8                                         i2l5885 88D8  
                                       i2l5869 889A                                         i2l5797 873A  
                                       i2l4999 B3B8                                         i2l5991 A328  
                                       i2l5983 A30C                                         i2l5967 A2D0  
                                       i2l5895 8900                                         i2l5887 88E0  
                                       i2l5995 A336                                         i2l5987 A31A  
                                       i2l5979 A304                           ??_ResetBoosterStates 021C  
                          FlashWriteWord@lsbUC 021D                            FlashWriteWord@msbUC 021E  
                __size_of_ReceiveNewDataST7540 0018                                         _RPOR21 000ED5  
                               __CFG_WPCFG$OFF 000000                                  ??_WaitNewTick 021B  
                          _BoosterCommandStart A7C4                       ?_RXReadyISRHandlerST7540 0001  
                               __CFG_WPDIS$OFF 000000                              MangleSerial@b10UC 0225  
                            MangleSerial@b12UC 0226                          _commsOffsetADCValueUS 028F  
                ProcessSerialCMD@serialListUSA 0245                                 __CFG_XINST$OFF 000000  
                    ??_BoosterDataCommandComms 0012                          __end_of_CreateAndSend ABBC  
                 __size_of_FlashUnlockSequence 000C                                         ___wmul B434  
                               __CFG_STVREN$ON 000000                     __end_of_TransmitBusyST7540 B65A  
                     __end_of_PacketDataST7540 B606                                  ?_SetCommsHigh 0001  
           __size_ofi2_ResetSingleBoosterState 00BC                                         clear_0 AF1C  
                                       clear_1 AF28                                         clear_2 AF34  
                                       clear_3 AF40                                         clear_4 AF4C  
                              __CFG_CLKOEC$OFF 000000                        ??_PacketReadParamST7540 0232  
                              ??_PPSUnlockFunc 021B                     __size_of_InitST7540Wrapper 0026  
                         ?_BoosterCommandStart 0007                            __end_of_SetCommsLow B674  
                     ?_readRegisterFromProgram 021B                                _DataReadyST7540 B65A  
                     __end_of_ProcessSerialCMD A500                          ??_CreateMessageST7540 0230  
                             _boosterCommsData 0400                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                        i2_FlashUnlockSequence B646                      __size_of_ReadEarthLeakage 005A  
                    __size_of_LowestIdleWindow 0030                                __CFG_DSBOREN$ON 000000  
          BoosterDataCommandComms@recvFrameUSS 0341                                   ?_PPSLockFunc 0001  
                         __end_of_MangleSerial 9E88                        _RetransmitMessageSt7540 A908  
                                  ?_InitST7540 0001                                     __accesstop 0060  
                      __end_of__initialization AF52                             _UpdatePacketNumber A868  
                 __size_of_GetLastPacketNumber 0062                               ??_InitST7540Pins 021B  
                          __end_of_SetWindowID 9446                        __size_of_CheckCRCST7540 00B6  
                                __end_of_CRC16 9C48                __end_of_ResetSingleBoosterState A432  
                                ___rparam_used 000001                              ?i2_ClearPastValue 0001  
                              _ReadFlashValues A672                           __CFG_WPEND$PAGE_WPFP 000000  
                        _pastBoosterValuesUSAG 0600                               ??i2_SetCommsHigh 0001  
                          _LowestMissingSerial AE6E                     writeBootloaderState@buffer 0221  
                           ??i2_ClearPastValue 0001                            ?_UpdatePacketNumber 0226  
                               __pcstackCOMRAM 0001                        __size_of_FlashWriteWord 0040  
                                  ?_InitStates 0001                    __size_of_ProcessMasterComms 021C  
                               _IdlePacketSlot B13C                                 ??_SetCommsHigh 021B  
                          __end_of_WaitNewTick B646                                    ?_InitSystem 0001  
                  ReadConfigST7540@frameDataUS 021B                                ??_ReadKeySwitch 0004  
                              __CFG_DSWDTEN$ON 000000                     __size_of_ReturnBoosterData 0406  
                              QueryWinSerial@i 001D                                QueryWinSerial@j 001C  
                     __end_of_SavePacketNumber AC30                                __CFG_DSWDTPS$G2 000000  
                      IdlePacketSlot@iscCountC 021D                        __size_of_ProcessRXFrame 03D6  
                        ??_BoosterCommandStart 000B                     __end_of_AssignSerialNumber B4A0  
                                      ??_CRC16 021F                        __size_of_ProcessPingCMD 002E  
                             ??_ClearPastValue 021B                      ReadAnalogVoltage@channelC 0003  
                         ?_LowestMissingSerial 0001                           ??_UpdatePacketNumber 022A  
                   __end_of_BoosterCommsActive B5F8                  SPIISRHandlerST7540@dataReadUC 0001  
                       ??_CheckBoosterRXParity 0003                               i2_FlashWriteWord B226  
              __end_of_RXReadyISRHandlerST7540 B622                                     __pbssBANK2 028A  
                                   __pbssBANK3 0300                                     __pbssBANK4 0400  
                                   __pbssBANK5 0584                                     __pbssBANK6 0600  
                              _NewBoosterAdded B518                       SetWindowID@currentBitUCS 02AD  
                    __size_of_ReadConfigST7540 0158                       ClearPastValue@valuePosUC 021B  
                     ??_BoosterCommsDispatcher 020B                            _SPIISRHandlerST7540 A9A0  
                       __end_of_IdlePacketSlot B178                   StartTransmitST7540@discardUC 021B  
                            __CFG_PLLSEL$PLL96 000000                       __size_of_ForceFiringMode 0046  
                  __size_of_CheckDataCollision 002E                  SetIsolationRelay@relayStateUC 021B  
                                      ?___wmul 0001                                    _SetCommsLow B66E  
                      __end_of_DataReadyST7540 B662                                   isr@discardUC 021A  
           BoosterDataCommandComms@lvlCountUCS 0296                   i2ForceFiringMode@forceModeUC 0003  
              CreateMessageST7540@packetDestUS 022A                      FlashWriteWord@intStatusUC 021F  
                          __size_of_InitST7540 00FC                       WaitTickCount@tickCountUS 021B  
                         ?_SPIISRHandlerST7540 0001                             __CFG_OSC$INTOSCPLL 000000  
                 __end_ofi2_ResetBoosterStates B5B0                          ??_LowestMissingSerial 0001  
                     __size_of_FlashEraseBlock 0034                              _WindowIDBacktrack 9662  
                       ?i2_FlashUnlockSequence 0001                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                      _RPINR21 000EFC                                        _RPINR22 000EFD  
                                      _SSP2BUF 000F75                             ?_WindowIDBacktrack 0016  
                    ??_RetransmitMessageSt7540 0237                i2FlashEraseBlock@flashAddressUS 0001  
                FlashEraseBlock@flashAddressUS 021B                                    _SetWindowID 91D8  
                    __size_of_FlashReadAddress 0014                 CreateMessageST7540@packetCRCUS 0232  
                          __size_of_InitStates 000E                i2ClearPastValues@boosterCountUC 0002  
                ClearPastValues@boosterCountUC 021C                               _WriteFlashValues B036  
                          __size_of_InitSystem 0080                        __end_of_ReadFlashValues A720  
                writeRegisterToProgram@address 021B                            ??_WindowIDBacktrack 0201  
               i2FlashWriteWord@flashAddressUS 0001                                    _WaitNewTick B63A  
                                      __Hparam 0000                                        __Lparam 0000  
                              ?_IdlePacketSlot 0001                               ??_LineIdleST7540 021B  
                     __end_of_InitEarthLeakage B56C                              i2_ForceFiringMode B0FC  
                      __size_of_CheckLineFault 0134                                __size_of___wmul 0026  
                           ?i2_ForceFiringMode 0001                          __CFG_RTCOSC$INTOSCREF 000000  
                                      __pcinit AF16                      SetSerialNumber@dataBufUSP 0247  
                                      __ramtop 0F00                                        __ptext0 B4A0  
                                      __ptext1 B358                                        __ptext2 AEC4  
                                      __ptext3 B662                                        __ptext4 9446  
                                      __ptext5 ADBE                                        __ptext6 AA38  
                                      __ptext7 A868                                        __ptext8 AD02  
                                      __ptext9 9E88                          ??_SPIISRHandlerST7540 0001  
                            _MangleSerial$2321 0227                      __end_of_WindowIDBacktrack 9826  
                   ForceFiringMode@forceModeUC 021D                        __size_of_CollisionCheck 0038  
                     __size_of_SetSerialNumber 010A                                      _T2CONbits 000FCA  
                                 __size_of_isr 00CE                             _ClearPacketNumbers AF60  
                          ??i2_ForceFiringMode 0003               __size_of_ResetSingleBoosterState 00D0  
                            i2_FlashEraseBlock B3E2                        __end_of_NewBoosterAdded B536  
                        __size_of_MangleSerial 010C                     __end_ofi2_WriteFlashValues B1EE  
                    AssignWindowID@newWindowUC 0018                    CheckCRCST7540@expectedCRCUS 022B  
                          _FlashUnlockSequence B62E                               _ReadEarthLeakage AD64  
                             _LowestIdleWindow B328                             _commandBLCalibFlag 0349  
                           ?i2_FlashEraseBlock 0001                       __size_of_ClearPastValues 001E  
                         end_of_initialization AF52                           __end_of_SetCommsHigh B668  
                          ?_ClearPacketNumbers 0001                  ReadKeySwitch@keySwitchValueUS 0004  
                                __Lmediumconst 0000                       ProcessRXFrame@frameNumUC 0009  
                               _CheckCRCST7540 A5BC                           __size_of_PPSLockFunc 0012  
                          ??i2_FlashEraseBlock 0003                __size_of_BoosterCommsDispatcher 00E8  
                    __end_ofi2_ForceFiringMode B13C                 ProcessMasterComms@respSerialUS 0287  
                               _FlashWriteWord B0BC               RetransmitMessageSt7540@commandUC 023D  
                __size_of_writeBootloaderState 0058                           ?_FlashUnlockSequence 0001  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                           ??_ClearPacketNumbers 021B  
                 __size_of_getSerialFromMemory 002E                         __size_of_GetPacketSlot 0046  
                             ?_DataReadyST7540 0001                 LowestIdleWindow@boosterCountUC 0003  
              BoosterCommandStart@destSerialUS 0007                              ?_PacketDataST7540 021B  
                 __end_of_ReceiveNewDataST7540 B584                                 _ProcessRXFrame 8E02  
                                 _MangleSerial 9D7C                    CheckCRCST7540@receivedCRCUS 022D  
                            ??_ForceFiringMode 021D                                      _PORTBbits 000F81  
                                    _PORTCbits 000F82               __size_of_RXReadyISRHandlerST7540 000E  
                                    _PORTDbits 000F83                         __size_of_WaitTickCount 001E  
                           ??_PacketDataST7540 021D                            _GetLastPacketNumber AD02  
                       CreateAndSend@dataLenUC 023C                 __size_of_PacketReadParamST7540 00E8  
                    __end_ofi2_FlashEraseBlock B40E                  __end_of_PacketReadParamST7540 A27A  
                               _ProcessPingCMD B386                   __size_of_StartTransmitST7540 001C  
                                    _TRISAbits 000F92                                _statusFlagsUSLG 028A  
                                    _TRISBbits 000F93                                      _TRISCbits 000F94  
                            ?_ProcessSerialCMD 0241                                      _TRISDbits 000F95  
                                    _TRISEbits 000F96               BoosterCommandStart@destCommandUC 0009  
                              CheckLineFault@i 000F                             _TransmitBusyST7540 B652  
                             _commsDataModeUCG 02A2             CheckBoosterRXParity@tmpRecvFrameUS 0003  
                           ??_ProcessSerialCMD 0243                              __CFG_SOSCSEL$HIGH 000000  
                            i2_ClearPastValues B584                         __end_of_CheckCRCST7540 A672  
                            ??_FlashEraseBlock 021D                               ?_ReadFlashValues 0001  
                                 ??_InitST7540 0228                    __size_of_ResetBoosterStates 001E  
                          ?_TransmitBusyST7540 0001               __size_of_readRegisterFromProgram 0052  
                       CreateAndSend@commandUC 023B                           ?_GetLastPacketNumber 021B  
                           ?i2_ClearPastValues 0001                               _ReadConfigST7540 99BC  
                            __CFG_WPFP$PAGE_63 000000                               __CFG_IOL1WAY$OFF 000000  
           BoosterDataCommandComms@syncModeUCS 0298                         __end_of_FlashWriteWord B0FC  
                     ??_writeRegisterToProgram 021F                           i2_ResetBoosterStates B59A  
                          __CFG_MSSP7B_EN$MSK7 000000                   InitST7540Wrapper@initCountUC 0234  
                        ??_FlashUnlockSequence 021B                              _cableFaultCounter 02A0  
                          ??i2_ClearPastValues 0002                                   ??_InitStates 0223  
                      __size_of_AssignWindowID 0058                                  _nextSerialUSG 0291  
                 ReturnBoosterData@iscStatusUC 057E                       __end_ofi2_FlashWriteWord B25E  
             CheckDataCollision@boosterCountUC 0001                         __end_of_ProcessRXFrame 91D8  
             BoosterCommandStart@destPayloadUC 000A                                   ??_InitSystem 021B  
                 QueryWinSerial@serialNumberUS 001A                       getSerialFromMemory@state 0221  
                               __end_of___wmul B45A                             _counterELTFailures 0345  
                ReturnBoosterData@commandValUC 0580                    __end_of_CreateMessageST7540 A096  
              ReturnBoosterData@boosterCountUC 0583                           ??_TransmitBusyST7540 021B  
                            ?_SavePacketNumber 0220                         __end_of_ProcessPingCMD B3B4  
                   __size_of_WindowIDBacktrack 01C4                         _BoosterCommsDispatcher A27A  
                    __size_ofi2_ClearPastValue 0064                             __end_of_InitST7540 A192  
                           ??_SavePacketNumber 0223          RetransmitMessageSt7540@packetSourceUS 0237  
                        __end_of_PPSUnlockFunc B5D6                            start_initialization AF16  
                                 _iscSerialUSG 02A9                CreateAndSend@nextPacketNumberUS 023F  
                    SavePacketNumber@saveSlotC 0225                               ?_NewBoosterAdded 0001  
                                  __end_of_isr 81D6                  readRegisterFromProgram@buffer 021D  
                    __end_ofi2_ClearPastValues B59A                                _counterELTTests 0347  
                             _FlashReadAddress B5B0                                  _GetPacketSlot AFAA  
                       __size_of_CreateAndSend 0074                              ??_SetSerialNumber 0243  
                           __end_of_InitStates B614                             _AssignSerialNumber B480  
               SavePacketNumber@packetNumberUC 0222                                ?_CheckCRCST7540 0001  
                  SetWindowID@currentSerialUSS 02AB                             __end_of_InitSystem AB48  
                        ??_GetLastPacketNumber 021D                                  _WaitTickCount B4FA  
                      InitST7540@frameDataRXUS 022E                        InitST7540@frameDataTXUS 0228  
                 ClearPacketNumbers@iscCountUC 021B                                  _flagST7540UCG 02A8  
                     ?_BoosterDataCommandComms 0001               UpdatePacketNumber@serialNumberUS 0226  
                                     CRC16@crc 0226                                ?_FlashWriteWord 021B  
                            ??_ClearPastValues 021C                             _BoosterCommsActive B5E8  
                          ?_AssignSerialNumber 0001                     __end_of_ProcessMasterComms 9662  
                   __size_ofi2_ForceFiringMode 0040                          ?i2_ResetBoosterStates 0001  
                             MangleSerial@b0UC 0220                               MangleSerial@b1UC 0221  
                             MangleSerial@b2UC 0222                               MangleSerial@b4UC 0223  
                             MangleSerial@b6UC 0224                 ProcessSerialCMD@boosterCountUC 0282  
               ProcessSerialCMD@boosterIndexUC 0281                   ReturnBoosterData@partRespUSA 0500  
       RetransmitMessageSt7540@packetDataLenUC 023F                      ProcessRXFrame@recvFrameUS 0007  
                           _bufferRXST7540UCAG 039B                        __size_of_QueryWinSerial 0196  
                  __end_of_BoosterCommandStart A868                                 _CheckLineFault 9C48  
                                 ?_SetCommsLow 0001                                       ??___wmul 0005  
                      writeRegisterToProgram@i 021F                                ?_ProcessRXFrame 0007  
                              _bufferRXNextUCG 02A5                 RetransmitMessageSt7540@dataBuf 023B  
                            __CFG_ADCSEL$BIT10 000000                            ?_BoosterCommsActive 0001  
                     __end_of_WriteFlashValues B07A                                _bufferTXNextUCG 02A6  
                        __end_of_ReadKeySwitch B2F6                                 _masterFlagsUCG 0293  
                              ?_ProcessPingCMD 0241                        ??i2_FlashUnlockSequence 0001  
                               _CollisionCheck B1EE                     CollisionCheck@delayValueUS 022A  
                   __size_ofi2_FlashEraseBlock 002C                     ?i2_ResetSingleBoosterState 0001  
                      _ResetSingleBoosterState A362                           ??_AssignSerialNumber 0016  
                        __size_of_SetCommsHigh 0006                                  __pcstackBANK2 0201  
                                __pcstackBANK5 0500                    __size_of_UpdatePacketNumber 00A0  
                               ?_GetPacketSlot 021B                                   ?_SetWindowID 0001  
                      MangleSerial@xorOutputUC 021F                           ??_BoosterCommsActive 0001  
                __size_of_CheckBoosterRXParity 0032                CheckBoosterRXParity@bitParityUC 0005  
                               ?_WaitTickCount 021B                       MangleSerial@cycleCountUC 0229  
                             ??_IdlePacketSlot 021B                           _ReceiveNewDataST7540 B56C  
                 ReturnBoosterData@respCountUC 057F            BoosterDataCommandComms@cableTestUCS 0294  
                                 ?_WaitNewTick 0001                     __end_of_CheckDataCollision B3E2  
                    CheckCRCST7540@packetLenUC 022F                      ReadConfigST7540@discardUC 0222  
              __size_of_writeRegisterToProgram 0090                         __end_of_CheckLineFault 9D7C  
                                    __pintcode 8108                             _bufferTXST7540UCAG 034C  
                            ?_InitEarthLeakage 0001                       __end_of_ReadEarthLeakage ADBE  
                                _CreateAndSend AB48                       __end_of_LowestIdleWindow B358  
                  BoosterQueryStart@queryValUC 0001                                   _SetCommsHigh B662  
                       __end_of_CollisionCheck B226                        __size_of_InitST7540Pins 003C  
                      _RXReadyISRHandlerST7540 B614                             ??_InitEarthLeakage 0001  
                  __end_of_LowestMissingSerial AEC4                                 __size_of_CRC16 0134  
                      __size_ofi2_SetCommsHigh 0006                   writeRegisterToProgram@buffer 021D  
            __end_ofi2_ResetSingleBoosterState A5BC                     __size_ofi2_ClearPastValues 0016  
              __end_of_BoosterDataCommandComms 89FC                            _getSerialFromMemory B358  
                      _readRegisterFromProgram AEC4                          ?_ReceiveNewDataST7540 0001  
                                  CRC16@data_p 021B                                 ___wmul@product 0005  
                                     _LATAbits 000F89                                       _LATBbits 000F8A  
                                     _LATCbits 000F8B                                       _LATDbits 000F8C  
                      __size_of_ClearPastValue 006E                                       _LATEbits 000F8D  
               readRegisterFromProgram@address 021B                         ??i2_ResetBoosterStates 0002  
                                  CRC16@length 021D                                       _PIE1bits 000F9D  
                                     _PIE3bits 000FA3                             i2_WriteFlashValues B1B4  
                              _ForceFiringMode AFF0                  WriteConfigST7540@configDataUS 0220  
                                     i2u410_44 97E6                                       i2u410_45 97DE  
                                     i2u403_44 969C                                       i2u403_45 9694  
                              ?_CheckLineFault 0001                                       i2u405_44 9724  
                                     i2u405_45 971C                 ReadConfigST7540@bitsReceivedUC 0223  
                          _StartTransmitST7540 B536                                       i2u408_44 978C  
                                     i2u408_45 9784                                       _PIR1bits 000F9E  
                                     i2u610_41 86B4                                       i2u443_45 8F98  
                                     i2u620_41 8748                                       _PIR3bits 000FA4  
                                     i2u622_41 879C                                       i2u382_45 A7E2  
                                     i2u623_41 87B8                                       i2u624_41 87DE  
                                     i2u608_41 8682                                       i2u448_45 90B8  
                                     i2u625_41 8804                                       i2u481_44 9278  
                                     i2u481_45 9270                                       i2u466_40 B2E4  
                                     i2u618_40 8724                                       i2u626_41 8824  
                                     i2u635_41 8924                                       i2u628_41 888A  
                                     i2u485_44 932E                                       i2u485_45 9326  
                                     i2u565_45 8258                                       i2u574_40 8328  
                                     i2u487_44 936E                                       i2u479_44 9238  
                                     i2u487_45 9366                                       i2u479_45 9230  
                                     i2u593_41 8556                                       i2u578_40 8398  
                               _AssignWindowID AE16                               __CFG_WDTPS$32768 000000  
                               ?_CreateAndSend 0237                    __end_of_SPIISRHandlerST7540 AA38  
               FlashReadAddress@flashAddressUS 021B                           ?_getSerialFromMemory 0001  
                          ?i2_WriteFlashValues 0001                                _packetNumberUCG 02A4  
                              ?_CollisionCheck 0001                            _missingSerialWinUCS 029E  
                    ??_ResetSingleBoosterState 021B                              _WriteConfigST7540 A720  
                                   _ADCON0bits 000FC2                                     _ADCON1bits 000FC1  
                            ___wmul@multiplier 0001             i2ResetBoosterStates@boosterCountUC 0002  
             ResetBoosterStates@boosterCountUC 021C                       __end_of_ReadConfigST7540 9B14  
                             i2_ClearPastValue AC9E                                _FlashEraseBlock B25E  
       BoosterDataCommandComms@commsADCValueUS 0014                             ?_WriteConfigST7540 021D  
                     ?_RetransmitMessageSt7540 0001                         _writeRegisterToProgram AA38  
                         ?_StartTransmitST7540 0001                                ??_GetPacketSlot 021D  
                            __CFG_CFGPLLEN$OFF 000000                   __end_of_writeBootloaderState AE16  
               PacketReadParamST7540@paramName 0234                                _commsTXBitsUSLG 033C  
                  ProcessMasterComms@recvCmdUC 0289                                ??_WaitTickCount 021D  
                            _ReadAnalogVoltage B07A                           ??i2_WriteFlashValues 0006  
                          ??_WriteConfigST7540 0223                      __size_of_PacketDataST7540 000E  
                                ??_PPSLockFunc 021B                             ?_ReadAnalogVoltage 0001  
                 ProcessSerialCMD@respSerialUS 0241                                     _EECON1bits 000FA6  
 BoosterDataCommandComms@counterCommsStatusUSS 028D                         __end_of_AssignWindowID AE6E  
                                   _ANCON0bits 000F48                                     _ANCON1bits 000F49  
                 ReturnBoosterData@wordCountUC 0581                      __size_of_ProcessSerialCMD 00CE  
                                     __Hrparam 0000                            ??_ReadAnalogVoltage 0003  
                               _bufferRXLenUCG 034B                                 _QueryWinSerial 9826  
                                     __Lrparam 0000                                 _bufferTXLenUCG 02A7  
                    ??_RXReadyISRHandlerST7540 0001                          ??_getSerialFromMemory 0221  
                     __end_of_FlashReadAddress B5C4                              ?i2_FlashWriteWord 0001  
                    __end_of_WriteConfigST7540 A7C4                    __size_of_ClearPacketNumbers 004A  
                      ?_BoosterCommsDispatcher 0001                           __size_of_SetCommsLow 0006  
                           ??i2_FlashWriteWord 0005                 CheckBoosterRXParity@bitCountUC 0006  
                  i2FlashWriteWord@intStatusUC 0005                                _SetSerialNumber 9E88  
BoosterDataCommandComms@framesReceivedPhaseUCS 0299                        __size_of_LineIdleST7540 000C  
                        ??_StartTransmitST7540 021B                       __size_of_DataReadyST7540 0008  
                             ??_CheckCRCST7540 0228                      __end_of_ReadAnalogVoltage B0BC  
          RetransmitMessageSt7540@packetDestUS 0239                          _PacketReadParamST7540 A192  
                    ??_readRegisterFromProgram 021F                                       __ptext10 B292  
                                     __ptext11 89FC                                       __ptext20 ABBC  
                                     __ptext12 A908                                       __ptext21 B13C  
                                     __ptext13 B5F8                                       __ptext30 AFF0  
                                     __ptext22 AFAA                                       __ptext14 B56C  
                                     __ptext31 B4BE                                       __ptext23 A192  
                                     __ptext15 A432                                       __ptext40 B0BC  
                                     __ptext32 AC30                                       __ptext24 A5BC  
                                     __ptext16 B386                                       __ptext41 B25E  
                                     __ptext33 B65A                                       __ptext25 9F92  
                                     __ptext17 AB48                                       __ptext50 99BC  
                                     __ptext42 B62E                                       __ptext34 AAC8  
                                     __ptext26 9B14                                       __ptext18 B652  
                                     __ptext51 B178                                       __ptext43 B5B0  
                                     __ptext35 B606                                       __ptext27 B1EE  
                                     __ptext19 B536                                       __ptext60 B66E  
                                     __ptext52 B5C4                                       __ptext44 AF60  
                                     __ptext36 B4DC                                       __ptext28 9D7C  
                                     __ptext61 B2C4                                       __ptext53 B5D6  
                                     __ptext45 B40E                                       __ptext37 A362  
                                     __ptext29 B622                                       __ptext70 91D8  
                                     __ptext62 AD64                                       __ptext46 A096  
                                     __ptext38 A672                                       __ptext71 B59A  
                                     __ptext63 8E02                                       __ptext55 B0FC  
                                     __ptext47 A720                                       __ptext39 B036  
                                     __ptext80 A500                                       __ptext72 9662  
                                     __ptext64 B552                                       __ptext56 A9A0  
                                     __ptext48 B4FA                                       __ptext81 AC9E  
                                     __ptext73 AE16                                       __ptext65 9C48  
                                     __ptext57 B614                                       __ptext49 B63A  
                                     __ptext82 AE6E                                       __ptext74 B480  
                                     __ptext66 B434                                       __ptext58 81DA  
                                     __ptext83 A7C4                                       __ptext75 B1B4  
                                     __ptext67 B07A                                       __ptext59 B668  
                                     __ptext84 B2F6                                       __ptext76 B226  
                                     __ptext68 A27A                                       __ptext85 B518  
                                     __ptext77 B3E2                                       __ptext69 B584  
                                     __ptext86 B328                                       __ptext78 B646  
                                     __ptext87 B3B4                                       __ptext79 9826  
                                     __ptext88 B45A                                       __ptext89 B5E8  
                              _ClearPastValues B4BE                     __end_of_ResetBoosterStates B4FA  
                                 _SSP2CON1bits 000F72                         ??_ReceiveNewDataST7540 021B  
                             ??_FlashWriteWord 021F                                    _ISO_COUNTER 02A1  
                      __end_of_ForceFiringMode B036                      __size_of_SavePacketNumber 0074  
                         __size_of_SetWindowID 026E                                  __size_of_main 001E  
                  __end_of_FlashUnlockSequence B63A                   CreateMessageST7540@dataLenUC 022D  
                       __end_of_QueryWinSerial 99BC                               ??_ProcessRXFrame 000A  
              CheckBoosterRXParity@recvFrameUS 0001                                ?_AssignWindowID 0001  
                    CreateAndSend@packetDestUS 0239                                ??_CreateAndSend 023F  
                          __end_of_PPSLockFunc B5E8                         _boosterCommsDataSerial 0300  
                         __size_of_WaitNewTick 000C                       __size_of_ReadFlashValues 00AE  
               WindowIDBacktrack@statusSetIDUC 001A                               ??_ProcessPingCMD 0243  
               __end_of_BoosterCommsDispatcher A362                                       int$flags 001E  
                      __end_of_FlashEraseBlock B292    BoosterDataCommandComms@counterSyncStatusUSS 0343  
                               _InitST7540Pins B178                __end_of_RetransmitMessageSt7540 A9A0  
                            ?_WriteFlashValues 0001               __size_of_BoosterDataCommandComms 0822  
                                 _SSP2STATbits 000F73                    __size_of_TransmitBusyST7540 0008  
                 WriteConfigST7540@frameDataUS 021D                    SetSerialNumber@respSerialUS 0241  
                  ReturnBoosterData@allRespUSA 053E                   CreateMessageST7540@commandUC 022C  
                               i2_SetCommsHigh B668                             _ProcessMasterComms 9446  
                           ??_WriteFlashValues 0220                       GetPacketSlot@srcSerialUS 021B  
                        writeBootloaderState@i 0261                 __size_ofi2_FlashUnlockSequence 000C  
                                  _OSCTUNEbits 000F9B                                     _INTCONbits 000FF2  
                  ??i2_ResetSingleBoosterState 0001                  __end_ofi2_FlashUnlockSequence B652  
                 __size_of_CreateMessageST7540 0104                      SetWindowID@statusSetIDUCS 02AE  
                  SavePacketNumber@srcSerialUS 0220                    __end_of_GetLastPacketNumber AD64  
                                _dispStatusUCS 029C                              _SetIsolationRelay B292  
                          ?_ProcessMasterComms 0001                             ?_SetIsolationRelay 0001  
                                     intlevel2 0000                    WriteConfigST7540@bitsSentUC 0227  
                               _ClearPastValue AC30                     CreateMessageST7540@dataBuf 022E  
                     __size_of_NewBoosterAdded 001E                  ReturnBoosterData@respSerialUS 0241  
                              ?_QueryWinSerial 0001                            ??_SetIsolationRelay 021B  
     RetransmitMessageSt7540@oldPacketNumberUC 023E                                     _OSCCONbits 000FD3  
                       __size_of_PPSUnlockFunc 0012                __end_of_readRegisterFromProgram AF16  
                       __end_of_InitST7540Pins B1B4                           ??_ProcessMasterComms 0283  
                      __end_of_SetSerialNumber 9F92                           _writeBootloaderState ADBE  
                            _BoosterQueryStart B45A                   __end_of_CheckBoosterRXParity B328  
                     CheckLineFault@lineVoltUS 000B               ReturnBoosterData@windowCompareUS 057C  
                   __size_of_WriteConfigST7540 00A4                              ?_ReadEarthLeakage 0001  
                            ?_LowestIdleWindow 0001                             ?_BoosterQueryStart 0001  
                       __end_ofi2_SetCommsHigh B66E                             ??_ReadEarthLeakage 0004  
                           ??_LowestIdleWindow 0001                             _CheckDataCollision B3B4  
                      __end_of_ClearPastValues B4DC                   __size_of_BoosterCommandStart 00A4  
              UpdatePacketNumber@packetNumberS 0228                     __end_of_UpdatePacketNumber A908  
                                   _PPSCONbits 000EBF                         GetPacketSlot@saveSlotC 021F  
                    __end_of_SetIsolationRelay B2C4                     WriteConfigST7540@discardUC 0226  
                          ??_BoosterQueryStart 0001                         ?_PacketReadParamST7540 0230  
                  __size_of_AssignSerialNumber 0020                      MangleSerial@mangleValueUS 021B  
                   __size_of_ReadAnalogVoltage 0042                            ?_CheckDataCollision 0001  
                    __size_of_InitEarthLeakage 001A                   AssignWindowID@serialNumberUS 0016  
                             _PacketDataST7540 B5F8                       readRegisterFromProgram@i 021F  
                       __end_of_ClearPastValue AC9E                    __size_of_BoosterCommsActive 0010  
                               _commsStatusUCG 02A3       i2ResetSingleBoosterState@boosterNumberUC 0001  
       ResetSingleBoosterState@boosterNumberUC 021B            UpdatePacketNumber@pastPacketNumberS 022F  
                            ??_DataReadyST7540 021B                               ?_ForceFiringMode 0001  
                                  _PPSLockFunc B5D6                          i2FlashWriteWord@lsbUC 0003  
                        i2FlashWriteWord@msbUC 0004                               ??_CheckLineFault 0007  
              CreateMessageST7540@dataBufLocUC 0234                              _packetNumbersUSAG 0584  
                       __size_of_ReadKeySwitch 0032                       __end_ofi2_ClearPastValue AD02  
                ReceiveNewDataST7540@discardUC 021B                      i2_ResetSingleBoosterState A500  
                             _ProcessSerialCMD A432                      __end_of_BoosterQueryStart B480  
                     InitST7540@configDataRXUS 0231                       InitST7540@configDataTXUS 022B  
                             ??_CollisionCheck 022A                           ??_CheckDataCollision 0001  
                        ?_writeBootloaderState 0001  
